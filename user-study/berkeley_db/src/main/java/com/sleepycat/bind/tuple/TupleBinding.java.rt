<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.bind.tuple</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.EntryBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseEntry</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.HashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An abstract <code>EntryBinding</code> that treats a key or data entry as a tuple; it includes</color>
<color=#75715e> * predefined bindings for Java primitive types.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This class takes care of converting the entries to/from {@link TupleInput} and {@link</color>
<color=#75715e> * TupleOutput} objects. Its two abstract methods must be implemented by a concrete subclass to</color>
<color=#75715e> * convert between tuples and key or data objects.</color>
<color=#75715e> *</color>
<color=#75715e> * <ul></color>
<color=#75715e> *   <li>{@link #entryToObject(TupleInput)}</color>
<color=#75715e> *   <li>{@link #objectToEntry(Object,TupleOutput)}</color>
<color=#75715e> * </ul></color>
<color=#75715e> *</color>
<color=#75715e> * @param <E> is the class representing the key or data.</color>
<color=#75715e> * @see <a href="package-summary.html#formats">Tuple Formats</a></color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>TupleBinding</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>TupleBase</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#66d9ef>implements</color> <color=#f8f8f2>EntryBinding</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Class</color><color=#f8f8f2>,</color> <color=#f8f8f2>TupleBinding</color><color=#f92672>></color> <color=#f8f8f2>primitives</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Class</color><color=#f8f8f2>,</color> <color=#f8f8f2>TupleBinding</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Character</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Character</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>CharacterBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Boolean</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Boolean</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>BooleanBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Byte</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Byte</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>ByteBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Short</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Short</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>ShortBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntegerBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>LongBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Float</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Float</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>FloatBinding</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>DoubleBinding</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>addPrimitive</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>cls1</color><color=#f8f8f2>,</color> <color=#f8f8f2>Class</color> <color=#f8f8f2>cls2</color><color=#f8f8f2>,</color> <color=#f8f8f2>TupleBinding</color> <color=#f8f8f2>binding</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>primitives</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>cls1</color><color=#f8f8f2>,</color> <color=#f8f8f2>binding</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>primitives</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>cls2</color><color=#f8f8f2>,</color> <color=#f8f8f2>binding</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Creates a tuple binding. */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>TupleBinding</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>E</color> <color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>entryToInput</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color> <color=#f8f8f2>object</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>getTupleOutput</color><color=#f8f8f2>(</color><color=#f8f8f2>object</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>object</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>outputToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>,</color> <color=#f8f8f2>entry</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Constructs a key or data object from a {@link TupleInput} entry.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param input is the tuple key or data entry.</color>
<color=#75715e>   * @return the key or data object constructed from the entry.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#f8f8f2>E</color> <color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>TupleInput</color> <color=#f8f8f2>input</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts a key or data object to a tuple entry.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param object is the key or data object.</color>
<color=#75715e>   * @param output is the tuple entry to which the key or data should be written.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>void</color> <color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color> <color=#f8f8f2>object</color><color=#f8f8f2>,</color> <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>output</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a tuple binding for a primitive Java class. The following Java classes are supported.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <ul></color>
<color=#75715e>   *   <li><code>String</code></color>
<color=#75715e>   *   <li><code>Character</code></color>
<color=#75715e>   *   <li><code>Boolean</code></color>
<color=#75715e>   *   <li><code>Byte</code></color>
<color=#75715e>   *   <li><code>Short</code></color>
<color=#75715e>   *   <li><code>Integer</code></color>
<color=#75715e>   *   <li><code>Long</code></color>
<color=#75715e>   *   <li><code>Float</code></color>
<color=#75715e>   *   <li><code>Double</code></color>
<color=#75715e>   * </ul></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p><em>Note:</em> {@link #getPrimitiveBinding} returns bindings that do not sort negative</color>
<color=#75715e>   * floating point numbers correctly by default. See {@link SortedFloatBinding} and {@link</color>
<color=#75715e>   * SortedDoubleBinding} for details.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param <T> the primitive Java class.</color>
<color=#75715e>   * @param cls the primitive Java class.</color>
<color=#75715e>   * @return a new binding for the primitive class or null if the cls parameter is not one of the</color>
<color=#75715e>   *     supported classes.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>TupleBinding</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#a6e22e>getPrimitiveBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>primitives</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>cls</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>