<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.bind.serial</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseException</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.Closeable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.ObjectStreamClass</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A catalog of class description information for use during object serialization.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>A catalog is used to store class descriptions separately from serialized objects, to avoid</color>
<color=#75715e> * redundantly stored information with each object. When serialized objects are stored in a</color>
<color=#75715e> * database, a {@link StoredClassCatalog} should be used.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This information is used for serialization of class descriptors or java.io.ObjectStreamClass</color>
<color=#75715e> * objects, each of which represents a unique class format. For each unique format, a unique class</color>
<color=#75715e> * ID is assigned by the catalog. The class ID can then be used in the serialization stream in place</color>
<color=#75715e> * of the full class information. When used with {@link SerialInput} and {@link SerialOutput} or any</color>
<color=#75715e> * of the serial bindings, the use of the catalog is transparent to the application.</color>
<color=#75715e> *</color>
<color=#75715e> * @see <a href="SerialBinding.html#evolution">Class Evolution</a></color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>ClassCatalog</color>
    <color=#75715e>/* <!-- begin JE only --> */</color>
    <color=#66d9ef>extends</color> <color=#f8f8f2>Closeable</color>
<color=#75715e>/* <!-- end JE only --> */</color>
<color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Close a catalog database and release any cached resources.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException if an error occurs closing the catalog database.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the class ID for the current version of the given class description. This is used for</color>
<color=#75715e>   * storing in serialization streams in place of a full class descriptor, since it is much more</color>
<color=#75715e>   * compact. To get back the ObjectStreamClass for a class ID, call {@link</color>
<color=#75715e>   * #getClassFormat(byte[])}. This function causes a new class ID to be assigned if the class</color>
<color=#75715e>   * description has changed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param classDesc The class description for which to return the class ID.</color>
<color=#75715e>   * @return The class ID for the current version of the class.</color>
<color=#75715e>   * @throws DatabaseException if an error occurs accessing the catalog database.</color>
<color=#75715e>   * @throws ClassNotFoundException if the class does not exist.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getClassID</color><color=#f8f8f2>(</color><color=#f8f8f2>ObjectStreamClass</color> <color=#f8f8f2>classDesc</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ClassNotFoundException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the ObjectStreamClass for the given class ID. This may or may not be the current class</color>
<color=#75715e>   * format, depending on whether the class has changed since the class ID was generated.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param classID The class ID for which to return the class format.</color>
<color=#75715e>   * @return The class format for the given class ID, which may or may not represent the current</color>
<color=#75715e>   *     version of the class.</color>
<color=#75715e>   * @throws DatabaseException if an error occurs accessing the catalog database.</color>
<color=#75715e>   * @throws ClassNotFoundException if the class does not exist.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>ObjectStreamClass</color> <color=#a6e22e>getClassFormat</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>classID</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ClassNotFoundException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the ClassLoader to be used by bindings that use this catalog, or null if a default</color>
<color=#75715e>   * class loader should be used. The ClassLoader is used by {@link SerialBinding} to load classes</color>
<color=#75715e>   * whose description is stored in the catalog.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>In BDB JE, the implementation of this method in {@link StoredClassCatalog} returns the</color>
<color=#75715e>   * ClassLoader property of the catalog database Environment. This ensures that the Environment's</color>
<color=#75715e>   * ClassLoader property is used for loading all user-supplied classes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the ClassLoader or null.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>ClassLoader</color> <color=#a6e22e>getClassLoader</color><color=#f8f8f2>();</color>
<color=#f8f8f2>}</color>