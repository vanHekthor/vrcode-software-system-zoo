<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.bind.tuple</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.PackedInteger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A concrete <code>TupleBinding</code> for a sorted <code>Integer</code> primitive wrapper or a</color>
<color=#75715e> * sorted <code>int</code> primitive, that stores the value in the smallest number of bytes</color>
<color=#75715e> * possible.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>There are two ways to use this class:</color>
<color=#75715e> *</color>
<color=#75715e> * <ol></color>
<color=#75715e> *   <li>When using the {@link com.sleepycat.je} package directly, the static methods in this class</color>
<color=#75715e> *       can be used to convert between primitive values and {@link DatabaseEntry} objects.</color>
<color=#75715e> *   <li>When using the {@link com.sleepycat.collections} package, an instance of this class can be</color>
<color=#75715e> *       used with any stored collection.</color>
<color=#75715e> * </ol></color>
<color=#75715e> *</color>
<color=#75715e> * @see <a href="package-summary.html#integerFormats">Integer Formats</a></color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SortedPackedIntegerBinding</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TupleBinding</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Integer</color> <color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>TupleInput</color> <color=#f8f8f2>input</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readSortedPackedInt</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>Integer</color> <color=#f8f8f2>object</color><color=#f8f8f2>,</color> <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>output</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeSortedPackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>object</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>TupleOutput</color> <color=#a6e22e>getTupleOutput</color><color=#f8f8f2>(</color><color=#f8f8f2>Integer</color> <color=#f8f8f2>object</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>sizedOutput</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts an entry buffer into a simple <code>int</code> value.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param entry is the source entry buffer.</color>
<color=#75715e>   * @return the resulting value.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>entryToInt</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>entryToInput</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>).</color><color=#a6e22e>readSortedPackedInt</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts a simple <code>int</code> value into an entry buffer, using SortedPackedInteger</color>
<color=#75715e>   * format.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param val is the source value.</color>
<color=#75715e>   * @param entry is the destination entry buffer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>intToEntry</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>outputToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>sizedOutput</color><color=#f8f8f2>().</color><color=#a6e22e>writeSortedPackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>),</color> <color=#f8f8f2>entry</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a tuple output object of the maximum size needed, to avoid wasting space when a single</color>
<color=#75715e>   * primitive is output.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>TupleOutput</color> <color=#a6e22e>sizedOutput</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>TupleOutput</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>PackedInteger</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_LENGTH</color><color=#f92672>]</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>