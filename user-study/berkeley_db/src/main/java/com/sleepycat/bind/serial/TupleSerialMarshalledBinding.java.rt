<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.bind.serial</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.MarshalledTupleKeyEntity</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleInput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleOutput</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A concrete <code>TupleSerialBinding</code> that delegates to the <code>MarshalledTupleKeyEntity</color>
<color=#75715e> * </code> interface of the entity class.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link MarshalledTupleKeyEntity} interface must be implemented by the entity class to</color>
<color=#75715e> * convert between the key/data entry and entity object.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The binding is "tricky" in that it uses the entity class for both the stored data entry and</color>
<color=#75715e> * the combined entity object. To do this, the entity's key field(s) are transient and are set by</color>
<color=#75715e> * the binding after the data object has been deserialized. This avoids the use of a "data" class</color>
<color=#75715e> * completely.</color>
<color=#75715e> *</color>
<color=#75715e> * @see MarshalledTupleKeyEntity</color>
<color=#75715e> * @see <a href="SerialBinding.html#evolution">Class Evolution</a></color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>TupleSerialMarshalledBinding</color><color=#f92672><</color><color=#f8f8f2>E</color> <color=#66d9ef>extends</color> <color=#f8f8f2>MarshalledTupleKeyEntity</color><color=#f92672>></color>
    <color=#66d9ef>extends</color> <color=#f8f8f2>TupleSerialBinding</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a tuple-serial marshalled binding object.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param classCatalog is the catalog to hold shared class information and for a database should</color>
<color=#75715e>   *     be a {@link StoredClassCatalog}.</color>
<color=#75715e>   * @param baseClass is the base class for serialized objects stored using this binding -- all</color>
<color=#75715e>   *     objects using this binding must be an instance of this class.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>TupleSerialMarshalledBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>ClassCatalog</color> <color=#f8f8f2>classCatalog</color><color=#f8f8f2>,</color> <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>baseClass</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>SerialBinding</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>classCatalog</color><color=#f8f8f2>,</color> <color=#f8f8f2>baseClass</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a tuple-serial marshalled binding object.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param dataBinding is the binding used for serializing and deserializing the entity object.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>TupleSerialMarshalledBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>SerialBinding</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>dataBinding</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>dataBinding</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>E</color> <color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>TupleInput</color> <color=#f8f8f2>tupleInput</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color> <color=#f8f8f2>javaInput</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Creates the entity by combining the stored key and data.</color>
<color=#75715e>     * This "tricky" binding returns the stored data as the entity, but</color>
<color=#75715e>     * first it sets the transient key fields from the stored key.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tupleInput</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color> <color=#75715e>// may be null if not used by key extractor</color>
      <color=#f8f8f2>javaInput</color><color=#f8f8f2>.</color><color=#a6e22e>unmarshalPrimaryKey</color><color=#f8f8f2>(</color><color=#f8f8f2>tupleInput</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>javaInput</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>objectToKey</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color> <color=#f8f8f2>object</color><color=#f8f8f2>,</color> <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>output</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Creates the stored key from the entity. */</color>
    <color=#f8f8f2>object</color><color=#f8f8f2>.</color><color=#a6e22e>marshalPrimaryKey</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>E</color> <color=#a6e22e>objectToData</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color> <color=#f8f8f2>object</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Returns the entity as the stored data.  There is nothing to do here</color>
<color=#75715e>     * since the entity's key fields are transient.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>object</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>