<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.bind.tuple</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A marshalling interface implemented by key, data or entity classes that are represented as</color>
<color=#75715e> * tuples.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Key classes implement this interface to marshal their key entry. Data or entity classes</color>
<color=#75715e> * implement this interface to marshal their data entry. Implementations of this interface must have</color>
<color=#75715e> * a public no arguments constructor so that they can be instantiated by a binding, prior to calling</color>
<color=#75715e> * the {@link #unmarshalEntry} method.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that implementing this interface is not necessary when the object is a Java simple type,</color>
<color=#75715e> * for example: String, Integer, etc. These types can be used with built-in bindings returned by</color>
<color=#75715e> * {@link TupleBinding#getPrimitiveBinding}.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> * @see TupleTupleMarshalledBinding</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>MarshalledTupleEntry</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Construct the key or data tuple entry from the key or data object.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param dataOutput is the output tuple.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>marshalEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>dataOutput</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Construct the key or data object from the key or data tuple entry.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param dataInput is the input tuple.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>unmarshalEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>TupleInput</color> <color=#f8f8f2>dataInput</color><color=#f8f8f2>);</color>
<color=#f8f8f2>}</color>