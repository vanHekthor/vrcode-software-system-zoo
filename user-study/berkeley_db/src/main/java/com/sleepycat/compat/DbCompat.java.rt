<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.compat</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Comparator</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.regex.Pattern</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A minimal set of BDB DB-JE compatibility constants and static methods, for internal use only.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Two versions of this class, with the same public interface but different implementations, are</color>
<color=#75715e> * maintained in parallel in the DB and JE source trees. By the use of the constants and methods in</color>
<color=#75715e> * this class, along with a script that moves the source code from JE to DB, the source code in</color>
<color=#75715e> * certain packages is kept "portable" and is shared by the two products. The script translates the</color>
<color=#75715e> * package names from com.sleepycat.je to com.sleepycat.db, and perform other fix-ups as described</color>
<color=#75715e> * further below.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The JE directories that contain portable code are:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>src/com/sleepycat/bind /collections /persist /util test/com/sleepycat/bind /collections</color>
<color=#75715e> * /persist /util</color>
<color=#75715e> *</color>
<color=#75715e> * <p>In DB, these sources are stored in the following locations:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Sources: src/java Tests: test/java/compat</color>
<color=#75715e> *</color>
<color=#75715e> * <p>To keep this source code portable there are additional coding rules, above and beyond the</color>
<color=#75715e> * standard rules (such as coding style) for all JE code.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>+ In general we should try to use the JE/DB public API, since it is usually the same or</color>
<color=#75715e> * similar in both products. If we use internal APIs, they will always be different and will require</color>
<color=#75715e> * special handling.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>+ When there are differences between products, the first choice for handling the difference is</color>
<color=#75715e> * to use a DbCompat static method or constant. This keeps the source code the same for both</color>
<color=#75715e> * products (except in this DbCompat class).</color>
<color=#75715e> *</color>
<color=#75715e> * <p>+ When JE-only code is needed -- for example, some APIs only exist in JE, and special handling</color>
<color=#75715e> * of JE exceptions is sometimes needed -- the following special comment syntax can be used to</color>
<color=#75715e> * bracket the JE-only code:</color>
<color=#75715e> * <!-- begin JE only --></color>
<color=#75715e> * JE-only code goes here</color>
<color=#75715e> * <!-- end JE only --></color>
<color=#75715e> * This syntax must be used inside of a comment: either inside a javadoc section as shown above, or</color>
<color=#75715e> * inside a single-line comment (space before last slash is to prevent ending this javadoc comment):</color>
<color=#75715e> *</color>
<color=#75715e> * <p>/*</color>
<color=#75715e> * <!-- begin JE only --></color>
<color=#75715e> * * / JE-only code goes here /*</color>
<color=#75715e> * <!-- end JE only --></color>
<color=#75715e> * * /</color>
<color=#75715e> *</color>
<color=#75715e> * <p>All lines between the</color>
<color=#75715e> * <!-- begin JE only --></color>
<color=#75715e> * and</color>
<color=#75715e> * <!-- end JE only --></color>
<color=#75715e> * lines, and including these lines, will be removed by the script that transfers code from JE to</color>
<color=#75715e> * DB.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>+ When DB-only code is needed, the code will exist in the JE product but will never be</color>
<color=#75715e> * executed. For DB-only APIs, we hide the API from the user with the @hidden javadoc tag.</color>
<color=#75715e> * The @hidden tag is ignored on the DB side. We do not have a way to remove DB-only code completely</color>
<color=#75715e> * from the JE product, because we do not use a proprocessor for building JE.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>+ Because DatabaseException (and all subclasses) are checked exceptions in DB but runtime</color>
<color=#75715e> * exceptions in JE, we cannot omit the 'throws' declaration. Another difference is that DB normally</color>
<color=#75715e> * throws DatabaseException for all errors, while JE has many specific subclasses for specific</color>
<color=#75715e> * errors. Therefore, any method that calls a DB API method (for example, Database.get or put) will</color>
<color=#75715e> * have a "throws DatabaseException" clause.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>+ Special consideration is needed for the @throws clauses in javadoc. We do want to javadoc</color>
<color=#75715e> * the JE-only exceptions that are thrown, so the @throws for these exceptions should be inside the</color>
<color=#75715e> * "begin/end JE only" brackets. We also need to document the fact that DB may throw</color>
<color=#75715e> * DatabaseException for almost any method, so we do that with a final @throws clause that looks</color>
<color=#75715e> * like this:</color>
<color=#75715e> *</color>
<color=#75715e> * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e> *     <p>This is a compromise. JE doesn't throw this exception, but we've described it in a way</color>
<color=#75715e> *     that still makes some sense for JE, sort of.</color>
<color=#75715e> *     <p>+ Other special handling can be implemented in the transfer script, which uses SED. Entire</color>
<color=#75715e> *     files can be excluded from the transfer, for example, the JE-only exception classes. Name</color>
<color=#75715e> *     changes can also be made using SED, for example: s/LockConflictException/DeadlockException/.</color>
<color=#75715e> *     See the db/dist/s_je2db script for details.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>DbCompat</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* Capabilities */</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>CDB</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>JOIN</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>NESTED_TRANSACTIONS</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>INSERTION_ORDERED_DUPLICATES</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>SEPARATE_DATABASE_FILES</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>MEMORY_SUBSYSTEM</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>LOCK_SUBSYSTEM</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>HASH_METHOD</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>RECNO_METHOD</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>QUEUE_METHOD</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>BTREE_RECNUM_METHOD</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>OPTIONAL_READ_UNCOMMITTED</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>SECONDARIES</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>TRANSACTION_RUNNER_PRINT_STACK_TRACES</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>DATABASE_COUNT</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>NEW_JE_EXCEPTIONS</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>POPULATE_ENFORCES_CONSTRAINTS</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For read-only cursor operations on a replicated node, we must use a transaction to satisfy HA</color>
<color=#75715e>   * requirements. However, we use a Durability that avoids consistency checks on the Master, and we</color>
<color=#75715e>   * use ReadCommitted isolation since that gives the same behavior as a non-transactional cursor:</color>
<color=#75715e>   * locks are released when the cursor is moved or closed.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>READ_ONLY_TXN_CONFIG</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Used on JE only, simply to avoid warnings about "if (true) ...". */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>IS_JE</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>READ_ONLY_TXN_CONFIG</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>READ_ONLY_TXN_CONFIG</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>Durability</color><color=#f8f8f2>.</color><color=#a6e22e>READ_ONLY_TXN</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>READ_ONLY_TXN_CONFIG</color><color=#f8f8f2>.</color><color=#a6e22e>setReadCommitted</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getInitializeCache</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getInitializeLocking</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getLocking</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getInitializeCDB</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isReplicated</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>).</color><color=#a6e22e>isReplicated</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isTypeHash</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isTypeQueue</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isTypeRecno</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getBtreeRecordNumbers</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getReadUncommitted</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getRenumbering</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getUnsortedDuplicates</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// XXX Remove this when DB and JE support CursorConfig.cloneConfig</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>CursorConfig</color> <color=#a6e22e>cloneCursorConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>newConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>newConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadCommitted</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getReadCommitted</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>newConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadUncommitted</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getReadUncommitted</color><color=#f8f8f2>());</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>newConfig</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getWriteCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setWriteCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>write</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>write</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>recNum</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>getRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>getDatabaseFile</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#a6e22e>getDatabaseCount</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>count</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>getCurrentRecordNumber</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>getSearchRecordNumber</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>getSearchRecordNumber</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>SecondaryCursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>putAfter</color><color=#f8f8f2>(</color><color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>putBefore</color><color=#f8f8f2>(</color><color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>append</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Transaction</color> <color=#a6e22e>getThreadTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getThreadTransaction</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>ClassLoader</color> <color=#a6e22e>getClassLoader</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>).</color><color=#a6e22e>getClassLoader</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Methods used by the collections tests. */</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setInitializeCache</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setInitializeLocking</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setInitializeCDB</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setLockDetectModeOldest</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* JE does this by default, since it uses timeouts. */</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setSerializableIsolation</color><color=#f8f8f2>(</color><color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setSerializableIsolation</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>setImportunate</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>importunate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>oldVal</color> <color=#f92672>=</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>).</color><color=#a6e22e>getImportunate</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>).</color><color=#a6e22e>setImportunate</color><color=#f8f8f2>(</color><color=#f8f8f2>importunate</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>oldVal</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setBtreeComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>Comparator</color><color=#f92672><</color><color=#66d9ef>byte</color><color=#f92672>[]></color> <color=#f8f8f2>comparator</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setBtreeComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>comparator</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setTypeHash</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setTypeRecno</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setTypeQueue</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setBtreeRecordNumbers</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setReadUncommitted</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setRenumbering</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setSortedDuplicates</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setSortedDuplicates</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setUnsortedDuplicates</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setRecordLength</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>val</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setRecordPad</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>databaseExists</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>fileName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseNames</color><color=#f8f8f2>().</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>dbName</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns null if the database is not found (and AllowCreate is false) or already exists (and</color>
<color=#75715e>   * ExclusiveCreate is true).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Database</color> <color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>fileName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseExistsException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns null if the database is not found (and AllowCreate is false) or already exists (and</color>
<color=#75715e>   * ExclusiveCreate is true).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#a6e22e>openSecondaryDatabase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>fileName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>openSecondaryDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseExistsException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns false if the database is not found. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>truncateDatabase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>fileName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>truncateDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*returnCount*/</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns false if the database is not found. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>removeDatabase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>fileName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>removeDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns false if the database is not found. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>renameDatabase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>oldFileName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>oldDbName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>newFileName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>newDbName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>oldFileName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>newFileName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>renameDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldDbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>newDbName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Fires an assertion if the database is not found (and AllowCreate is false) or already exists</color>
<color=#75715e>   * (and ExclusiveCreate is true).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Database</color> <color=#a6e22e>testOpenDatabase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>makeTestDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>name</color><color=#f8f8f2>),</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseExistsException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Fires an assertion if the database is not found (and AllowCreate is false) or already exists</color>
<color=#75715e>   * (and ExclusiveCreate is true).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#a6e22e>testOpenSecondaryDatabase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>file</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>primary</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>openSecondaryDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>makeTestDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>name</color><color=#f8f8f2>),</color> <color=#f8f8f2>primary</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseExistsException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>makeTestDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>file</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>name</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>file</color> <color=#f92672>+</color> <color=#e6db74>'.'</color> <color=#f92672>+</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>file</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>RuntimeException</color> <color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>cause</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>cause</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>RuntimeException</color> <color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>,</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>cause</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>,</color> <color=#f8f8f2>cause</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>RuntimeException</color> <color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>RuntimeException</color> <color=#a6e22e>unexpectedState</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>enableDeadlockDetection</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>envConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>isCDB</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#75715e>// do nothing in JE, deadlock detection is always on</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Object</color> <color=#a6e22e>getErrorHandler</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setErrorHandler</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>errHandler</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>suppressError</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Pattern</color> <color=#f8f8f2>errPattern</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Abstraction for a result, wrapping an OperationResult in JE, or an</color>
<color=#75715e>   * OperationStatus in either product. The jeResult field</color>
<color=#75715e>   * and make(OperationResult) method will not appear in DB core, and must be</color>
<color=#75715e>   * accessed only by "JE only" code.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>OpResult</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>OpResult</color> <color=#f8f8f2>SUCCESS</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>OpResult</color><color=#f8f8f2>(</color><color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_RESULT</color><color=#f8f8f2>);</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>OpResult</color> <color=#f8f8f2>FAILURE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>OpResult</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>jeResult</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#a6e22e>OpResult</color><color=#f8f8f2>(</color><color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>jeResult</color> <color=#f92672>=</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isSuccess</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>jeResult</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>status</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>isSuccess</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color> <color=#f8f8f2>:</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NOTFOUND</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OpResult</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>OpResult</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>))</color> <color=#f8f8f2>:</color> <color=#f8f8f2>FAILURE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OpResult</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>SUCCESS</color> <color=#f8f8f2>:</color> <color=#f8f8f2>FAILURE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Abstraction for read options, wrapping a ReadOptions in JE, or a</color>
<color=#75715e>   * LockMode in either product. The jeOptions field and make(ReadOptions)</color>
<color=#75715e>   * method will not appear in DB core, and must be accessed only by</color>
<color=#75715e>   * "JE only" code.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>OpReadOptions</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>OpReadOptions</color> <color=#f8f8f2>EMPTY</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>OpReadOptions</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>jeOptions</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#a6e22e>OpReadOptions</color><color=#f8f8f2>(</color><color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>jeOptions</color> <color=#f92672>=</color> <color=#f8f8f2>options</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>LockMode</color> <color=#a6e22e>getLockMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeOptions</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>jeOptions</color><color=#f8f8f2>.</color><color=#a6e22e>getLockMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OpReadOptions</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>options</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#66d9ef>new</color> <color=#f8f8f2>OpReadOptions</color><color=#f8f8f2>(</color><color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>EMPTY</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OpReadOptions</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>lockMode</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#66d9ef>new</color> <color=#f8f8f2>OpReadOptions</color><color=#f8f8f2>(</color><color=#f8f8f2>lockMode</color><color=#f8f8f2>.</color><color=#a6e22e>toReadOptions</color><color=#f8f8f2>())</color> <color=#f8f8f2>:</color> <color=#f8f8f2>EMPTY</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Abstraction for write options, wrapping a WriteOptions in JE, but always</color>
<color=#75715e>   * empty in DB core. The jeOptions field and make(WriteOptions) method will</color>
<color=#75715e>   * not appear in DB core, and must be accessed only by "JE only" code.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>OpWriteOptions</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>OpWriteOptions</color> <color=#f8f8f2>EMPTY</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>OpWriteOptions</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>WriteOptions</color> <color=#f8f8f2>jeOptions</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#a6e22e>OpWriteOptions</color><color=#f8f8f2>(</color><color=#f8f8f2>WriteOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>jeOptions</color> <color=#f92672>=</color> <color=#f8f8f2>options</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>OpWriteOptions</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>WriteOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>options</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#66d9ef>new</color> <color=#f8f8f2>OpWriteOptions</color><color=#f8f8f2>(</color><color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>EMPTY</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>