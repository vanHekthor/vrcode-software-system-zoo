<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.util</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.beans.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.reflect.Method</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>

<color=#75715e>/*</color>
<color=#75715e> * If someone add a property in some FooConfig.java,</color>
<color=#75715e> *   (1) If the setter/getter methods are setFoo/getFoo, the name of the</color>
<color=#75715e> *       property should be "foo", which means the first letter of the property</color>
<color=#75715e> *       name should be lower case.</color>
<color=#75715e> *   (2) The setter method for this property setProperty should return "this",</color>
<color=#75715e> *       and setPropertyVoid method which returns void value must be added.</color>
<color=#75715e> *       The return type of the getter method should be the same as the</color>
<color=#75715e> *       parameter of the setter method.</color>
<color=#75715e> *   (3) The setter method and getter method must be added into</color>
<color=#75715e> *       FooConfigBeanInfo;</color>
<color=#75715e> *   (4) If for some of the setter methods in the FooConfig.java, setterVoid</color>
<color=#75715e> *       methods are not necessary, then add the name of such setter methods</color>
<color=#75715e> *       into the ArrayList ignoreMethods within the corresponding</color>
<color=#75715e> *       FooConfigBeanInfo.getPropertyDescriptors method. For example,</color>
<color=#75715e> *       setMaxSeedTestHook method in DiskOrderedCursorConfig.java is only used</color>
<color=#75715e> *       for unit tests, so "setMaxSeedTestHook" is added into ignoreMethods</color>
<color=#75715e> *       list within DiskOrderedCursorConfigBeanInfo.getPropertyDescriptors.</color>
<color=#75715e> *</color>
<color=#75715e> *</color>
<color=#75715e> * If someone adds a new FooConfig.java,</color>
<color=#75715e> *   (1) The definition of setter/getter mehods and the names of the properties</color>
<color=#75715e> *       should follow the rules described above.</color>
<color=#75715e> *   (2) There must be FooConfigBeanInfo.java. You can write it according to</color>
<color=#75715e> *       the current beaninfo classes.</color>
<color=#75715e> *   (3) "PackagePath.FooConfig" must be added into the unit test:</color>
<color=#75715e> *       com.sleepycat.je.ConfigBeanInfoTest.</color>
<color=#75715e> *</color>
<color=#75715e> * If someond remove an existing FooConfig.java, then "PackagePath.FooConfig"</color>
<color=#75715e> * must be deleted in the unit test com.sleepycat.je.ConfigBeanInfoTest.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ConfigBeanInfoBase</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleBeanInfo</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>awt</color><color=#f8f8f2>.</color><color=#a6e22e>Image</color> <color=#f8f8f2>iconColor16</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>awt</color><color=#f8f8f2>.</color><color=#a6e22e>Image</color> <color=#f8f8f2>iconColor32</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>awt</color><color=#f8f8f2>.</color><color=#a6e22e>Image</color> <color=#f8f8f2>iconMono16</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>awt</color><color=#f8f8f2>.</color><color=#a6e22e>Image</color> <color=#f8f8f2>iconMono32</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>iconNameC16</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>iconNameC32</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>iconNameM16</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>iconNameM32</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>defaultPropertyIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>defaultEventIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>static</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>propertiesName</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>static</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>getterAndSetterMethods</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>static</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>ignoreMethods</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Get the propertis' infomation, including all the properties's names</color>
<color=#75715e>   * and their getter/setter methods.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>getPropertiesInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>propertiesName</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>getterAndSetterMethods</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

      <color=#75715e>/* Get all of the public methods. */</color>
      <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>allMethodNames</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
      <color=#f8f8f2>Method</color><color=#f92672>[]</color> <color=#f8f8f2>methods</color> <color=#f92672>=</color> <color=#f8f8f2>cls</color><color=#f8f8f2>.</color><color=#a6e22e>getMethods</color><color=#f8f8f2>();</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>methods</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>allMethodNames</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>methods</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>allMethodNames</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>allMethodNames</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>subName</color> <color=#f92672>=</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>3</color><color=#f8f8f2>);</color>

        <color=#75715e>/* If it is a setter method. */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>subName</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"set"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isIgnoreMethods</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>String</color> <color=#f8f8f2>propertyName</color> <color=#f92672>=</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>3</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>Method</color> <color=#f8f8f2>getterMethod</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>getterMethod</color> <color=#f92672>=</color> <color=#f8f8f2>cls</color><color=#f8f8f2>.</color><color=#a6e22e>getMethod</color><color=#f8f8f2>(</color><color=#e6db74>"get"</color> <color=#f92672>+</color> <color=#f8f8f2>propertyName</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>NoSuchMethodException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>getterMethod</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>getterMethod</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>getterAndSetterMethods</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#e6db74>"get"</color> <color=#f92672>+</color> <color=#f8f8f2>propertyName</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>getterAndSetterMethods</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color> <color=#f92672>+</color> <color=#e6db74>"Void"</color><color=#f8f8f2>);</color>

            <color=#75715e>/*</color>
<color=#75715e>             * Add the real property name into propertiesName.</color>
<color=#75715e>             * if the names of setter/getter methods are</color>
<color=#75715e>             * setFoo/getFoo, the name of the property should be</color>
<color=#75715e>             * "foo".</color>
<color=#75715e>             */</color>
            <color=#f8f8f2>propertiesName</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>propertyName</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#f8f8f2>propertyName</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>));</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecurityException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isIgnoreMethods</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>methodName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>ignoreMethods</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ignoreMethods</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>).</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>methodName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>static</color> <color=#f8f8f2>PropertyDescriptor</color><color=#f92672>[]</color> <color=#a6e22e>getPdescriptor</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>getPropertiesInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>cls</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>propertyNum</color> <color=#f92672>=</color> <color=#f8f8f2>propertiesName</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>propertyNum</color> <color=#f92672>*</color> <color=#ae81ff>2</color> <color=#f92672>==</color> <color=#f8f8f2>getterAndSetterMethods</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>PropertyDescriptor</color><color=#f92672>[]</color> <color=#f8f8f2>properties</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PropertyDescriptor</color><color=#f92672>[</color><color=#f8f8f2>propertyNum</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>propertyNum</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>j</color> <color=#f92672>+=</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>properties</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>PropertyDescriptor</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>propertiesName</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>),</color>
                <color=#f8f8f2>cls</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>getterAndSetterMethods</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>j</color><color=#f8f8f2>),</color>
                <color=#f8f8f2>getterAndSetterMethods</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IntrospectionException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>properties</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>static</color> <color=#f8f8f2>BeanDescriptor</color> <color=#a6e22e>getBdescriptor</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>BeanDescriptor</color> <color=#f8f8f2>beanDescriptor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>BeanDescriptor</color><color=#f8f8f2>(</color><color=#f8f8f2>cls</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>beanDescriptor</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the bean's <code>BeanDescriptor</code>s.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param cls the Class.</color>
<color=#75715e>   * @return BeanDescriptor describing the editable properties of this bean. May return null if the</color>
<color=#75715e>   *     information should be obtained by automatic analysis.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>BeanDescriptor</color> <color=#a6e22e>getBeanDescriptor</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the bean's <code>PropertyDescriptor</code>s.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param cls the Class.</color>
<color=#75715e>   * @return An array of PropertyDescriptors describing the editable properties supported by this</color>
<color=#75715e>   *     bean. May return null if the information should be obtained by automatic analysis.</color>
<color=#75715e>   *     <p>If a property is indexed, then its entry in the result array will belong to the</color>
<color=#75715e>   *     IndexedPropertyDescriptor subclass of PropertyDescriptor. A client of</color>
<color=#75715e>   *     getPropertyDescriptors can use "instanceof" to check if a given PropertyDescriptor is an</color>
<color=#75715e>   *     IndexedPropertyDescriptor.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>PropertyDescriptor</color><color=#f92672>[]</color> <color=#a6e22e>getPropertyDescriptors</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the bean's <code>EventSetDescriptor</code>s.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return An array of EventSetDescriptors describing the kinds of events fired by this bean. May</color>
<color=#75715e>   *     return null if the information should be obtained by automatic analysis.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>EventSetDescriptor</color><color=#f92672>[]</color> <color=#a6e22e>getEventSetDescriptors</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>EventSetDescriptor</color><color=#f92672>[]</color> <color=#f8f8f2>eventSets</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>EventSetDescriptor</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>eventSets</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A bean may have a "default" property that is the property that will mostly commonly be</color>
<color=#75715e>   * initially chosen for update by human's who are customizing the bean.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return Index of default property in the PropertyDescriptor array returned by</color>
<color=#75715e>   *     getPropertyDescriptors.</color>
<color=#75715e>   *     <p>Returns -1 if there is no default property.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getDefaultPropertyIndex</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>defaultPropertyIndex</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A bean may have a "default" event that is the event that will mostly commonly be used by</color>
<color=#75715e>   * human's when using the bean.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return Index of default event in the EventSetDescriptor array returned by</color>
<color=#75715e>   *     getEventSetDescriptors.</color>
<color=#75715e>   *     <p>Returns -1 if there is no default event.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getDefaultEventIndex</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>defaultEventIndex</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This method returns an image object that can be used to represent the bean in toolboxes,</color>
<color=#75715e>   * toolbars, etc. Icon images will typically be GIFs, but may in future include other formats.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Beans aren't required to provide icons and may return null from this method.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>There are four possible flavors of icons (16x16 color, 32x32 color, 16x16 mono, 32x32 mono).</color>
<color=#75715e>   * If a bean choses to only support a single icon we recommend supporting 16x16 color.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>We recommend that icons have a "transparent" background so they can be rendered onto an</color>
<color=#75715e>   * existing background.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param iconKind The kind of icon requested. This should be one of the constant values</color>
<color=#75715e>   *     ICON_COLOR_16x16, ICON_COLOR_32x32, ICON_MONO_16x16, or ICON_MONO_32x32.</color>
<color=#75715e>   * @return An image object representing the requested icon. May return null if no suitable icon is</color>
<color=#75715e>   *     available.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>awt</color><color=#f8f8f2>.</color><color=#a6e22e>Image</color> <color=#a6e22e>getIcon</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>iconKind</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconKind</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>ICON_COLOR_16x16</color><color=#f8f8f2>:</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconNameC16</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconColor16</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>iconColor16</color> <color=#f92672>=</color> <color=#f8f8f2>loadImage</color><color=#f8f8f2>(</color><color=#f8f8f2>iconNameC16</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>iconColor16</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

      <color=#66d9ef>case</color> <color=#f8f8f2>ICON_COLOR_32x32</color><color=#f8f8f2>:</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconNameC32</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconColor32</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>iconColor32</color> <color=#f92672>=</color> <color=#f8f8f2>loadImage</color><color=#f8f8f2>(</color><color=#f8f8f2>iconNameC32</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>iconColor32</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

      <color=#66d9ef>case</color> <color=#f8f8f2>ICON_MONO_16x16</color><color=#f8f8f2>:</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconNameM16</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconMono16</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>iconMono16</color> <color=#f92672>=</color> <color=#f8f8f2>loadImage</color><color=#f8f8f2>(</color><color=#f8f8f2>iconNameM16</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>iconMono16</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

      <color=#66d9ef>case</color> <color=#f8f8f2>ICON_MONO_32x32</color><color=#f8f8f2>:</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconNameM32</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iconMono32</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>iconMono32</color> <color=#f92672>=</color> <color=#f8f8f2>loadImage</color><color=#f8f8f2>(</color><color=#f8f8f2>iconNameM32</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>iconMono32</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

      <color=#66d9ef>default</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>