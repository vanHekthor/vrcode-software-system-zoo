<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.analysis</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleInput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleOutput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.config.EnvironmentParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.FileManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.tree.IN</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.apache.commons.io.FileUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>MeasureDiskOrderedScan</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ADLER32_CHUNK_SIZE</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>CACHE_MODE</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>CHECKPOINTER_BYTES_INTERVAL</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>DEFERRED_WRITE</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>DUPLICATES</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ENV_BACKGROUND_READ_LIMIT</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>ENV_IS_LOCKING</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>ENV_SHARED_CACHE</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>FLUSH_REQUIRED</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>JE_DURABILITY</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>JE_FILE_LEVEL</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>KEY_PREFIXING</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>LATCH_TIMEOUT</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>LOCK_DEADLOCK_DETECT</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>LOCK_DEADLOCK_DETECT_DELAY</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#f8f8f2>MAX_MEMORY</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NODE_MAX_ENTRIES</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>OFFHEAP_EVICT_BYTES</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>OVERRIDE_BTREE_COMPARATOR</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>PROVISIONAL</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>REPLICATED</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>RUN_CLEANER</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>RUN_EVICTOR</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>RUN_OFFHEAP_EVICTOR</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>RUN_VERIFIER</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>SEQUENTIAL</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>TEMPORARY</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>TRANSACTIONS</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>TXN_SERIALIZABLE_ISOLATION</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>VERIFY_DATA_RECORDS</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Action</color> <color=#f8f8f2>action</color> <color=#f92672>=</color> <color=#f8f8f2>Action</color><color=#f8f8f2>.</color><color=#a6e22e>Populate</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>keysOnly</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>preload</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>sequentialWrites</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>keySize</color> <color=#f92672>=</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>nRecords</color> <color=#f92672>=</color> <color=#ae81ff>500_000</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>internalMemoryLimit</color> <color=#f92672>=</color> <color=#ae81ff>100L</color> <color=#f92672>*</color> <color=#ae81ff>1000</color> <color=#f92672>*</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>jeCacheSize</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>lsnBatchSize</color> <color=#f92672>=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Random</color> <color=#f8f8f2>random</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>(</color><color=#ae81ff>10</color><color=#f8f8f2>);</color>

  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>dupDb</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>dataSize</color> <color=#f92672>=</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>MeasureDiskOrderedScan</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>dataSizeSpecified</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sequentialWrites</color> <color=#f92672>=</color> <color=#f8f8f2>SEQUENTIAL</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>jeCacheSize</color> <color=#f92672>=</color> <color=#f8f8f2>MAX_MEMORY</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lsnBatchSize</color> <color=#f92672>!=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color> <color=#f92672>&&</color> <color=#f8f8f2>internalMemoryLimit</color> <color=#f92672>!=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Only one of lsnBatchSize and internalMemoryLimit may be "</color>
              <color=#f92672>+</color> <color=#e6db74>"specified (not equal to Long.MAX_VALUE)"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dupDb</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>dataSizeSpecified</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>dataSize</color> <color=#f92672>=</color> <color=#f8f8f2>keySize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>ADLER32_CHUNK_SIZE</color> <color=#f92672>=</color> <color=#e6db74>"1000"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>CACHE_MODE</color> <color=#f92672>=</color> <color=#f8f8f2>CacheMode</color><color=#f8f8f2>.</color><color=#a6e22e>EVICT_LN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>CHECKPOINTER_BYTES_INTERVAL</color> <color=#f92672>=</color> <color=#e6db74>"20000000"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>DEFERRED_WRITE</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>DUPLICATES</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>ENV_BACKGROUND_READ_LIMIT</color> <color=#f92672>=</color> <color=#e6db74>"0"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>ENV_IS_LOCKING</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>ENV_SHARED_CACHE</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>FLUSH_REQUIRED</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>JE_DURABILITY</color> <color=#f92672>=</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>.</color><color=#a6e22e>COMMIT_WRITE_NO_SYNC</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>JE_FILE_LEVEL</color> <color=#f92672>=</color> <color=#e6db74>"INFO"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>KEY_PREFIXING</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>LATCH_TIMEOUT</color> <color=#f92672>=</color> <color=#e6db74>"25 ms"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>LOCK_DEADLOCK_DETECT</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>LOCK_DEADLOCK_DETECT_DELAY</color> <color=#f92672>=</color> <color=#e6db74>"10 sec"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>MAX_MEMORY</color> <color=#f92672>=</color> <color=#ae81ff>1000000</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>NODE_MAX_ENTRIES</color> <color=#f92672>=</color> <color=#e6db74>"512"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>OFFHEAP_EVICT_BYTES</color> <color=#f92672>=</color> <color=#e6db74>"102_400"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>OVERRIDE_BTREE_COMPARATOR</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>PROVISIONAL</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>REPLICATED</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>RUN_CLEANER</color> <color=#f92672>=</color> <color=#e6db74>"true"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>RUN_EVICTOR</color> <color=#f92672>=</color> <color=#e6db74>"false"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>RUN_OFFHEAP_EVICTOR</color> <color=#f92672>=</color> <color=#e6db74>"false"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>RUN_VERIFIER</color> <color=#f92672>=</color> <color=#e6db74>"true"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>SEQUENTIAL</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>TEMPORARY</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>TRANSACTIONS</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>TXN_SERIALIZABLE_ISOLATION</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>VERIFY_DATA_RECORDS</color> <color=#f92672>=</color> <color=#e6db74>"true"</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>File</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#e6db74>"./tmp"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>FileUtils</color><color=#f8f8f2>.</color><color=#a6e22e>forceDelete</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>FileUtils</color><color=#f8f8f2>.</color><color=#a6e22e>forceMkdir</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>);</color>
    <color=#66d9ef>new</color> <color=#f8f8f2>MeasureDiskOrderedScan</color><color=#f8f8f2>().</color><color=#a6e22e>exec</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"LogManager.COUNT_LOG "</color> <color=#f92672>+</color> <color=#f8f8f2>LogManager</color><color=#f8f8f2>.</color><color=#a6e22e>COUNT_LOG</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FileManager.COUNT_READ "</color> <color=#f92672>+</color> <color=#f8f8f2>FileManager</color><color=#f8f8f2>.</color><color=#a6e22e>COUNT_READ</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FileManager.COUNT_WRITE "</color> <color=#f92672>+</color> <color=#f8f8f2>FileManager</color><color=#f8f8f2>.</color><color=#a6e22e>COUNT_WRITE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FileManager$LogEndFileDescriptor.COUNT_FORCE "</color> <color=#f92672>+</color> <color=#f8f8f2>FileManager</color><color=#f8f8f2>.</color><color=#a6e22e>COUNT_FORCE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"IN.COUNT_FIND "</color> <color=#f92672>+</color> <color=#f8f8f2>IN</color><color=#f8f8f2>.</color><color=#a6e22e>COUNT_FIND</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"IN.COUNT_SERIALIZE "</color> <color=#f92672>+</color> <color=#f8f8f2>IN</color><color=#f8f8f2>.</color><color=#a6e22e>COUNT_SERIALIZE</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#a6e22e>maxMemory</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#ae81ff>1000L</color> <color=#f92672>*</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>value</color> <color=#f92672>*</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>jeFileLevel</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"INFO"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#e6db74>"OFF"</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>lockDeadlockDetectDelay</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"1 min"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>LOCK_DEADLOCK_DETECT_DELAY</color><color=#f8f8f2>.</color><color=#a6e22e>getDefault</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>envIsLocking</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Durability</color> <color=#a6e22e>jeDurability</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>.</color><color=#a6e22e>COMMIT_SYNC</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>.</color><color=#a6e22e>COMMIT_NO_SYNC</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>checkpointerBytesInterval</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>CHECKPOINTER_BYTES_INTERVAL</color><color=#f8f8f2>.</color><color=#a6e22e>getMax</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>CHECKPOINTER_BYTES_INTERVAL</color><color=#f8f8f2>.</color><color=#a6e22e>getDefault</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>adler32ChunkSize</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>ADLER32_CHUNK_SIZE</color><color=#f8f8f2>.</color><color=#a6e22e>getMax</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>ADLER32_CHUNK_SIZE</color><color=#f8f8f2>.</color><color=#a6e22e>getDefault</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>envBackgroundReadLimit</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_BACKGROUND_READ_LIMIT</color><color=#f8f8f2>.</color><color=#a6e22e>getMax</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_BACKGROUND_READ_LIMIT</color><color=#f8f8f2>.</color><color=#a6e22e>getDefault</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>CacheMode</color> <color=#a6e22e>cacheMode</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>option</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>option</color> <color=#f92672>?</color> <color=#f8f8f2>CacheMode</color><color=#f8f8f2>.</color><color=#a6e22e>UNCHANGED</color> <color=#f8f8f2>:</color> <color=#f8f8f2>CacheMode</color><color=#f8f8f2>.</color><color=#a6e22e>EVICT_LN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>deleteFolder</color><color=#f8f8f2>(</color><color=#f8f8f2>File</color> <color=#f8f8f2>folder</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>File</color><color=#f92672>[]</color> <color=#f8f8f2>files</color> <color=#f92672>=</color> <color=#f8f8f2>folder</color><color=#f8f8f2>.</color><color=#a6e22e>listFiles</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>files</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color> <color=#75715e>// some JVMs return null for empty dirs</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>File</color> <color=#f8f8f2>f</color> <color=#f8f8f2>:</color> <color=#f8f8f2>files</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>isDirectory</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>deleteFolder</color><color=#f8f8f2>(</color><color=#f8f8f2>f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>folder</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>exec</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>open</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>preload</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>preload</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color> <color=#75715e>/* LNs are not loaded. */</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>startTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>action</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>Populate</color><color=#f8f8f2>:</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>populate</color><color=#f8f8f2>();</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>DirtyReadScan</color><color=#f8f8f2>:</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dirtyReadScan</color><color=#f8f8f2>();</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>DiskOrderedScan</color><color=#f8f8f2>:</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>diskOrderedScan</color><color=#f8f8f2>();</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#66d9ef>default</color><color=#f8f8f2>:</color>
        <color=#f8f8f2>fail</color><color=#f8f8f2>(</color><color=#f8f8f2>action</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>endTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>totalSecs</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>endTime</color> <color=#f92672>-</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>throughput</color> <color=#f92672>=</color> <color=#f8f8f2>nRecords</color> <color=#f92672>/</color> <color=#f8f8f2>totalSecs</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"\nTotal seconds: "</color> <color=#f92672>+</color> <color=#f8f8f2>totalSecs</color> <color=#f92672>+</color> <color=#e6db74>" txn/sec: "</color> <color=#f92672>+</color> <color=#f8f8f2>throughput</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>close</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>open</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>minMemory</color> <color=#f92672>=</color>
        <color=#f8f8f2>(</color><color=#f8f8f2>internalMemoryLimit</color> <color=#f92672>!=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color> <color=#f92672>?</color> <color=#f8f8f2>internalMemoryLimit</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color>
            <color=#f92672>+</color> <color=#f8f8f2>jeCacheSize</color>
            <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeCacheSize</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Runtime</color><color=#f8f8f2>.</color><color=#a6e22e>getRuntime</color><color=#f8f8f2>().</color><color=#a6e22e>maxMemory</color><color=#f8f8f2>()</color> <color=#f92672><</color> <color=#f8f8f2>minMemory</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Must set heap size to at least internalMemoryLimit (if "</color>
              <color=#f92672>+</color> <color=#e6db74>"specified) plus 1.5 X jeCacheSize: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>minMemory</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>create</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>action</color> <color=#f92672>==</color> <color=#f8f8f2>Action</color><color=#f8f8f2>.</color><color=#a6e22e>Populate</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>envConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f8f8f2>create</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_FILE_MAX</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#ae81ff>1000</color> <color=#f92672>*</color> <color=#ae81ff>1000</color> <color=#f92672>*</color> <color=#ae81ff>1000</color><color=#f8f8f2>));</color>

    <color=#75715e>/* Options */</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setCacheSize</color><color=#f8f8f2>(</color><color=#f8f8f2>jeCacheSize</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setLocking</color><color=#f8f8f2>(</color><color=#f8f8f2>ENV_IS_LOCKING</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setSharedCache</color><color=#f8f8f2>(</color><color=#f8f8f2>ENV_SHARED_CACHE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTxnSerializableIsolation</color><color=#f8f8f2>(</color><color=#f8f8f2>TXN_SERIALIZABLE_ISOLATION</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>JE_DURABILITY</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>FILE_LOGGING_LEVEL</color><color=#f8f8f2>,</color> <color=#f8f8f2>JE_FILE_LEVEL</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_BACKGROUND_READ_LIMIT</color><color=#f8f8f2>,</color> <color=#f8f8f2>ENV_BACKGROUND_READ_LIMIT</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_LATCH_TIMEOUT</color><color=#f8f8f2>,</color> <color=#f8f8f2>LATCH_TIMEOUT</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>VERIFY_DATA_RECORDS</color><color=#f8f8f2>,</color> <color=#f8f8f2>VERIFY_DATA_RECORDS</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_MAX_ENTRIES</color><color=#f8f8f2>,</color> <color=#f8f8f2>NODE_MAX_ENTRIES</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>OFFHEAP_EVICT_BYTES</color><color=#f8f8f2>,</color> <color=#f8f8f2>OFFHEAP_EVICT_BYTES</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>LOCK_DEADLOCK_DETECT</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>LOCK_DEADLOCK_DETECT</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ADLER32_CHUNK_SIZE</color><color=#f8f8f2>,</color> <color=#f8f8f2>ADLER32_CHUNK_SIZE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>CHECKPOINTER_BYTES_INTERVAL</color><color=#f8f8f2>,</color> <color=#f8f8f2>CHECKPOINTER_BYTES_INTERVAL</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>LOCK_DEADLOCK_DETECT_DELAY</color><color=#f8f8f2>,</color> <color=#f8f8f2>LOCK_DEADLOCK_DETECT_DELAY</color><color=#f8f8f2>);</color>
    <color=#75715e>/* Options */</color>

    <color=#75715e>/* Daemons interfere with cache size measurements. */</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_RUN_EVICTOR</color><color=#f8f8f2>,</color> <color=#f8f8f2>RUN_EVICTOR</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_RUN_OFFHEAP_EVICTOR</color><color=#f8f8f2>,</color> <color=#f8f8f2>RUN_OFFHEAP_EVICTOR</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_RUN_IN_COMPRESSOR</color><color=#f8f8f2>,</color> <color=#e6db74>"false"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_RUN_CHECKPOINTER</color><color=#f8f8f2>,</color> <color=#e6db74>"false"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_RUN_CLEANER</color><color=#f8f8f2>,</color> <color=#f8f8f2>RUN_CLEANER</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>ENV_RUN_VERIFIER</color><color=#f8f8f2>,</color> <color=#f8f8f2>RUN_VERIFIER</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>.</color><color=#a6e22e>STATS_COLLECT</color><color=#f8f8f2>,</color> <color=#e6db74>"false"</color><color=#f8f8f2>);</color>
    <color=#75715e>/* Daemons interfere with cache size measurements. */</color>

    <color=#f8f8f2>String</color> <color=#f8f8f2>homeDir</color> <color=#f92672>=</color> <color=#e6db74>"tmp"</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>env</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Environment</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>homeDir</color><color=#f8f8f2>),</color> <color=#f8f8f2>envConfig</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f8f8f2>create</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setExclusiveCreate</color><color=#f8f8f2>(</color><color=#f8f8f2>create</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Options */</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>DEFERRED_WRITE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setKeyPrefixing</color><color=#f8f8f2>(</color><color=#f8f8f2>KEY_PREFIXING</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setOverrideBtreeComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>OVERRIDE_BTREE_COMPARATOR</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setSortedDuplicates</color><color=#f8f8f2>(</color><color=#f8f8f2>DUPLICATES</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#f8f8f2>TRANSACTIONS</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReplicated</color><color=#f8f8f2>(</color><color=#f8f8f2>REPLICATED</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setCacheMode</color><color=#f8f8f2>(</color><color=#f8f8f2>CACHE_MODE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTemporary</color><color=#f8f8f2>(</color><color=#f8f8f2>TEMPORARY</color><color=#f8f8f2>);</color>
    <color=#75715e>/* Options */</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>db</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#e6db74>"foo"</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dupDb</color> <color=#f92672>=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>populate</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Put</color> <color=#f8f8f2>putType</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dupDb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>putType</color> <color=#f92672>=</color> <color=#f8f8f2>Put</color><color=#f8f8f2>.</color><color=#a6e22e>DUP_DATA</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>putType</color> <color=#f92672>=</color> <color=#f8f8f2>Put</color><color=#f8f8f2>.</color><color=#a6e22e>NO_OVERWRITE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>nRecords</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sequentialWrites</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>makeLongKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>i</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>makeRandomKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>makeData</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color><color=#f8f8f2>;</color>
      <color=#75715e>/* Insert */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dupDb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>db</color><color=#f8f8f2>.</color><color=#a6e22e>putDupData</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>putType</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>db</color><color=#f8f8f2>.</color><color=#a6e22e>putNoOverwrite</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>putType</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>fail</color><color=#f8f8f2>(</color><color=#f8f8f2>status</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#75715e>//      /* Update to create waste */</color>
      <color=#75715e>//      status = db.put(null, key, data);</color>
      <color=#75715e>//      if (status != OperationStatus.SUCCESS) {</color>
      <color=#75715e>//        fail(status);</color>
      <color=#75715e>//      }</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>dirtyReadScan</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keysOnly</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>setPartial</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nScanned</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>READ_UNCOMMITTED</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sequentialWrites</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>checkLongKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>nScanned</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>checkAnyKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>keysOnly</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>checkData</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>nScanned</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>nRecords</color><color=#f8f8f2>,</color> <color=#f8f8f2>nScanned</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>diskOrderedScan</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DiskOrderedCursorConfig</color> <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DiskOrderedCursorConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setKeysOnly</color><color=#f8f8f2>(</color><color=#f8f8f2>keysOnly</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setInternalMemoryLimit</color><color=#f8f8f2>(</color><color=#f8f8f2>internalMemoryLimit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setLSNBatchSize</color><color=#f8f8f2>(</color><color=#f8f8f2>lsnBatchSize</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DiskOrderedCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nScanned</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>READ_UNCOMMITTED</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>checkAnyKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>keysOnly</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>checkData</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>nScanned</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>nRecords</color><color=#f8f8f2>,</color> <color=#f8f8f2>nScanned</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>makeLongKey</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>keySize</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TupleOutput</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>writeLong</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>setData</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>checkLongKey</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>keySize</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>());</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>TupleInput</color> <color=#f8f8f2>in</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TupleInput</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#f8f8f2>in</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>makeRandomKey</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>keySize</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextBytes</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>setData</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>checkAnyKey</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>keySize</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>makeData</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>dataSize</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>bytes</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>bytes</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>setData</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>checkData</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>dataSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>());</color>
    <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>bytes</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>fail</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>check</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>cond</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>cond</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>fail</color><color=#f8f8f2>(</color><color=#e6db74>"check failed, see stack"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>checkEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o1</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>o2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>o1</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>o2</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>o1</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>o2</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>fail</color><color=#f8f8f2>(</color><color=#e6db74>"Only one is null; o1="</color> <color=#f92672>+</color> <color=#f8f8f2>o1</color> <color=#f92672>+</color> <color=#e6db74>" o2="</color> <color=#f92672>+</color> <color=#f8f8f2>o2</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>o1</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>o2</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>fail</color><color=#f8f8f2>(</color><color=#e6db74>"Not equal; o1="</color> <color=#f92672>+</color> <color=#f8f8f2>o1</color> <color=#f92672>+</color> <color=#e6db74>" o2="</color> <color=#f92672>+</color> <color=#f8f8f2>o2</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>printArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#e6db74>"Command line arguments:"</color><color=#f8f8f2>);</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>arg</color> <color=#f8f8f2>:</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#e6db74>' '</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#f8f8f2>arg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
        <color=#e6db74>"Effective arguments:"</color>
            <color=#f92672>+</color> <color=#e6db74>" action="</color>
            <color=#f92672>+</color> <color=#f8f8f2>action</color>
            <color=#f92672>+</color> <color=#e6db74>" dupDb="</color>
            <color=#f92672>+</color> <color=#f8f8f2>dupDb</color>
            <color=#f92672>+</color> <color=#e6db74>" keysOnly="</color>
            <color=#f92672>+</color> <color=#f8f8f2>keysOnly</color>
            <color=#f92672>+</color> <color=#e6db74>" preload="</color>
            <color=#f92672>+</color> <color=#f8f8f2>preload</color>
            <color=#f92672>+</color> <color=#e6db74>" sequentialWrites="</color>
            <color=#f92672>+</color> <color=#f8f8f2>sequentialWrites</color>
            <color=#f92672>+</color> <color=#e6db74>" nRecords="</color>
            <color=#f92672>+</color> <color=#f8f8f2>nRecords</color>
            <color=#f92672>+</color> <color=#e6db74>" keySize="</color>
            <color=#f92672>+</color> <color=#f8f8f2>keySize</color>
            <color=#f92672>+</color> <color=#e6db74>" dataSize="</color>
            <color=#f92672>+</color> <color=#f8f8f2>dataSize</color>
            <color=#f92672>+</color> <color=#e6db74>" lsnBatchSize="</color>
            <color=#f92672>+</color> <color=#f8f8f2>lsnBatchSize</color>
            <color=#f92672>+</color> <color=#e6db74>" internalMemoryLimit="</color>
            <color=#f92672>+</color> <color=#f8f8f2>internalMemoryLimit</color>
            <color=#f92672>+</color> <color=#e6db74>" jeCacheSize="</color>
            <color=#f92672>+</color> <color=#f8f8f2>jeCacheSize</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>enum</color> <color=#f8f8f2>Action</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Populate</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>DirtyReadScan</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>DiskOrderedScan</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>