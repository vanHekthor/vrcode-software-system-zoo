<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.collections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.OperationFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.OperationStatus</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.RuntimeExceptionWrapper</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The Set returned by Map.entrySet(). This class may not be instantiated directly. Contrary to what</color>
<color=#75715e> * is stated by {@link Map#entrySet} this class does support the {@link #add} and {@link #addAll}</color>
<color=#75715e> * methods.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link Map.Entry#setValue} method of the Map.Entry objects that are returned by this class</color>
<color=#75715e> * and its iterators behaves just as the {@link StoredIterator#set} method does.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>StoredEntrySet</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>StoredCollection</color><color=#f92672><</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>>></color>
    <color=#66d9ef>implements</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>>></color> <color=#f8f8f2>{</color>

  <color=#f8f8f2>StoredEntrySet</color><color=#f8f8f2>(</color><color=#f8f8f2>DataView</color> <color=#f8f8f2>mapView</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>mapView</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Adds the specified element to this set if it is not already present (optional operation). This</color>
<color=#75715e>   * method conforms to the {@link Set#add} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param mapEntry must be a {@link Map.Entry} instance.</color>
<color=#75715e>   * @return true if the key-value pair was added to the set (and was not previously present).</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws UnsupportedOperationException if the collection is read-only.</color>
<color=#75715e>   * @throws ClassCastException if the mapEntry is not a {@link Map.Entry} instance.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>mapEntry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>add</color><color=#f8f8f2>(</color><color=#f8f8f2>mapEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>(),</color> <color=#f8f8f2>mapEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes the specified element from this set if it is present (optional operation). This method</color>
<color=#75715e>   * conforms to the {@link Set#remove} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param mapEntry is a {@link Map.Entry} instance to be removed.</color>
<color=#75715e>   * @return true if the key-value pair was removed from the set, or false if the mapEntry is not a</color>
<color=#75715e>   *     {@link Map.Entry} instance or is not present in the set.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws UnsupportedOperationException if the collection is read-only.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>mapEntry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>mapEntry</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>mapEntry</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>findBoth</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>(),</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>(),</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if this set contains the specified element. This method conforms to the {@link</color>
<color=#75715e>   * Set#contains} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param mapEntry is a {@link Map.Entry} instance to be checked.</color>
<color=#75715e>   * @return true if the key-value pair is present in the set, or false if the mapEntry is not a</color>
<color=#75715e>   *     {@link Map.Entry} instance or is not present in the set.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>mapEntry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>mapEntry</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>mapEntry</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>findBoth</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>(),</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>(),</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// javadoc is inherited</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>buf</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"["</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>StoredIterator</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>storedIterator</color><color=#f8f8f2>();</color>
      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>','</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Object</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>Object</color> <color=#f8f8f2>val</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>key</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>'='</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>val</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>']'</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>StoredIterator</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>makeIteratorData</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>BaseIterator</color> <color=#f8f8f2>iterator</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKeyEntry</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>valueEntry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredMapEntry</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>view</color><color=#f8f8f2>.</color><color=#a6e22e>makeKey</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKeyEntry</color><color=#f8f8f2>),</color>
        <color=#f8f8f2>view</color><color=#f8f8f2>.</color><color=#a6e22e>makeValue</color><color=#f8f8f2>(</color><color=#f8f8f2>priKeyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>valueEntry</color><color=#f8f8f2>),</color>
        <color=#66d9ef>this</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>iterator</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>boolean</color> <color=#a6e22e>hasValues</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>