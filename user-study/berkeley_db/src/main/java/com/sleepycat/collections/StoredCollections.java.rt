<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.collections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.CursorConfig</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Static methods operating on collections and maps.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This class consists exclusively of static methods that operate on or return stored collections</color>
<color=#75715e> * and maps, jointly called containers. It contains methods for changing certain properties of a</color>
<color=#75715e> * container. Because container properties are immutable, these methods always return a new</color>
<color=#75715e> * container instance. This allows stored container instances to be used safely by multiple threads.</color>
<color=#75715e> * Creating the new container instance is not expensive and creates only two new objects.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>When a container is created with a particular property, all containers and iterators derived</color>
<color=#75715e> * from that container will inherit the property. For example, if a read-uncommitted Map is created</color>
<color=#75715e> * then calls to its subMap(), values(), entrySet(), and keySet() methods will create</color>
<color=#75715e> * read-uncommitted containers also.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Method names beginning with "configured" create a new container with a specified {@link</color>
<color=#75715e> * CursorConfig} from a given stored container. This allows configuring a container for</color>
<color=#75715e> * read-committed isolation, read-uncommitted isolation, or any other property supported by <code></color>
<color=#75715e> * CursorConfig</code>. All operations performed with the resulting container will be performed with</color>
<color=#75715e> * the specified cursor configuration.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>StoredCollections</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#a6e22e>StoredCollections</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a configured collection from a given stored collection.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param storedCollection the base collection.</color>
<color=#75715e>   * @param config is the cursor configuration to be used for all operations performed via the new</color>
<color=#75715e>   *     collection instance; null may be specified to use the default configuration.</color>
<color=#75715e>   * @param <E> the element class.</color>
<color=#75715e>   * @return the configured collection.</color>
<color=#75715e>   * @throws ClassCastException if the given container is not a StoredContainer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#a6e22e>configuredCollection</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>storedCollection</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>Collection</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>StoredContainer</color><color=#f8f8f2>)</color> <color=#f8f8f2>storedCollection</color><color=#f8f8f2>).</color><color=#a6e22e>configuredClone</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a configured list from a given stored list.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that this method may not be called in the JE product, since the StoredList class is not</color>
<color=#75715e>   * supported.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param storedList the base list.</color>
<color=#75715e>   * @param config is the cursor configuration to be used for all operations performed via the new</color>
<color=#75715e>   *     list instance; null may be specified to use the default configuration.</color>
<color=#75715e>   * @param <E> the element class.</color>
<color=#75715e>   * @return the configured list.</color>
<color=#75715e>   * @throws ClassCastException if the given container is not a StoredContainer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#a6e22e>configuredList</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>storedList</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>StoredContainer</color><color=#f8f8f2>)</color> <color=#f8f8f2>storedList</color><color=#f8f8f2>).</color><color=#a6e22e>configuredClone</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a configured map from a given stored map.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param storedMap the base map.</color>
<color=#75715e>   * @param config is the cursor configuration to be used for all operations performed via the new</color>
<color=#75715e>   *     map instance; null may be specified to use the default configuration.</color>
<color=#75715e>   * @param <K> the key class.</color>
<color=#75715e>   * @param <V> the value class.</color>
<color=#75715e>   * @return the configured map.</color>
<color=#75715e>   * @throws ClassCastException if the given container is not a StoredContainer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>configuredMap</color><color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>storedMap</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>StoredContainer</color><color=#f8f8f2>)</color> <color=#f8f8f2>storedMap</color><color=#f8f8f2>).</color><color=#a6e22e>configuredClone</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a configured set from a given stored set.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param storedSet the base set.</color>
<color=#75715e>   * @param config is the cursor configuration to be used for all operations performed via the new</color>
<color=#75715e>   *     set instance; null may be specified to use the default configuration.</color>
<color=#75715e>   * @param <E> the element class.</color>
<color=#75715e>   * @return the configured set.</color>
<color=#75715e>   * @throws ClassCastException if the given container is not a StoredContainer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#a6e22e>configuredSet</color><color=#f8f8f2>(</color><color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>storedSet</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>Set</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>StoredContainer</color><color=#f8f8f2>)</color> <color=#f8f8f2>storedSet</color><color=#f8f8f2>).</color><color=#a6e22e>configuredClone</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a configured sorted map from a given stored sorted map.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param storedSortedMap the base map.</color>
<color=#75715e>   * @param config is the cursor configuration to be used for all operations performed via the new</color>
<color=#75715e>   *     map instance; null may be specified to use the default configuration.</color>
<color=#75715e>   * @param <K> the key class.</color>
<color=#75715e>   * @param <V> the value class.</color>
<color=#75715e>   * @return the configured map.</color>
<color=#75715e>   * @throws ClassCastException if the given container is not a StoredContainer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>SortedMap</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>configuredSortedMap</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>SortedMap</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>storedSortedMap</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>SortedMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>StoredContainer</color><color=#f8f8f2>)</color> <color=#f8f8f2>storedSortedMap</color><color=#f8f8f2>).</color><color=#a6e22e>configuredClone</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a configured sorted set from a given stored sorted set.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param storedSortedSet the base set.</color>
<color=#75715e>   * @param config is the cursor configuration to be used for all operations performed via the new</color>
<color=#75715e>   *     set instance; null may be specified to use the default configuration.</color>
<color=#75715e>   * @param <E> the element class.</color>
<color=#75715e>   * @return the configured set.</color>
<color=#75715e>   * @throws ClassCastException if the given container is not a StoredContainer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>SortedSet</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#a6e22e>configuredSortedSet</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>SortedSet</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>storedSortedSet</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>SortedSet</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>StoredContainer</color><color=#f8f8f2>)</color> <color=#f8f8f2>storedSortedSet</color><color=#f8f8f2>).</color><color=#a6e22e>configuredClone</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Clones an iterator preserving its current position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param iter an iterator to clone.</color>
<color=#75715e>   * @param <E> the element class.</color>
<color=#75715e>   * @return a new {@code Iterator} having the same position as the given iterator.</color>
<color=#75715e>   * @throws ClassCastException if the given iterator was not obtained via a {@link</color>
<color=#75715e>   *     StoredCollection} method.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#a6e22e>iterator</color><color=#f8f8f2>(</color><color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>iter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>((</color><color=#f8f8f2>BaseIterator</color><color=#f8f8f2>)</color> <color=#f8f8f2>iter</color><color=#f8f8f2>).</color><color=#a6e22e>dup</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>