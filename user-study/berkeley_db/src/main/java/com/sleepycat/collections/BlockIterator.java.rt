<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.collections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.compat.DbCompat</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.OperationStatus</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.keyrange.KeyRange</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.ListIterator</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.NoSuchElementException</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An iterator that does not need closing because a cursor is not kept open across method calls. A</color>
<color=#75715e> * cursor is opened to read a block of records at a time and then closed before the method returns.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>class</color> <color=#a6e22e>BlockIterator</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>BaseIterator</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>StoredCollection</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>coll</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Slots for a block of record keys and values. The priKeys array is only used for secondary</color>
<color=#75715e>   * databases; otherwise it is set to the keys array.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>keys</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>priKeys</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>values</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The slot index of the record that would be returned by next(). nextIndex is always greater or</color>
<color=#75715e>   * equal to zero. If the next record is not available, then nextIndex is equal to keys.length or</color>
<color=#75715e>   * keys[nextIndex] is null.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the block is empty, then either the iterator is uninitialized or the key range is empty.</color>
<color=#75715e>   * Either way, nextIndex will be the array length and all array values will be null. This is the</color>
<color=#75715e>   * initial state set by the constructor. If remove() is used to delete all records in the key</color>
<color=#75715e>   * range, it will restore the iterator to this initial state. The block must never be allowed to</color>
<color=#75715e>   * become empty when the key range is non-empty, since then the iterator's position would be lost.</color>
<color=#75715e>   * [#15858]</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>nextIndex</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The slot index of the record last returned by next() or previous(), or the record inserted by</color>
<color=#75715e>   * add(). dataIndex is -1 if the data record is not available. If greater or equal to zero, the</color>
<color=#75715e>   * slot at dataIndex is always non-null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>dataIndex</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The iterator data last returned by next() or previous(). This value is set to null if dataIndex</color>
<color=#75715e>   * is -1, or if the state of the iterator is such that set() or remove() cannot be called. For</color>
<color=#75715e>   * example, after add() this field is set to null, even though the dataIndex is still valid.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>E</color> <color=#f8f8f2>dataObject</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Creates an iterator. */</color>
  <color=#f8f8f2>BlockIterator</color><color=#f8f8f2>(</color><color=#f8f8f2>StoredCollection</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>coll</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>blockSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>coll</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>writeAllowed</color> <color=#f92672>=</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>keys</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>blockSize</color><color=#f92672>][]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>priKeys</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>isSecondary</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>blockSize</color><color=#f92672>][]</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>keys</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>values</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>blockSize</color><color=#f92672>][]</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#f8f8f2>blockSize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Copy constructor. */</color>
  <color=#66d9ef>private</color> <color=#a6e22e>BlockIterator</color><color=#f8f8f2>(</color><color=#f8f8f2>BlockIterator</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>o</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>coll</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>coll</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>writeAllowed</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>writeAllowed</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>keys</color> <color=#f92672>=</color> <color=#f8f8f2>copyArray</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>keys</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>priKeys</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>isSecondary</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>copyArray</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>priKeys</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>keys</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>values</color> <color=#f92672>=</color> <color=#f8f8f2>copyArray</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>nextIndex</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>dataIndex</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>dataObject</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Copies an array of byte arrays. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#a6e22e>copyArray</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>a</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>a</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f92672>][]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>b</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>b</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>KeyRange</color><color=#f8f8f2>.</color><color=#a6e22e>copyBytes</color><color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns whether the element at nextIndex is available. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isNextAvailable</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color> <color=#f92672><</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>nextIndex</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns whether the element at nextIndex-1 is available. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isPrevAvailable</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>nextIndex</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the record number at the given slot position. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>getRecordNumber</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>btreeRecNumDb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>moveCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentRecordNumber</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Sets dataObject to the iterator data for the element at dataIndex. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>makeDataObject</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>dataIndex</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKeyEntry</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>keys</color> <color=#f92672>!=</color> <color=#f8f8f2>priKeys</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>))</color> <color=#f8f8f2>:</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>valuesEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>makeIteratorData</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKeyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>valuesEntry</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Sets all slots to null. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>clearSlots</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Sets a given slot using the data in the given cursor. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>setSlot</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>KeyRange</color><color=#f8f8f2>.</color><color=#a6e22e>getByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyThang</color><color=#f8f8f2>());</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keys</color> <color=#f92672>!=</color> <color=#f8f8f2>priKeys</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>KeyRange</color><color=#f8f8f2>.</color><color=#a6e22e>getByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getPrimaryKeyThang</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>KeyRange</color><color=#f8f8f2>.</color><color=#a6e22e>getByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getValueThang</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Inserts an added record at a given slot position and shifts other slots accordingly. Also</color>
<color=#75715e>   * adjusts nextIndex and sets dataIndex to -1.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>insertSlot</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672>></color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672>-=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#75715e>/* Shift right. */</color>
        <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#75715e>/* Bump key in recno-renumber database. */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>recNumRenumber</color> <color=#f92672>&&</color> <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>bumpRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>j</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>nextIndex</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>!=</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>i</color> <color=#f92672>-=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Shift left. */</color>
        <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Increments the record number key at the given slot. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>bumpRecordNumber</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>setRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>,</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Deletes the given slot, adjusts nextIndex and sets dataIndex to -1. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>deleteSlot</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>last</color> <color=#f92672>=</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>last</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>last</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>last</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color> <color=#f92672>></color> <color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>nextIndex</color> <color=#f92672>-=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the key/data at the given slot, and returns false if the reposition</color>
<color=#75715e>   * (search) fails.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>moveCursor</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>repositionExact</color><color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// --- begin Iterator/ListIterator methods ---</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>hasNext</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isNextAvailable</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>prev</color> <color=#f92672>=</color> <color=#f8f8f2>nextIndex</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>found</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>prev</color><color=#f92672>]</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Get the first record for an uninitialized iterator. */</color>
        <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>found</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Reposition to the last known key/data pair. */</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>repos</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>repositionRange</color><color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>prev</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>prev</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>prev</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repos</color> <color=#f92672>==</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>.</color><color=#a6e22e>REPOS_EXACT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The last known key/data pair was found and will now be</color>
<color=#75715e>           * in slot zero.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>found</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

          <color=#75715e>/* The data object is now in slot zero or not available. */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color> <color=#f92672>==</color> <color=#f8f8f2>prev</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repos</color> <color=#f92672>==</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>.</color><color=#a6e22e>REPOS_NEXT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The last known key/data pair was not found, but the</color>
<color=#75715e>           * following record was found and it will be in slot zero.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>found</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

          <color=#75715e>/* The data object is no longer available. */</color>
          <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repos</color> <color=#f92672>!=</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>.</color><color=#a6e22e>REPOS_EOF</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>found</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Clear all slots first in case an exception occurs below. */</color>
        <color=#f8f8f2>clearSlots</color><color=#f8f8f2>();</color>

        <color=#75715e>/* Attempt to fill all slots with records. */</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>done</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>done</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color>
                <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>iterateDuplicates</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNextNoDup</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>done</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>done</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If REPOS_EXACT was returned above, make sure we retrieved</color>
<color=#75715e>       * the following record.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>isNextAvailable</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>hasPrevious</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isPrevAvailable</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isNextAvailable</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>last</color> <color=#f92672>=</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>next</color> <color=#f92672>=</color> <color=#f8f8f2>nextIndex</color><color=#f8f8f2>;</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>found</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

      <color=#75715e>/* Reposition to the last known key/data pair. */</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>repos</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>repositionRange</color><color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#f8f8f2>next</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKeys</color><color=#f92672>[</color><color=#f8f8f2>next</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>values</color><color=#f92672>[</color><color=#f8f8f2>next</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repos</color> <color=#f92672>==</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>.</color><color=#a6e22e>REPOS_EXACT</color> <color=#f92672>||</color> <color=#f8f8f2>repos</color> <color=#f92672>==</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>.</color><color=#a6e22e>REPOS_NEXT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * The last known key/data pair, or the record following it,</color>
<color=#75715e>         * was found and will now be in the last slot.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>found</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>

        <color=#75715e>/* The data object is now in the last slot or not available. */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color> <color=#f92672>==</color> <color=#f8f8f2>next</color> <color=#f92672>&&</color> <color=#f8f8f2>repos</color> <color=#f92672>==</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>.</color><color=#a6e22e>REPOS_EXACT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repos</color> <color=#f92672>!=</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>.</color><color=#a6e22e>REPOS_EOF</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>found</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Clear all slots first in case an exception occurs below. */</color>
        <color=#f8f8f2>clearSlots</color><color=#f8f8f2>();</color>

        <color=#75715e>/* Attempt to fill all slots with records. */</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>done</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>done</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>i</color> <color=#f92672>-=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color>
                <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>iterateDuplicates</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getPrev</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getPrevNoDup</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>done</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>done</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Make sure we retrieved the preceding record after the reposition</color>
<color=#75715e>       * above.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>isPrevAvailable</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>E</color> <color=#a6e22e>next</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>hasNext</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f8f8f2>nextIndex</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>nextIndex</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>makeDataObject</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>dataObject</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NoSuchElementException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>E</color> <color=#a6e22e>previous</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>hasPrevious</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>nextIndex</color> <color=#f92672>-=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f8f8f2>nextIndex</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>makeDataObject</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>dataObject</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NoSuchElementException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>nextIndex</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>recNumAccess</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>(</color><color=#e6db74>"Record number access not supported"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>hasNext</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f8f8f2>getRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color><color=#f8f8f2>)</color> <color=#f92672>-</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>getIndexOffset</color><color=#f8f8f2>())</color> <color=#f8f8f2>:</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>previousIndex</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>recNumAccess</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>(</color><color=#e6db74>"Record number access not supported"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>hasPrevious</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f8f8f2>getRecordNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>-</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>getIndexOffset</color><color=#f8f8f2>())</color> <color=#f8f8f2>:</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dataObject</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>hasValues</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>moveCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>remove</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dataObject</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>moveCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>deleteSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Repopulate the block after removing all records, using the</color>
<color=#75715e>         * cursor position of the deleted record as a starting point.</color>
<color=#75715e>         * First try moving forward, since the user was moving forward.</color>
<color=#75715e>         * (It is possible to delete all records in the block only by</color>
<color=#75715e>         * moving forward, i.e, when nextIndex is greater than</color>
<color=#75715e>         * dataIndex.)</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color> <color=#f92672>==</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>keys</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color><color=#f8f8f2>;</color>
          <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>iterateDuplicates</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNextNoDup</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * If no records are found past the cursor position, try</color>
<color=#75715e>           * moving backward.  If no records are found before the</color>
<color=#75715e>           * cursor position, leave nextIndex set to keys.length,</color>
<color=#75715e>           * which is the same as the initial iterator state and is</color>
<color=#75715e>           * appropriate for an empty key range.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keys</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#f8f8f2>keys</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>nextIndex</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>-=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>status</color> <color=#f92672>=</color>
                  <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>iterateDuplicates</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getPrev</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getPrevNoDup</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * The checkIterAddAllowed method ensures that one of the following two</color>
<color=#75715e>     * conditions holds and throws UnsupportedOperationException otherwise:</color>
<color=#75715e>     * 1- This is a list iterator for a recno-renumber database.</color>
<color=#75715e>     * 2- This is a collection iterator for a duplicates database.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>checkIterAddAllowed</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>keysRenumbered</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>areDuplicatesOrdered</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * This is a recno-renumber database or a btree/hash database</color>
<color=#75715e>         * with unordered duplicates.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>hasPrev</color> <color=#f92672>=</color> <color=#f8f8f2>hasPrevious</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>hasPrev</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>hasNext</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

          <color=#75715e>/* The collection is empty. */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>keysRenumbered</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#75715e>/* Append to an empty recno-renumber database. */</color>
            <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>dupsAllowed</color> <color=#f92672>&&</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>range</color><color=#f8f8f2>.</color><color=#a6e22e>isSingleKey</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

            <color=#75715e>/*</color>
<color=#75715e>             * When inserting a duplicate into a single-key range,</color>
<color=#75715e>             * the main key is fixed, so we can always insert into</color>
<color=#75715e>             * an empty collection.</color>
<color=#75715e>             */</color>
            <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>useRangeKey</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putNoDupData</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Collection is empty, cannot add() duplicate"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * Move past the record just inserted (the cursor should be</color>
<color=#75715e>           * closed above to prevent multiple open cursors in certain</color>
<color=#75715e>           * DB core modes).</color>
<color=#75715e>           */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>next</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#f8f8f2>nextIndex</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The collection is non-empty.  If hasPrev is true then</color>
<color=#75715e>           * the element at (nextIndex - 1) is available; otherwise</color>
<color=#75715e>           * the element at nextIndex is available.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>
          <color=#66d9ef>int</color> <color=#f8f8f2>insertIndex</color> <color=#f92672>=</color> <color=#f8f8f2>hasPrev</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>nextIndex</color><color=#f8f8f2>;</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>moveCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>insertIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * For a recno-renumber database or a database with</color>
<color=#75715e>           * unsorted duplicates, insert before the iterator 'next'</color>
<color=#75715e>           * position, or after the 'prev' position.  Then adjust</color>
<color=#75715e>           * the slots to account for the inserted record.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>hasPrev</color> <color=#f92672>?</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putAfter</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putBefore</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>insertSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>nextIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* This is a btree/hash database with ordered duplicates. */</color>
        <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>.</color><color=#a6e22e>range</color><color=#f8f8f2>.</color><color=#a6e22e>isSingleKey</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * When inserting a duplicate into a single-key range,</color>
<color=#75715e>           * the main key is fixed.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>useRangeKey</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * When inserting into a multi-key range, the main key</color>
<color=#75715e>           * is the last dataIndex accessed by next(), previous()</color>
<color=#75715e>           * or add().</color>
<color=#75715e>           */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color> <color=#f92672><</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>moveCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>dataIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/*</color>
<color=#75715e>         * For a hash/btree with duplicates, insert the duplicate,</color>
<color=#75715e>         * put the new record in slot zero, and set the next index</color>
<color=#75715e>         * to slot one (past the new record).</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putNoDupData</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>clearSlots</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>dataIndex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>KEYEXIST</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Duplicate value"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#e6db74>"Could not insert: "</color> <color=#f92672>+</color> <color=#f8f8f2>status</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Prevent subsequent set() or remove() call. */</color>
      <color=#f8f8f2>dataObject</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Catch RuntimeExceptions too. */</color>
      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// --- end Iterator/ListIterator methods ---</color>

  <color=#75715e>// --- begin BaseIterator methods ---</color>

  <color=#66d9ef>final</color> <color=#f8f8f2>ListIterator</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#a6e22e>dup</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>BlockIterator</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isCurrentData</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>currentData</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>dataObject</color> <color=#f92672>==</color> <color=#f8f8f2>currentData</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>moveToIndex</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>index</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>view</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchKey</color><color=#f8f8f2>(</color><color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>retVal</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>clearSlots</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>setSlot</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>nextIndex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>retVal</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>retVal</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>retVal</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>coll</color><color=#f8f8f2>.</color><color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// --- end BaseIterator methods ---</color>
<color=#f8f8f2>}</color>