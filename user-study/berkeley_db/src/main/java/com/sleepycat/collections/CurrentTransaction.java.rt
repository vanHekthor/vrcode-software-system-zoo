<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.collections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.compat.DbCompat</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.RuntimeExceptionWrapper</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.lang.ref.WeakReference</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.WeakHashMap</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Provides access to the current transaction for the current thread within the context of a</color>
<color=#75715e> * Berkeley DB environment. This class provides explicit transaction control beyond that provided by</color>
<color=#75715e> * the {@link TransactionRunner} class. However, both methods of transaction control manage</color>
<color=#75715e> * per-thread transactions.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>CurrentTransaction</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* For internal use, this class doubles as an Environment wrapper. */</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>WeakHashMap</color><color=#f92672><</color><color=#f8f8f2>Environment</color><color=#f8f8f2>,</color> <color=#f8f8f2>CurrentTransaction</color><color=#f92672>></color> <color=#f8f8f2>envMap</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>WeakHashMap</color><color=#f92672><</color><color=#f8f8f2>Environment</color><color=#f8f8f2>,</color> <color=#f8f8f2>CurrentTransaction</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>writeLockMode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>cdbMode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>txnMode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>lockingMode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ThreadLocal</color> <color=#f8f8f2>localTrans</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThreadLocal</color><color=#f8f8f2>();</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>ThreadLocal</color> <color=#f8f8f2>localCdbCursors</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Use a WeakReference to the Environment to avoid pinning the environment</color>
<color=#75715e>   * in the envMap.  The WeakHashMap envMap uses the Environment as a weak</color>
<color=#75715e>   * key, but this won't prevent GC of the Environment if the map's value has</color>
<color=#75715e>   * a hard reference to the Environment.  [#15444]</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>Environment</color><color=#f92672>></color> <color=#f8f8f2>envRef</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the CurrentTransaction accessor for a specified Berkeley DB environment. This method</color>
<color=#75715e>   * always returns the same reference when called more than once with the same environment</color>
<color=#75715e>   * parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param env is an open Berkeley DB environment.</color>
<color=#75715e>   * @return the CurrentTransaction accessor for the given environment, or null if the environment</color>
<color=#75715e>   *     is not transactional.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>CurrentTransaction</color> <color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>CurrentTransaction</color> <color=#f8f8f2>currentTxn</color> <color=#f92672>=</color> <color=#f8f8f2>getInstanceInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>currentTxn</color><color=#f8f8f2>.</color><color=#a6e22e>isTxnMode</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>currentTxn</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the CurrentTransaction accessor for a specified Berkeley DB environment. Unlike</color>
<color=#75715e>   * getInstance(), this method never returns null.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param env is an open Berkeley DB environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>CurrentTransaction</color> <color=#a6e22e>getInstanceInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>envMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>CurrentTransaction</color> <color=#f8f8f2>ct</color> <color=#f92672>=</color> <color=#f8f8f2>envMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ct</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ct</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CurrentTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>envMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>ct</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>ct</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#a6e22e>CurrentTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>envRef</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>Environment</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>txnMode</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>lockingMode</color> <color=#f92672>=</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getInitializeLocking</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txnMode</color> <color=#f92672>||</color> <color=#f8f8f2>lockingMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>writeLockMode</color> <color=#f92672>=</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>writeLockMode</color> <color=#f92672>=</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>cdbMode</color> <color=#f92672>=</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getInitializeCDB</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>localCdbCursors</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThreadLocal</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>RuntimeExceptionWrapper</color><color=#f8f8f2>.</color><color=#a6e22e>wrapIfNeeded</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns whether environment is configured for locking. */</color>
  <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isLockingMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>lockingMode</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns whether this is a transactional environment. */</color>
  <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isTxnMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>txnMode</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns whether this is a Concurrent Data Store environment. */</color>
  <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isCdbMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>cdbMode</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the LockMode.RMW or null, depending on whether locking is enabled. LockMode.RMW will</color>
<color=#75715e>   * cause an error if passed when locking is not enabled. Locking is enabled if locking or</color>
<color=#75715e>   * transactions were specified for this environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#a6e22e>getWriteLockMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>writeLockMode</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the underlying Berkeley DB environment.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the Environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>Environment</color> <color=#a6e22e>getEnvironment</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>envRef</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the transaction associated with the current thread for this environment, or null if no</color>
<color=#75715e>   * transaction is active.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the Transaction.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#a6e22e>getTransaction</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Trans</color> <color=#f8f8f2>trans</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Trans</color><color=#f8f8f2>)</color> <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>trans</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns whether auto-commit may be performed by the collections API. True is returned if no</color>
<color=#75715e>   * collections API transaction is currently active, and no XA transaction is currently active.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>isAutoCommitAllowed</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>getTransaction</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getThreadTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>getEnvironment</color><color=#f8f8f2>())</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Begins a new transaction for this environment and associates it with the current thread. If a</color>
<color=#75715e>   * transaction is already active for this environment and thread, a nested transaction will be</color>
<color=#75715e>   * created.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param config the transaction configuration used for calling {@link</color>
<color=#75715e>   *     Environment#beginTransaction}, or null to use the default configuration.</color>
<color=#75715e>   * @return the new transaction.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws com.sleepycat.je.rep.InsufficientReplicasException if the Master in a replicated</color>
<color=#75715e>   *     environment could not contact a quorum of replicas as determined by the {@link</color>
<color=#75715e>   *     com.sleepycat.je.Durability.ReplicaAckPolicy}.</color>
<color=#75715e>   * @throws com.sleepycat.je.rep.ReplicaConsistencyException if a replica in a replicated</color>
<color=#75715e>   *     environment cannot become consistent within the timeout period.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException if the transaction cannot be started, in which case any existing</color>
<color=#75715e>   *     transaction is not affected.</color>
<color=#75715e>   * @throws IllegalStateException if a transaction is already active and nested transactions are</color>
<color=#75715e>   *     not supported by the environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color> <color=#f92672>=</color> <color=#f8f8f2>getEnvironment</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Trans</color> <color=#f8f8f2>trans</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Trans</color><color=#f8f8f2>)</color> <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>trans</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>NESTED_TRANSACTIONS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Nested transactions are not supported"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>Transaction</color> <color=#f8f8f2>parentTxn</color> <color=#f92672>=</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>trans</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Trans</color><color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>parentTxn</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>config</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>trans</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Trans</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Commits the transaction that is active for the current thread for this environment and makes</color>
<color=#75715e>   * the parent transaction (if any) the current transaction.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the parent transaction or null if the committed transaction was not nested.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws com.sleepycat.je.rep.InsufficientReplicasException if the master in a replicated</color>
<color=#75715e>   *     environment could not contact a quorum of replicas as determined by the {@link</color>
<color=#75715e>   *     com.sleepycat.je.Durability.ReplicaAckPolicy}. The application must abort the transaction</color>
<color=#75715e>   *     and can choose to retry it.</color>
<color=#75715e>   * @throws com.sleepycat.je.rep.InsufficientAcksException if the master in a replicated</color>
<color=#75715e>   *     environment did not receive enough replica acknowledgments, although the commit succeeded</color>
<color=#75715e>   *     locally.</color>
<color=#75715e>   * @throws com.sleepycat.je.rep.ReplicaWriteException if a write operation was performed with this</color>
<color=#75715e>   *     transaction, but this node is now a Replica.</color>
<color=#75715e>   * @throws OperationFailureException if this exception occurred earlier and caused the transaction</color>
<color=#75715e>   *     to be invalidated.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException if an error occurs committing the transaction. The transaction will</color>
<color=#75715e>   *     still be closed and the parent transaction will become the current transaction.</color>
<color=#75715e>   * @throws IllegalStateException if no transaction is active for the current thread for this</color>
<color=#75715e>   *     environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#a6e22e>commitTransaction</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>IllegalStateException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Trans</color> <color=#f8f8f2>trans</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Trans</color><color=#f8f8f2>)</color> <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>trans</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>parent</color> <color=#f92672>=</color> <color=#f8f8f2>closeTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>parent</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"No transaction is active"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Aborts the transaction that is active for the current thread for this environment and makes the</color>
<color=#75715e>   * parent transaction (if any) the current transaction.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the parent transaction or null if the aborted transaction was not nested.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException if an error occurs aborting the transaction. The transaction will</color>
<color=#75715e>   *     still be closed and the parent transaction will become the current transaction.</color>
<color=#75715e>   * @throws IllegalStateException if no transaction is active for the current thread for this</color>
<color=#75715e>   *     environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#a6e22e>abortTransaction</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>IllegalStateException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Trans</color> <color=#f8f8f2>trans</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Trans</color><color=#f8f8f2>)</color> <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>trans</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>parent</color> <color=#f92672>=</color> <color=#f8f8f2>closeTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>parent</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"No transaction is active"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns whether the current transaction is a readUncommitted transaction. */</color>
  <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isReadUncommitted</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Trans</color> <color=#f8f8f2>trans</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Trans</color><color=#f8f8f2>)</color> <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>trans</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>config</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>config</color><color=#f8f8f2>.</color><color=#a6e22e>getReadUncommitted</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>Transaction</color> <color=#a6e22e>closeTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>Trans</color> <color=#f8f8f2>trans</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>localTrans</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>parent</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>parent</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>trans</color><color=#f8f8f2>.</color><color=#a6e22e>parent</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>Trans</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Trans</color> <color=#f8f8f2>parent</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#a6e22e>Trans</color><color=#f8f8f2>(</color><color=#f8f8f2>Trans</color> <color=#f8f8f2>parent</color><color=#f8f8f2>,</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>parent</color> <color=#f92672>=</color> <color=#f8f8f2>parent</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>config</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Opens a cursor for a given database, dup'ing an existing CDB cursor if one is open for the</color>
<color=#75715e>   * current thread.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Cursor</color> <color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>writeCursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>CdbCursors</color> <color=#f8f8f2>cdbCursors</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>WeakHashMap</color> <color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>WeakHashMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>localCdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WeakHashMap</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>localCdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>cdbCursorsMap</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cdbCursors</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>CdbCursors</color><color=#f8f8f2>)</color> <color=#f8f8f2>cdbCursorsMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursors</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cdbCursors</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CdbCursors</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>cdbCursorsMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>cdbCursors</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * In CDB mode the cursorConfig specified by the user is ignored</color>
<color=#75715e>       * and only the writeCursor parameter is honored.  This is the only</color>
<color=#75715e>       * meaningful cursor attribute for CDB, and here we count on</color>
<color=#75715e>       * writeCursor flag being set correctly by the caller.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>List</color> <color=#f8f8f2>cursors</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cdbConfig</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>writeCursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>readCursors</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * Although CDB allows opening a write cursor when a read</color>
<color=#75715e>           * cursor is open, a self-deadlock will occur if a write is</color>
<color=#75715e>           * attempted for a record that is read-locked; we should</color>
<color=#75715e>           * avoid self-deadlocks at all costs</color>
<color=#75715e>           */</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
              <color=#e6db74>"Cannot open CDB write cursor when read cursor "</color> <color=#f92672>+</color> <color=#e6db74>"is open"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>cursors</color> <color=#f92672>=</color> <color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>writeCursors</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>cdbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>setWriteCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cdbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursors</color> <color=#f92672>=</color> <color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>readCursors</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>cdbConfig</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursors</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Cursor</color> <color=#f8f8f2>other</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>Cursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>cursors</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>dup</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>cdbConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>cursors</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Duplicates a cursor for a given database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param writeCursor true to open a write cursor in a CDB environment, and ignored for other</color>
<color=#75715e>   *     environments.</color>
<color=#75715e>   * @param samePosition is passed through to Cursor.dup().</color>
<color=#75715e>   * @return the open cursor.</color>
<color=#75715e>   * @throws DatabaseException if a database problem occurs.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Cursor</color> <color=#a6e22e>dupCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>writeCursor</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>samePosition</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>WeakHashMap</color> <color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>WeakHashMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>localCdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>CdbCursors</color> <color=#f8f8f2>cdbCursors</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>CdbCursors</color><color=#f8f8f2>)</color> <color=#f8f8f2>cdbCursorsMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursors</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>List</color> <color=#f8f8f2>cursors</color> <color=#f92672>=</color> <color=#f8f8f2>writeCursor</color> <color=#f92672>?</color> <color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>writeCursors</color> <color=#f8f8f2>:</color> <color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>readCursors</color><color=#f8f8f2>;</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursors</color><color=#f8f8f2>.</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>Cursor</color> <color=#f8f8f2>newCursor</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>dup</color><color=#f8f8f2>(</color><color=#f8f8f2>samePosition</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>cursors</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>newCursor</color><color=#f8f8f2>);</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>newCursor</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Cursor to dup not tracked"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>dup</color><color=#f8f8f2>(</color><color=#f8f8f2>samePosition</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Closes a cursor.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param cursor the cursor to close.</color>
<color=#75715e>   * @throws DatabaseException if a database problem occurs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>WeakHashMap</color> <color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>WeakHashMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>localCdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>CdbCursors</color> <color=#f8f8f2>cdbCursors</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>CdbCursors</color><color=#f8f8f2>)</color> <color=#f8f8f2>cdbCursorsMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursors</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>readCursors</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>writeCursors</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
            <color=#66d9ef>return</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Closing CDB cursor that was not known to be open"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if a CDB cursor is open and therefore a Database write operation should not be</color>
<color=#75715e>   * attempted since a self-deadlock may result.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>isCDBCursorOpen</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>WeakHashMap</color> <color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>WeakHashMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>localCdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursorsMap</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>CdbCursors</color> <color=#f8f8f2>cdbCursors</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>CdbCursors</color><color=#f8f8f2>)</color> <color=#f8f8f2>cdbCursorsMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>

          <color=#66d9ef>return</color> <color=#f8f8f2>cdbCursors</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
                  <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>readCursors</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>cdbCursors</color><color=#f8f8f2>.</color><color=#a6e22e>writeCursors</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>CdbCursors</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>List</color> <color=#f8f8f2>writeCursors</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>List</color> <color=#f8f8f2>readCursors</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>