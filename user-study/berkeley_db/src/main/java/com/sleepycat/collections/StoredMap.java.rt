<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.collections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.EntityBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.EntryBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.Database</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.OperationFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.OperationStatus</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.RuntimeExceptionWrapper</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.keyrange.KeyRangeException</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.ConcurrentMap</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A Map view of a {@link Database}.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>In addition to the standard Map methods, this class provides the following methods for stored</color>
<color=#75715e> * maps only. Note that the use of these methods is not compatible with the standard Java</color>
<color=#75715e> * collections interface.</color>
<color=#75715e> *</color>
<color=#75715e> * <ul></color>
<color=#75715e> *   <li>{@link #duplicates}</color>
<color=#75715e> *   <li>{@link #duplicatesMap}</color>
<color=#75715e> *   <li>{@link #append}</color>
<color=#75715e> * </ul></color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>StoredMap</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>StoredContainer</color> <color=#66d9ef>implements</color> <color=#f8f8f2>ConcurrentMap</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>StoredKeySet</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color> <color=#f8f8f2>keySet</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>StoredEntrySet</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>entrySet</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>StoredValueSet</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>valueSet</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a map view of a {@link Database}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param database is the Database underlying the new collection.</color>
<color=#75715e>   * @param keyBinding is the binding used to translate between key buffers and key objects.</color>
<color=#75715e>   * @param valueBinding is the binding used to translate between value buffers and value objects.</color>
<color=#75715e>   * @param writeAllowed is true to create a read-write collection or false to create a read-only</color>
<color=#75715e>   *     collection.</color>
<color=#75715e>   * @throws IllegalArgumentException if formats are not consistently defined or a parameter is</color>
<color=#75715e>   *     invalid.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>StoredMap</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntryBinding</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntryBinding</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>valueBinding</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>DataView</color><color=#f8f8f2>(</color><color=#f8f8f2>database</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>valueBinding</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>initView</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a map view of a {@link Database} with a {@link PrimaryKeyAssigner}. Writing is allowed</color>
<color=#75715e>   * for the created map.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param database is the Database underlying the new collection.</color>
<color=#75715e>   * @param keyBinding is the binding used to translate between key buffers and key objects.</color>
<color=#75715e>   * @param valueBinding is the binding used to translate between value buffers and value objects.</color>
<color=#75715e>   * @param keyAssigner is used by the {@link #append} method to assign primary keys.</color>
<color=#75715e>   * @throws IllegalArgumentException if formats are not consistently defined or a parameter is</color>
<color=#75715e>   *     invalid.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>StoredMap</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntryBinding</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntryBinding</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>valueBinding</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>PrimaryKeyAssigner</color> <color=#f8f8f2>keyAssigner</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>DataView</color><color=#f8f8f2>(</color><color=#f8f8f2>database</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>valueBinding</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyAssigner</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>initView</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a map entity view of a {@link Database}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param database is the Database underlying the new collection.</color>
<color=#75715e>   * @param keyBinding is the binding used to translate between key buffers and key objects.</color>
<color=#75715e>   * @param valueEntityBinding is the binding used to translate between key/value buffers and entity</color>
<color=#75715e>   *     value objects.</color>
<color=#75715e>   * @param writeAllowed is true to create a read-write collection or false to create a read-only</color>
<color=#75715e>   *     collection.</color>
<color=#75715e>   * @throws IllegalArgumentException if formats are not consistently defined or a parameter is</color>
<color=#75715e>   *     invalid.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>StoredMap</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntryBinding</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntityBinding</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>valueEntityBinding</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>DataView</color><color=#f8f8f2>(</color><color=#f8f8f2>database</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>valueEntityBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>writeAllowed</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>initView</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a map entity view of a {@link Database} with a {@link PrimaryKeyAssigner}. Writing is</color>
<color=#75715e>   * allowed for the created map.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param database is the Database underlying the new collection.</color>
<color=#75715e>   * @param keyBinding is the binding used to translate between key buffers and key objects.</color>
<color=#75715e>   * @param valueEntityBinding is the binding used to translate between key/value buffers and entity</color>
<color=#75715e>   *     value objects.</color>
<color=#75715e>   * @param keyAssigner is used by the {@link #append} method to assign primary keys.</color>
<color=#75715e>   * @throws IllegalArgumentException if formats are not consistently defined or a parameter is</color>
<color=#75715e>   *     invalid.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>StoredMap</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntryBinding</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntityBinding</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>valueEntityBinding</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>PrimaryKeyAssigner</color> <color=#f8f8f2>keyAssigner</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>DataView</color><color=#f8f8f2>(</color><color=#f8f8f2>database</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>valueEntityBinding</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyAssigner</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>initView</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>StoredMap</color><color=#f8f8f2>(</color><color=#f8f8f2>DataView</color> <color=#f8f8f2>view</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>initView</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Override this method to initialize view-dependent fields. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>initAfterClone</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>initView</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The keySet, entrySet and valueSet are created during Map construction rather than lazily when</color>
<color=#75715e>   * requested (as done with the java.util.Map implementations). This is done to avoid</color>
<color=#75715e>   * synchronization every time they are requested. Since they are requested often but a StoredMap</color>
<color=#75715e>   * is created infrequently, this gives the best performance. The additional views are small</color>
<color=#75715e>   * objects and are cheap to construct.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>initView</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* entrySet */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>areKeyRangesAllowed</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>entrySet</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredSortedEntrySet</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>entrySet</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredEntrySet</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* keySet */</color>
    <color=#f8f8f2>DataView</color> <color=#f8f8f2>newView</color> <color=#f92672>=</color> <color=#f8f8f2>view</color><color=#f8f8f2>.</color><color=#a6e22e>keySetView</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>areKeyRangesAllowed</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>keySet</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredSortedKeySet</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>newView</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>keySet</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredKeySet</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>newView</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* valueSet */</color>
    <color=#f8f8f2>newView</color> <color=#f92672>=</color> <color=#f8f8f2>view</color><color=#f8f8f2>.</color><color=#a6e22e>valueSetView</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>areKeyRangesAllowed</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>newView</color><color=#f8f8f2>.</color><color=#a6e22e>canDeriveKeyFromValue</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>valueSet</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredSortedValueSet</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>newView</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>valueSet</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredValueSet</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>newView</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the value to which this map maps the specified key. If duplicates are allowed, this</color>
<color=#75715e>   * method returns the first duplicate, in the order in which duplicates are configured, that maps</color>
<color=#75715e>   * to the specified key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method conforms to the {@link Map#get} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>V</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>V</color><color=#f8f8f2>)</color> <color=#f8f8f2>getValue</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Associates the specified value with the specified key in this map (optional operation). If</color>
<color=#75715e>   * duplicates are allowed and the specified key is already mapped to a value, this method appends</color>
<color=#75715e>   * the new duplicate after the existing duplicates. This method conforms to the {@link Map#put}</color>
<color=#75715e>   * interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The key parameter may be null if an entity binding is used and the key will be derived from</color>
<color=#75715e>   * the value (entity) parameter. If an entity binding is used and the key parameter is non-null,</color>
<color=#75715e>   * then the key parameter must be equal to the key derived from the value parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the previous value associated with specified key, or null if there was no mapping for</color>
<color=#75715e>   *     the key or if duplicates are allowed.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws UnsupportedOperationException if the collection is indexed, or if the collection is</color>
<color=#75715e>   *     read-only.</color>
<color=#75715e>   * @throws IllegalArgumentException if an entity value binding is used and the primary key of the</color>
<color=#75715e>   *     value given is different than the existing stored primary key.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>V</color> <color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>K</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>V</color><color=#f8f8f2>)</color> <color=#f8f8f2>putKeyValue</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Appends a given value returning the newly assigned key. If a {@link PrimaryKeyAssigner} is</color>
<color=#75715e>   * associated with Store for this map, it will be used to assigned the returned key. Otherwise the</color>
<color=#75715e>   * Store must be a QUEUE or RECNO database and the next available record number is assigned as the</color>
<color=#75715e>   * key. This method does not exist in the standard {@link Map} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that for the JE product, QUEUE and RECNO databases are not supported, and therefore a</color>
<color=#75715e>   * PrimaryKeyAssigner must be associated with the map in order to call this method.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param value the value to be appended.</color>
<color=#75715e>   * @return the assigned key.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws UnsupportedOperationException if the collection is indexed, or if the collection is</color>
<color=#75715e>   *     read-only, or if the Store has no {@link PrimaryKeyAssigner} and is not a QUEUE or RECNO</color>
<color=#75715e>   *     database.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>K</color> <color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>V</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Object</color><color=#f92672>[]</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Object</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>view</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>K</color><color=#f8f8f2>)</color> <color=#f8f8f2>key</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes the mapping for this key from this map if present (optional operation). If duplicates</color>
<color=#75715e>   * are allowed, this method removes all duplicates for the given key. This method conforms to the</color>
<color=#75715e>   * {@link Map#remove} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws UnsupportedOperationException if the collection is read-only.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>V</color> <color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Object</color><color=#f92672>[]</color> <color=#f8f8f2>oldVal</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Object</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>removeKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldVal</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>V</color><color=#f8f8f2>)</color> <color=#f8f8f2>oldVal</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If the specified key is not already associated with a value, associate it with the given value.</color>
<color=#75715e>   * This method conforms to the {@link ConcurrentMap#putIfAbsent} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>V</color> <color=#a6e22e>putIfAbsent</color><color=#f8f8f2>(</color><color=#f8f8f2>K</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>V</color> <color=#f8f8f2>oldValue</color><color=#f8f8f2>;</color>
      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putNoOverwrite</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*useCurrentKey*/</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* We inserted the key.  Return null.  */</color>
          <color=#f8f8f2>oldValue</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#66d9ef>break</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color> <color=#75715e>/*value*/</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*lockForWrite*/</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* The key is present. Return the current value. */</color>
            <color=#f8f8f2>oldValue</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>V</color><color=#f8f8f2>)</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentValue</color><color=#f8f8f2>();</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

            <color=#75715e>/*</color>
<color=#75715e>             * If Serializable isolation is not configured, another</color>
<color=#75715e>             * thread can delete the record after our attempt to</color>
<color=#75715e>             * insert it failed above.  Loop back and try again.</color>
<color=#75715e>             */</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>oldValue</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Remove entry for key only if currently mapped to given value. This method conforms to the</color>
<color=#75715e>   * {@link ConcurrentMap#remove(Object,Object)} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>(</color><color=#66d9ef>true</color> <color=#75715e>/*lockForWrite*/</color><color=#f8f8f2>);</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>removed</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color> <color=#f92672>&&</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentValue</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>removed</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>removed</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>removed</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Replace entry for key only if currently mapped to some value. This method conforms to the</color>
<color=#75715e>   * {@link ConcurrentMap#replace(Object,Object)} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>V</color> <color=#a6e22e>replace</color><color=#f8f8f2>(</color><color=#f8f8f2>K</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>(</color><color=#66d9ef>true</color> <color=#75715e>/*lockForWrite*/</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>V</color> <color=#f8f8f2>oldValue</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>oldValue</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>V</color><color=#f8f8f2>)</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentValue</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>oldValue</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>oldValue</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Replace entry for key only if currently mapped to given value. This method conforms to the</color>
<color=#75715e>   * {@link ConcurrentMap#replace(Object,Object,Object)} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>replace</color><color=#f8f8f2>(</color><color=#f8f8f2>K</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color> <color=#f8f8f2>oldValue</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color> <color=#f8f8f2>newValue</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DataCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>view</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>(</color><color=#66d9ef>true</color> <color=#75715e>/*lockForWrite*/</color><color=#f8f8f2>);</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>replaced</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color> <color=#f92672>&&</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentValue</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>oldValue</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>newValue</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>replaced</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>replaced</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>replaced</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>closeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if this map contains the specified key. This method conforms to the {@link</color>
<color=#75715e>   * Map#containsKey} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if this map contains the specified value. When an entity binding is used, this</color>
<color=#75715e>   * method returns whether the map contains the primary key and value mapping of the entity. This</color>
<color=#75715e>   * method conforms to the {@link Map#containsValue} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>containsValue</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>containsValue</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Copies all of the mappings from the specified map to this map (optional operation). When</color>
<color=#75715e>   * duplicates are allowed, the mappings in the specified map are effectively appended to the</color>
<color=#75715e>   * existing mappings in this map, that is no previously existing mappings in this map are</color>
<color=#75715e>   * replaced. This method conforms to the {@link Map#putAll} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws UnsupportedOperationException if the collection is read-only, or if the collection is</color>
<color=#75715e>   *     indexed.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>putAll</color><color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f92672><?</color> <color=#66d9ef>extends</color> <color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f92672>?</color> <color=#66d9ef>extends</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>map</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>boolean</color> <color=#f8f8f2>doAutoCommit</color> <color=#f92672>=</color> <color=#f8f8f2>beginAutoCommit</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Iterator</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Collection</color> <color=#f8f8f2>coll</color> <color=#f92672>=</color> <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>storedOrExternalIterator</color><color=#f8f8f2>(</color><color=#f8f8f2>coll</color><color=#f8f8f2>);</color>
      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Entry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>putKeyValue</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>(),</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>StoredIterator</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitAutoCommit</color><color=#f8f8f2>(</color><color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>StoredIterator</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>handleException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#f8f8f2>doAutoCommit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a set view of the keys contained in this map. A {@link java.util.SortedSet} is returned</color>
<color=#75715e>   * if the map supports key ranges. The returned collection will be read-only if the map is</color>
<color=#75715e>   * read-only. This method conforms to the {@link Map#keySet()} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the return value is a StoredCollection and must be treated as such; for example,</color>
<color=#75715e>   * its iterators must be explicitly closed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return a {@link StoredKeySet} or a {@link StoredSortedKeySet} for this map.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   * @see #areKeyRangesAllowed</color>
<color=#75715e>   * @see #isWriteAllowed</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f92672>></color> <color=#a6e22e>keySet</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>keySet</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a set view of the mappings contained in this map. A {@link java.util.SortedSet} is</color>
<color=#75715e>   * returned if the map supports key ranges. The returned collection will be read-only if the map</color>
<color=#75715e>   * is read-only. This method conforms to the {@link Map#entrySet()} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the return value is a StoredCollection and must be treated as such; for example,</color>
<color=#75715e>   * its iterators must be explicitly closed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return a {@link StoredEntrySet} or a {@link StoredSortedEntrySet} for this map.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   * @see #areKeyRangesAllowed</color>
<color=#75715e>   * @see #isWriteAllowed</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Entry</color><color=#f92672><</color><color=#f8f8f2>K</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>>></color> <color=#a6e22e>entrySet</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>entrySet</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a collection view of the values contained in this map. A {@link java.util.SortedSet} is</color>
<color=#75715e>   * returned if the map supports key ranges and the value/entity binding can be used to derive the</color>
<color=#75715e>   * map's key from its value/entity object. The returned collection will be read-only if the map is</color>
<color=#75715e>   * read-only. This method conforms to the {@link Map#values()} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the return value is a StoredCollection and must be treated as such; for example,</color>
<color=#75715e>   * its iterators must be explicitly closed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return a {@link StoredValueSet} or a {@link StoredSortedValueSet} for this map.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   * @see #areKeyRangesAllowed</color>
<color=#75715e>   * @see #isWriteAllowed</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>values</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>valueSet</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a new collection containing the values mapped to the given key in this map. This</color>
<color=#75715e>   * collection's iterator() method is particularly useful for iterating over the duplicates for a</color>
<color=#75715e>   * given key, since this is not supported by the standard Map interface. This method does not</color>
<color=#75715e>   * exist in the standard {@link Map} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If no mapping for the given key is present, an empty collection is returned. If duplicates</color>
<color=#75715e>   * are not allowed, at most a single value will be in the collection returned. If duplicates are</color>
<color=#75715e>   * allowed, the returned collection's add() method may be used to add values for the given key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param key is the key for which values are to be returned.</color>
<color=#75715e>   * @return the new collection.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>duplicates</color><color=#f8f8f2>(</color><color=#f8f8f2>K</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DataView</color> <color=#f8f8f2>newView</color> <color=#f92672>=</color> <color=#f8f8f2>view</color><color=#f8f8f2>.</color><color=#a6e22e>valueSetView</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredValueSet</color><color=#f8f8f2>(</color><color=#f8f8f2>newView</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>KeyRangeException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>EMPTY_SET</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a new map from primary key to value for the subset of records having a given secondary</color>
<color=#75715e>   * key (duplicates). This method does not exist in the standard {@link Map} interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If no mapping for the given key is present, an empty collection is returned. If duplicates</color>
<color=#75715e>   * are not allowed, at most a single value will be in the collection returned. If duplicates are</color>
<color=#75715e>   * allowed, the returned collection's add() method may be used to add values for the given key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param secondaryKey is the secondary key for which duplicates values will be represented by the</color>
<color=#75715e>   *     returned map.</color>
<color=#75715e>   * @param primaryKeyBinding is the binding used for keys in the returned map.</color>
<color=#75715e>   * @param <PK> the primary key class.</color>
<color=#75715e>   * @return the new map.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f92672><</color><color=#f8f8f2>PK</color><color=#f92672>></color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>duplicatesMap</color><color=#f8f8f2>(</color><color=#f8f8f2>K</color> <color=#f8f8f2>secondaryKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>EntryBinding</color> <color=#f8f8f2>primaryKeyBinding</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DataView</color> <color=#f8f8f2>newView</color> <color=#f92672>=</color> <color=#f8f8f2>view</color><color=#f8f8f2>.</color><color=#a6e22e>duplicatesView</color><color=#f8f8f2>(</color><color=#f8f8f2>secondaryKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>primaryKeyBinding</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isOrdered</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredSortedMap</color><color=#f8f8f2>(</color><color=#f8f8f2>newView</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>StoredMap</color><color=#f8f8f2>(</color><color=#f8f8f2>newView</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>StoredContainer</color><color=#f8f8f2>.</color><color=#a6e22e>convertException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Compares the specified object with this map for equality. A value comparison is performed by</color>
<color=#75715e>   * this method and the stored values are compared rather than calling the equals() method of each</color>
<color=#75715e>   * element. This method conforms to the {@link Map#equals} interface.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>other</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Map</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>entrySet</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(((</color><color=#f8f8f2>Map</color><color=#f8f8f2>)</color> <color=#f8f8f2>other</color><color=#f8f8f2>).</color><color=#a6e22e>entrySet</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Add this in to keep FindBugs from whining at us about implementing</color>
<color=#75715e>   * equals(), but not hashCode().</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// Inherit javadoc</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>values</color><color=#f8f8f2>().</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts the map to a string representation for debugging. WARNING: All mappings will be</color>
<color=#75715e>   * converted to strings and returned and therefore the returned string may be very large.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the string representation.</color>
<color=#75715e>   * @throws RuntimeExceptionWrapper if a checked exception is thrown, including a {@code</color>
<color=#75715e>   *     DatabaseException} on BDB (C edition).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>entrySet</color><color=#f8f8f2>().</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>