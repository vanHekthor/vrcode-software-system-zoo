<color=#75715e>/***</color>
<color=#75715e> * ASM: a very small and fast Java bytecode manipulation framework</color>
<color=#75715e> * Copyright (c) 2000-2011 INRIA, France Telecom</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions</color>
<color=#75715e> * are met:</color>
<color=#75715e> * 1. Redistributions of source code must retain the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer.</color>
<color=#75715e> * 2. Redistributions in binary form must reproduce the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer in the</color>
<color=#75715e> *    documentation and/or other materials provided with the distribution.</color>
<color=#75715e> * 3. Neither the name of the copyright holders nor the names of its</color>
<color=#75715e> *    contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *    this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</color>
<color=#75715e> * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE</color>
<color=#75715e> * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</color>
<color=#75715e> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</color>
<color=#75715e> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</color>
<color=#75715e> * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</color>
<color=#75715e> * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</color>
<color=#75715e> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF</color>
<color=#75715e> * THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.asm</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An {@link FieldVisitor} that generates Java fields in bytecode form.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Eric Bruneton</color>
<color=#75715e> */</color>
<color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>FieldWriter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>FieldVisitor</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** The class writer to which this field must be added. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ClassWriter</color> <color=#f8f8f2>cw</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Access flags of this field. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>access</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The index of the constant pool item that contains the name of this method. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The index of the constant pool item that contains the descriptor of this field. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>desc</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The index of the constant pool item that contains the signature of this field. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>signature</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The index of the constant pool item that contains the constant value of this field. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The runtime visible annotations of this field. May be <tt>null</tt>. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>AnnotationWriter</color> <color=#f8f8f2>anns</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The runtime invisible annotations of this field. May be <tt>null</tt>. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>AnnotationWriter</color> <color=#f8f8f2>ianns</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The runtime visible type annotations of this field. May be <tt>null</tt>. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>AnnotationWriter</color> <color=#f8f8f2>tanns</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The runtime invisible type annotations of this field. May be <tt>null</tt>. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>AnnotationWriter</color> <color=#f8f8f2>itanns</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The non standard attributes of this field. May be <tt>null</tt>. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Attribute</color> <color=#f8f8f2>attrs</color><color=#f8f8f2>;</color>

  <color=#75715e>// ------------------------------------------------------------------------</color>
  <color=#75715e>// Constructor</color>
  <color=#75715e>// ------------------------------------------------------------------------</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Constructs a new {@link FieldWriter}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param cw the class writer to which this field must be added.</color>
<color=#75715e>   * @param access the field's access flags (see {@link Opcodes}).</color>
<color=#75715e>   * @param name the field's name.</color>
<color=#75715e>   * @param desc the field's descriptor (see {@link Type}).</color>
<color=#75715e>   * @param signature the field's signature. May be <tt>null</tt>.</color>
<color=#75715e>   * @param value the field's constant value. May be <tt>null</tt>.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>FieldWriter</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>ClassWriter</color> <color=#f8f8f2>cw</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>access</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>desc</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>signature</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ASM5</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>firstField</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>firstField</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>lastField</color><color=#f8f8f2>.</color><color=#a6e22e>fv</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>lastField</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cw</color> <color=#f92672>=</color> <color=#f8f8f2>cw</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>access</color> <color=#f92672>=</color> <color=#f8f8f2>access</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>name</color> <color=#f92672>=</color> <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>desc</color> <color=#f92672>=</color> <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#f8f8f2>desc</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>SIGNATURES</color> <color=#f92672>&&</color> <color=#f8f8f2>signature</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>signature</color> <color=#f92672>=</color> <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#f8f8f2>signature</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>value</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>value</color> <color=#f92672>=</color> <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newConstItem</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>).</color><color=#a6e22e>index</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>// ------------------------------------------------------------------------</color>
  <color=#75715e>// Implementation of the FieldVisitor abstract class</color>
  <color=#75715e>// ------------------------------------------------------------------------</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>AnnotationVisitor</color> <color=#a6e22e>visitAnnotation</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>desc</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>visible</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>ByteVector</color> <color=#f8f8f2>bv</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ByteVector</color><color=#f8f8f2>();</color>
    <color=#75715e>// write type, and reserve space for values count</color>
    <color=#f8f8f2>bv</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#f8f8f2>desc</color><color=#f8f8f2>)).</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>AnnotationWriter</color> <color=#f8f8f2>aw</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>AnnotationWriter</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>bv</color><color=#f8f8f2>,</color> <color=#f8f8f2>bv</color><color=#f8f8f2>,</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>visible</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>aw</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>anns</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>anns</color> <color=#f92672>=</color> <color=#f8f8f2>aw</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>aw</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>ianns</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>ianns</color> <color=#f92672>=</color> <color=#f8f8f2>aw</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>aw</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>AnnotationVisitor</color> <color=#a6e22e>visitTypeAnnotation</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>typeRef</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>TypePath</color> <color=#f8f8f2>typePath</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>desc</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>visible</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>ByteVector</color> <color=#f8f8f2>bv</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ByteVector</color><color=#f8f8f2>();</color>
    <color=#75715e>// write target_type and target_info</color>
    <color=#f8f8f2>AnnotationWriter</color><color=#f8f8f2>.</color><color=#a6e22e>putTarget</color><color=#f8f8f2>(</color><color=#f8f8f2>typeRef</color><color=#f8f8f2>,</color> <color=#f8f8f2>typePath</color><color=#f8f8f2>,</color> <color=#f8f8f2>bv</color><color=#f8f8f2>);</color>
    <color=#75715e>// write type, and reserve space for values count</color>
    <color=#f8f8f2>bv</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#f8f8f2>desc</color><color=#f8f8f2>)).</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>AnnotationWriter</color> <color=#f8f8f2>aw</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>AnnotationWriter</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>bv</color><color=#f8f8f2>,</color> <color=#f8f8f2>bv</color><color=#f8f8f2>,</color> <color=#f8f8f2>bv</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>visible</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>aw</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>tanns</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>tanns</color> <color=#f92672>=</color> <color=#f8f8f2>aw</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>aw</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>itanns</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>itanns</color> <color=#f92672>=</color> <color=#f8f8f2>aw</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>aw</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>visitAttribute</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Attribute</color> <color=#f8f8f2>attr</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>attr</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>attrs</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>attrs</color> <color=#f92672>=</color> <color=#f8f8f2>attr</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>visitEnd</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#75715e>// ------------------------------------------------------------------------</color>
  <color=#75715e>// Utility methods</color>
  <color=#75715e>// ------------------------------------------------------------------------</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the size of this field.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the size of this field.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>getSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>value</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"ConstantValue"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>version</color> <color=#f92672>&</color> <color=#ae81ff>0xFFFF</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>V1_5</color>
          <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>ClassWriter</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC_ATTRIBUTE</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"Synthetic"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>6</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_DEPRECATED</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"Deprecated"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>6</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>SIGNATURES</color> <color=#f92672>&&</color> <color=#f8f8f2>signature</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"Signature"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>anns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeVisibleAnnotations"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>8</color> <color=#f92672>+</color> <color=#f8f8f2>anns</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>ianns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeInvisibleAnnotations"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>8</color> <color=#f92672>+</color> <color=#f8f8f2>ianns</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>tanns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeVisibleTypeAnnotations"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>8</color> <color=#f92672>+</color> <color=#f8f8f2>tanns</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>itanns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeInvisibleTypeAnnotations"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>8</color> <color=#f92672>+</color> <color=#f8f8f2>itanns</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>attrs</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>attrs</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Puts the content of this field into the given byte vector.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param out where the content of this field must be put.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ByteVector</color> <color=#f8f8f2>out</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>FACTOR</color> <color=#f92672>=</color> <color=#f8f8f2>ClassWriter</color><color=#f8f8f2>.</color><color=#a6e22e>TO_ACC_SYNTHETIC</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>mask</color> <color=#f92672>=</color>
        <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_DEPRECATED</color>
            <color=#f92672>|</color> <color=#f8f8f2>ClassWriter</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC_ATTRIBUTE</color>
            <color=#f92672>|</color> <color=#f8f8f2>((</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>ClassWriter</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC_ATTRIBUTE</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>FACTOR</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f92672>~</color><color=#f8f8f2>mask</color><color=#f8f8f2>).</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>).</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>desc</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>attributeCount</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>value</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>version</color> <color=#f92672>&</color> <color=#ae81ff>0xFFFF</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>V1_5</color>
          <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>ClassWriter</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC_ATTRIBUTE</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_DEPRECATED</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>SIGNATURES</color> <color=#f92672>&&</color> <color=#f8f8f2>signature</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>anns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>ianns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>tanns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>itanns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f92672>++</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>attrs</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>attributeCount</color> <color=#f92672>+=</color> <color=#f8f8f2>attrs</color><color=#f8f8f2>.</color><color=#a6e22e>getCount</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>attributeCount</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>value</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"ConstantValue"</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putInt</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>).</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>version</color> <color=#f92672>&</color> <color=#ae81ff>0xFFFF</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>V1_5</color>
          <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>ClassWriter</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_SYNTHETIC_ATTRIBUTE</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"Synthetic"</color><color=#f8f8f2>)).</color><color=#a6e22e>putInt</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>access</color> <color=#f92672>&</color> <color=#f8f8f2>Opcodes</color><color=#f8f8f2>.</color><color=#a6e22e>ACC_DEPRECATED</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"Deprecated"</color><color=#f8f8f2>)).</color><color=#a6e22e>putInt</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>SIGNATURES</color> <color=#f92672>&&</color> <color=#f8f8f2>signature</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"Signature"</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putInt</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>).</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>signature</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>anns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeVisibleAnnotations"</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>anns</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>out</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>ianns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeInvisibleAnnotations"</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>ianns</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>out</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>tanns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeVisibleTypeAnnotations"</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>tanns</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>out</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassReader</color><color=#f8f8f2>.</color><color=#a6e22e>ANNOTATIONS</color> <color=#f92672>&&</color> <color=#f8f8f2>itanns</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>putShort</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>.</color><color=#a6e22e>newUTF8</color><color=#f8f8f2>(</color><color=#e6db74>"RuntimeInvisibleTypeAnnotations"</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>itanns</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>out</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>attrs</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>attrs</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>cw</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>out</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>