<color=#75715e>/***</color>
<color=#75715e> * ASM: a very small and fast Java bytecode manipulation framework</color>
<color=#75715e> * Copyright (c) 2000-2011 INRIA, France Telecom</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions</color>
<color=#75715e> * are met:</color>
<color=#75715e> * 1. Redistributions of source code must retain the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer.</color>
<color=#75715e> * 2. Redistributions in binary form must reproduce the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer in the</color>
<color=#75715e> *    documentation and/or other materials provided with the distribution.</color>
<color=#75715e> * 3. Neither the name of the copyright holders nor the names of its</color>
<color=#75715e> *    contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *    this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</color>
<color=#75715e> * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE</color>
<color=#75715e> * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</color>
<color=#75715e> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</color>
<color=#75715e> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</color>
<color=#75715e> * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</color>
<color=#75715e> * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</color>
<color=#75715e> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF</color>
<color=#75715e> * THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.asm</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An edge in the control flow graph of a method body. See {@link Label Label}.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Eric Bruneton</color>
<color=#75715e> */</color>
<color=#66d9ef>class</color> <color=#a6e22e>Edge</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** Denotes a normal control flow graph edge. */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>NORMAL</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Denotes a control flow graph edge corresponding to an exception handler. More precisely any</color>
<color=#75715e>   * {@link Edge} whose {@link #info} is strictly positive corresponds to an exception handler. The</color>
<color=#75715e>   * actual value of {@link #info} is the index, in the {@link ClassWriter} type table, of the</color>
<color=#75715e>   * exception that is catched.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>EXCEPTION</color> <color=#f92672>=</color> <color=#ae81ff>0x7FFFFFFF</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Information about this control flow graph edge. If {@link ClassWriter#COMPUTE_MAXS} is used</color>
<color=#75715e>   * this field is the (relative) stack size in the basic block from which this edge originates.</color>
<color=#75715e>   * This size is equal to the stack size at the "jump" instruction to which this edge corresponds,</color>
<color=#75715e>   * relatively to the stack size at the beginning of the originating basic block. If {@link</color>
<color=#75715e>   * ClassWriter#COMPUTE_FRAMES} is used, this field is the kind of this control flow graph edge</color>
<color=#75715e>   * (i.e. NORMAL or EXCEPTION).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>info</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The successor block of the basic block from which this edge originates. */</color>
  <color=#f8f8f2>Label</color> <color=#f8f8f2>successor</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The next edge in the list of successors of the originating basic block. See {@link</color>
<color=#75715e>   * Label#successors successors}.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Edge</color> <color=#f8f8f2>next</color><color=#f8f8f2>;</color>
<color=#f8f8f2>}</color>