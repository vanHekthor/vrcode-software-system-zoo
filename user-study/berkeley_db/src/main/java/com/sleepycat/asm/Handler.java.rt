<color=#75715e>/***</color>
<color=#75715e> * ASM: a very small and fast Java bytecode manipulation framework</color>
<color=#75715e> * Copyright (c) 2000-2011 INRIA, France Telecom</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions</color>
<color=#75715e> * are met:</color>
<color=#75715e> * 1. Redistributions of source code must retain the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer.</color>
<color=#75715e> * 2. Redistributions in binary form must reproduce the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer in the</color>
<color=#75715e> *    documentation and/or other materials provided with the distribution.</color>
<color=#75715e> * 3. Neither the name of the copyright holders nor the names of its</color>
<color=#75715e> *    contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *    this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</color>
<color=#75715e> * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE</color>
<color=#75715e> * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</color>
<color=#75715e> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</color>
<color=#75715e> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</color>
<color=#75715e> * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</color>
<color=#75715e> * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</color>
<color=#75715e> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF</color>
<color=#75715e> * THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.asm</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Information about an exception handler block.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Eric Bruneton</color>
<color=#75715e> */</color>
<color=#66d9ef>class</color> <color=#a6e22e>Handler</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** Beginning of the exception handler's scope (inclusive). */</color>
  <color=#f8f8f2>Label</color> <color=#f8f8f2>start</color><color=#f8f8f2>;</color>

  <color=#75715e>/** End of the exception handler's scope (exclusive). */</color>
  <color=#f8f8f2>Label</color> <color=#f8f8f2>end</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Beginning of the exception handler's code. */</color>
  <color=#f8f8f2>Label</color> <color=#f8f8f2>handler</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Internal name of the type of exceptions handled by this handler, or <tt>null</tt> to catch any</color>
<color=#75715e>   * exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>String</color> <color=#f8f8f2>desc</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Constant pool index of the internal name of the type of exceptions handled by this handler, or</color>
<color=#75715e>   * 0 to catch any exceptions.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Next exception handler block info. */</color>
  <color=#f8f8f2>Handler</color> <color=#f8f8f2>next</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes the range between start and end from the given exception handlers.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param h an exception handler list.</color>
<color=#75715e>   * @param start the start of the range to be removed.</color>
<color=#75715e>   * @param end the end of the range to be removed. Maybe null.</color>
<color=#75715e>   * @return the exception handler list with the start-end range removed.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>Handler</color> <color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>Handler</color> <color=#f8f8f2>h</color><color=#f8f8f2>,</color> <color=#f8f8f2>Label</color> <color=#f8f8f2>start</color><color=#f8f8f2>,</color> <color=#f8f8f2>Label</color> <color=#f8f8f2>end</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>h</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>,</color> <color=#f8f8f2>start</color><color=#f8f8f2>,</color> <color=#f8f8f2>end</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>hstart</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>start</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>hend</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>end</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#f8f8f2>start</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>e</color> <color=#f92672>=</color> <color=#f8f8f2>end</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color> <color=#f8f8f2>:</color> <color=#f8f8f2>end</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>;</color>
    <color=#75715e>// if [hstart,hend[ and [s,e[ intervals intersect...</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>s</color> <color=#f92672><</color> <color=#f8f8f2>hend</color> <color=#f92672>&&</color> <color=#f8f8f2>e</color> <color=#f92672>></color> <color=#f8f8f2>hstart</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>s</color> <color=#f92672><=</color> <color=#f8f8f2>hstart</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>e</color> <color=#f92672>>=</color> <color=#f8f8f2>hend</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#75715e>// [hstart,hend[ fully included in [s,e[, h removed</color>
          <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#75715e>// [hstart,hend[ minus [s,e[ = [e,hend[</color>
          <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>start</color> <color=#f92672>=</color> <color=#f8f8f2>end</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>e</color> <color=#f92672>>=</color> <color=#f8f8f2>hend</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// [hstart,hend[ minus [s,e[ = [hstart,s[</color>
        <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>end</color> <color=#f92672>=</color> <color=#f8f8f2>start</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#75715e>// [hstart,hend[ minus [s,e[ = [hstart,s[ + [e,hend[</color>
        <color=#f8f8f2>Handler</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Handler</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>start</color> <color=#f92672>=</color> <color=#f8f8f2>end</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>end</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>end</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>handler</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>handler</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>desc</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>desc</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>type</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>type</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>end</color> <color=#f92672>=</color> <color=#f8f8f2>start</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>next</color> <color=#f92672>=</color> <color=#f8f8f2>g</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>h</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>