<color=#75715e>/***</color>
<color=#75715e> * ASM: a very small and fast Java bytecode manipulation framework</color>
<color=#75715e> * Copyright (c) 2000-2011 INRIA, France Telecom</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions</color>
<color=#75715e> * are met:</color>
<color=#75715e> * 1. Redistributions of source code must retain the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer.</color>
<color=#75715e> * 2. Redistributions in binary form must reproduce the above copyright</color>
<color=#75715e> *    notice, this list of conditions and the following disclaimer in the</color>
<color=#75715e> *    documentation and/or other materials provided with the distribution.</color>
<color=#75715e> * 3. Neither the name of the copyright holders nor the names of its</color>
<color=#75715e> *    contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *    this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</color>
<color=#75715e> * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE</color>
<color=#75715e> * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</color>
<color=#75715e> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</color>
<color=#75715e> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</color>
<color=#75715e> * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</color>
<color=#75715e> * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</color>
<color=#75715e> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF</color>
<color=#75715e> * THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.asm</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Defines the JVM opcodes, access flags and array type codes. This interface does not define all</color>
<color=#75715e> * the JVM opcodes because some opcodes are automatically handled. For example, the xLOAD and xSTORE</color>
<color=#75715e> * opcodes are automatically replaced by xLOAD_n and xSTORE_n opcodes when possible. The xLOAD_n and</color>
<color=#75715e> * xSTORE_n opcodes are therefore not defined in this interface. Likewise for LDC, automatically</color>
<color=#75715e> * replaced by LDC_W or LDC2_W when necessary, WIDE, GOTO_W and JSR_W.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Eric Bruneton</color>
<color=#75715e> * @author Eugene Kuleshov</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>Opcodes</color> <color=#f8f8f2>{</color>

  <color=#75715e>// ASM API versions</color>

  <color=#66d9ef>int</color> <color=#f8f8f2>ASM4</color> <color=#f92672>=</color> <color=#ae81ff>4</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>8</color> <color=#f92672>|</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ASM5</color> <color=#f92672>=</color> <color=#ae81ff>5</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>8</color> <color=#f92672>|</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#75715e>// versions</color>

  <color=#66d9ef>int</color> <color=#f8f8f2>V1_1</color> <color=#f92672>=</color> <color=#ae81ff>3</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>45</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>V1_2</color> <color=#f92672>=</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>46</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>V1_3</color> <color=#f92672>=</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>47</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>V1_4</color> <color=#f92672>=</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>48</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>V1_5</color> <color=#f92672>=</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>49</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>V1_6</color> <color=#f92672>=</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>50</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>V1_7</color> <color=#f92672>=</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>51</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>V1_8</color> <color=#f92672>=</color> <color=#ae81ff>0</color> <color=#f92672><<</color> <color=#ae81ff>16</color> <color=#f92672>|</color> <color=#ae81ff>52</color><color=#f8f8f2>;</color>

  <color=#75715e>// access flags</color>

  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_PUBLIC</color> <color=#f92672>=</color> <color=#ae81ff>0x0001</color><color=#f8f8f2>;</color> <color=#75715e>// class, field, method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_PRIVATE</color> <color=#f92672>=</color> <color=#ae81ff>0x0002</color><color=#f8f8f2>;</color> <color=#75715e>// class, field, method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_PROTECTED</color> <color=#f92672>=</color> <color=#ae81ff>0x0004</color><color=#f8f8f2>;</color> <color=#75715e>// class, field, method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_STATIC</color> <color=#f92672>=</color> <color=#ae81ff>0x0008</color><color=#f8f8f2>;</color> <color=#75715e>// field, method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_FINAL</color> <color=#f92672>=</color> <color=#ae81ff>0x0010</color><color=#f8f8f2>;</color> <color=#75715e>// class, field, method, parameter</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_SUPER</color> <color=#f92672>=</color> <color=#ae81ff>0x0020</color><color=#f8f8f2>;</color> <color=#75715e>// class</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_SYNCHRONIZED</color> <color=#f92672>=</color> <color=#ae81ff>0x0020</color><color=#f8f8f2>;</color> <color=#75715e>// method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_VOLATILE</color> <color=#f92672>=</color> <color=#ae81ff>0x0040</color><color=#f8f8f2>;</color> <color=#75715e>// field</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_BRIDGE</color> <color=#f92672>=</color> <color=#ae81ff>0x0040</color><color=#f8f8f2>;</color> <color=#75715e>// method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_VARARGS</color> <color=#f92672>=</color> <color=#ae81ff>0x0080</color><color=#f8f8f2>;</color> <color=#75715e>// method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_TRANSIENT</color> <color=#f92672>=</color> <color=#ae81ff>0x0080</color><color=#f8f8f2>;</color> <color=#75715e>// field</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_NATIVE</color> <color=#f92672>=</color> <color=#ae81ff>0x0100</color><color=#f8f8f2>;</color> <color=#75715e>// method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_INTERFACE</color> <color=#f92672>=</color> <color=#ae81ff>0x0200</color><color=#f8f8f2>;</color> <color=#75715e>// class</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_ABSTRACT</color> <color=#f92672>=</color> <color=#ae81ff>0x0400</color><color=#f8f8f2>;</color> <color=#75715e>// class, method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_STRICT</color> <color=#f92672>=</color> <color=#ae81ff>0x0800</color><color=#f8f8f2>;</color> <color=#75715e>// method</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_SYNTHETIC</color> <color=#f92672>=</color> <color=#ae81ff>0x1000</color><color=#f8f8f2>;</color> <color=#75715e>// class, field, method, parameter</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_ANNOTATION</color> <color=#f92672>=</color> <color=#ae81ff>0x2000</color><color=#f8f8f2>;</color> <color=#75715e>// class</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_ENUM</color> <color=#f92672>=</color> <color=#ae81ff>0x4000</color><color=#f8f8f2>;</color> <color=#75715e>// class(?) field inner</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_MANDATED</color> <color=#f92672>=</color> <color=#ae81ff>0x8000</color><color=#f8f8f2>;</color> <color=#75715e>// parameter</color>

  <color=#75715e>// ASM specific pseudo access flags</color>

  <color=#66d9ef>int</color> <color=#f8f8f2>ACC_DEPRECATED</color> <color=#f92672>=</color> <color=#ae81ff>0x20000</color><color=#f8f8f2>;</color> <color=#75715e>// class, field, method</color>

  <color=#75715e>// types for NEWARRAY</color>

  <color=#66d9ef>int</color> <color=#f8f8f2>T_BOOLEAN</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>T_CHAR</color> <color=#f92672>=</color> <color=#ae81ff>5</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>T_FLOAT</color> <color=#f92672>=</color> <color=#ae81ff>6</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>T_DOUBLE</color> <color=#f92672>=</color> <color=#ae81ff>7</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>T_BYTE</color> <color=#f92672>=</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>T_SHORT</color> <color=#f92672>=</color> <color=#ae81ff>9</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>T_INT</color> <color=#f92672>=</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>T_LONG</color> <color=#f92672>=</color> <color=#ae81ff>11</color><color=#f8f8f2>;</color>

  <color=#75715e>// tags for Handle</color>

  <color=#66d9ef>int</color> <color=#f8f8f2>H_GETFIELD</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_GETSTATIC</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_PUTFIELD</color> <color=#f92672>=</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_PUTSTATIC</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_INVOKEVIRTUAL</color> <color=#f92672>=</color> <color=#ae81ff>5</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_INVOKESTATIC</color> <color=#f92672>=</color> <color=#ae81ff>6</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_INVOKESPECIAL</color> <color=#f92672>=</color> <color=#ae81ff>7</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_NEWINVOKESPECIAL</color> <color=#f92672>=</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>H_INVOKEINTERFACE</color> <color=#f92672>=</color> <color=#ae81ff>9</color><color=#f8f8f2>;</color>

  <color=#75715e>// stack map frame types</color>

  <color=#75715e>/** Represents an expanded frame. See {@link ClassReader#EXPAND_FRAMES}. */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F_NEW</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Represents a compressed frame with complete frame data. */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F_FULL</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Represents a compressed frame where locals are the same as the locals in the previous frame,</color>
<color=#75715e>   * except that additional 1-3 locals are defined, and with an empty stack.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F_APPEND</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Represents a compressed frame where locals are the same as the locals in the previous frame,</color>
<color=#75715e>   * except that the last 1-3 locals are absent and with an empty stack.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F_CHOP</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Represents a compressed frame with exactly the same locals as the previous frame and with an</color>
<color=#75715e>   * empty stack.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F_SAME</color> <color=#f92672>=</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Represents a compressed frame with exactly the same locals as the previous frame and with a</color>
<color=#75715e>   * single value on the stack.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F_SAME1</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>Integer</color> <color=#f8f8f2>TOP</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>Integer</color> <color=#f8f8f2>INTEGER</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>Integer</color> <color=#f8f8f2>FLOAT</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>Integer</color> <color=#f8f8f2>DOUBLE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>(</color><color=#ae81ff>3</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>Integer</color> <color=#f8f8f2>LONG</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>(</color><color=#ae81ff>4</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>Integer</color> <color=#f8f8f2>NULL</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>(</color><color=#ae81ff>5</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>Integer</color> <color=#f8f8f2>UNINITIALIZED_THIS</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>(</color><color=#ae81ff>6</color><color=#f8f8f2>);</color>

  <color=#75715e>// opcodes // visit method (- = idem)</color>

  <color=#66d9ef>int</color> <color=#f8f8f2>NOP</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#75715e>// visitInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ACONST_NULL</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ICONST_M1</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ICONST_0</color> <color=#f92672>=</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ICONST_1</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ICONST_2</color> <color=#f92672>=</color> <color=#ae81ff>5</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ICONST_3</color> <color=#f92672>=</color> <color=#ae81ff>6</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ICONST_4</color> <color=#f92672>=</color> <color=#ae81ff>7</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ICONST_5</color> <color=#f92672>=</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LCONST_0</color> <color=#f92672>=</color> <color=#ae81ff>9</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LCONST_1</color> <color=#f92672>=</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FCONST_0</color> <color=#f92672>=</color> <color=#ae81ff>11</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FCONST_1</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FCONST_2</color> <color=#f92672>=</color> <color=#ae81ff>13</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DCONST_0</color> <color=#f92672>=</color> <color=#ae81ff>14</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DCONST_1</color> <color=#f92672>=</color> <color=#ae81ff>15</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>BIPUSH</color> <color=#f92672>=</color> <color=#ae81ff>16</color><color=#f8f8f2>;</color> <color=#75715e>// visitIntInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>SIPUSH</color> <color=#f92672>=</color> <color=#ae81ff>17</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LDC</color> <color=#f92672>=</color> <color=#ae81ff>18</color><color=#f8f8f2>;</color> <color=#75715e>// visitLdcInsn</color>
  <color=#75715e>// int LDC_W = 19; // -</color>
  <color=#75715e>// int LDC2_W = 20; // -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ILOAD</color> <color=#f92672>=</color> <color=#ae81ff>21</color><color=#f8f8f2>;</color> <color=#75715e>// visitVarInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LLOAD</color> <color=#f92672>=</color> <color=#ae81ff>22</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FLOAD</color> <color=#f92672>=</color> <color=#ae81ff>23</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DLOAD</color> <color=#f92672>=</color> <color=#ae81ff>24</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ALOAD</color> <color=#f92672>=</color> <color=#ae81ff>25</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#75715e>// int ILOAD_0 = 26; // -</color>
  <color=#75715e>// int ILOAD_1 = 27; // -</color>
  <color=#75715e>// int ILOAD_2 = 28; // -</color>
  <color=#75715e>// int ILOAD_3 = 29; // -</color>
  <color=#75715e>// int LLOAD_0 = 30; // -</color>
  <color=#75715e>// int LLOAD_1 = 31; // -</color>
  <color=#75715e>// int LLOAD_2 = 32; // -</color>
  <color=#75715e>// int LLOAD_3 = 33; // -</color>
  <color=#75715e>// int FLOAD_0 = 34; // -</color>
  <color=#75715e>// int FLOAD_1 = 35; // -</color>
  <color=#75715e>// int FLOAD_2 = 36; // -</color>
  <color=#75715e>// int FLOAD_3 = 37; // -</color>
  <color=#75715e>// int DLOAD_0 = 38; // -</color>
  <color=#75715e>// int DLOAD_1 = 39; // -</color>
  <color=#75715e>// int DLOAD_2 = 40; // -</color>
  <color=#75715e>// int DLOAD_3 = 41; // -</color>
  <color=#75715e>// int ALOAD_0 = 42; // -</color>
  <color=#75715e>// int ALOAD_1 = 43; // -</color>
  <color=#75715e>// int ALOAD_2 = 44; // -</color>
  <color=#75715e>// int ALOAD_3 = 45; // -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IALOAD</color> <color=#f92672>=</color> <color=#ae81ff>46</color><color=#f8f8f2>;</color> <color=#75715e>// visitInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LALOAD</color> <color=#f92672>=</color> <color=#ae81ff>47</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FALOAD</color> <color=#f92672>=</color> <color=#ae81ff>48</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DALOAD</color> <color=#f92672>=</color> <color=#ae81ff>49</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>AALOAD</color> <color=#f92672>=</color> <color=#ae81ff>50</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>BALOAD</color> <color=#f92672>=</color> <color=#ae81ff>51</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>CALOAD</color> <color=#f92672>=</color> <color=#ae81ff>52</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>SALOAD</color> <color=#f92672>=</color> <color=#ae81ff>53</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ISTORE</color> <color=#f92672>=</color> <color=#ae81ff>54</color><color=#f8f8f2>;</color> <color=#75715e>// visitVarInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LSTORE</color> <color=#f92672>=</color> <color=#ae81ff>55</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FSTORE</color> <color=#f92672>=</color> <color=#ae81ff>56</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DSTORE</color> <color=#f92672>=</color> <color=#ae81ff>57</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ASTORE</color> <color=#f92672>=</color> <color=#ae81ff>58</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#75715e>// int ISTORE_0 = 59; // -</color>
  <color=#75715e>// int ISTORE_1 = 60; // -</color>
  <color=#75715e>// int ISTORE_2 = 61; // -</color>
  <color=#75715e>// int ISTORE_3 = 62; // -</color>
  <color=#75715e>// int LSTORE_0 = 63; // -</color>
  <color=#75715e>// int LSTORE_1 = 64; // -</color>
  <color=#75715e>// int LSTORE_2 = 65; // -</color>
  <color=#75715e>// int LSTORE_3 = 66; // -</color>
  <color=#75715e>// int FSTORE_0 = 67; // -</color>
  <color=#75715e>// int FSTORE_1 = 68; // -</color>
  <color=#75715e>// int FSTORE_2 = 69; // -</color>
  <color=#75715e>// int FSTORE_3 = 70; // -</color>
  <color=#75715e>// int DSTORE_0 = 71; // -</color>
  <color=#75715e>// int DSTORE_1 = 72; // -</color>
  <color=#75715e>// int DSTORE_2 = 73; // -</color>
  <color=#75715e>// int DSTORE_3 = 74; // -</color>
  <color=#75715e>// int ASTORE_0 = 75; // -</color>
  <color=#75715e>// int ASTORE_1 = 76; // -</color>
  <color=#75715e>// int ASTORE_2 = 77; // -</color>
  <color=#75715e>// int ASTORE_3 = 78; // -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IASTORE</color> <color=#f92672>=</color> <color=#ae81ff>79</color><color=#f8f8f2>;</color> <color=#75715e>// visitInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LASTORE</color> <color=#f92672>=</color> <color=#ae81ff>80</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FASTORE</color> <color=#f92672>=</color> <color=#ae81ff>81</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DASTORE</color> <color=#f92672>=</color> <color=#ae81ff>82</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>AASTORE</color> <color=#f92672>=</color> <color=#ae81ff>83</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>BASTORE</color> <color=#f92672>=</color> <color=#ae81ff>84</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>CASTORE</color> <color=#f92672>=</color> <color=#ae81ff>85</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>SASTORE</color> <color=#f92672>=</color> <color=#ae81ff>86</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>POP</color> <color=#f92672>=</color> <color=#ae81ff>87</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>POP2</color> <color=#f92672>=</color> <color=#ae81ff>88</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DUP</color> <color=#f92672>=</color> <color=#ae81ff>89</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DUP_X1</color> <color=#f92672>=</color> <color=#ae81ff>90</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DUP_X2</color> <color=#f92672>=</color> <color=#ae81ff>91</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DUP2</color> <color=#f92672>=</color> <color=#ae81ff>92</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DUP2_X1</color> <color=#f92672>=</color> <color=#ae81ff>93</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DUP2_X2</color> <color=#f92672>=</color> <color=#ae81ff>94</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>SWAP</color> <color=#f92672>=</color> <color=#ae81ff>95</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IADD</color> <color=#f92672>=</color> <color=#ae81ff>96</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LADD</color> <color=#f92672>=</color> <color=#ae81ff>97</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FADD</color> <color=#f92672>=</color> <color=#ae81ff>98</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DADD</color> <color=#f92672>=</color> <color=#ae81ff>99</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ISUB</color> <color=#f92672>=</color> <color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LSUB</color> <color=#f92672>=</color> <color=#ae81ff>101</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FSUB</color> <color=#f92672>=</color> <color=#ae81ff>102</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DSUB</color> <color=#f92672>=</color> <color=#ae81ff>103</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IMUL</color> <color=#f92672>=</color> <color=#ae81ff>104</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LMUL</color> <color=#f92672>=</color> <color=#ae81ff>105</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FMUL</color> <color=#f92672>=</color> <color=#ae81ff>106</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DMUL</color> <color=#f92672>=</color> <color=#ae81ff>107</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IDIV</color> <color=#f92672>=</color> <color=#ae81ff>108</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LDIV</color> <color=#f92672>=</color> <color=#ae81ff>109</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FDIV</color> <color=#f92672>=</color> <color=#ae81ff>110</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DDIV</color> <color=#f92672>=</color> <color=#ae81ff>111</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IREM</color> <color=#f92672>=</color> <color=#ae81ff>112</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LREM</color> <color=#f92672>=</color> <color=#ae81ff>113</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FREM</color> <color=#f92672>=</color> <color=#ae81ff>114</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DREM</color> <color=#f92672>=</color> <color=#ae81ff>115</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>INEG</color> <color=#f92672>=</color> <color=#ae81ff>116</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LNEG</color> <color=#f92672>=</color> <color=#ae81ff>117</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FNEG</color> <color=#f92672>=</color> <color=#ae81ff>118</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DNEG</color> <color=#f92672>=</color> <color=#ae81ff>119</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ISHL</color> <color=#f92672>=</color> <color=#ae81ff>120</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LSHL</color> <color=#f92672>=</color> <color=#ae81ff>121</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ISHR</color> <color=#f92672>=</color> <color=#ae81ff>122</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LSHR</color> <color=#f92672>=</color> <color=#ae81ff>123</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IUSHR</color> <color=#f92672>=</color> <color=#ae81ff>124</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LUSHR</color> <color=#f92672>=</color> <color=#ae81ff>125</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IAND</color> <color=#f92672>=</color> <color=#ae81ff>126</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LAND</color> <color=#f92672>=</color> <color=#ae81ff>127</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IOR</color> <color=#f92672>=</color> <color=#ae81ff>128</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LOR</color> <color=#f92672>=</color> <color=#ae81ff>129</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IXOR</color> <color=#f92672>=</color> <color=#ae81ff>130</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LXOR</color> <color=#f92672>=</color> <color=#ae81ff>131</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IINC</color> <color=#f92672>=</color> <color=#ae81ff>132</color><color=#f8f8f2>;</color> <color=#75715e>// visitIincInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>I2L</color> <color=#f92672>=</color> <color=#ae81ff>133</color><color=#f8f8f2>;</color> <color=#75715e>// visitInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>I2F</color> <color=#f92672>=</color> <color=#ae81ff>134</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>I2D</color> <color=#f92672>=</color> <color=#ae81ff>135</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>L2I</color> <color=#f92672>=</color> <color=#ae81ff>136</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>L2F</color> <color=#f92672>=</color> <color=#ae81ff>137</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>L2D</color> <color=#f92672>=</color> <color=#ae81ff>138</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F2I</color> <color=#f92672>=</color> <color=#ae81ff>139</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F2L</color> <color=#f92672>=</color> <color=#ae81ff>140</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>F2D</color> <color=#f92672>=</color> <color=#ae81ff>141</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>D2I</color> <color=#f92672>=</color> <color=#ae81ff>142</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>D2L</color> <color=#f92672>=</color> <color=#ae81ff>143</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>D2F</color> <color=#f92672>=</color> <color=#ae81ff>144</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>I2B</color> <color=#f92672>=</color> <color=#ae81ff>145</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>I2C</color> <color=#f92672>=</color> <color=#ae81ff>146</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>I2S</color> <color=#f92672>=</color> <color=#ae81ff>147</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LCMP</color> <color=#f92672>=</color> <color=#ae81ff>148</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FCMPL</color> <color=#f92672>=</color> <color=#ae81ff>149</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FCMPG</color> <color=#f92672>=</color> <color=#ae81ff>150</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DCMPL</color> <color=#f92672>=</color> <color=#ae81ff>151</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DCMPG</color> <color=#f92672>=</color> <color=#ae81ff>152</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFEQ</color> <color=#f92672>=</color> <color=#ae81ff>153</color><color=#f8f8f2>;</color> <color=#75715e>// visitJumpInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFNE</color> <color=#f92672>=</color> <color=#ae81ff>154</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFLT</color> <color=#f92672>=</color> <color=#ae81ff>155</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFGE</color> <color=#f92672>=</color> <color=#ae81ff>156</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFGT</color> <color=#f92672>=</color> <color=#ae81ff>157</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFLE</color> <color=#f92672>=</color> <color=#ae81ff>158</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ICMPEQ</color> <color=#f92672>=</color> <color=#ae81ff>159</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ICMPNE</color> <color=#f92672>=</color> <color=#ae81ff>160</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ICMPLT</color> <color=#f92672>=</color> <color=#ae81ff>161</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ICMPGE</color> <color=#f92672>=</color> <color=#ae81ff>162</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ICMPGT</color> <color=#f92672>=</color> <color=#ae81ff>163</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ICMPLE</color> <color=#f92672>=</color> <color=#ae81ff>164</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ACMPEQ</color> <color=#f92672>=</color> <color=#ae81ff>165</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IF_ACMPNE</color> <color=#f92672>=</color> <color=#ae81ff>166</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>GOTO</color> <color=#f92672>=</color> <color=#ae81ff>167</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>JSR</color> <color=#f92672>=</color> <color=#ae81ff>168</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>RET</color> <color=#f92672>=</color> <color=#ae81ff>169</color><color=#f8f8f2>;</color> <color=#75715e>// visitVarInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>TABLESWITCH</color> <color=#f92672>=</color> <color=#ae81ff>170</color><color=#f8f8f2>;</color> <color=#75715e>// visiTableSwitchInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LOOKUPSWITCH</color> <color=#f92672>=</color> <color=#ae81ff>171</color><color=#f8f8f2>;</color> <color=#75715e>// visitLookupSwitch</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IRETURN</color> <color=#f92672>=</color> <color=#ae81ff>172</color><color=#f8f8f2>;</color> <color=#75715e>// visitInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>LRETURN</color> <color=#f92672>=</color> <color=#ae81ff>173</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>FRETURN</color> <color=#f92672>=</color> <color=#ae81ff>174</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>DRETURN</color> <color=#f92672>=</color> <color=#ae81ff>175</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ARETURN</color> <color=#f92672>=</color> <color=#ae81ff>176</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>RETURN</color> <color=#f92672>=</color> <color=#ae81ff>177</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>GETSTATIC</color> <color=#f92672>=</color> <color=#ae81ff>178</color><color=#f8f8f2>;</color> <color=#75715e>// visitFieldInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>PUTSTATIC</color> <color=#f92672>=</color> <color=#ae81ff>179</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>GETFIELD</color> <color=#f92672>=</color> <color=#ae81ff>180</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>PUTFIELD</color> <color=#f92672>=</color> <color=#ae81ff>181</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>INVOKEVIRTUAL</color> <color=#f92672>=</color> <color=#ae81ff>182</color><color=#f8f8f2>;</color> <color=#75715e>// visitMethodInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>INVOKESPECIAL</color> <color=#f92672>=</color> <color=#ae81ff>183</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>INVOKESTATIC</color> <color=#f92672>=</color> <color=#ae81ff>184</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>INVOKEINTERFACE</color> <color=#f92672>=</color> <color=#ae81ff>185</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>INVOKEDYNAMIC</color> <color=#f92672>=</color> <color=#ae81ff>186</color><color=#f8f8f2>;</color> <color=#75715e>// visitInvokeDynamicInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>NEW</color> <color=#f92672>=</color> <color=#ae81ff>187</color><color=#f8f8f2>;</color> <color=#75715e>// visitTypeInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>NEWARRAY</color> <color=#f92672>=</color> <color=#ae81ff>188</color><color=#f8f8f2>;</color> <color=#75715e>// visitIntInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ANEWARRAY</color> <color=#f92672>=</color> <color=#ae81ff>189</color><color=#f8f8f2>;</color> <color=#75715e>// visitTypeInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ARRAYLENGTH</color> <color=#f92672>=</color> <color=#ae81ff>190</color><color=#f8f8f2>;</color> <color=#75715e>// visitInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>ATHROW</color> <color=#f92672>=</color> <color=#ae81ff>191</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>CHECKCAST</color> <color=#f92672>=</color> <color=#ae81ff>192</color><color=#f8f8f2>;</color> <color=#75715e>// visitTypeInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>INSTANCEOF</color> <color=#f92672>=</color> <color=#ae81ff>193</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>MONITORENTER</color> <color=#f92672>=</color> <color=#ae81ff>194</color><color=#f8f8f2>;</color> <color=#75715e>// visitInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>MONITOREXIT</color> <color=#f92672>=</color> <color=#ae81ff>195</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#75715e>// int WIDE = 196; // NOT VISITED</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>MULTIANEWARRAY</color> <color=#f92672>=</color> <color=#ae81ff>197</color><color=#f8f8f2>;</color> <color=#75715e>// visitMultiANewArrayInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFNULL</color> <color=#f92672>=</color> <color=#ae81ff>198</color><color=#f8f8f2>;</color> <color=#75715e>// visitJumpInsn</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>IFNONNULL</color> <color=#f92672>=</color> <color=#ae81ff>199</color><color=#f8f8f2>;</color> <color=#75715e>// -</color>
  <color=#75715e>// int GOTO_W = 200; // -</color>
  <color=#75715e>// int JSR_W = 201; // -</color>
<color=#f8f8f2>}</color>