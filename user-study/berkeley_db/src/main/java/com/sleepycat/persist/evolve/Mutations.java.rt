<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.persist.evolve</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.EntityStore</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.StoreConfig</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.Serializable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Collection</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.HashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A collection of mutations for configuring class evolution.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Mutations are configured when a store is opened via {@link StoreConfig#setMutations</color>
<color=#75715e> * StoreConfig.setMutations}. For example:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> *  Mutations mutations = new Mutations();</color>
<color=#75715e> *  // Add mutations...</color>
<color=#75715e> *  StoreConfig config = new StoreConfig();</color>
<color=#75715e> *  config.setMutations(mutations);</color>
<color=#75715e> *  EntityStore store = new EntityStore(env, "myStore", config);</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <p>Mutations cause data conversion to occur lazily as instances are read from the store. The</color>
<color=#75715e> * {@link EntityStore#evolve EntityStore.evolve} method may also be used to perform eager</color>
<color=#75715e> * conversion.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Not all incompatible class changes can be handled via mutations. For example, complex</color>
<color=#75715e> * refactoring may require a transformation that manipulates multiple entity instances at once. Such</color>
<color=#75715e> * changes are not possible with mutations but can made by performing a <a</color>
<color=#75715e> * href="package-summary.html#storeConversion">store conversion</a>.</color>
<color=#75715e> *</color>
<color=#75715e> * @see com.sleepycat.persist.evolve Class Evolution</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Mutations</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Serializable</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1744401530444812916L</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Mutation</color><color=#f8f8f2>,</color> <color=#f8f8f2>Renamer</color><color=#f92672>></color> <color=#f8f8f2>renamers</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Mutation</color><color=#f8f8f2>,</color> <color=#f8f8f2>Deleter</color><color=#f92672>></color> <color=#f8f8f2>deleters</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Mutation</color><color=#f8f8f2>,</color> <color=#f8f8f2>Converter</color><color=#f92672>></color> <color=#f8f8f2>converters</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Creates an empty set of mutations. */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>Mutations</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>renamers</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Mutation</color><color=#f8f8f2>,</color> <color=#f8f8f2>Renamer</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>deleters</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Mutation</color><color=#f8f8f2>,</color> <color=#f8f8f2>Deleter</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>converters</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Mutation</color><color=#f8f8f2>,</color> <color=#f8f8f2>Converter</color><color=#f92672>></color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if no mutations are present.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if no mutations are present.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Adds a renamer mutation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param renamer the Renamer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>addRenamer</color><color=#f8f8f2>(</color><color=#f8f8f2>Renamer</color> <color=#f8f8f2>renamer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>renamer</color><color=#f8f8f2>),</color> <color=#f8f8f2>renamer</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the renamer mutation for the given class, version and field, or null if none exists. A</color>
<color=#75715e>   * null field name should be specified to get a class renamer.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param className the class name.</color>
<color=#75715e>   * @param classVersion the class version.</color>
<color=#75715e>   * @param fieldName the field name in the given class version.</color>
<color=#75715e>   * @return the Renamer, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Renamer</color> <color=#a6e22e>getRenamer</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an unmodifiable collection of all renamer mutations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the renamers.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>Renamer</color><color=#f92672>></color> <color=#a6e22e>getRenamers</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Adds a deleter mutation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param deleter the Deleter.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>addDeleter</color><color=#f8f8f2>(</color><color=#f8f8f2>Deleter</color> <color=#f8f8f2>deleter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>deleter</color><color=#f8f8f2>),</color> <color=#f8f8f2>deleter</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the deleter mutation for the given class, version and field, or null if none exists. A</color>
<color=#75715e>   * null field name should be specified to get a class deleter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param className the class name.</color>
<color=#75715e>   * @param classVersion the class version.</color>
<color=#75715e>   * @param fieldName the field name.</color>
<color=#75715e>   * @return the Deleter, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Deleter</color> <color=#a6e22e>getDeleter</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an unmodifiable collection of all deleter mutations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the deleters.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>Deleter</color><color=#f92672>></color> <color=#a6e22e>getDeleters</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Adds a converter mutation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param converter the Converter.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>addConverter</color><color=#f8f8f2>(</color><color=#f8f8f2>Converter</color> <color=#f8f8f2>converter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>converter</color><color=#f8f8f2>),</color> <color=#f8f8f2>converter</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the converter mutation for the given class, version and field, or null if none exists.</color>
<color=#75715e>   * A null field name should be specified to get a class converter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param className the class name.</color>
<color=#75715e>   * @param classVersion the class version.</color>
<color=#75715e>   * @param fieldName the field name.</color>
<color=#75715e>   * @return the Converter, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Converter</color> <color=#a6e22e>getConverter</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an unmodifiable collection of all converter mutations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the converters.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>Converter</color><color=#f92672>></color> <color=#a6e22e>getConverters</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>Key</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Mutation</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>2793516787097085621L</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#f8f8f2>classVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>fieldName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>Mutation</color> <color=#f8f8f2>mutation</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>mutation</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>mutation</color><color=#f8f8f2>.</color><color=#a6e22e>getClassVersion</color><color=#f8f8f2>(),</color> <color=#f8f8f2>mutation</color><color=#f8f8f2>.</color><color=#a6e22e>getFieldName</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if this collection has the same set of mutations as the given collection and all</color>
<color=#75715e>   * mutations are equal.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>other</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Mutations</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Mutations</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Mutations</color><color=#f8f8f2>)</color> <color=#f8f8f2>other</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>renamers</color><color=#f8f8f2>)</color>
          <color=#f92672>&&</color> <color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>deleters</color><color=#f8f8f2>)</color>
          <color=#f92672>&&</color> <color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>converters</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>buf</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>renamers</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>deleters</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>converters</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"[Empty Mutations]"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>