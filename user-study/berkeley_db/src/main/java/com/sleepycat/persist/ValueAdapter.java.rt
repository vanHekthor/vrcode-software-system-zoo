<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.persist</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseEntry</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An adapter that translates between database entries (key, primary key, data) and a "value", which</color>
<color=#75715e> * may be either the key, primary key, or entity. This interface is used to implement a generic</color>
<color=#75715e> * index and cursor (BasicIndex and BasicCursor). If we didn't use this approach, we would need</color>
<color=#75715e> * separate index and cursor implementations for each type of value that can be returned. In other</color>
<color=#75715e> * words, this interface is used to reduce class explosion.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>interface</color> <color=#a6e22e>ValueAdapter</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#75715e>/** Creates a DatabaseEntry for the key or returns null if the key is not needed. */</color>
  <color=#f8f8f2>DatabaseEntry</color> <color=#a6e22e>initKey</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a DatabaseEntry for the primary key or returns null if the primary key is not needed.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>DatabaseEntry</color> <color=#a6e22e>initPKey</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a DatabaseEntry for the data or returns null if the data is not needed.</color>
<color=#75715e>   * BasicIndex.NO_RETURN_ENTRY may be returned if the data argument is required but we don't need</color>
<color=#75715e>   * it.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>DatabaseEntry</color> <color=#a6e22e>initData</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the data array of the given entries to null, based on knowledge of which entries are</color>
<color=#75715e>   * non-null and are not NO_RETURN_ENTRY.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>clearEntries</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>pkey</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the appropriate "value" (key, primary key, or entity) using the appropriate bindings</color>
<color=#75715e>   * for that purpose.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>entryToValue</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>pkey</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts an entity value to a data entry using an entity binding, or throws</color>
<color=#75715e>   * UnsupportedOperationException if this is not appropriate. Called by BasicCursor.update.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>valueToData</color><color=#f8f8f2>(</color><color=#f8f8f2>V</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>
<color=#f8f8f2>}</color>