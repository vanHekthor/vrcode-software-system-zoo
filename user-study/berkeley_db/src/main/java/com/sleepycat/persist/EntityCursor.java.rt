<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.persist</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.model.Relationship</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.model.SecondaryKey</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Iterator</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Traverses entity values or key values and allows deleting or updating the entity at the current</color>
<color=#75715e> * cursor position. The value type (V) is either an entity class or a key class, depending on how</color>
<color=#75715e> * the cursor was opened.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>{@code EntityCursor} objects are <em>not</em> thread-safe. Cursors should be opened, used and</color>
<color=#75715e> * closed by a single thread.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Cursors are opened using the {@link EntityIndex#keys} and {@link EntityIndex#entities} family</color>
<color=#75715e> * of methods. These methods are available for objects of any class that implements {@link</color>
<color=#75715e> * EntityIndex}: {@link PrimaryIndex}, {@link SecondaryIndex}, and the indices returned by {@link</color>
<color=#75715e> * SecondaryIndex#keysIndex} and {@link SecondaryIndex#subIndex}. A {@link ForwardCursor}, which</color>
<color=#75715e> * implements a subset of cursor operations, is also available via the {@link EntityJoin#keys} and</color>
<color=#75715e> * {@link EntityJoin#entities} methods.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Values are always returned by a cursor in key order, where the key is defined by the</color>
<color=#75715e> * underlying {@link EntityIndex}. For example, a cursor on a {@link SecondaryIndex} returns values</color>
<color=#75715e> * ordered by secondary key, while an index on a {@link PrimaryIndex} or a {@link</color>
<color=#75715e> * SecondaryIndex#subIndex} returns values ordered by primary key.</color>
<color=#75715e> *</color>
<color=#75715e> * <p><em>WARNING:</em> Cursors must always be closed to prevent resource leaks which could lead to</color>
<color=#75715e> * the index becoming unusable or cause an <code>OutOfMemoryError</code>. To ensure that a cursor is</color>
<color=#75715e> * closed in the face of exceptions, call {@link #close} in a finally block. For example, the</color>
<color=#75715e> * following code traverses all Employee entities and closes the cursor whether or not an exception</color>
<color=#75715e> * occurs:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@literal @Entity}</color>
<color=#75715e> * class Employee {</color>
<color=#75715e> *</color>
<color=#75715e> *     {@literal @PrimaryKey}</color>
<color=#75715e> *     long id;</color>
<color=#75715e> *</color>
<color=#75715e> *     {@literal @SecondaryKey(relate=MANY_TO_ONE)}</color>
<color=#75715e> *     String department;</color>
<color=#75715e> *</color>
<color=#75715e> *     String name;</color>
<color=#75715e> *</color>
<color=#75715e> *     private Employee() {}</color>
<color=#75715e> * }</color>
<color=#75715e> *</color>
<color=#75715e> * EntityStore store = ...</color>
<color=#75715e> *</color>
<color=#75715e> * {@code PrimaryIndex<Long, Employee>} primaryIndex =</color>
<color=#75715e> *     store.getPrimaryIndex(Long.class, Employee.class);</color>
<color=#75715e> *</color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = primaryIndex.entities();</color>
<color=#75715e> * try {</color>
<color=#75715e> *     for (Employee entity = cursor.first();</color>
<color=#75715e> *                   entity != null;</color>
<color=#75715e> *                   entity = cursor.next()) {</color>
<color=#75715e> *         // Do something with the entity...</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <h3>Initializing the Cursor Position</h3></color>
<color=#75715e> *</color>
<color=#75715e> * <p>When it is opened, a cursor is not initially positioned on any value; in other words, it is</color>
<color=#75715e> * uninitialized. Most methods in this interface initialize the cursor position but certain methods,</color>
<color=#75715e> * for example, {@link #current} and {@link #delete}, throw {@link IllegalStateException} when</color>
<color=#75715e> * called for an uninitialized cursor.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that the {@link #next} and {@link #prev} methods return the first or last value</color>
<color=#75715e> * respectively for an uninitialized cursor. This allows the loop in the example above to be</color>
<color=#75715e> * rewritten as follows:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = primaryIndex.entities();</color>
<color=#75715e> * try {</color>
<color=#75715e> *     Employee entity;</color>
<color=#75715e> *     while ((entity = cursor.next()) != null) {</color>
<color=#75715e> *         // Do something with the entity...</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <h3>Cursors and Iterators</h3></color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link #iterator} method can be used to return a standard Java {@code Iterator} that</color>
<color=#75715e> * returns the same values that the cursor returns. For example:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = primaryIndex.entities();</color>
<color=#75715e> * try {</color>
<color=#75715e> *     {@code Iterator<Employee>} i = cursor.iterator();</color>
<color=#75715e> *     while (i.hasNext()) {</color>
<color=#75715e> *          Employee entity = i.next();</color>
<color=#75715e> *         // Do something with the entity...</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link Iterable} interface is also extended by {@link EntityCursor} to allow using the</color>
<color=#75715e> * cursor as the target of a Java "foreach" statement:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = primaryIndex.entities();</color>
<color=#75715e> * try {</color>
<color=#75715e> *     for (Employee entity : cursor) {</color>
<color=#75715e> *         // Do something with the entity...</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <p>The iterator uses the cursor directly, so any changes to the cursor position impact the</color>
<color=#75715e> * iterator and vice versa. The iterator advances the cursor by calling {@link #next()} when {@link</color>
<color=#75715e> * Iterator#hasNext} or {@link Iterator#next} is called. Because of this interaction, to keep things</color>
<color=#75715e> * simple it is best not to mix the use of an {@code EntityCursor} {@code Iterator} with the use of</color>
<color=#75715e> * the {@code EntityCursor} traversal methods such as {@link #next()}, for a single {@code</color>
<color=#75715e> * EntityCursor} object.</color>
<color=#75715e> *</color>
<color=#75715e> * <h3>Key Ranges</h3></color>
<color=#75715e> *</color>
<color=#75715e> * <p>A key range may be specified when opening the cursor, to restrict the key range of the cursor</color>
<color=#75715e> * to a subset of the complete range of keys in the index. A {@code fromKey} and/or {@code toKey}</color>
<color=#75715e> * parameter may be specified when calling {@link EntityIndex#keys(Object,boolean,Object,boolean)}</color>
<color=#75715e> * or {@link EntityIndex#entities(Object,boolean,Object,boolean)}. The key arguments may be</color>
<color=#75715e> * specified as inclusive or exclusive values.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Whenever a cursor with a key range is moved, the key range bounds will be checked, and the</color>
<color=#75715e> * cursor will never be positioned outside the range. The {@link #first} cursor value is the first</color>
<color=#75715e> * existing value in the range, and the {@link #last} cursor value is the last existing value in the</color>
<color=#75715e> * range. For example, the following code traverses Employee entities with keys from 100 (inclusive)</color>
<color=#75715e> * to 200 (exclusive):</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = primaryIndex.entities(100, true, 200, false);</color>
<color=#75715e> * try {</color>
<color=#75715e> *     for (Employee entity : cursor) {</color>
<color=#75715e> *         // Do something with the entity...</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <h3>Duplicate Keys</h3></color>
<color=#75715e> *</color>
<color=#75715e> * <p>When using a cursor for a {@link SecondaryIndex}, the keys in the index may be non-unique</color>
<color=#75715e> * (duplicates) if {@link SecondaryKey#relate} is {@link Relationship#MANY_TO_ONE MANY_TO_ONE} or</color>
<color=#75715e> * {@link Relationship#MANY_TO_MANY MANY_TO_MANY}. For example, a {@code MANY_TO_ONE} {@code</color>
<color=#75715e> * Employee.department} secondary key is non-unique because there are multiple Employee entities</color>
<color=#75715e> * with the same department key value. The {@link #nextDup}, {@link #prevDup}, {@link #nextNoDup}</color>
<color=#75715e> * and {@link #prevNoDup} methods may be used to control how non-unique keys are returned by the</color>
<color=#75715e> * cursor.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>{@link #nextDup} and {@link #prevDup} return the next or previous value only if it has the</color>
<color=#75715e> * same key as the current value, and null is returned when a different key is encountered. For</color>
<color=#75715e> * example, these methods can be used to return all employees in a given department.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>{@link #nextNoDup} and {@link #prevNoDup} return the next or previous value with a unique key,</color>
<color=#75715e> * skipping over values that have the same key. For example, these methods can be used to return the</color>
<color=#75715e> * first employee in each department.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>For example, the following code will find the first employee in each department with {@link</color>
<color=#75715e> * #nextNoDup} until it finds a department name that matches a particular regular expression. For</color>
<color=#75715e> * each matching department it will find all employees in that department using {@link #nextDup}.</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@code SecondaryIndex<String, Long, Employee>} secondaryIndex =</color>
<color=#75715e> *     store.getSecondaryIndex(primaryIndex, String.class, "department");</color>
<color=#75715e> *</color>
<color=#75715e> * String regex = ...;</color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = secondaryIndex.entities();</color>
<color=#75715e> * try {</color>
<color=#75715e> *     for (Employee entity = cursor.first();</color>
<color=#75715e> *                   entity != null;</color>
<color=#75715e> *                   entity = cursor.nextNoDup()) {</color>
<color=#75715e> *         if (entity.department.matches(regex)) {</color>
<color=#75715e> *             while (entity != null) {</color>
<color=#75715e> *                 // Do something with the matching entities...</color>
<color=#75715e> *                 entity = cursor.nextDup();</color>
<color=#75715e> *             }</color>
<color=#75715e> *         }</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <h3>Updating and Deleting Entities with a Cursor</h3></color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link #update} and {@link #delete} methods operate on the entity at the current cursor</color>
<color=#75715e> * position. Cursors on any type of index may be used to delete entities. For example, the following</color>
<color=#75715e> * code deletes all employees in departments which have names that match a particular regular</color>
<color=#75715e> * expression:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@code SecondaryIndex<String, Long, Employee>} secondaryIndex =</color>
<color=#75715e> *     store.getSecondaryIndex(primaryIndex, String.class, "department");</color>
<color=#75715e> *</color>
<color=#75715e> * String regex = ...;</color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = secondaryIndex.entities();</color>
<color=#75715e> * try {</color>
<color=#75715e> *     for (Employee entity = cursor.first();</color>
<color=#75715e> *                   entity != null;</color>
<color=#75715e> *                   entity = cursor.nextNoDup()) {</color>
<color=#75715e> *         if (entity.department.matches(regex)) {</color>
<color=#75715e> *             while (entity != null) {</color>
<color=#75715e> *                 cursor.delete();</color>
<color=#75715e> *                 entity = cursor.nextDup();</color>
<color=#75715e> *             }</color>
<color=#75715e> *         }</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that the cursor can be moved to the next (or previous) value after deleting the entity at</color>
<color=#75715e> * the current position. This is an important property of cursors, since without it you would not be</color>
<color=#75715e> * able to easily delete while processing multiple values with a cursor. A cursor positioned on a</color>
<color=#75715e> * deleted entity is in a special state. In this state, {@link #current} will return null, {@link</color>
<color=#75715e> * #delete} will return false, and {@link #update} will return false.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link #update} method is supported only if the value type is an entity class (not a key</color>
<color=#75715e> * class) and the underlying index is a {@link PrimaryIndex}; in other words, for a cursor returned</color>
<color=#75715e> * by one of the {@link PrimaryIndex#entities} methods. For example, the following code changes all</color>
<color=#75715e> * employee names to uppercase:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre class="code"></color>
<color=#75715e> * {@code EntityCursor<Employee>} cursor = primaryIndex.entities();</color>
<color=#75715e> * try {</color>
<color=#75715e> *     for (Employee entity = cursor.first();</color>
<color=#75715e> *                   entity != null;</color>
<color=#75715e> *                   entity = cursor.next()) {</color>
<color=#75715e> *         entity.name = entity.name.toUpperCase();</color>
<color=#75715e> *         cursor.update(entity);</color>
<color=#75715e> *     }</color>
<color=#75715e> * } finally {</color>
<color=#75715e> *     cursor.close();</color>
<color=#75715e> * }</pre></color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>EntityCursor</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>ForwardCursor</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the first value and returns it, or returns null if the cursor range is</color>
<color=#75715e>   * empty.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the first value, or null if the cursor range is empty.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>first</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the first value and returns it, or returns null if the cursor range is</color>
<color=#75715e>   * empty.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the first value, or null if the cursor range is empty.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>first</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the last value and returns it, or returns null if the cursor range is</color>
<color=#75715e>   * empty.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the last value, or null if the cursor range is empty.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>last</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the last value and returns it, or returns null if the cursor range is</color>
<color=#75715e>   * empty.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the last value, or null if the cursor range is empty.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>last</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the next value and returns it, or returns null if there are no more values</color>
<color=#75715e>   * in the cursor range. If the cursor is uninitialized, this method is equivalent to {@link</color>
<color=#75715e>   * #first}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the next value, or null if there are no more values in the cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>next</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the next value and returns it, or returns null if there are no more values</color>
<color=#75715e>   * in the cursor range. If the cursor is uninitialized, this method is equivalent to {@link</color>
<color=#75715e>   * #first}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the next value, or null if there are no more values in the cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>next</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the next value with the same key (duplicate) and returns it, or returns</color>
<color=#75715e>   * null if no more values are present for the key at the current position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the next value with the same key, or null if no more values are present for the key at</color>
<color=#75715e>   *     the current position.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>nextDup</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the next value with the same key (duplicate) and returns it, or returns</color>
<color=#75715e>   * null if no more values are present for the key at the current position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the next value with the same key, or null if no more values are present for the key at</color>
<color=#75715e>   *     the current position.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>nextDup</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the next value with a different key and returns it, or returns null if</color>
<color=#75715e>   * there are no more unique keys in the cursor range. If the cursor is uninitialized, this method</color>
<color=#75715e>   * is equivalent to {@link #first}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the next value with a different key, or null if there are no more unique keys in the</color>
<color=#75715e>   *     cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>nextNoDup</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the next value with a different key and returns it, or returns null if</color>
<color=#75715e>   * there are no more unique keys in the cursor range. If the cursor is uninitialized, this method</color>
<color=#75715e>   * is equivalent to {@link #first}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the next value with a different key, or null if there are no more unique keys in the</color>
<color=#75715e>   *     cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>nextNoDup</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the previous value and returns it, or returns null if there are no</color>
<color=#75715e>   * preceding values in the cursor range. If the cursor is uninitialized, this method is equivalent</color>
<color=#75715e>   * to {@link #last}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the previous value, or null if there are no preceding values in the cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>prev</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the previous value and returns it, or returns null if there are no</color>
<color=#75715e>   * preceding values in the cursor range. If the cursor is uninitialized, this method is equivalent</color>
<color=#75715e>   * to {@link #last}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the previous value, or null if there are no preceding values in the cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>prev</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the previous value with the same key (duplicate) and returns it, or returns</color>
<color=#75715e>   * null if no preceding values are present for the key at the current position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the previous value with the same key, or null if no preceding values are present for</color>
<color=#75715e>   *     the key at the current position.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>prevDup</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the previous value with the same key (duplicate) and returns it, or returns</color>
<color=#75715e>   * null if no preceding values are present for the key at the current position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the previous value with the same key, or null if no preceding values are present for</color>
<color=#75715e>   *     the key at the current position.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>prevDup</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the preceding value with a different key and returns it, or returns null if</color>
<color=#75715e>   * there are no preceding unique keys in the cursor range. If the cursor is uninitialized, this</color>
<color=#75715e>   * method is equivalent to {@link #last}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the previous value with a different key, or null if there are no preceding unique keys</color>
<color=#75715e>   *     in the cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>prevNoDup</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to the preceding value with a different key and returns it, or returns null if</color>
<color=#75715e>   * there are no preceding unique keys in the cursor range. If the cursor is uninitialized, this</color>
<color=#75715e>   * method is equivalent to {@link #last}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the previous value with a different key, or null if there are no preceding unique keys</color>
<color=#75715e>   *     in the cursor range.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>prevNoDup</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the value at the cursor position, or null if the value at the cursor position has been</color>
<color=#75715e>   * deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the value at the cursor position, or null if it has been deleted.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>current</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the value at the cursor position, or null if the value at the cursor position has been</color>
<color=#75715e>   * deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to use {@link</color>
<color=#75715e>   *     LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the value at the cursor position, or null if it has been deleted.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>V</color> <color=#a6e22e>current</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor according to the specified {@link Get} type and returns the value at the</color>
<color=#75715e>   * updated position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The following table lists each allowed operation. Also specified is whether the cursor must</color>
<color=#75715e>   * be initialized (positioned on a value) before calling this method. See the individual {@link</color>
<color=#75715e>   * Get} operations for more information. <div></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1" summary=""></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <th>Get operation</th></color>
<color=#75715e>   *     <th>Description</th></color>
<color=#75715e>   *     <th>Cursor position<br/>must be initialized?</th></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#CURRENT}</td></color>
<color=#75715e>   *     <td>Accesses the current value.</td></color>
<color=#75715e>   *     <td>yes</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#FIRST}</td></color>
<color=#75715e>   *     <td>Finds the first value in the cursor range.</td></color>
<color=#75715e>   *     <td>no</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#LAST}</td></color>
<color=#75715e>   *     <td>Finds the last value in the cursor range.</td></color>
<color=#75715e>   *     <td>no</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#NEXT}</td></color>
<color=#75715e>   *     <td>Moves to the next value.</td></color>
<color=#75715e>   *     <td>no**</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#NEXT_DUP}</td></color>
<color=#75715e>   *     <td>Moves to the next value with the same key.</td></color>
<color=#75715e>   *     <td>yes</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#NEXT_NO_DUP}</td></color>
<color=#75715e>   *     <td>Moves to the next value with a different key.</td></color>
<color=#75715e>   *     <td>no**</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#PREV}</td></color>
<color=#75715e>   *     <td>Moves to the previous value.</td></color>
<color=#75715e>   *     <td>no**</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#PREV_DUP}</td></color>
<color=#75715e>   *     <td>Moves to the previous value with the same key.</td></color>
<color=#75715e>   *     <td>yes</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#PREV_NO_DUP}</td></color>
<color=#75715e>   *     <td>Moves to the previous value with a different key.</td></color>
<color=#75715e>   *     <td>no**</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * </div></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>** - For these 'next' and 'previous' operations the cursor may be uninitialized, in which</color>
<color=#75715e>   * case the cursor will be moved to the first or last value in the cursor range, respectively.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param getType the Get operation type. Must be one of the values listed above.</color>
<color=#75715e>   * @param options the ReadOptions, or null to use default options.</color>
<color=#75715e>   * @return the EntityResult, including the value at the new cursor position, or null if the</color>
<color=#75715e>   *     requested value is not present in the cursor range.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   * @since 7.0</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>EntityResult</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>Get</color> <color=#f8f8f2>getType</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the number of values (duplicates) for the key at the cursor position, or returns zero</color>
<color=#75715e>   * if all values for the key have been deleted. Returns one or zero if the underlying index has</color>
<color=#75715e>   * unique keys.</color>
<color=#75715e>   * <!-- begin JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The cost of this method is directly proportional to the number of values.</color>
<color=#75715e>   * <!-- end JE only --></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the number of duplicates, or zero if all values for the current key have been deleted.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>count</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/**</color>
<color=#75715e>   * Returns a rough estimate of the number of values (duplicates) for the key at the cursor</color>
<color=#75715e>   * position, or returns zero if all values for the key have been deleted. Returns one or zero if</color>
<color=#75715e>   * the underlying index has unique keys.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the underlying index has non-unique keys, a quick estimate of the number of values is</color>
<color=#75715e>   * computed using information in the Btree. Because the Btree is unbalanced, in some cases the</color>
<color=#75715e>   * estimate may be off by a factor of two or more. The estimate is accurate when the number of</color>
<color=#75715e>   * records is less than the configured {@link DatabaseConfig#setNodeMaxEntries NodeMaxEntries}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The cost of this method is fixed, rather than being proportional to the number of values.</color>
<color=#75715e>   * Because its accuracy is variable, this method should normally be used when accuracy is not</color>
<color=#75715e>   * required, such as for query optimization, and a fixed cost operation is needed. For example,</color>
<color=#75715e>   * this method is used internally for determining the index processing order in an {@link</color>
<color=#75715e>   * EntityJoin}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return an estimate of the count of the number of data items for the key to which the cursor</color>
<color=#75715e>   *     refers.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#readFailures">Read Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>long</color> <color=#a6e22e>countEstimate</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/* for FUTURE use</color>
<color=#75715e>   * Moves the cursor forward by a number of values and returns the number</color>
<color=#75715e>   * moved, or returns zero if there are no values following the cursor</color>
<color=#75715e>   * position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Without regard to performance, calling this method is equivalent to</color>
<color=#75715e>   * repeatedly calling {@link #next} with {@link LockMode#READ_UNCOMMITTED}</color>
<color=#75715e>   * to skip over the desired number of values, and then calling {@link</color>
<color=#75715e>   * #current} with {@link LockMode#DEFAULT} parameter to return the final</color>
<color=#75715e>   * value.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>With regard to performance, this method is optimized to skip over</color>
<color=#75715e>   * values using a smaller number of Btree operations.  When there is no</color>
<color=#75715e>   * contention on the bottom internal nodes (BINs) and all BINs are in</color>
<color=#75715e>   * cache, the number of Btree operations is reduced by roughly two orders</color>
<color=#75715e>   * of magnitude, where the exact number depends on the {@link</color>
<color=#75715e>   * com.sleepycat.je.EnvironmentConfig#NODE_MAX_ENTRIES} setting.  When</color>
<color=#75715e>   * there is contention on BINs or fetching BINs is required, the scan is</color>
<color=#75715e>   * broken up into smaller operations to avoid blocking other threads for</color>
<color=#75715e>   * long time periods.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param maxCount the maximum number of values to skip, i.e., the maximum</color>
<color=#75715e>   * number by which the cursor should be moved; must be greater than</color>
<color=#75715e>   * zero.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the number of values skipped, i.e., the number by which the</color>
<color=#75715e>   * cursor has moved; if zero is returned, the cursor position is</color>
<color=#75715e>   * unchanged.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   * href="OperationFailureException.html#readFailures">Read Operation</color>
<color=#75715e>   * Failures</a> occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or</color>
<color=#75715e>   * environment-wide failure occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>  long skipNext(long maxCount);</color>
<color=#75715e>   */</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/* for FUTURE use</color>
<color=#75715e>   * Moves the cursor forward by a number of values and returns the number</color>
<color=#75715e>   * moved, or returns zero if there are no values following the cursor</color>
<color=#75715e>   * position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Without regard to performance, calling this method is equivalent to</color>
<color=#75715e>   * repeatedly calling {@link #next} with {@link LockMode#READ_UNCOMMITTED}</color>
<color=#75715e>   * to skip over the desired number of values, and then calling {@link</color>
<color=#75715e>   * #current} with the {@code lockMode} parameter to return the final</color>
<color=#75715e>   * value.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>With regard to performance, this method is optimized to skip over</color>
<color=#75715e>   * values using a smaller number of Btree operations.  When there is no</color>
<color=#75715e>   * contention on the bottom internal nodes (BINs) and all BINs are in</color>
<color=#75715e>   * cache, the number of Btree operations is reduced by roughly two orders</color>
<color=#75715e>   * of magnitude, where the exact number depends on the {@link</color>
<color=#75715e>   * com.sleepycat.je.EnvironmentConfig#NODE_MAX_ENTRIES} setting.  When</color>
<color=#75715e>   * there is contention on BINs or fetching BINs is required, the scan is</color>
<color=#75715e>   * broken up into smaller operations to avoid blocking other threads for</color>
<color=#75715e>   * long time periods.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param maxCount the maximum number of values to skip, i.e., the maximum</color>
<color=#75715e>   * number by which the cursor should be moved; must be greater than</color>
<color=#75715e>   * zero.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to</color>
<color=#75715e>   * use {@link LockMode#DEFAULT}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the number of values skipped, i.e., the number by which the</color>
<color=#75715e>   * cursor has moved; if zero is returned, the cursor position is</color>
<color=#75715e>   * unchanged.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   * href="OperationFailureException.html#readFailures">Read Operation</color>
<color=#75715e>   * Failures</a> occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or</color>
<color=#75715e>   * environment-wide failure occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>  long skipNext(long maxCount, LockMode lockMode);</color>
<color=#75715e>   */</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/* for FUTURE use</color>
<color=#75715e>   * Moves the cursor backward by a number of values and returns the number</color>
<color=#75715e>   * moved, or returns zero if there are no values following the cursor</color>
<color=#75715e>   * position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Without regard to performance, calling this method is equivalent to</color>
<color=#75715e>   * repeatedly calling {@link #prev} with {@link LockMode#READ_UNCOMMITTED}</color>
<color=#75715e>   * to skip over the desired number of values, and then calling {@link</color>
<color=#75715e>   * #current} with {@link LockMode#DEFAULT} parameter to return the final</color>
<color=#75715e>   * value.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>With regard to performance, this method is optimized to skip over</color>
<color=#75715e>   * values using a smaller number of Btree operations.  When there is no</color>
<color=#75715e>   * contention on the bottom internal nodes (BINs) and all BINs are in</color>
<color=#75715e>   * cache, the number of Btree operations is reduced by roughly two orders</color>
<color=#75715e>   * of magnitude, where the exact number depends on the {@link</color>
<color=#75715e>   * com.sleepycat.je.EnvironmentConfig#NODE_MAX_ENTRIES} setting.  When</color>
<color=#75715e>   * there is contention on BINs or fetching BINs is required, the scan is</color>
<color=#75715e>   * broken up into smaller operations to avoid blocking other threads for</color>
<color=#75715e>   * long time periods.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param maxCount the maximum number of values to skip, i.e., the maximum</color>
<color=#75715e>   * number by which the cursor should be moved; must be greater than</color>
<color=#75715e>   * zero.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the number of values skipped, i.e., the number by which the</color>
<color=#75715e>   * cursor has moved; if zero is returned, the cursor position is</color>
<color=#75715e>   * unchanged.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   * href="OperationFailureException.html#readFailures">Read Operation</color>
<color=#75715e>   * Failures</a> occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or</color>
<color=#75715e>   * environment-wide failure occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>  long skipPrev(long maxCount);</color>
<color=#75715e>   */</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/* for FUTURE use</color>
<color=#75715e>   * Moves the cursor backward by a number of values and returns the number</color>
<color=#75715e>   * moved, or returns zero if there are no values following the cursor</color>
<color=#75715e>   * position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Without regard to performance, calling this method is equivalent to</color>
<color=#75715e>   * repeatedly calling {@link #prev} with {@link LockMode#READ_UNCOMMITTED}</color>
<color=#75715e>   * to skip over the desired number of values, and then calling {@link</color>
<color=#75715e>   * #current} with the {@code lockMode} parameter to return the final</color>
<color=#75715e>   * value.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>With regard to performance, this method is optimized to skip over</color>
<color=#75715e>   * values using a smaller number of Btree operations.  When there is no</color>
<color=#75715e>   * contention on the bottom internal nodes (BINs) and all BINs are in</color>
<color=#75715e>   * cache, the number of Btree operations is reduced by roughly two orders</color>
<color=#75715e>   * of magnitude, where the exact number depends on the {@link</color>
<color=#75715e>   * com.sleepycat.je.EnvironmentConfig#NODE_MAX_ENTRIES} setting.  When</color>
<color=#75715e>   * there is contention on BINs or fetching BINs is required, the scan is</color>
<color=#75715e>   * broken up into smaller operations to avoid blocking other threads for</color>
<color=#75715e>   * long time periods.</p></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param maxCount the maximum number of values to skip, i.e., the maximum</color>
<color=#75715e>   * number by which the cursor should be moved; must be greater than</color>
<color=#75715e>   * zero.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for this operation, or null to</color>
<color=#75715e>   * use {@link LockMode#DEFAULT}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the number of values skipped, i.e., the number by which the</color>
<color=#75715e>   * cursor has moved; if zero is returned, the cursor position is</color>
<color=#75715e>   * unchanged.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   * href="OperationFailureException.html#readFailures">Read Operation</color>
<color=#75715e>   * Failures</a> occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or</color>
<color=#75715e>   * environment-wide failure occurs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>  long skipPrev(long maxCount, LockMode lockMode);</color>
<color=#75715e>   */</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an iterator over the key range, starting with the value following the current position</color>
<color=#75715e>   * or at the first value if the cursor is uninitialized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link LockMode#DEFAULT} is used implicitly.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the iterator.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>iterator</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an iterator over the key range, starting with the value following the current position</color>
<color=#75715e>   * or at the first value if the cursor is uninitialized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lockMode the lock mode to use for all operations performed using the iterator, or null</color>
<color=#75715e>   *     to use {@link LockMode#DEFAULT}.</color>
<color=#75715e>   * @return the iterator.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>iterator</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Replaces the entity at the cursor position with the given entity.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param entity the entity to replace the entity at the current position.</color>
<color=#75715e>   * @return true if successful or false if the entity at the current position was previously</color>
<color=#75715e>   *     deleted.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   * @throws UnsupportedOperationException if the index is read only or if the value type is not an</color>
<color=#75715e>   *     entity type.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws DuplicateDataException if the old and new data are not equal according to the</color>
<color=#75715e>   *     configured duplicate comparator or default comparator.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>V</color> <color=#f8f8f2>entity</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/**</color>
<color=#75715e>   * Replaces the entity at the cursor position with the given entity, using a WriteOptions</color>
<color=#75715e>   * parameter and returning an OperationResult.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param entity the entity to replace the entity at the current position.</color>
<color=#75715e>   * @param options the WriteOptions, or null to use default options.</color>
<color=#75715e>   * @return the OperationResult if successful or null if the entity at the current position was</color>
<color=#75715e>   *     previously deleted.</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   * @throws UnsupportedOperationException if the index is read only or if the value type is not an</color>
<color=#75715e>   *     entity type.</color>
<color=#75715e>   * @throws DuplicateDataException if the old and new data are not equal according to the</color>
<color=#75715e>   *     configured duplicate comparator or default comparator.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   * @since 7.0</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>OperationResult</color> <color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>V</color> <color=#f8f8f2>entity</color><color=#f8f8f2>,</color> <color=#f8f8f2>WriteOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Deletes the entity at the cursor position.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   * @throws UnsupportedOperationException if the index is read only.</color>
<color=#75715e>   * @return true if successful or false if the entity at the current position has been deleted.</color>
<color=#75715e>   *     <!-- begin JE only --></color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   *     <!-- end JE only --></color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>delete</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/**</color>
<color=#75715e>   * Deletes the entity at the cursor position, using a WriteOptions parameter and returning an</color>
<color=#75715e>   * OperationResult.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalStateException if the cursor is uninitialized.</color>
<color=#75715e>   * @throws UnsupportedOperationException if the index is read only.</color>
<color=#75715e>   * @return the OperationResult if successful or null if the entity at the current position was</color>
<color=#75715e>   *     previously deleted.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="../je/OperationFailureException.html#writeFailures">Write Operation Failures</a></color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   * @since 7.0</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>OperationResult</color> <color=#a6e22e>delete</color><color=#f8f8f2>(</color><color=#f8f8f2>WriteOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Duplicates the cursor at the cursor position. The returned cursor will be initially positioned</color>
<color=#75715e>   * at the same position as this current cursor, and will inherit this cursor's {@link Transaction}</color>
<color=#75715e>   * and {@link CursorConfig}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the duplicated cursor.</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>EntityCursor</color><color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#a6e22e>dup</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Closes the cursor.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException the base class for all BDB exceptions.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/**</color>
<color=#75715e>   * Changes the {@code CacheMode} default used for subsequent operations performed using this</color>
<color=#75715e>   * cursor. For a newly opened cursor, the default is {@link CacheMode#DEFAULT}. Note that the</color>
<color=#75715e>   * default is always overridden by a non-null cache mode that is specified via {@link ReadOptions}</color>
<color=#75715e>   * or {@link WriteOptions}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param cacheMode is the default {@code CacheMode} used for subsequent operations using this</color>
<color=#75715e>   *     cursor, or null to configure the Database or Environment default.</color>
<color=#75715e>   * @see CacheMode</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>setCacheMode</color><color=#f8f8f2>(</color><color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>);</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/**</color>
<color=#75715e>   * Returns the default {@code CacheMode} used for subsequent operations performed using this</color>
<color=#75715e>   * cursor. If {@link #setCacheMode} has not been called with a non-null value, the configured</color>
<color=#75715e>   * Database or Environment default is returned.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the {@code CacheMode} default used for subsequent operations using this cursor.</color>
<color=#75715e>   * @see CacheMode</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>CacheMode</color> <color=#a6e22e>getCacheMode</color><color=#f8f8f2>();</color>
  <color=#75715e>/* <!-- end JE only --> */</color>
<color=#f8f8f2>}</color>