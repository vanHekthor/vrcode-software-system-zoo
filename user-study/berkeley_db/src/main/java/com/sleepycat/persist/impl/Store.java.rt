<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.persist.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.EntityBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.StringBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.compat.DbCompat</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.NoConsistencyRequiredPolicy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.evolve.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.model.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.persist.raw.RawObject</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.RuntimeExceptionWrapper</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.util.keyrange.KeyRange</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Base implementation for EntityStore and RawStore. The methods here correspond directly to those</color>
<color=#75715e> * in EntityStore; see EntityStore documentation for details.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Store</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NAME_SEPARATOR</color> <color=#f92672>=</color> <color=#e6db74>"#"</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NAME_PREFIX</color> <color=#f92672>=</color> <color=#e6db74>"persist"</color> <color=#f92672>+</color> <color=#f8f8f2>NAME_SEPARATOR</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>DB_NAME_PREFIX</color> <color=#f92672>=</color> <color=#e6db74>"com.sleepycat.persist."</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>CATALOG_DB</color> <color=#f92672>=</color> <color=#f8f8f2>DB_NAME_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"formats"</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>SEQUENCE_DB</color> <color=#f92672>=</color> <color=#f8f8f2>DB_NAME_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"sequences"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Environment</color><color=#f8f8f2>,</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>PersistCatalog</color><color=#f92672>>></color> <color=#f8f8f2>catalogPool</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>WeakHashMap</color><color=#f92672><</color><color=#f8f8f2>Environment</color><color=#f8f8f2>,</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>PersistCatalog</color><color=#f92672>>></color><color=#f8f8f2>();</color>

  <color=#75715e>/* For unit testing. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>SyncHook</color> <color=#f8f8f2>syncHook</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expectFlush</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>rawAccess</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#f8f8f2>PersistCatalog</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>EntityModel</color> <color=#f8f8f2>model</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>StoreConfig</color> <color=#f8f8f2>storeConfig</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>storeName</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>storePrefix</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>InternalPrimaryIndex</color><color=#f92672>></color> <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>InternalSecondaryIndex</color><color=#f92672>></color> <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseConfig</color><color=#f92672>></color> <color=#f8f8f2>priConfigMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryConfig</color><color=#f92672>></color> <color=#f8f8f2>secConfigMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>PersistKeyBinding</color><color=#f92672>></color> <color=#f8f8f2>keyBindingMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>sequenceDb</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Sequence</color><color=#f92672>></color> <color=#f8f8f2>sequenceMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SequenceConfig</color><color=#f92672>></color> <color=#f8f8f2>sequenceConfigMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>IdentityHashMap</color><color=#f92672><</color><color=#f8f8f2>Database</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>deferredWriteDatabases</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>inverseRelatedEntityMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>autoCommitNoWaitTxnConfig</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>Store</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>storeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>StoreConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>rawAccess</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color>
          <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>env</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>storeName</color> <color=#f92672>=</color> <color=#f8f8f2>storeName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>rawAccess</color> <color=#f92672>=</color> <color=#f8f8f2>rawAccess</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>env</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>storeName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"env and storeName parameters must not be null"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>storeConfig</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#f8f8f2>StoreConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>autoCommitTxnConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>autoCommitNoWaitTxnConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>autoCommitNoWaitTxnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setNoWait</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#75715e>/* <!-- begin JE only --> */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicated</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>envDurability</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getConfig</color><color=#f8f8f2>().</color><color=#a6e22e>getDurability</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>configForNonRepDb</color><color=#f8f8f2>(</color><color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>envDurability</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>configForNonRepDb</color><color=#f8f8f2>(</color><color=#f8f8f2>autoCommitNoWaitTxnConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>envDurability</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#75715e>/* <!-- end JE only --> */</color>

    <color=#f8f8f2>model</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getModel</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>storePrefix</color> <color=#f92672>=</color> <color=#f8f8f2>NAME_PREFIX</color> <color=#f92672>+</color> <color=#f8f8f2>storeName</color> <color=#f92672>+</color> <color=#f8f8f2>NAME_SEPARATOR</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>priIndexMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>InternalPrimaryIndex</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>secIndexMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>InternalSecondaryIndex</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>priConfigMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseConfig</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>secConfigMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryConfig</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>keyBindingMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>PersistKeyBinding</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>sequenceMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Sequence</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>sequenceConfigMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SequenceConfig</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>deferredWriteDatabases</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IdentityHashMap</color><color=#f92672><</color><color=#f8f8f2>Database</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>rawAccess</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Open a read-only catalog that uses the stored model. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>model</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"A model may not be specified when opening a RawStore"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
      <color=#75715e>/* <!-- begin JE only --> */</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReplicated</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicated</color><color=#f8f8f2>());</color>
      <color=#75715e>/* <!-- end JE only --> */</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>catalog</color> <color=#f92672>=</color>
          <color=#66d9ef>new</color> <color=#f8f8f2>PersistCatalog</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>storePrefix</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>CATALOG_DB</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color>
              <color=#66d9ef>null</color> <color=#75715e>/*model*/</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getMutations</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>rawAccess</color><color=#f8f8f2>,</color>
              <color=#66d9ef>this</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Open the shared catalog that uses the current model. */</color>
      <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalogPool</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>PersistCatalog</color><color=#f92672>></color> <color=#f8f8f2>catalogMap</color> <color=#f92672>=</color> <color=#f8f8f2>catalogPool</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalogMap</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>catalogMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>PersistCatalog</color><color=#f92672>></color><color=#f8f8f2>();</color>
          <color=#f8f8f2>catalogPool</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>catalogMap</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>catalog</color> <color=#f92672>=</color> <color=#f8f8f2>catalogMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>storeName</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalog</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>openExisting</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowCreate</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setExclusiveCreate</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getExclusiveCreate</color><color=#f8f8f2>());</color>
          <color=#75715e>/* <!-- begin JE only --> */</color>
          <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTemporary</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReplicated</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicated</color><color=#f8f8f2>());</color>
          <color=#75715e>/* <!-- end JE only --> */</color>
          <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>setTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>catalog</color> <color=#f92672>=</color>
              <color=#66d9ef>new</color> <color=#f8f8f2>PersistCatalog</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>storePrefix</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>CATALOG_DB</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>model</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getMutations</color><color=#f8f8f2>(),</color>
                  <color=#f8f8f2>rawAccess</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>this</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>catalogMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>storeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * If there is no model parameter, use the default or stored model</color>
<color=#75715e>     * obtained from the catalog.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>model</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getResolvedModel</color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * For each existing entity with a relatedEntity reference, create an</color>
<color=#75715e>     * inverse map (back pointer) from the class named in the relatedEntity</color>
<color=#75715e>     * to the class containing the secondary key.  This is used to open the</color>
<color=#75715e>     * class containing the secondary key whenever we open the</color>
<color=#75715e>     * relatedEntity class, to configure foreign key constraints. Note that</color>
<color=#75715e>     * we do not need to update this map as new primary indexes are</color>
<color=#75715e>     * created, because opening the new index will setup the foreign key</color>
<color=#75715e>     * constraints. [#15358]</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>inverseRelatedEntityMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Format</color><color=#f92672>></color> <color=#f8f8f2>entityFormats</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Format</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityFormats</color><color=#f8f8f2>(</color><color=#f8f8f2>entityFormats</color><color=#f8f8f2>);</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Format</color> <color=#f8f8f2>entityFormat</color> <color=#f8f8f2>:</color> <color=#f8f8f2>entityFormats</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>entityFormat</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityMetadata</color><color=#f8f8f2>();</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color> <color=#f8f8f2>:</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryKeys</color><color=#f8f8f2>().</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>relatedClsName</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getRelatedEntity</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>inverseClassNames</color> <color=#f92672>=</color> <color=#f8f8f2>inverseRelatedEntityMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inverseClassNames</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>inverseClassNames</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
            <color=#f8f8f2>inverseRelatedEntityMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>inverseClassNames</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>inverseClassNames</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>Environment</color> <color=#a6e22e>getEnvironment</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>StoreConfig</color> <color=#a6e22e>getConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getStoreName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>storeName</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>getStoreNames</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>set</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o</color> <color=#f8f8f2>:</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseNames</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>o</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>s</color><color=#f8f8f2>.</color><color=#a6e22e>startsWith</color><color=#f8f8f2>(</color><color=#f8f8f2>NAME_PREFIX</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#f8f8f2>NAME_PREFIX</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>end</color> <color=#f92672>=</color> <color=#f8f8f2>s</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#f8f8f2>NAME_SEPARATOR</color><color=#f8f8f2>,</color> <color=#f8f8f2>start</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>s</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#f8f8f2>start</color><color=#f8f8f2>,</color> <color=#f8f8f2>end</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>set</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#75715e>/** For unit testing. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isReplicaUpgradeMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>isReplicaUpgradeMode</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>EntityModel</color> <color=#a6e22e>getModel</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>model</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>Mutations</color> <color=#a6e22e>getMutations</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getMutations</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A getPrimaryIndex with extra parameters for opening a raw store. primaryKeyClass and</color>
<color=#75715e>   * entityClass are used for generic typing; for a raw store, these should always be Object.class</color>
<color=#75715e>   * and RawObject.class. primaryKeyClassName is used for consistency checking and should be null</color>
<color=#75715e>   * for a raw store only. entityClassName is used to identify the store and may not be null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>PrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#a6e22e>getPrimaryIndex</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f92672>></color> <color=#f8f8f2>primaryKeyClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>primaryKeyClassName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>rawAccess</color> <color=#f92672>&&</color> <color=#f8f8f2>entityClass</color> <color=#f92672>==</color> <color=#f8f8f2>RawObject</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>)</color>
        <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>rawAccess</color> <color=#f92672>&&</color> <color=#f8f8f2>entityClass</color> <color=#f92672>!=</color> <color=#f8f8f2>RawObject</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>rawAccess</color> <color=#f92672>&&</color> <color=#f8f8f2>primaryKeyClassName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color>
        <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>rawAccess</color> <color=#f92672>&&</color> <color=#f8f8f2>primaryKeyClassName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>InternalPrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>priIndex</color> <color=#f92672>=</color> <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priIndex</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/* Check metadata. */</color>
      <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>PrimaryKeyMetadata</color> <color=#f8f8f2>priKeyMeta</color> <color=#f92672>=</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getPrimaryKey</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryKeyClassName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>primaryKeyClassName</color> <color=#f92672>=</color> <color=#f8f8f2>priKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>expectClsName</color> <color=#f92672>=</color> <color=#f8f8f2>SimpleCatalog</color><color=#f8f8f2>.</color><color=#a6e22e>keyClassName</color><color=#f8f8f2>(</color><color=#f8f8f2>priKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>());</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>primaryKeyClassName</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectClsName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
              <color=#e6db74>"Wrong primary key class: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>primaryKeyClassName</color>
                  <color=#f92672>+</color> <color=#e6db74>" Correct class is: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>expectClsName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Create bindings. */</color>
      <color=#f8f8f2>PersistEntityBinding</color> <color=#f8f8f2>entityBinding</color> <color=#f92672>=</color>
          <color=#66d9ef>new</color> <color=#f8f8f2>PersistEntityBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>rawAccess</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>PersistKeyBinding</color> <color=#f8f8f2>keyBinding</color> <color=#f92672>=</color> <color=#f8f8f2>getKeyBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>primaryKeyClassName</color><color=#f8f8f2>);</color>

      <color=#75715e>/* If not read-only, get the primary key sequence. */</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>seqName</color> <color=#f92672>=</color> <color=#f8f8f2>priKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getSequenceName</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>seqName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>entityBinding</color><color=#f8f8f2>.</color><color=#a6e22e>keyAssigner</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>PersistKeyAssigner</color><color=#f8f8f2>(</color><color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>getSequence</color><color=#f8f8f2>(</color><color=#f8f8f2>seqName</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Use a single transaction for opening the primary DB and its</color>
<color=#75715e>       * secondaries.  If opening any secondary fails, abort the</color>
<color=#75715e>       * transaction and undo the changes to the state of the store.</color>
<color=#75715e>       * Also support undo if the store is non-transactional.</color>
<color=#75715e>       *</color>
<color=#75715e>       * Use a no-wait transaction to avoid blocking on a Replica while</color>
<color=#75715e>       * attempting to open an index that is currently being populated</color>
<color=#75715e>       * via the replication stream from the Master.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#f8f8f2>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getThreadTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>autoCommitNoWaitTxnConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>PrimaryOpenState</color> <color=#f8f8f2>priOpenState</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PrimaryOpenState</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>saveAllowCreate</color> <color=#f92672>=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowCreate</color><color=#f8f8f2>();</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>success</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * The AllowCreate setting is false in read-only / Replica</color>
<color=#75715e>         * upgrade mode. In this mode new primaries are not available.</color>
<color=#75715e>         * They can be opened later when the upgrade is complete on the</color>
<color=#75715e>         * Master, by calling getSecondaryIndex.  [#16655]</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Open the primary database.  Account for database renaming</color>
<color=#75715e>         * by calling getDatabaseClassName.  The dbClassName will be</color>
<color=#75715e>         * null if the format has not yet been stored. [#16655].</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbClassName</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseClassName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbClassName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileAndDbNames</color> <color=#f92672>=</color> <color=#f8f8f2>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>dbClassName</color><color=#f8f8f2>);</color>
          <color=#75715e>/* <!-- begin JE only --> */</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* <!-- end JE only --> */</color>
            <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
            <color=#75715e>/* <!-- begin JE only --> */</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>LockConflictException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* Treat this as if the database does not exist. */</color>
          <color=#f8f8f2>}</color>
          <color=#75715e>/* <!-- end JE only --> */</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>db</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IndexNotAvailableException</color><color=#f8f8f2>(</color>
              <color=#e6db74>"PrimaryIndex not yet available on this Replica, "</color>
                  <color=#f92672>+</color> <color=#e6db74>"entity class: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>priOpenState</color><color=#f8f8f2>.</color><color=#a6e22e>addDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>

        <color=#75715e>/* Create index object. */</color>
        <color=#f8f8f2>priIndex</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>InternalPrimaryIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>primaryKeyClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityBinding</color><color=#f8f8f2>);</color>

        <color=#75715e>/* Update index and database maps. */</color>
        <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>priIndex</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>deferredWriteDatabases</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/* If not read-only, open all associated secondaries. */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>openSecondaryIndexes</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>priOpenState</color><color=#f8f8f2>);</color>

          <color=#75715e>/*</color>
<color=#75715e>           * To enable foreign key contraints, also open all primary</color>
<color=#75715e>           * indexes referring to this class via a relatedEntity</color>
<color=#75715e>           * property in another entity. [#15358]</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>inverseClassNames</color> <color=#f92672>=</color> <color=#f8f8f2>inverseRelatedEntityMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inverseClassNames</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>relatedClsName</color> <color=#f8f8f2>:</color> <color=#f8f8f2>inverseClassNames</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>getRelatedIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>success</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f8f8f2>saveAllowCreate</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>success</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>priOpenState</color><color=#f8f8f2>.</color><color=#a6e22e>undoState</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>priIndex</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Holds state information about opening a primary index and its secondary indexes. Used to undo</color>
<color=#75715e>   * the state of this object if the transaction opening the primary and secondaries aborts. Also</color>
<color=#75715e>   * used to close all databases opened during this process for a non-transactional store.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>PrimaryOpenState</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>IdentityHashMap</color><color=#f92672><</color><color=#f8f8f2>Database</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>databases</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>secNames</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>PrimaryOpenState</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>entityClassName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>databases</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IdentityHashMap</color><color=#f92672><</color><color=#f8f8f2>Database</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color><color=#f8f8f2>();</color>
      <color=#f8f8f2>secNames</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/** Save a database that was opening during this operation. */</color>
    <color=#66d9ef>void</color> <color=#a6e22e>addDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>databases</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/** Save the name of a secondary index that was opening during this operation. */</color>
    <color=#66d9ef>void</color> <color=#a6e22e>addSecondaryName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>secName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>secNames</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Reset all state information and closes any databases opened, when this operation fails. This</color>
<color=#75715e>     * method should be called for both transactional and non-transsactional operation.</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>For transactional operations on JE, we don't strictly need to close the databases since</color>
<color=#75715e>     * the transaction abort will do that. However, closing them is harmless on JE, and required for</color>
<color=#75715e>     * DB core.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>void</color> <color=#a6e22e>undoState</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f8f8f2>:</color> <color=#f8f8f2>databases</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>ignored</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>secName</color> <color=#f8f8f2>:</color> <color=#f8f8f2>secNames</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f8f8f2>:</color> <color=#f8f8f2>databases</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>deferredWriteDatabases</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Opens a primary index related via a foreign key (relatedEntity). Related indexes are not opened</color>
<color=#75715e>   * in the same transaction used by the caller to open a primary or secondary. It is OK to leave</color>
<color=#75715e>   * the related index open when the caller's transaction aborts. It is only important to open a</color>
<color=#75715e>   * primary and its secondaries atomically.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>PrimaryIndex</color> <color=#a6e22e>getRelatedIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>relatedClsName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>PrimaryIndex</color> <color=#f8f8f2>relatedIndex</color> <color=#f92672>=</color> <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>relatedIndex</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>relatedEntityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>Class</color> <color=#f8f8f2>relatedKeyCls</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>relatedKeyClsName</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>Class</color> <color=#f8f8f2>relatedCls</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>rawAccess</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>relatedCls</color> <color=#f92672>=</color> <color=#f8f8f2>RawObject</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>relatedKeyCls</color> <color=#f92672>=</color> <color=#f8f8f2>Object</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>relatedKeyClsName</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>relatedCls</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>resolveClass</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Related entity class not found: "</color> <color=#f92672>+</color> <color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>relatedKeyClsName</color> <color=#f92672>=</color>
            <color=#f8f8f2>SimpleCatalog</color><color=#f8f8f2>.</color><color=#a6e22e>keyClassName</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedEntityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getPrimaryKey</color><color=#f8f8f2>().</color><color=#a6e22e>getClassName</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>relatedKeyCls</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>resolveKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedKeyClsName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Cycles are prevented here by adding primary indexes to the</color>
<color=#75715e>       * priIndexMap as soon as they are created, before opening related</color>
<color=#75715e>       * indexes.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>relatedIndex</color> <color=#f92672>=</color>
          <color=#f8f8f2>getPrimaryIndex</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>relatedKeyCls</color><color=#f8f8f2>,</color> <color=#f8f8f2>relatedKeyClsName</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>relatedCls</color><color=#f8f8f2>,</color> <color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>relatedIndex</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A getSecondaryIndex with extra parameters for opening a raw store. keyClassName is used for</color>
<color=#75715e>   * consistency checking and should be null for a raw store only.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E1</color><color=#f8f8f2>,</color> <color=#f8f8f2>E2</color> <color=#66d9ef>extends</color> <color=#f8f8f2>E1</color><color=#f92672>></color> <color=#f8f8f2>SecondaryIndex</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E2</color><color=#f92672>></color> <color=#a6e22e>getSecondaryIndex</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>PrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E1</color><color=#f92672>></color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>E2</color><color=#f92672>></color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f92672>></color> <color=#f8f8f2>keyClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>rawAccess</color> <color=#f92672>&&</color> <color=#f8f8f2>keyClassName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>rawAccess</color> <color=#f92672>&&</color> <color=#f8f8f2>keyClassName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Validate the subclass for a subclass index. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entityClass</color> <color=#f92672>!=</color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityClass</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>model</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>secKeyMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkSecKey</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>subclassName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>declaringClassName</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getDeclaringClassName</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>subclassName</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>declaringClassName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Key for subclass "</color>
                <color=#f92672>+</color> <color=#f8f8f2>subclassName</color>
                <color=#f92672>+</color> <color=#e6db74>" is declared in a different class: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>declaringClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Get/create the subclass format to ensure it is stored in the</color>
<color=#75715e>       * catalog, even if no instances of the subclass are stored.</color>
<color=#75715e>       * [#16399]</color>
<color=#75715e>       */</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*checkEntitySubclassIndexes*/</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>RefreshException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>();</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*checkEntitySubclassIndexes*/</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>RefreshException</color> <color=#f8f8f2>e2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e2</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Even though the primary is already open, we can't assume the</color>
<color=#75715e>     * secondary is open because we don't automatically open all</color>
<color=#75715e>     * secondaries when the primary is read-only.  Use auto-commit (a null</color>
<color=#75715e>     * transaction) since we're opening only one database.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color> <color=#f92672>=</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>InternalSecondaryIndex</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E2</color><color=#f92672>></color> <color=#f8f8f2>secIndex</color> <color=#f92672>=</color> <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secIndex</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>model</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
        <color=#66d9ef>assert</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secKeyMeta</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>secKeyMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkSecKey</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Check metadata. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keyClassName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>keyClassName</color> <color=#f92672>=</color> <color=#f8f8f2>getSecKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>expectClsName</color> <color=#f92672>=</color> <color=#f8f8f2>getSecKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>keyClassName</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectClsName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
              <color=#e6db74>"Wrong secondary key class: "</color> <color=#f92672>+</color> <color=#f8f8f2>keyClassName</color> <color=#f92672>+</color> <color=#e6db74>" Correct class is: "</color> <color=#f92672>+</color> <color=#f8f8f2>expectClsName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Account for database renaming.  The dbClassName or dbKeyName</color>
<color=#75715e>       * will be null if the format has not yet been stored. [#16655]</color>
<color=#75715e>       */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbClassName</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseClassName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbKeyName</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseKeyName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbClassName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>dbKeyName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Use a no-wait transaction to avoid blocking on a Replica</color>
<color=#75715e>         * while attempting to open an index that is currently being</color>
<color=#75715e>         * populated via the replication stream from the Master.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>).</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>()</color>
            <color=#f92672>&&</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getThreadTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>autoCommitNoWaitTxnConfig</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>success</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The doNotCreate param is true below in read-only /</color>
<color=#75715e>           * Replica upgrade mode. In this mode new secondaries are</color>
<color=#75715e>           * not available.  They can be opened later when the</color>
<color=#75715e>           * upgrade is complete on the Master, by calling</color>
<color=#75715e>           * getSecondaryIndex.  [#16655]</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>secIndex</color> <color=#f92672>=</color>
              <color=#f8f8f2>openSecondaryIndex</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>keyClass</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>secName</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>dbClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbKeyName</color><color=#f8f8f2>),</color>
                  <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>()</color> <color=#75715e>/*doNotCreate*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>null</color> <color=#75715e>/*priOpenState*/</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>success</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#75715e>/* <!-- begin JE only --> */</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>LockConflictException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* Treat this as if the database does not exist. */</color>
          <color=#75715e>/* <!-- end JE only --> */</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>success</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secIndex</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IndexNotAvailableException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"SecondaryIndex not yet available on this Replica, "</color>
                <color=#f92672>+</color> <color=#e6db74>"entity class: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>entityClassName</color>
                <color=#f92672>+</color> <color=#e6db74>", key name: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>secIndex</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Opens secondary indexes for a given primary index metadata. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>openSecondaryIndexes</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>PrimaryOpenState</color> <color=#f8f8f2>priOpenState</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>String</color> <color=#f8f8f2>entityClassName</color> <color=#f92672>=</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>PrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>priIndex</color> <color=#f92672>=</color> <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>priIndex</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>entityClass</color> <color=#f92672>=</color> <color=#f8f8f2>priIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityClass</color><color=#f8f8f2>();</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color> <color=#f8f8f2>:</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryKeys</color><color=#f8f8f2>().</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyName</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color> <color=#f92672>=</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>SecondaryIndex</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>secIndex</color> <color=#f92672>=</color> <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secIndex</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color> <color=#f92672>=</color> <color=#f8f8f2>getSecKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>);</color>
        <color=#75715e>/* RawMode: should not require class. */</color>
        <color=#f8f8f2>Class</color> <color=#f8f8f2>keyClass</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>resolveKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>keyClassName</color><color=#f8f8f2>);</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Account for database renaming.  The dbClassName or dbKeyName</color>
<color=#75715e>         * will be null if the format has not yet been stored. [#16655]</color>
<color=#75715e>         */</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbClassName</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseClassName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbKeyName</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseKeyName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbClassName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>dbKeyName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The doNotCreate param is true below in two cases:</color>
<color=#75715e>           * 1- When SecondaryBulkLoad=true, new secondaries are not</color>
<color=#75715e>           *    created/populated until getSecondaryIndex is called.</color>
<color=#75715e>           * 2- In read-only / Replica upgrade mode, new secondaries</color>
<color=#75715e>           *    are not openeed when the primary is opened.  They can</color>
<color=#75715e>           *    be opened later when the upgrade is complete on the</color>
<color=#75715e>           *    Master, by calling getSecondaryIndex.  [#16655]</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>openSecondaryIndex</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>priIndex</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>keyClass</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>secName</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>dbClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbKeyName</color><color=#f8f8f2>),</color>
              <color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryBulkLoad</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>())</color> <color=#75715e>/*doNotCreate*/</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>priOpenState</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Opens a secondary index with a given transaction and adds it to the secIndexMap. We assume that</color>
<color=#75715e>   * the index is not already open.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E1</color><color=#f8f8f2>,</color> <color=#f8f8f2>E2</color> <color=#66d9ef>extends</color> <color=#f8f8f2>E1</color><color=#f92672>></color> <color=#f8f8f2>InternalSecondaryIndex</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E2</color><color=#f92672>></color> <color=#a6e22e>openSecondaryIndex</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>PrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E1</color><color=#f92672>></color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>E2</color><color=#f92672>></color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f92672>></color> <color=#f8f8f2>keyClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>dbSecName</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>doNotCreate</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>PrimaryOpenState</color> <color=#f8f8f2>priOpenState</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileAndDbNames</color> <color=#f92672>=</color> <color=#f8f8f2>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>dbSecName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#f8f8f2>getSecondaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Database</color> <color=#f8f8f2>priDb</color> <color=#f92672>=</color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>priConfig</color> <color=#f92672>=</color> <color=#f8f8f2>priDb</color><color=#f8f8f2>.</color><color=#a6e22e>getConfig</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>String</color> <color=#f8f8f2>relatedClsName</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getRelatedEntity</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>PrimaryIndex</color> <color=#f8f8f2>relatedIndex</color> <color=#f92672>=</color> <color=#f8f8f2>getRelatedIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedClsName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setForeignKeyDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>relatedIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>)</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"One of these properties was changed to be inconsistent"</color>
              <color=#f92672>+</color> <color=#e6db74>" with the associated primary database: "</color>
              <color=#f92672>+</color> <color=#e6db74>" Transactional, DeferredWrite, ReadOnly"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>PersistKeyBinding</color> <color=#f8f8f2>keyBinding</color> <color=#f92672>=</color> <color=#f8f8f2>getKeyBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>keyClassName</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>SecondaryDatabase</color> <color=#f8f8f2>db</color> <color=#f92672>=</color>
        <color=#f8f8f2>openSecondaryDatabase</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f8f8f2>,</color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#f8f8f2>doNotCreate</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>db</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>doNotCreate</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>InternalSecondaryIndex</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E2</color><color=#f92672>></color> <color=#f8f8f2>secIndex</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>InternalSecondaryIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>getKeyCreator</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>));</color>

    <color=#75715e>/* Update index and database maps. */</color>
    <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>,</color> <color=#f8f8f2>secIndex</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>deferredWriteDatabases</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priOpenState</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>priOpenState</color><color=#f8f8f2>.</color><color=#a6e22e>addDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>priOpenState</color><color=#f8f8f2>.</color><color=#a6e22e>addSecondaryName</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>secIndex</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Open a secondary database, setting AllowCreate, ExclusiveCreate and AllowPopulate</color>
<color=#75715e>   * appropriately. We either set all three of these params to true or all to false. This ensures</color>
<color=#75715e>   * that we only populate a database when it is created, never if it just happens to be empty.</color>
<color=#75715e>   * [#16399]</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>We also handle correction of a bug in duplicate ordering. See</color>
<color=#75715e>   * ComplexFormat.incorrectlyOrderedSecKeys.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param doNotCreate is true when StoreConfig.getSecondaryBulkLoad is true and we are opening a</color>
<color=#75715e>   *     secondary as a side effect of opening a primary, i.e., getSecondaryIndex is not being</color>
<color=#75715e>   *     called. If doNotCreate is true and the database does not exist, we silently ignore the</color>
<color=#75715e>   *     failure to create the DB and return null. When getSecondaryIndex is subsequently called,</color>
<color=#75715e>   *     the secondary database will be created and populated from the primary -- a bulk load.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#a6e22e>openSecondaryDatabase</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileAndDbNames</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>PrimaryIndex</color> <color=#f8f8f2>priIndex</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>doNotCreate</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowPopulate</color><color=#f8f8f2>();</color>
    <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getExclusiveCreate</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>priDb</color> <color=#f92672>=</color> <color=#f8f8f2>priIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>ComplexFormat</color> <color=#f8f8f2>entityFormat</color> <color=#f92672>=</color>
        <color=#f8f8f2>(</color><color=#f8f8f2>ComplexFormat</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>PersistEntityBinding</color><color=#f8f8f2>)</color> <color=#f8f8f2>priIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityBinding</color><color=#f8f8f2>()).</color><color=#a6e22e>entityFormat</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>saveAllowCreate</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowCreate</color><color=#f8f8f2>();</color>
    <color=#75715e>/* <!-- begin JE only --> */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>saveOverrideDuplicateComparator</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getOverrideDuplicateComparator</color><color=#f8f8f2>();</color>
    <color=#75715e>/* <!-- end JE only --> */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Comparator</color><color=#f92672><</color><color=#66d9ef>byte</color><color=#f92672>[]></color> <color=#f8f8f2>saveDupComparator</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getDuplicateComparator</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>doNotCreate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#75715e>/* First try creating a new database, populate if needed. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowCreate</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setExclusiveCreate</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#75715e>/* AllowPopulate is true; comparators are set. */</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#f8f8f2>db</color> <color=#f92672>=</color>
            <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>openSecondaryDatabase</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>priDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>db</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* For unit testing. */</color>
          <color=#66d9ef>boolean</color> <color=#f8f8f2>doFlush</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
          <color=#75715e>/* Update dup ordering bug info. [#17252] */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getDuplicateComparator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
              <color=#f92672>&&</color> <color=#f8f8f2>entityFormat</color><color=#f8f8f2>.</color><color=#a6e22e>setSecKeyCorrectlyOrdered</color><color=#f8f8f2>(</color><color=#f8f8f2>keyName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>flush</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>doFlush</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * expectFlush is false except when set by</color>
<color=#75715e>           * SecondaryDupOrderTest.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>expectFlush</color> <color=#f92672>||</color> <color=#f8f8f2>doFlush</color><color=#f8f8f2>;</color>

          <color=#66d9ef>return</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#75715e>/* Next try opening an existing database. */</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowPopulate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setExclusiveCreate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>

      <color=#75715e>/* Account for dup ordering bug. [#17252] */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getDuplicateComparator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
          <color=#f92672>&&</color> <color=#f8f8f2>entityFormat</color><color=#f8f8f2>.</color><color=#a6e22e>isSecKeyIncorrectlyOrdered</color><color=#f8f8f2>(</color><color=#f8f8f2>keyName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* <!-- begin JE only --> */</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setOverrideDuplicateComparator</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#75715e>/* <!-- end JE only --> */</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setDuplicateComparator</color><color=#f8f8f2>((</color><color=#f8f8f2>Comparator</color><color=#f92672><</color><color=#66d9ef>byte</color><color=#f92672>[]></color><color=#f8f8f2>)</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#f8f8f2>db</color> <color=#f92672>=</color>
          <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>openSecondaryDatabase</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>priDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowPopulate</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setExclusiveCreate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f8f8f2>saveAllowCreate</color><color=#f8f8f2>);</color>
      <color=#75715e>/* <!-- begin JE only --> */</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setOverrideBtreeComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>saveOverrideDuplicateComparator</color><color=#f8f8f2>);</color>
      <color=#75715e>/* <!-- end JE only --> */</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setDuplicateComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>saveDupComparator</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Checks that all secondary indexes defined in the given entity metadata are already open. This</color>
<color=#75715e>   * method is called when a new entity subclass is encountered when an instance of that class is</color>
<color=#75715e>   * stored. [#16399]</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException if a secondary is not open.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>checkEntitySubclassSecondaries</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>subclassName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryBulkLoad</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>entityClassName</color> <color=#f92672>=</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>();</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color> <color=#f8f8f2>:</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryKeys</color><color=#f8f8f2>().</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyName</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color> <color=#f92672>=</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Entity subclasses defining a secondary key must be "</color>
                <color=#f92672>+</color> <color=#e6db74>"registered by calling EntityModel.registerClass or "</color>
                <color=#f92672>+</color> <color=#e6db74>"EntityStore.getSubclassIndex before storing an "</color>
                <color=#f92672>+</color> <color=#e6db74>"instance of the subclass: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>subclassName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>sync</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Database</color><color=#f92672>></color> <color=#f8f8f2>dbs</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Database</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>dbs</color><color=#f8f8f2>.</color><color=#a6e22e>addAll</color><color=#f8f8f2>(</color><color=#f8f8f2>deferredWriteDatabases</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f8f8f2>:</color> <color=#f8f8f2>dbs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>sync</color><color=#f8f8f2>();</color>
      <color=#75715e>/* Call hook for unit testing. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>syncHook</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>syncHook</color><color=#f8f8f2>.</color><color=#a6e22e>onSync</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
  <color=#75715e>/* <!-- end JE only --> */</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>truncateClass</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>truncateClass</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>truncateClass</color><color=#f8f8f2>(</color><color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>checkWriteAllowed</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Close primary and secondary databases. */</color>
    <color=#f8f8f2>closeClass</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClass</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>

    <color=#66d9ef>boolean</color> <color=#f8f8f2>autoCommit</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>()</color>
        <color=#f92672>&&</color> <color=#f8f8f2>txn</color> <color=#f92672>==</color> <color=#66d9ef>null</color>
        <color=#f92672>&&</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>getThreadTransaction</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>autoCommit</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Truncate the primary first and let any exceptions propogate</color>
<color=#75715e>     * upwards.  Then remove each secondary, only throwing the first</color>
<color=#75715e>     * exception.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>success</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>primaryExists</color> <color=#f92672>=</color> <color=#f8f8f2>truncateIfExists</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryExists</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>keyMeta</color> <color=#f8f8f2>:</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryKeys</color><color=#f8f8f2>().</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* Ignore secondaries that do not exist. */</color>
          <color=#f8f8f2>removeIfExists</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyName</color><color=#f8f8f2>()));</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstException</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>success</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>autoCommit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>success</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>truncateIfExists</color><color=#f8f8f2>(</color><color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileAndDbNames</color> <color=#f92672>=</color> <color=#f8f8f2>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>dbName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>truncateDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>removeIfExists</color><color=#f8f8f2>(</color><color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileAndDbNames</color> <color=#f92672>=</color> <color=#f8f8f2>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>dbName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>removeDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>closeClass</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>PrimaryIndex</color> <color=#f8f8f2>priIndex</color> <color=#f92672>=</color> <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priIndex</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Close the secondaries first. */</color>
      <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>keyMeta</color> <color=#f8f8f2>:</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryKeys</color><color=#f8f8f2>().</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color> <color=#f92672>=</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyName</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>SecondaryIndex</color> <color=#f8f8f2>secIndex</color> <color=#f92672>=</color> <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secIndex</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>secIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>secIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getKeysDatabase</color><color=#f8f8f2>(),</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>deferredWriteDatabases</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#75715e>/* Close the primary last. */</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>priIndex</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>deferredWriteDatabases</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>

      <color=#75715e>/* Throw the first exception encountered. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstException</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalog</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>rawAccess</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>allClosed</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#66d9ef>assert</color> <color=#f8f8f2>allClosed</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalogPool</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>PersistCatalog</color><color=#f92672>></color> <color=#f8f8f2>catalogMap</color> <color=#f92672>=</color> <color=#f8f8f2>catalogPool</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
          <color=#66d9ef>assert</color> <color=#f8f8f2>catalogMap</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#66d9ef>boolean</color> <color=#f8f8f2>removeFromCatalog</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>removeFromCatalog</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
            <color=#75715e>/*</color>
<color=#75715e>             * Remove it if the reference count goes to zero, or</color>
<color=#75715e>             * when an exception is thrown while closing the db.</color>
<color=#75715e>             */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>removeFromCatalog</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>catalogMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>storeName</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>catalog</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstException</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Sequence</color> <color=#f8f8f2>seq</color> <color=#f8f8f2>:</color> <color=#f8f8f2>sequenceMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>seq</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstException</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>sequenceDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>);</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryIndex</color> <color=#f8f8f2>index</color> <color=#f8f8f2>:</color> <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>(),</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color><color=#f8f8f2>.</color><color=#a6e22e>getKeysDatabase</color><color=#f8f8f2>(),</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>PrimaryIndex</color> <color=#f8f8f2>index</color> <color=#f8f8f2>:</color> <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>(),</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstException</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>Sequence</color> <color=#a6e22e>getSequence</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Store is read-only"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>Sequence</color> <color=#f8f8f2>seq</color> <color=#f92672>=</color> <color=#f8f8f2>sequenceMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>seq</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sequenceDb</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileAndDbNames</color> <color=#f92672>=</color> <color=#f8f8f2>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>SEQUENCE_DB</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#75715e>/* <!-- begin JE only --> */</color>
        <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReplicated</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicated</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTemporary</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>());</color>
        <color=#75715e>/* <!-- end JE only --> */</color>
        <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>setTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sequenceDb</color> <color=#f92672>=</color>
            <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color> <color=#75715e>/*txn*/</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileAndDbNames</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
        <color=#66d9ef>assert</color> <color=#f8f8f2>sequenceDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>stringToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>,</color> <color=#f8f8f2>entry</color><color=#f8f8f2>);</color>
      <color=#75715e>/* <!-- begin JE only --> */</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* <!-- end JE only --> */</color>
        <color=#f8f8f2>seq</color> <color=#f92672>=</color> <color=#f8f8f2>sequenceDb</color><color=#f8f8f2>.</color><color=#a6e22e>openSequence</color><color=#f8f8f2>(</color><color=#66d9ef>null</color> <color=#75715e>/*txn*/</color><color=#f8f8f2>,</color> <color=#f8f8f2>entry</color><color=#f8f8f2>,</color> <color=#f8f8f2>getSequenceConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>));</color>
        <color=#75715e>/* <!-- begin JE only --> */</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>SequenceExistsException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Should never happen, ExclusiveCreate is false. */</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>SequenceNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Should never happen, ALlowCreate is true. */</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#75715e>/* <!-- end JE only --> */</color>
      <color=#f8f8f2>sequenceMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>,</color> <color=#f8f8f2>seq</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>seq</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>SequenceConfig</color> <color=#a6e22e>getSequenceConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>SequenceConfig</color> <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#f8f8f2>sequenceConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>SequenceConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setInitialValue</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setRange</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setCacheSize</color><color=#f8f8f2>(</color><color=#ae81ff>100</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAutoCommitNoSync</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>sequenceConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>setSequenceConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>,</color> <color=#f8f8f2>SequenceConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getExclusiveCreate</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowCreate</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"One of these properties was illegally changed: "</color> <color=#f92672>+</color> <color=#e6db74>"AllowCreate, ExclusiveCreate"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sequenceMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Cannot set config after Sequence is open"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>sequenceConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>DatabaseConfig</color> <color=#a6e22e>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>meta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>meta</color><color=#f8f8f2>).</color><color=#a6e22e>cloneConfig</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>DatabaseConfig</color> <color=#a6e22e>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>meta</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>meta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#f8f8f2>priConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>setTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#75715e>/* <!-- begin JE only --> */</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setReplicated</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicated</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setTemporary</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setOverrideBtreeComparator</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#75715e>/* <!-- end JE only --> */</color>
      <color=#f8f8f2>setBtreeComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#f8f8f2>meta</color><color=#f8f8f2>.</color><color=#a6e22e>getPrimaryKey</color><color=#f8f8f2>().</color><color=#a6e22e>getClassName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>priConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>setPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Cannot set config after DB is open"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>meta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#f8f8f2>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>meta</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getExclusiveCreate</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowCreate</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color>
        <color=#75715e>/* <!-- begin JE only --> */</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color>
        <color=#75715e>/* <!-- end JE only --> */</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getBtreeComparator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getBtreeComparator</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"One of these properties was illegally changed: "</color>
              <color=#f92672>+</color> <color=#e6db74>"AllowCreate, ExclusiveCreate, SortedDuplicates, Temporary "</color>
              <color=#f92672>+</color> <color=#e6db74>"or BtreeComparator, "</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>isTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Only type BTREE allowed"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>priConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>SecondaryConfig</color> <color=#a6e22e>getSecondaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>entityClsName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClsName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkSecKey</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color> <color=#f92672>=</color> <color=#f8f8f2>getSecKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color> <color=#f92672>=</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryConfig</color><color=#f8f8f2>)</color>
        <color=#f8f8f2>getSecondaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>).</color><color=#a6e22e>cloneConfig</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>SecondaryConfig</color> <color=#a6e22e>getSecondaryConfig</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#f8f8f2>secConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Set common properties to match the primary DB. */</color>
      <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>priConfig</color> <color=#f92672>=</color> <color=#f8f8f2>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>SecondaryConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>setTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#75715e>/* <!-- begin JE only --> */</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setReplicated</color><color=#f8f8f2>(</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicated</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setTemporary</color><color=#f8f8f2>(</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setDeferredWrite</color><color=#f8f8f2>(</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getDeferredWrite</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setOverrideBtreeComparator</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setOverrideDuplicateComparator</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#75715e>/* <!-- end JE only --> */</color>
      <color=#75715e>/* Set secondary properties based on metadata. */</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowPopulate</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>Relationship</color> <color=#f8f8f2>rel</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getRelationship</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setSortedDuplicates</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>rel</color> <color=#f92672>==</color> <color=#f8f8f2>Relationship</color><color=#f8f8f2>.</color><color=#a6e22e>MANY_TO_ONE</color> <color=#f92672>||</color> <color=#f8f8f2>rel</color> <color=#f92672>==</color> <color=#f8f8f2>Relationship</color><color=#f8f8f2>.</color><color=#a6e22e>MANY_TO_MANY</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>setBtreeComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setDuplicateComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>priConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getBtreeComparator</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>PersistKeyCreator</color> <color=#f8f8f2>keyCreator</color> <color=#f92672>=</color>
          <color=#66d9ef>new</color> <color=#f8f8f2>PersistKeyCreator</color><color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>rawAccess</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>rel</color> <color=#f92672>==</color> <color=#f8f8f2>Relationship</color><color=#f8f8f2>.</color><color=#a6e22e>ONE_TO_MANY</color> <color=#f92672>||</color> <color=#f8f8f2>rel</color> <color=#f92672>==</color> <color=#f8f8f2>Relationship</color><color=#f8f8f2>.</color><color=#a6e22e>MANY_TO_MANY</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setMultiKeyCreator</color><color=#f8f8f2>(</color><color=#f8f8f2>keyCreator</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setKeyCreator</color><color=#f8f8f2>(</color><color=#f8f8f2>keyCreator</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>DeleteAction</color> <color=#f8f8f2>deleteAction</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getDeleteAction</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ForeignKeyDeleteAction</color> <color=#f8f8f2>baseDeleteAction</color><color=#f8f8f2>;</color>
        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>case</color> <color=#f8f8f2>ABORT</color><color=#f8f8f2>:</color>
            <color=#f8f8f2>baseDeleteAction</color> <color=#f92672>=</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>ABORT</color><color=#f8f8f2>;</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#66d9ef>case</color> <color=#f8f8f2>CASCADE</color><color=#f8f8f2>:</color>
            <color=#f8f8f2>baseDeleteAction</color> <color=#f92672>=</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>CASCADE</color><color=#f8f8f2>;</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#66d9ef>case</color> <color=#f8f8f2>NULLIFY</color><color=#f8f8f2>:</color>
            <color=#f8f8f2>baseDeleteAction</color> <color=#f92672>=</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>NULLIFY</color><color=#f8f8f2>;</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#66d9ef>default</color><color=#f8f8f2>:</color>
            <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setForeignKeyDeleteAction</color><color=#f8f8f2>(</color><color=#f8f8f2>baseDeleteAction</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color> <color=#f92672>==</color> <color=#f8f8f2>DeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>NULLIFY</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setForeignMultiKeyNullifier</color><color=#f8f8f2>(</color><color=#f8f8f2>keyCreator</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>secConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>setSecondaryConfig</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>entityClsName</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClsName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color> <color=#f92672>=</color> <color=#f8f8f2>checkSecKey</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color> <color=#f92672>=</color> <color=#f8f8f2>getSecKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>secName</color> <color=#f92672>=</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Cannot set config after DB is open"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#f8f8f2>getSecondaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getExclusiveCreate</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowCreate</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getBtreeComparator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getBtreeComparator</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getDuplicateComparator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
        <color=#f92672>||</color>
        <color=#75715e>/* <!-- begin JE only --> */</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTemporary</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color>
        <color=#75715e>/* <!-- end JE only --> */</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowPopulate</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowPopulate</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyCreator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyCreator</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getMultiKeyCreator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getMultiKeyCreator</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyNullifier</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyNullifier</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignMultiKeyNullifier</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignMultiKeyNullifier</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDeleteAction</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDeleteAction</color><color=#f8f8f2>()</color>
        <color=#f92672>||</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDatabase</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"One of these properties was illegally changed: "</color>
              <color=#f92672>+</color> <color=#e6db74>" AllowCreate, ExclusiveCreate, SortedDuplicates,"</color>
              <color=#f92672>+</color> <color=#e6db74>" BtreeComparator, DuplicateComparator, Temporary,"</color>
              <color=#f92672>+</color> <color=#e6db74>" AllowPopulate, KeyCreator, MultiKeyCreator,"</color>
              <color=#f92672>+</color> <color=#e6db74>" ForeignKeyNullifer, ForeignMultiKeyNullifier,"</color>
              <color=#f92672>+</color> <color=#e6db74>" ForeignKeyDeleteAction, ForeignKeyDatabase"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>isTypeBtree</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Only type BTREE allowed"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>secConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>secName</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>entityClsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>entityClsName</color> <color=#f92672>+</color> <color=#f8f8f2>NAME_SEPARATOR</color> <color=#f92672>+</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>makePriDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>storePrefix</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>entityClsName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>entityClsName</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>makeSecDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>storePrefix</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>entityClsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>storePrefix</color> <color=#f92672>+</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Parses a whole DB name and returns an array of 2 strings where element 0 is the file name</color>
<color=#75715e>   * (always null for JE, always non-null for DB core) and element 1 is the logical DB name (always</color>
<color=#75715e>   * non-null for JE, may be null for DB core).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#a6e22e>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>wholeName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>wholeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>storeConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseNamer</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Allows passing a namer to a static method for testing. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#a6e22e>parseDbName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>wholeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseNamer</color> <color=#f8f8f2>namer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>String</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>SEPARATE_DATABASE_FILES</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>splitName</color> <color=#f92672>=</color> <color=#f8f8f2>wholeName</color><color=#f8f8f2>.</color><color=#a6e22e>split</color><color=#f8f8f2>(</color><color=#f8f8f2>NAME_SEPARATOR</color><color=#f8f8f2>);</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>splitName</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>==</color> <color=#ae81ff>3</color> <color=#f92672>||</color> <color=#f8f8f2>splitName</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>==</color> <color=#ae81ff>4</color> <color=#f8f8f2>:</color> <color=#f8f8f2>wholeName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>splitName</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"persist"</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>wholeName</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>storeName</color> <color=#f92672>=</color> <color=#f8f8f2>splitName</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>splitName</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>splitName</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>3</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>splitName</color><color=#f92672>[</color><color=#ae81ff>3</color><color=#f92672>]</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>result</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>namer</color><color=#f8f8f2>.</color><color=#a6e22e>getFileName</color><color=#f8f8f2>(</color><color=#f8f8f2>storeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>clsName</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>result</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>result</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>result</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>wholeName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a message identifying the database from the pair of strings returned by parseDbName.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>String</color> <color=#a6e22e>getDbNameMessage</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>names</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>SEPARATE_DATABASE_FILES</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"file: "</color> <color=#f92672>+</color> <color=#f8f8f2>names</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"database: "</color> <color=#f92672>+</color> <color=#f8f8f2>names</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>checkOpen</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalog</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Store has been closed"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>checkWriteAllowed</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Store is read-only or is operating as a Replica"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>EntityMetadata</color> <color=#a6e22e>checkEntityClass</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>meta</color> <color=#f92672>=</color> <color=#f8f8f2>model</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>meta</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Class could not be loaded or is not an entity class: "</color> <color=#f92672>+</color> <color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>meta</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#a6e22e>checkSecKey</color><color=#f8f8f2>(</color><color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color> <color=#f92672>=</color> <color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryKeys</color><color=#f8f8f2>().</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>keyName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secKeyMeta</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Not a secondary key: "</color> <color=#f92672>+</color> <color=#f8f8f2>makeSecName</color><color=#f8f8f2>(</color><color=#f8f8f2>entityMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>keyName</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#a6e22e>getSecKeyClass</color><color=#f8f8f2>(</color><color=#f8f8f2>SecondaryKeyMetadata</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getElementClassName</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>clsName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>clsName</color> <color=#f92672>=</color> <color=#f8f8f2>secKeyMeta</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>SimpleCatalog</color><color=#f8f8f2>.</color><color=#a6e22e>keyClassName</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>PersistKeyBinding</color> <color=#a6e22e>getKeyBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>PersistKeyBinding</color> <color=#f8f8f2>binding</color> <color=#f92672>=</color> <color=#f8f8f2>keyBindingMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>keyClassName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>binding</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>binding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PersistKeyBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>rawAccess</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>keyBindingMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>binding</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>binding</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>PersistKeyCreator</color> <color=#a6e22e>getKeyCreator</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>PersistKeyCreator</color> <color=#f8f8f2>keyCreator</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>PersistKeyCreator</color><color=#f8f8f2>)</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyCreator</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keyCreator</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>keyCreator</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>keyCreator</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>PersistKeyCreator</color><color=#f8f8f2>)</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getMultiKeyCreator</color><color=#f8f8f2>();</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>keyCreator</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>keyCreator</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>setBtreeComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>clsName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>rawAccess</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>PersistKeyBinding</color> <color=#f8f8f2>binding</color> <color=#f92672>=</color> <color=#f8f8f2>getKeyBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>clsName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>Format</color> <color=#f8f8f2>format</color> <color=#f92672>=</color> <color=#f8f8f2>binding</color><color=#f8f8f2>.</color><color=#a6e22e>keyFormat</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>format</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>CompositeKeyFormat</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Class</color> <color=#f8f8f2>keyClass</color> <color=#f92672>=</color> <color=#f8f8f2>format</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Comparable</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>.</color><color=#a6e22e>isAssignableFrom</color><color=#f8f8f2>(</color><color=#f8f8f2>keyClass</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setBtreeComparator</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>PersistComparator</color><color=#f8f8f2>(</color><color=#f8f8f2>binding</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseException</color> <color=#a6e22e>closeDb</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>db</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstException</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>firstException</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>firstException</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>EvolveStats</color> <color=#a6e22e>evolve</color><color=#f8f8f2>(</color><color=#f8f8f2>EvolveConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>checkOpen</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>checkWriteAllowed</color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Before starting, ensure that we are not in Replica Upgrade Mode and</color>
<color=#75715e>     * the catalog metadata is not stale.  If this node is a Replica, a</color>
<color=#75715e>     * ReplicaWriteException will occur further below.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>isReplicaUpgradeMode</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>isMetadataStale</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>attemptRefresh</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* To ensure consistency use a single catalog instance. [#16655] */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>PersistCatalog</color> <color=#f8f8f2>useCatalog</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Format</color><color=#f92672>></color> <color=#f8f8f2>toEvolve</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Format</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>configToEvolve</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getClassesToEvolve</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>configToEvolve</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>useCatalog</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityFormats</color><color=#f8f8f2>(</color><color=#f8f8f2>toEvolve</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>name</color> <color=#f8f8f2>:</color> <color=#f8f8f2>configToEvolve</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Format</color> <color=#f8f8f2>format</color> <color=#f92672>=</color> <color=#f8f8f2>useCatalog</color><color=#f8f8f2>.</color><color=#a6e22e>getFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>format</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Class to evolve is not persistent: "</color> <color=#f92672>+</color> <color=#f8f8f2>name</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>format</color><color=#f8f8f2>.</color><color=#a6e22e>isEntity</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Class to evolve is not an entity class: "</color> <color=#f92672>+</color> <color=#f8f8f2>name</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>toEvolve</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>format</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>EvolveEvent</color> <color=#f8f8f2>event</color> <color=#f92672>=</color> <color=#f8f8f2>EvolveInternal</color><color=#f8f8f2>.</color><color=#a6e22e>newEvent</color><color=#f8f8f2>();</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Format</color> <color=#f8f8f2>format</color> <color=#f8f8f2>:</color> <color=#f8f8f2>toEvolve</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>format</color><color=#f8f8f2>.</color><color=#a6e22e>getEvolveNeeded</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>evolveIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>format</color><color=#f8f8f2>,</color> <color=#f8f8f2>event</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getEvolveListener</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>format</color><color=#f8f8f2>.</color><color=#a6e22e>setEvolveNeeded</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>useCatalog</color><color=#f8f8f2>.</color><color=#a6e22e>flush</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>event</color><color=#f8f8f2>.</color><color=#a6e22e>getStats</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>evolveIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>Format</color> <color=#f8f8f2>format</color><color=#f8f8f2>,</color> <color=#f8f8f2>EvolveEvent</color> <color=#f8f8f2>event</color><color=#f8f8f2>,</color> <color=#f8f8f2>EvolveListener</color> <color=#f8f8f2>listener</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* We may make this configurable later. */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>WRITES_PER_TXN</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>Class</color> <color=#f8f8f2>entityClass</color> <color=#f92672>=</color> <color=#f8f8f2>format</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>entityClassName</color> <color=#f92672>=</color> <color=#f8f8f2>format</color><color=#f8f8f2>.</color><color=#a6e22e>getClassName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>EntityMetadata</color> <color=#f8f8f2>meta</color> <color=#f92672>=</color> <color=#f8f8f2>model</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>keyClassName</color> <color=#f92672>=</color> <color=#f8f8f2>meta</color><color=#f8f8f2>.</color><color=#a6e22e>getPrimaryKey</color><color=#f8f8f2>().</color><color=#a6e22e>getClassName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>keyClassName</color> <color=#f92672>=</color> <color=#f8f8f2>SimpleCatalog</color><color=#f8f8f2>.</color><color=#a6e22e>keyClassName</color><color=#f8f8f2>(</color><color=#f8f8f2>keyClassName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#f8f8f2>getPrimaryConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>meta</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>PrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>index</color> <color=#f92672>=</color>
        <color=#f8f8f2>getPrimaryIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>index</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>EntityBinding</color> <color=#f8f8f2>binding</color> <color=#f92672>=</color> <color=#f8f8f2>index</color><color=#f8f8f2>.</color><color=#a6e22e>getEntityBinding</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cursorConfig</color> <color=#f92672>=</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>READ_COMMITTED</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nWritten</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>oneWritten</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>evolveNeeded</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>binding</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>oneWritten</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>nWritten</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#75715e>/* Update event stats, even if no listener. [#17024] */</color>
        <color=#f8f8f2>EvolveInternal</color><color=#f8f8f2>.</color><color=#a6e22e>updateEvent</color><color=#f8f8f2>(</color><color=#f8f8f2>event</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityClassName</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>oneWritten</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>listener</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>listener</color><color=#f8f8f2>.</color><color=#a6e22e>evolveProgress</color><color=#f8f8f2>(</color><color=#f8f8f2>event</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>nWritten</color> <color=#f92672>>=</color> <color=#f8f8f2>WRITES_PER_TXN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>saveKey</color> <color=#f92672>=</color> <color=#f8f8f2>KeyRange</color><color=#f8f8f2>.</color><color=#a6e22e>copy</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchKeyRange</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color> <color=#f92672>&&</color> <color=#f8f8f2>KeyRange</color><color=#f8f8f2>.</color><color=#a6e22e>equalBytes</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>saveKey</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nWritten</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Checks whether the given data is in the current format by translating it to/from an object. If</color>
<color=#75715e>   * true is returned, data is updated.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>evolveNeeded</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>EntityBinding</color> <color=#f8f8f2>binding</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Object</color> <color=#f8f8f2>entity</color> <color=#f92672>=</color> <color=#f8f8f2>binding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>newData</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>binding</color><color=#f8f8f2>.</color><color=#a6e22e>objectToData</color><color=#f8f8f2>(</color><color=#f8f8f2>entity</color><color=#f8f8f2>,</color> <color=#f8f8f2>newData</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>newData</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#f8f8f2>newData</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>off</color> <color=#f92672>=</color> <color=#f8f8f2>newData</color><color=#f8f8f2>.</color><color=#a6e22e>getOffset</color><color=#f8f8f2>();</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#f8f8f2>newData</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>setData</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>,</color> <color=#f8f8f2>off</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For unit testing. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setSyncHook</color><color=#f8f8f2>(</color><color=#f8f8f2>SyncHook</color> <color=#f8f8f2>hook</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>syncHook</color> <color=#f92672>=</color> <color=#f8f8f2>hook</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For unit testing. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>SyncHook</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>void</color> <color=#a6e22e>onSync</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Attempts to refresh metadata and returns whether a refresh occurred. May be called when we</color>
<color=#75715e>   * expect that updated metadata may be available on disk, and if so could be used to satisfy the</color>
<color=#75715e>   * user's request. For example, if an index is requested and not available, we can try a refresh</color>
<color=#75715e>   * and the check for the index again.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>attemptRefresh</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>PersistCatalog</color> <color=#f8f8f2>oldCatalog</color> <color=#f92672>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>PersistCatalog</color> <color=#f8f8f2>newCatalog</color> <color=#f92672>=</color> <color=#f8f8f2>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>oldCatalog</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color> <color=#75715e>/*errorFormatId*/</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color> <color=#75715e>/*cause*/</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>oldCatalog</color> <color=#f92672>!=</color> <color=#f8f8f2>newCatalog</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called via RefreshException.refresh when handling the RefreshException in the binding methods,</color>
<color=#75715e>   * when a Replica detects that its in-memory metadata is stale.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>During refresh, objects that are visible to the user must not be re-created, since the user</color>
<color=#75715e>   * may have a reference to them. The PersistCatalog is re-created by this method, and the</color>
<color=#75715e>   * additional objects listed below are refreshed without creating a new instance. The refresh()</color>
<color=#75715e>   * method of non-indented classes is called, and these methods forward the call to indented</color>
<color=#75715e>   * classes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>PersistCatalog EntityModel PrimaryIndex PersistEntityBinding PersistKeyAssigner</color>
<color=#75715e>   * SecondaryIndex PersistKeyCreator PersistKeyBinding</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>These objects have volatile catalog and format fields. When a refresh in one thread changes</color>
<color=#75715e>   * these fields, other threads should notice the changes ASAP. However, it is not necessary that</color>
<color=#75715e>   * all access to these fields is synchronized. It is Ok for a mix of old and new fields to be used</color>
<color=#75715e>   * at any point in time. If an old object is used after a refresh, the need for a refresh may be</color>
<color=#75715e>   * detected, causing another call to this method. In most cases the redundant refresh will be</color>
<color=#75715e>   * avoided (see check below), but in some cases an extra unnecessary refresh may be performed.</color>
<color=#75715e>   * This is undesirable, but is not dangerous. Synchronization must be avoided to prevent blocking</color>
<color=#75715e>   * during read/write operations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>[#16655]</color>
<color=#75715e>   */</color>
  <color=#66d9ef>synchronized</color> <color=#f8f8f2>PersistCatalog</color> <color=#a6e22e>refresh</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>PersistCatalog</color> <color=#f8f8f2>oldCatalog</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>errorFormatId</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>RefreshException</color> <color=#f8f8f2>cause</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * While synchronized, check to see whether metadata has already been</color>
<color=#75715e>     * refreshed.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>oldCatalog</color> <color=#f92672>!=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Another thread refreshed the metadata -- nothing to do. */</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * First refresh the catalog information, then check that the new</color>
<color=#75715e>     * metadata contains the format ID we're interested in using.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>catalog</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PersistCatalog</color><color=#f8f8f2>(</color><color=#f8f8f2>oldCatalog</color><color=#f8f8f2>,</color> <color=#f8f8f2>storePrefix</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>RuntimeExceptionWrapper</color><color=#f8f8f2>.</color><color=#a6e22e>wrapIfNeeded</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>errorFormatId</color> <color=#f92672>>=</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getNFormats</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Even with current metadata, the format is out of range. */</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>DbCompat</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Catalog could not be refreshed, may indicate corruption, "</color>
              <color=#f92672>+</color> <color=#e6db74>"errorFormatId="</color>
              <color=#f92672>+</color> <color=#f8f8f2>errorFormatId</color>
              <color=#f92672>+</color> <color=#e6db74>" nFormats="</color>
              <color=#f92672>+</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>.</color><color=#a6e22e>getNFormats</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>", ."</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>cause</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Finally refresh all other objects that directly reference catalog</color>
<color=#75715e>     * and format objects.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>InternalPrimaryIndex</color> <color=#f8f8f2>index</color> <color=#f8f8f2>:</color> <color=#f8f8f2>priIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>index</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>InternalSecondaryIndex</color> <color=#f8f8f2>index</color> <color=#f8f8f2>:</color> <color=#f8f8f2>secIndexMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>index</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>PersistKeyBinding</color> <color=#f8f8f2>binding</color> <color=#f8f8f2>:</color> <color=#f8f8f2>keyBindingMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>binding</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>config</color> <color=#f8f8f2>:</color> <color=#f8f8f2>secConfigMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>PersistKeyCreator</color> <color=#f8f8f2>keyCreator</color> <color=#f92672>=</color> <color=#f8f8f2>getKeyCreator</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>keyCreator</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>catalog</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>catalog</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>InternalPrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>PrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>PersistEntityBinding</color> <color=#f8f8f2>entityBinding</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>InternalPrimaryIndex</color><color=#f8f8f2>(</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f92672>></color> <color=#f8f8f2>keyClass</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>PersistKeyBinding</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>PersistEntityBinding</color> <color=#f8f8f2>entityBinding</color><color=#f8f8f2>)</color>
        <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>database</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyBinding</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>entityBinding</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>entityBinding</color> <color=#f92672>=</color> <color=#f8f8f2>entityBinding</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>void</color> <color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>PersistCatalog</color> <color=#f8f8f2>newCatalog</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>entityBinding</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>newCatalog</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* <!-- begin JE only --> */</color>
    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>TransactionConfig</color> <color=#a6e22e>getAutoCommitTransactionConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#75715e>/* <!-- end JE only --> */</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>InternalSecondaryIndex</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>SecondaryIndex</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f8f8f2>,</color> <color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>PersistKeyCreator</color> <color=#f8f8f2>keyCreator</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>InternalSecondaryIndex</color><color=#f8f8f2>(</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>PrimaryIndex</color><color=#f92672><</color><color=#f8f8f2>PK</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f92672>></color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>SK</color><color=#f92672>></color> <color=#f8f8f2>secondaryKeyClass</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>PersistKeyBinding</color> <color=#f8f8f2>secondaryKeyBinding</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>PersistKeyCreator</color> <color=#f8f8f2>keyCreator</color><color=#f8f8f2>)</color>
        <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>database</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color> <color=#75715e>/*keysDatabase*/</color><color=#f8f8f2>,</color> <color=#f8f8f2>primaryIndex</color><color=#f8f8f2>,</color> <color=#f8f8f2>secondaryKeyClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>secondaryKeyBinding</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>keyCreator</color> <color=#f92672>=</color> <color=#f8f8f2>keyCreator</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>void</color> <color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>PersistCatalog</color> <color=#f8f8f2>newCatalog</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>keyCreator</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>newCatalog</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* <!-- begin JE only --> */</color>
    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>TransactionConfig</color> <color=#a6e22e>getAutoCommitTransactionConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#75715e>/* <!-- end JE only --> */</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>TransactionConfig</color> <color=#a6e22e>getAutoCommitTxnConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>autoCommitTxnConfig</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* <!-- begin JE only --> */</color>
  <color=#75715e>/**</color>
<color=#75715e>   * Configures a TransactionConfig for auto-commit operations on a non-replicated transactional</color>
<color=#75715e>   * database on a replicated node. We use: - default SyncPolicy for the environment -</color>
<color=#75715e>   * ReplicaAckPolicy.NONE to avoid consistency checks on the Master - Consistency.NONE to avoid</color>
<color=#75715e>   * consistency checks on the Replica - localWrite=true to allow writing</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>configForNonRepDb</color><color=#f8f8f2>(</color><color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>envDurability</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>envDurability</color><color=#f8f8f2>.</color><color=#a6e22e>getLocalSync</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>envDurability</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicaSync</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>Durability</color><color=#f8f8f2>.</color><color=#a6e22e>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setConsistencyPolicy</color><color=#f8f8f2>(</color><color=#f8f8f2>NoConsistencyRequiredPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_CONSISTENCY</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setLocalWrite</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
  <color=#75715e>/* <!-- end JE only --> */</color>
<color=#f8f8f2>}</color>