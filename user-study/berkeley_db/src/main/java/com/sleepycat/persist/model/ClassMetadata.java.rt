<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.persist.model</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.Serializable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Collection</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The metadata for a persistent class. A persistent class may be specified with the {@link Entity}</color>
<color=#75715e> * or {@link Persistent} annotation.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>{@code ClassMetadata} objects are thread-safe. Multiple threads may safely call the methods of</color>
<color=#75715e> * a shared {@code ClassMetadata} object.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This and other metadata classes are classes rather than interfaces to allow adding properties</color>
<color=#75715e> * to the model at a future date without causing incompatibilities. Any such property will be given</color>
<color=#75715e> * a default value and its use will be optional.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ClassMetadata</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Serializable</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>2520207423701776679L</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>version</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>PrimaryKeyMetadata</color> <color=#f8f8f2>primaryKey</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryKeyMetadata</color><color=#f92672>></color> <color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>FieldMetadata</color><color=#f92672>></color> <color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>FieldMetadata</color><color=#f92672>></color> <color=#f8f8f2>persistentFields</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Used by an {@code EntityModel} to construct persistent class metadata. The optional {@link</color>
<color=#75715e>   * #getPersistentFields} property will be set to null.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param className the class name.</color>
<color=#75715e>   * @param version the version.</color>
<color=#75715e>   * @param proxiedClassName the proxied class name.</color>
<color=#75715e>   * @param entityClass whether the class is an entity class.</color>
<color=#75715e>   * @param primaryKey the primary key metadata.</color>
<color=#75715e>   * @param secondaryKeys the secondary key metadata.</color>
<color=#75715e>   * @param compositeKeyFields the composite key field metadata.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>ClassMetadata</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>,</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>version</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>PrimaryKeyMetadata</color> <color=#f8f8f2>primaryKey</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryKeyMetadata</color><color=#f92672>></color> <color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>FieldMetadata</color><color=#f92672>></color> <color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>className</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>version</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>primaryKey</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>,</color>
        <color=#66d9ef>null</color> <color=#75715e>/*persistentFields*/</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Used by an {@code EntityModel} to construct persistent class metadata.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param className the class name.</color>
<color=#75715e>   * @param version the version.</color>
<color=#75715e>   * @param proxiedClassName the proxied class name.</color>
<color=#75715e>   * @param entityClass whether the class is an entity class.</color>
<color=#75715e>   * @param primaryKey the primary key metadata.</color>
<color=#75715e>   * @param secondaryKeys the secondary key metadata.</color>
<color=#75715e>   * @param compositeKeyFields the composite key field metadata.</color>
<color=#75715e>   * @param persistentFields the persistent field metadata.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>ClassMetadata</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>,</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>version</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>PrimaryKeyMetadata</color> <color=#f8f8f2>primaryKey</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryKeyMetadata</color><color=#f92672>></color> <color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>FieldMetadata</color><color=#f92672>></color> <color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>FieldMetadata</color><color=#f92672>></color> <color=#f8f8f2>persistentFields</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>className</color> <color=#f92672>=</color> <color=#f8f8f2>className</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>version</color> <color=#f92672>=</color> <color=#f8f8f2>version</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proxiedClassName</color> <color=#f92672>=</color> <color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>entityClass</color> <color=#f92672>=</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>primaryKey</color> <color=#f92672>=</color> <color=#f8f8f2>primaryKey</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>secondaryKeys</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>compositeKeyFields</color> <color=#f92672>=</color> <color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>persistentFields</color> <color=#f92672>=</color> <color=#f8f8f2>persistentFields</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the name of the persistent class.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the name of the persistent class.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getClassName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>className</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the version of this persistent class. This may be specified using the {@link</color>
<color=#75715e>   * Entity#version} or {@link Persistent#version} annotation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the version of this persistent class.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>version</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the class name of the proxied class if this class is a {@link PersistentProxy}, or null</color>
<color=#75715e>   * otherwise.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the class name of the proxied class, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getProxiedClassName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns whether this class is an entity class.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return whether this class is an entity class.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isEntityClass</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>entityClass</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the primary key metadata for a key declared in this class, or null if none is declared.</color>
<color=#75715e>   * This may be specified using the {@link PrimaryKey} annotation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the primary key metadata, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>PrimaryKeyMetadata</color> <color=#a6e22e>getPrimaryKey</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>primaryKey</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an unmodifiable map of key name (which may be different from field name) to secondary</color>
<color=#75715e>   * key metadata for all secondary keys declared in this class, or null if no secondary keys are</color>
<color=#75715e>   * declared in this class. This metadata may be specified using {@link SecondaryKey} annotations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the unmodifiable map, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryKeyMetadata</color><color=#f92672>></color> <color=#a6e22e>getSecondaryKeys</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an unmodifiable list of metadata for the fields making up a composite key, or null if</color>
<color=#75715e>   * this is a not a composite key class. The order of the fields in the returned list determines</color>
<color=#75715e>   * their stored order and may be specified using the {@link KeyField} annotation. When the</color>
<color=#75715e>   * composite key class does not implement {@link Comparable}, the order of the fields is the</color>
<color=#75715e>   * relative sort order.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the unmodifiable list, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>FieldMetadata</color><color=#f92672>></color> <color=#a6e22e>getCompositeKeyFields</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns an unmodifiable list of metadata for the persistent fields in this class, or null if</color>
<color=#75715e>   * the default rules for persistent fields should be used. All fields returned must be declared in</color>
<color=#75715e>   * this class and must be non-static.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default (if null is returned) the persistent fields of a class will be all declared</color>
<color=#75715e>   * instance fields that are non-transient (are not declared with the <code>transient</code></color>
<color=#75715e>   * keyword). The default rules may be overridden by an {@link EntityModel}. For example, the</color>
<color=#75715e>   * {@link AnnotationModel} overrides the default rules when the {@link NotPersistent} or {@link</color>
<color=#75715e>   * NotTransient} annotation is specified.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the unmodifiable list, or null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>FieldMetadata</color><color=#f92672>></color> <color=#a6e22e>getPersistentFields</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>persistentFields</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>other</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>ClassMetadata</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ClassMetadata</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassMetadata</color><color=#f8f8f2>)</color> <color=#f8f8f2>other</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>version</color> <color=#f92672>==</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>version</color>
          <color=#f92672>&&</color> <color=#f8f8f2>entityClass</color> <color=#f92672>==</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>entityClass</color>
          <color=#f92672>&&</color> <color=#f8f8f2>nullOrEqual</color><color=#f8f8f2>(</color><color=#f8f8f2>className</color><color=#f8f8f2>,</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>className</color><color=#f8f8f2>)</color>
          <color=#f92672>&&</color> <color=#f8f8f2>nullOrEqual</color><color=#f8f8f2>(</color><color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>,</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>proxiedClassName</color><color=#f8f8f2>)</color>
          <color=#f92672>&&</color> <color=#f8f8f2>nullOrEqual</color><color=#f8f8f2>(</color><color=#f8f8f2>primaryKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>primaryKey</color><color=#f8f8f2>)</color>
          <color=#f92672>&&</color> <color=#f8f8f2>nullOrEqual</color><color=#f8f8f2>(</color><color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>,</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>secondaryKeys</color><color=#f8f8f2>)</color>
          <color=#f92672>&&</color> <color=#f8f8f2>nullOrEqual</color><color=#f8f8f2>(</color><color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>,</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>compositeKeyFields</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>version</color>
        <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>entityClass</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#f8f8f2>hashCode</color><color=#f8f8f2>(</color><color=#f8f8f2>className</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#f8f8f2>hashCode</color><color=#f8f8f2>(</color><color=#f8f8f2>proxiedClassName</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#f8f8f2>hashCode</color><color=#f8f8f2>(</color><color=#f8f8f2>primaryKey</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#f8f8f2>hashCode</color><color=#f8f8f2>(</color><color=#f8f8f2>secondaryKeys</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#f8f8f2>hashCode</color><color=#f8f8f2>(</color><color=#f8f8f2>compositeKeyFields</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>nullOrEqual</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o1</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>o2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>o1</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>o2</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>o1</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>o2</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>o</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>