<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.persist.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.math.BigDecimal</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.math.BigInteger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Used for reading object fields.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Unlike TupleInput, Strings are returned by {@link #readObject} when using this class.</color>
<color=#75715e> *</color>
<color=#75715e> * @author Mark Hayes</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>EntityInput</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** Returns the Catalog associated with this input. */</color>
  <color=#f8f8f2>Catalog</color> <color=#a6e22e>getCatalog</color><color=#f8f8f2>();</color>

  <color=#75715e>/** Return whether this input is in raw mode, i.e., whether it is returning raw instances. */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>isRawAccess</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Changes raw mode and returns the original mode, which is normally restored later. For</color>
<color=#75715e>   * temporarily changing the mode during a conversion.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>setRawAccess</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>rawAccessParam</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called via Accessor to read all fields with reference types, except for the primary key field</color>
<color=#75715e>   * and composite key fields (see readKeyObject below).</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Object</color> <color=#a6e22e>readObject</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called for a primary key field or a composite key field with a reference type.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For such key fields, no formatId is present nor can the object already be present in the</color>
<color=#75715e>   * visited object set.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Object</color> <color=#a6e22e>readKeyObject</color><color=#f8f8f2>(</color><color=#f8f8f2>Format</color> <color=#f8f8f2>format</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called for a String field, that is not a primary key field or a composite key field with a</color>
<color=#75715e>   * reference type.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For the new String format, no formatId is present nor can the object already be present in</color>
<color=#75715e>   * the visited object set. For the old String format, this method simply calls readObject for</color>
<color=#75715e>   * compatibility.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Object</color> <color=#a6e22e>readStringObject</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called via Accessor.readSecKeyFields for a primary key field with a reference type. This method</color>
<color=#75715e>   * must be called before reading any other fields.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>registerPriKeyObject</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called via Accessor.readSecKeyFields for a primary String key field. This method must be called</color>
<color=#75715e>   * before reading any other fields.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>registerPriStringKeyObject</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o</color><color=#f8f8f2>);</color>

  <color=#75715e>/** Called by ObjectArrayFormat and PrimitiveArrayFormat to read the array length. */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>readArrayLength</color><color=#f8f8f2>();</color>

  <color=#75715e>/** Called by EnumFormat to read and return index of the enum constant. */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>readEnumConstant</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>names</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called via PersistKeyCreator to skip fields prior to the secondary key field. Also called</color>
<color=#75715e>   * during class evolution so skip deleted fields.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>skipField</color><color=#f8f8f2>(</color><color=#f8f8f2>Format</color> <color=#f8f8f2>declaredFormat</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The following methods are a subset of the methods in TupleInput. */</color>

  <color=#f8f8f2>String</color> <color=#a6e22e>readString</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>char</color> <color=#a6e22e>readChar</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>boolean</color> <color=#a6e22e>readBoolean</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>byte</color> <color=#a6e22e>readByte</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>short</color> <color=#a6e22e>readShort</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>int</color> <color=#a6e22e>readInt</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>long</color> <color=#a6e22e>readLong</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>float</color> <color=#a6e22e>readSortedFloat</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>double</color> <color=#a6e22e>readSortedDouble</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>BigInteger</color> <color=#a6e22e>readBigInteger</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>BigDecimal</color> <color=#a6e22e>readSortedBigDecimal</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RefreshException</color><color=#f8f8f2>;</color>
<color=#f8f8f2>}</color>