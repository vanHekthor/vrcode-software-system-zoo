<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.DatagramSocket</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.InetSocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.ServerSocket</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.Socket</color><color=#f8f8f2>;</color>

<color=#75715e>/** An iterator to iterate over the free ports on an interface. */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FreePortLocator</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** Whether to print debugging messages -- use this to find tests that are not closing ports. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>debug</color> <color=#f92672>=</color> <color=#f8f8f2>Boolean</color><color=#f8f8f2>.</color><color=#a6e22e>getBoolean</color><color=#f8f8f2>(</color><color=#e6db74>"test.debugFreePortLocator"</color><color=#f8f8f2>);</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>hostname</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>portStart</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>portEnd</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>currPort</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Constructor identifying the interface and the port range within which to look for free ports.</color>
<color=#75715e>   * The port range specified by the arguments must be < 32768, that is, it should be outside the</color>
<color=#75715e>   * dynamic port range that is typically configured on most machines.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a</color>
<color=#75715e>   *     href="https://sleepycat.oracle.com/trac/wiki/JEKV/UnitTest#Avoidingproblemswithanonymousports.html">Anonymous</color>
<color=#75715e>   *     ports</a> for details regarding port configuration for tests.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>FreePortLocator</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>hostname</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>portStart</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>portEnd</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>portStart</color> <color=#f92672><</color> <color=#f8f8f2>portEnd</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>portStart</color> <color=#f92672>></color> <color=#ae81ff>0x7fff</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>portEnd</color> <color=#f92672>></color> <color=#ae81ff>0x7fff</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Invalid port range:"</color>
              <color=#f92672>+</color> <color=#f8f8f2>portStart</color>
              <color=#f92672>+</color> <color=#e6db74>" - "</color>
              <color=#f92672>+</color> <color=#f8f8f2>portEnd</color>
              <color=#f92672>+</color> <color=#e6db74>". "</color>
              <color=#f92672>+</color> <color=#e6db74>"The port range must not extend past:"</color>
              <color=#f92672>+</color> <color=#ae81ff>0x7fff</color>
              <color=#f92672>+</color> <color=#e6db74>" since the allocated ports could then overlap with "</color>
              <color=#f92672>+</color> <color=#e6db74>"dynamically assigned ports used by other services. "</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>hostname</color> <color=#f92672>=</color> <color=#f8f8f2>hostname</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>portStart</color> <color=#f92672>=</color> <color=#f8f8f2>portStart</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>portEnd</color> <color=#f92672>=</color> <color=#f8f8f2>portEnd</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>currPort</color> <color=#f92672>=</color> <color=#f8f8f2>portStart</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getPortStart</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>portStart</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getPortEnd</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>portEnd</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the next free port. Note that it's possible that on a busy machine another process may</color>
<color=#75715e>   * grab the "free" port before it's actually used.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>There is somewhat AIsh aspect to the code below. In general it tries to be very</color>
<color=#75715e>   * conservative, using different techniques so that it works reasonably well on Linux, Mac OS and</color>
<color=#75715e>   * Windows.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note: The use of setReuseAddress after a bind operation may look dubious, since it runs</color>
<color=#75715e>   * counter to the API doc, but it helps based on actual tests. It's also the idiom used by Apache</color>
<color=#75715e>   * Camel to find a free port. It, at least, can't hurt.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>next</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f92672>++</color><color=#f8f8f2>currPort</color> <color=#f92672><</color> <color=#f8f8f2>portEnd</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/* Try connecting to the port to see if somebody is listening. */</color>
      <color=#f8f8f2>Socket</color> <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Socket</color><color=#f8f8f2>(</color><color=#f8f8f2>hostname</color><color=#f8f8f2>,</color> <color=#f8f8f2>currPort</color><color=#f8f8f2>);</color>
        <color=#75715e>/* Somebody is listening on the port. */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FreePortLocator: "</color> <color=#f92672>+</color> <color=#f8f8f2>currPort</color> <color=#f92672>+</color> <color=#e6db74>" busy - socket"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>dumpStack</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Nobody is listening, continue with other tests. */</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>s</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>s</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* Unexpected, something's wrong, ignore the port. */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FreePortLocator: "</color> <color=#f92672>+</color> <color=#f8f8f2>currPort</color> <color=#f92672>+</color> <color=#e6db74>" busy - socket close: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Try without a hostname */</color>
      <color=#f8f8f2>ServerSocket</color> <color=#f8f8f2>ss</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>DatagramSocket</color> <color=#f8f8f2>ds</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ss</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ServerSocket</color><color=#f8f8f2>(</color><color=#f8f8f2>currPort</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ss</color><color=#f8f8f2>.</color><color=#a6e22e>setReuseAddress</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ds</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatagramSocket</color><color=#f8f8f2>(</color><color=#f8f8f2>currPort</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ds</color><color=#f8f8f2>.</color><color=#a6e22e>setReuseAddress</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FreePortLocator: "</color> <color=#f92672>+</color> <color=#f8f8f2>currPort</color> <color=#f92672>+</color> <color=#e6db74>" busy - server, datagram: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ds</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>ds</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ss</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>ss</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FreePortLocator: "</color> <color=#f92672>+</color> <color=#f8f8f2>currPort</color> <color=#f92672>+</color> <color=#e6db74>" busy - server close: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>ss</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>ds</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

      <color=#75715e>/* try with a hostname */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>sa</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>InetSocketAddress</color><color=#f8f8f2>(</color><color=#f8f8f2>hostname</color><color=#f8f8f2>,</color> <color=#f8f8f2>currPort</color><color=#f8f8f2>);</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ss</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ServerSocket</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>ss</color><color=#f8f8f2>.</color><color=#a6e22e>setReuseAddress</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ss</color><color=#f8f8f2>.</color><color=#a6e22e>bind</color><color=#f8f8f2>(</color><color=#f8f8f2>sa</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>ds</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatagramSocket</color><color=#f8f8f2>(</color><color=#f8f8f2>sa</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ds</color><color=#f8f8f2>.</color><color=#a6e22e>setReuseAddress</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
              <color=#e6db74>"FreePortLocator: "</color> <color=#f92672>+</color> <color=#f8f8f2>currPort</color> <color=#f92672>+</color> <color=#e6db74>" busy - server, datagram hostname: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ds</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>ds</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ss</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>ss</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
                  <color=#e6db74>"FreePortLocator: "</color> <color=#f92672>+</color> <color=#f8f8f2>currPort</color> <color=#f92672>+</color> <color=#e6db74>" busy - server hostname close: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Survived port test gauntlet, return it. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"FreePortLocator: "</color> <color=#f92672>+</color> <color=#f8f8f2>currPort</color> <color=#f92672>+</color> <color=#e6db74>" free"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>currPort</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
        <color=#e6db74>"No more ports available in the range: "</color> <color=#f92672>+</color> <color=#f8f8f2>portStart</color> <color=#f92672>+</color> <color=#e6db74>" - "</color> <color=#f92672>+</color> <color=#f8f8f2>portEnd</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Skip a number of ports. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>skip</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>num</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>currPort</color> <color=#f92672>+=</color> <color=#f8f8f2>num</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>