<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A mechanism for adding application specific information when asynchronously tracking the state of</color>
<color=#75715e> * a running JE HA application.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>{@link NodeState} provides information about the current state of a member of the replication</color>
<color=#75715e> * group. The application can obtain NodeState via {@link</color>
<color=#75715e> * com.sleepycat.je.rep.util.ReplicationGroupAdmin#getNodeState} or {@link</color>
<color=#75715e> * com.sleepycat.je.rep.util.DbPing#getNodeState}. A NodeState contains mostly JE-centric</color>
<color=#75715e> * information, such as whether the node is a master or replica. However, it may be important to add</color>
<color=#75715e> * in some application specific information to enable the best use of the status.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>For example, an application may want to direct operations to specific nodes based on whether</color>
<color=#75715e> * the node is available. The fields in {@link NodeState} will tell the application whether the node</color>
<color=#75715e> * is up and available in a JE HA sense, but the application may also need information about an</color>
<color=#75715e> * application level resource, which would affect the load balancing decision. The AppStateMonitor</color>
<color=#75715e> * is a way for the application to inject this kind of application specific information into the</color>
<color=#75715e> * replicated node status.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The AppStateMonitor is registered with the replicated environment using {@link</color>
<color=#75715e> * ReplicatedEnvironment#registerAppStateMonitor(AppStateMonitor)}. There is at most one</color>
<color=#75715e> * AppStateMonitor associated with the actual environment (not an {@link</color>
<color=#75715e> * com.sleepycat.je.Environment} handle) at any given time. JE HA calls {@link</color>
<color=#75715e> * AppStateMonitor#getAppState} when it is assembling status information for a given node.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>After registration, the application can obtain this application specific information along</color>
<color=#75715e> * with other JE HA status information when it obtains a {@link NodeState}, through {@link</color>
<color=#75715e> * NodeState#getAppState}.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>{@link AppStateMonitor#getAppState()} returns a byte array whose length should be larger than</color>
<color=#75715e> * 0. An IllegalStateException will be thrown if the returned byte array is 0 size. Users are</color>
<color=#75715e> * responsible for serializing and deserializing the desired information into this byte array.</color>
<color=#75715e> *</color>
<color=#75715e> * @since 5.0</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>AppStateMonitor</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return a byte array which holds information about the application's state. The application is</color>
<color=#75715e>   * responsible for serialize and deserialize this information.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note the returned byte array's length should be larger than 0.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the application state</color>
<color=#75715e>   */</color>
  <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getAppState</color><color=#f8f8f2>();</color>
<color=#f8f8f2>}</color>