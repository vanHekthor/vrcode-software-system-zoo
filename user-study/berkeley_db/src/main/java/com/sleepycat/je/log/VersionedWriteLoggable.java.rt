<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.log</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.entry.ReplicableLogEntry</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Collection</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A sub-interface of {@link Loggable} implemented by classes that can write themselves to a byte</color>
<color=#75715e> * buffer in an earlier log format, for use by instances of {@link ReplicableLogEntry} that need to</color>
<color=#75715e> * support an earlier log format during replication. See [#22336].</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Classes that implement {@code Loggable} should implement this interface if they are included</color>
<color=#75715e> * in replication data.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Implementing classes should document the version of the class's most recent format change. Log</color>
<color=#75715e> * entry classes that contain {@code VersionedWriteLoggable} items can use that information to</color>
<color=#75715e> * determine if they can copy the log contents for an entry directly or if they need to convert them</color>
<color=#75715e> * in order to be compatible with a particular log version.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>VersionedWriteLoggable</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Loggable</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the log version of the most recent format change for this loggable item.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the log version of the most recent format change</color>
<color=#75715e>   * @see ReplicableLogEntry#getLastFormatChange()</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>getLastFormatChange</color><color=#f8f8f2>();</color>

  <color=#75715e>/** @see ReplicableLogEntry#getEmbeddedLoggables() */</color>
  <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>VersionedWriteLoggable</color><color=#f92672>></color> <color=#a6e22e>getEmbeddedLoggables</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the number of bytes needed to store this object in the format for the specified log</color>
<color=#75715e>   * version. Earlier log versions only need to be supported for log entries with format changes</color>
<color=#75715e>   * made in {@link LogEntryType#LOG_VERSION_REPLICATE_OLDER} or greater.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param logVersion the log version</color>
<color=#75715e>   * @param forReplication whether the entry will be sent over the wire, and not written to the log.</color>
<color=#75715e>   * @return the number of bytes to store this object for the log version</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>getLogSize</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Serializes this object into the specified buffer in the format for the specified log version.</color>
<color=#75715e>   * Earlier log versions only need to be supported for log entries with format changes made in</color>
<color=#75715e>   * {@link LogEntryType#LOG_VERSION_REPLICATE_OLDER} or greater.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param logBuffer the destination buffer</color>
<color=#75715e>   * @param logVersion the log version</color>
<color=#75715e>   * @param forReplication whether the entry will be sent over the wire, and not written to the log.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>writeToLog</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>logBuffer</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>

  <color=#75715e>/** Returns whether this format has a variant that is optimized for replication. */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>hasReplicationFormat</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns whether it is worthwhile to materialize and then re-serialize a log entry in a format</color>
<color=#75715e>   * optimized for replication. Implementations should attempt to check efficiently, without</color>
<color=#75715e>   * instantiating the log entry object. Some implementations will simply return false.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>WARNING: The logBuffer position must not be changed by this method.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>WARNING: The shared LogEntry object is used for calling this method, and this method must</color>
<color=#75715e>   * not change any of the fields in the object.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param logBuffer contains the entry that would be re-serialized.</color>
<color=#75715e>   * @param srcVersion the log version of entry in logBuffer.</color>
<color=#75715e>   * @param destVersion the version that would be used for re-serialization.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>isReplicationFormatWorthwhile</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>logBuffer</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>srcVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>destVersion</color><color=#f8f8f2>);</color>
<color=#f8f8f2>}</color>