<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.Durability</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentConfig</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.config.ConfigParam</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.config.EnvironmentParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbConfigManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.Serializable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Enumeration</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Properties</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Specifies the attributes that may be changed after a {@link ReplicatedEnvironment} has been</color>
<color=#75715e> * created. {@code ReplicationMutableConfig} is a parameter to {@link</color>
<color=#75715e> * ReplicatedEnvironment#setMutableConfig} and is returned by {@link</color>
<color=#75715e> * ReplicatedEnvironment#getMutableConfig}.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReplicationMutableConfig</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Cloneable</color><color=#f8f8f2>,</color> <color=#f8f8f2>Serializable</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>1L</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Note: all replicated parameters should start with</color>
<color=#75715e>   * EnvironmentParams.REP_PARAMS_PREFIX, which is "je.rep.",</color>
<color=#75715e>   * see SR [#19080].</color>
<color=#75715e>   */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Boolean flag if set to true, an Arbiter may acknowledge a transaction if a replication node is</color>
<color=#75715e>   * not available.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>True</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ALLOW_ARBITER_ACK</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"allowArbiterAck"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Identifies the Primary node in a two node group. See the discussion of issues when {@link <a</color>
<color=#75715e>   * href= "{@docRoot}/../ReplicationGuide/lifecycle.html#twonode"> configuring two node groups</a>}</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>False</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>DESIGNATED_PRIMARY</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"designatedPrimary"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * An escape mechanism to modify the way in which the number of electable nodes, and consequently</color>
<color=#75715e>   * the quorum requirements for elections and commit acknowledgments, is calculated. The override</color>
<color=#75715e>   * is accomplished by specifying the quorum size via this mutable configuration parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When this parameter is set to a non-zero value at a member node, the member will use this</color>
<color=#75715e>   * value as the electable group size, instead of using the metadata stored in the RepGroup</color>
<color=#75715e>   * database for its quorum calculations. This parameter's value should be set to the number of</color>
<color=#75715e>   * electable nodes known to be available. The default value is zero, which indicates normal</color>
<color=#75715e>   * operation with the electable group size being calculated from the metadata.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Please keep in mind that this is an escape mechanism, only for use in exceptional</color>
<color=#75715e>   * circumstances, to be used with care. Since JE HA is no longer maintaining quorum requirements</color>
<color=#75715e>   * automatically, there is the possibility that the simple majority of unavailable nodes could</color>
<color=#75715e>   * elect their own Master, which would result in a diverging set of changes to the same</color>
<color=#75715e>   * environment being made by multiple Masters. It is essential to ensure that the problematic</color>
<color=#75715e>   * nodes are in fact down before making this temporary configuration change.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>See the discussion in {@link <a href=</color>
<color=#75715e>   * "{@docRoot}/../ReplicationGuide/election-override.html">Appendix: Managing a Failure of the</color>
<color=#75715e>   * Majority</a>}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see QuorumPolicy</color>
<color=#75715e>   * @see com.sleepycat.je.Durability.ReplicaAckPolicy</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ELECTABLE_GROUP_SIZE_OVERRIDE</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"electableGroupSizeOverride"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The election priority associated with this node. The election algorithm for choosing a new</color>
<color=#75715e>   * master will pick the participating node that has the most current set of log files. When there</color>
<color=#75715e>   * is a tie, the election priority is used as a tie-breaker to select amongst these nodes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>A priority of zero is used to ensure that this node is never elected master, even if it has</color>
<color=#75715e>   * the most up to date log files. Note that the node still votes for a Master and participates in</color>
<color=#75715e>   * quorum requirements. Please use this option with care, since it means that some node with less</color>
<color=#75715e>   * current log files could be elected master. As a result, this node would be forced to rollback</color>
<color=#75715e>   * committed data and must be prepared to handle any {@link RollbackException} exceptions that</color>
<color=#75715e>   * might be thrown.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>1</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>Integer.MAX_VALUE</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see RollbackException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NODE_PRIORITY</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"node.priority"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If true, JE HA (replication) will flush all committed transactions to disk at the specified</color>
<color=#75715e>   * time interval. This is of interest because the default durability for replicated transactions</color>
<color=#75715e>   * of {@link Durability#COMMIT_NO_SYNC}. The default for this behavior is true.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When using {@link Durability#COMMIT_NO_SYNC}, continued activity will naturally cause the</color>
<color=#75715e>   * steady flush of committed transactions, but a pause in activity may cause the latest commits to</color>
<color=#75715e>   * stay in memory. In such a case, it is unlikely but possible that all members of the replication</color>
<color=#75715e>   * group have these last transactions in memory and that no members have persisted them to disk. A</color>
<color=#75715e>   * catastrophic failure of all nodes in the replication group would cause a loss of these</color>
<color=#75715e>   * transactions, in this unlikely scenario. This background flush task will reduce such a</color>
<color=#75715e>   * possibility.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that enabling this feature when using {@link Durability#COMMIT_NO_SYNC}, does not</color>
<color=#75715e>   * constitute a guarantee that updates made by a transaction are persisted. For an explicit</color>
<color=#75715e>   * guarantee, transactions should use {@link Durability#COMMIT_SYNC} or {@link</color>
<color=#75715e>   * Durability#COMMIT_WRITE_NO_SYNC}. These more stringent, persistent Durability options can be</color>
<color=#75715e>   * set at the environment or per-transaction scope. Using one of these Durability settings for a</color>
<color=#75715e>   * given transaction will also flush all commits that occurred earlier in time.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>true</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @deprecated as of 7.2. Log flushing can be disabled by setting {@link</color>
<color=#75715e>   *     EnvironmentConfig#LOG_FLUSH_SYNC_INTERVAL} and {@link</color>
<color=#75715e>   *     EnvironmentConfig#LOG_FLUSH_NO_SYNC_INTERVAL} to zero. For compatibility with earlier</color>
<color=#75715e>   *     releases, if this parameter is specified as false, no log flushing will be performed; in</color>
<color=#75715e>   *     this case, {@link EnvironmentConfig#LOG_FLUSH_SYNC_INTERVAL} and {@link</color>
<color=#75715e>   *     EnvironmentConfig#LOG_FLUSH_NO_SYNC_INTERVAL} may not also be specified.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>RUN_LOG_FLUSH_TASK</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"runLogFlushTask"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The interval that JE HA will do a log buffer flush.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>5 min</td></color>
<color=#75715e>   * <td>1 s</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   * @deprecated as of 7.2. Replaced by {@link EnvironmentConfig#LOG_FLUSH_SYNC_INTERVAL}. For</color>
<color=#75715e>   *     compatibility with earlier releases, if this parameter is specified its value will be used</color>
<color=#75715e>   *     as the flush sync interval; in this case, {@link EnvironmentConfig#LOG_FLUSH_SYNC_INTERVAL}</color>
<color=#75715e>   *     may not also be specified.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>LOG_FLUSH_TASK_INTERVAL</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"logFlushTaskInterval"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum number of <i>most recently used</i> database handles that are kept open during the</color>
<color=#75715e>   * replay of the replication stream.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Int</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>10</td></color>
<color=#75715e>   * <td>1</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @since 5.0.38</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLAY_MAX_OPEN_DB_HANDLES</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replayMaxOpenDbHandles"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The string identifying one or more helper host and port pairs in this format:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre></color>
<color=#75715e>   * hostname[:port][,hostname[:port]]*</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>String</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>""</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationMutableConfig#setHelperHosts</color>
<color=#75715e>   * @see ReplicationMutableConfig#getHelperHosts</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>HELPER_HOSTS</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"helperHosts"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum amount of time that an inactive database handle is kept open during a replay of the</color>
<color=#75715e>   * replication stream. Handles that are inactive for more than this time period are automatically</color>
<color=#75715e>   * closed. Note that this does not impact any handles that may have been opened by the</color>
<color=#75715e>   * application.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>{@link <a href="#timeDuration">Duration</a>}</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>30 sec</td></color>
<color=#75715e>   * <td>1 sec</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   * @since 5.0.38</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLAY_DB_HANDLE_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replayOpenHandleTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only.</color>
<color=#75715e>   *     <p>The timeout specifies the amount of time that the {@link</color>
<color=#75715e>   *     com.sleepycat.je.rep.util.ReplicationGroupAdmin#transferMaster</color>
<color=#75715e>   *     ReplicationGroupAdmin.transferMastership} command can use to have the specified replica</color>
<color=#75715e>   *     catch up with the original master.</color>
<color=#75715e>   *     <p>If the replica has not successfully caught up with the original master, the call to</color>
<color=#75715e>   *     {@link com.sleepycat.je.rep.util.ReplicationGroupAdmin#transferMaster</color>
<color=#75715e>   *     ReplicationGroupAdmin.transferMastership} will throw an exception.</color>
<color=#75715e>   *     <p></color>
<color=#75715e>   *     <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>100 s</td></color>
<color=#75715e>   * <td>1 s</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>CATCHUP_MASTER_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"catchupMasterTimeout"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Force loading when a ReplicationConfig is used with strings and</color>
<color=#75715e>     * an environment has not been created.</color>
<color=#75715e>     */</color>
    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color>
    <color=#f8f8f2>ConfigParam</color> <color=#f8f8f2>forceLoad</color> <color=#f92672>=</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>GROUP_NAME</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden Storage for replication related properties. */</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>Properties</color> <color=#f8f8f2>props</color><color=#f8f8f2>;</color>

  <color=#75715e>/* For unit testing only: only ever set false when testing. */</color>
  <color=#66d9ef>transient</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>validateParams</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Create a ReplicationMutableConfig initialized with the system default settings. Parameter</color>
<color=#75715e>   * defaults are documented with the string constants in this class.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>ReplicationMutableConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>props</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Properties</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Used by ReplicationConfig to support construction from a property file.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param properties Hold replication related properties</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>ReplicationMutableConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>Properties</color> <color=#f8f8f2>properties</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>validateParams</color> <color=#f92672>=</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>validateProperties</color><color=#f8f8f2>(</color><color=#f8f8f2>properties</color><color=#f8f8f2>);</color>
    <color=#75715e>/* For safety, copy the passed in properties. */</color>
    <color=#f8f8f2>props</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Properties</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>putAll</color><color=#f8f8f2>(</color><color=#f8f8f2>properties</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Fills in the properties calculated by the environment to the given config object. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>fillInEnvironmentGeneratedProps</color><color=#f8f8f2>(</color><color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>DESIGNATED_PRIMARY</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>Boolean</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isDesignatedPrimary</color><color=#f8f8f2>()));</color>
    <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_PRIORITY</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>(</color><color=#f8f8f2>getNodePriority</color><color=#f8f8f2>()));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For internal use only */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>copyMutablePropsTo</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicationMutableConfig</color> <color=#f8f8f2>toConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Properties</color> <color=#f8f8f2>toProps</color> <color=#f92672>=</color> <color=#f8f8f2>toConfig</color><color=#f8f8f2>.</color><color=#a6e22e>props</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Enumeration</color><color=#f92672><?></color> <color=#f8f8f2>propNames</color> <color=#f92672>=</color> <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>propertyNames</color><color=#f8f8f2>();</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>propNames</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreElements</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>paramName</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>propNames</color><color=#f8f8f2>.</color><color=#a6e22e>nextElement</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>ConfigParam</color> <color=#f8f8f2>param</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>SUPPORTED_PARAMS</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>paramName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>param</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>isForReplication</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>isMutable</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>newVal</color> <color=#f92672>=</color> <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#f8f8f2>paramName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>toProps</color><color=#f8f8f2>.</color><color=#a6e22e>setProperty</color><color=#f8f8f2>(</color><color=#f8f8f2>paramName</color><color=#f8f8f2>,</color> <color=#f8f8f2>newVal</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If {@code isPrimary} is true, designate this node as a Primary. This setting only takes effect</color>
<color=#75715e>   * for electable nodes. The application must ensure that exactly one electable node is designated</color>
<color=#75715e>   * to be a Primary at any given time. Primary node configuration is only a concern when the group</color>
<color=#75715e>   * has two electable nodes, and there cannot be a simple majority. See the overview on <a href=</color>
<color=#75715e>   * "{@docRoot}/../ReplicationGuide/lifecycle.html#twonode">configuring two node groups</a>.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param isPrimary true if this node is to be made the Primary</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationMutableConfig</color> <color=#a6e22e>setDesignatedPrimary</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>isPrimary</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setDesignatedPrimaryVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>isPrimary</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDesignatedPrimaryVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>isPrimary</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setBooleanVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>DESIGNATED_PRIMARY</color><color=#f8f8f2>,</color> <color=#f8f8f2>isPrimary</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Determines whether this node is the currently designated Primary. See the overview on {@link <a</color>
<color=#75715e>   * href= "{@docRoot}/../ReplicationGuide/lifecycle.html#twonode"> issues around two node</color>
<color=#75715e>   * groups</a>}</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if this node is a Primary, false otherwise.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getDesignatedPrimary</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getBooleanVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>DESIGNATED_PRIMARY</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the value associated with the override. A value of zero means that the number of</color>
<color=#75715e>   * electable nodes is determined as usual, that is, from the contents of the group metadata.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the number of electable nodes as specified by the override</color>
<color=#75715e>   * @see #ELECTABLE_GROUP_SIZE_OVERRIDE</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getElectableGroupSizeOverride</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getIntVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>ELECTABLE_GROUP_SIZE_OVERRIDE</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the size used to determine the number of electable nodes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param override the number of electable nodes. A value of zero means that the number of</color>
<color=#75715e>   *     electable nodes is determined as usual, that is, from the contents of the group metadata.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   * @see #ELECTABLE_GROUP_SIZE_OVERRIDE</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationMutableConfig</color> <color=#a6e22e>setElectableGroupSizeOverride</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>override</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setElectableGroupSizeOverrideVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>override</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setElectableGroupSizeOverrideVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>override</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setIntVal</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>ELECTABLE_GROUP_SIZE_OVERRIDE</color><color=#f8f8f2>,</color> <color=#f8f8f2>override</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the election priority associated with the node.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the priority for this node</color>
<color=#75715e>   * @see #NODE_PRIORITY</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getNodePriority</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getIntVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_PRIORITY</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the election priority for the node. The algorithm for choosing a new master will pick the</color>
<color=#75715e>   * participating node that has the most current set of log files. When there is a tie, the</color>
<color=#75715e>   * priority is used as a tie-breaker to select amongst these nodes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>A priority of zero is used to ensure that a node is never elected master, even if it has the</color>
<color=#75715e>   * most current set of files. Please use this option with caution, since it means that a node with</color>
<color=#75715e>   * less current log files could be elected master potentially forcing this node to rollback data</color>
<color=#75715e>   * that had been committed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param priority the priority to be associated with the node. It must be zero, or a positive</color>
<color=#75715e>   *     number.</color>
<color=#75715e>   * @see #NODE_PRIORITY</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationMutableConfig</color> <color=#a6e22e>setNodePriority</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>priority</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setNodePriorityVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>priority</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setNodePriorityVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>priority</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setIntVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_PRIORITY</color><color=#f8f8f2>,</color> <color=#f8f8f2>priority</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the string identifying one or more helper host and port pairs in this format:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre></color>
<color=#75715e>   * hostname[:port][,hostname[:port]]*</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * The port name may be omitted if it's the default port.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the string representing the host port pairs</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getHelperHosts</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>HELPER_HOSTS</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Identify one or more helpers nodes by their host and port pairs in this format:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre></color>
<color=#75715e>   * hostname[:port][,hostname[:port]]*</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * If the port is omitted, the default port defined by XXX is used.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param hostsAndPorts the string representing the host and port pairs.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationMutableConfig</color> <color=#a6e22e>setHelperHosts</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>hostsAndPorts</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setHelperHostsVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>hostsAndPorts</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setHelperHostsVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>hostsAndPorts</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>HELPER_HOSTS</color><color=#f8f8f2>,</color> <color=#f8f8f2>hostsAndPorts</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Set this configuration parameter with this value. Values are validated before setting the</color>
<color=#75715e>   * parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param paramName the configuration parameter name, one of the String constants in this class</color>
<color=#75715e>   * @param value the configuration value.</color>
<color=#75715e>   * @return this;</color>
<color=#75715e>   * @throws IllegalArgumentException if the paramName or value is invalid.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationMutableConfig</color> <color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>paramName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>props</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>paramName</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>value</color><color=#f8f8f2>,</color>
        <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>/* require mutability. */</color>
        <color=#f8f8f2>validateParams</color><color=#f8f8f2>,</color>
        <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>/* forReplication */</color>
        <color=#66d9ef>true</color><color=#f8f8f2>);</color> <color=#75715e>/* verifyForReplication */</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the value for this parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param paramName a valid configuration parameter, one of the String constants in this class.</color>
<color=#75715e>   * @return the configuration value.</color>
<color=#75715e>   * @throws IllegalArgumentException if the paramName is invalid.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>paramName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>paramName</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Validate a property bag passed in a construction time. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>validateProperties</color><color=#f8f8f2>(</color><color=#f8f8f2>Properties</color> <color=#f8f8f2>checkProps</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Check that the properties have valid names and values */</color>
    <color=#f8f8f2>Enumeration</color><color=#f92672><?></color> <color=#f8f8f2>propNames</color> <color=#f92672>=</color> <color=#f8f8f2>checkProps</color><color=#f8f8f2>.</color><color=#a6e22e>propertyNames</color><color=#f8f8f2>();</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>propNames</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreElements</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>propNames</color><color=#f8f8f2>.</color><color=#a6e22e>nextElement</color><color=#f8f8f2>();</color>
      <color=#75715e>/* Is this a valid property name? */</color>
      <color=#f8f8f2>ConfigParam</color> <color=#f8f8f2>param</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>SUPPORTED_PARAMS</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color> <color=#f92672>+</color> <color=#e6db74>" is not a valid JE environment configuration"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#75715e>/* Is this a valid property value? */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>validateParams</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>validateValue</color><color=#f8f8f2>(</color><color=#f8f8f2>checkProps</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For internal use only. Access the internal property bag, used during startup. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Properties</color> <color=#a6e22e>getProps</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>props</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * List the configuration parameters and values that have been set in this configuration object.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For unit testing only */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>setOverrideValidateParams</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>validateParams</color> <color=#f92672>=</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For testing only */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getValidateParams</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only. Overrides Object.clone() to clone all properties, used by this</color>
<color=#75715e>   *     class and ReplicationConfig.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>Object</color> <color=#a6e22e>clone</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>CloneNotSupportedException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>ReplicationMutableConfig</color> <color=#f8f8f2>copy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicationMutableConfig</color><color=#f8f8f2>)</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>copy</color><color=#f8f8f2>.</color><color=#a6e22e>props</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Properties</color><color=#f8f8f2>)</color> <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>copy</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>