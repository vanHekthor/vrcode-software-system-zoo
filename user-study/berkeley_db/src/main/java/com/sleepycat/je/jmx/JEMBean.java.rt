<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.jmx</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.Environment</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.StatsConfig</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl.MBeanRegistrar</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.management.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.management.ManagementFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.reflect.Constructor</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>

<color=#75715e>/*</color>
<color=#75715e> * Base class for all JE concrete MBeans.</color>
<color=#75715e> *</color>
<color=#75715e> * It implements the MBeanRegistrar interface and defines the common part of</color>
<color=#75715e> * those concrete MBeans.</color>
<color=#75715e> *</color>
<color=#75715e> * It defines the abstract methods which must be implemented in concrete</color>
<color=#75715e> * MBeans.</color>
<color=#75715e> *</color>
<color=#75715e> * Subclasses of JEMBean must avoid passing JE exceptions across the network to</color>
<color=#75715e> * the client side, since the client side will not have the proper JE exception</color>
<color=#75715e> * class. For example, a method which does this:</color>
<color=#75715e> *</color>
<color=#75715e> *  catch (DatabaseException databaseEx) {</color>
<color=#75715e> *     new MBeanException(databaseEx);</color>
<color=#75715e> *  }</color>
<color=#75715e> *</color>
<color=#75715e> * will result in a ClassNotFoundException on the client side when it receives</color>
<color=#75715e> * the MBeanException, since it does not have DatabaseException.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>JEMBean</color> <color=#66d9ef>implements</color> <color=#f8f8f2>MBeanRegistrar</color> <color=#f8f8f2>{</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Parameters for getting JE database, environment stats, etc.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MBeanParameterInfo</color><color=#f92672>[]</color> <color=#f8f8f2>statParams</color> <color=#f92672>=</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>new</color> <color=#f8f8f2>MBeanParameterInfo</color><color=#f8f8f2>(</color>
        <color=#e6db74>"clear"</color><color=#f8f8f2>,</color> <color=#e6db74>"java.lang.Boolean"</color><color=#f8f8f2>,</color> <color=#e6db74>"If true, reset statistics after reading."</color><color=#f8f8f2>),</color>
    <color=#66d9ef>new</color> <color=#f8f8f2>MBeanParameterInfo</color><color=#f8f8f2>(</color>
        <color=#e6db74>"fast"</color><color=#f8f8f2>,</color>
        <color=#e6db74>"java.lang.Boolean"</color><color=#f8f8f2>,</color>
        <color=#e6db74>"If true, only return statistics which do "</color> <color=#f92672>+</color> <color=#e6db74>"not require expensive computation."</color><color=#f8f8f2>)</color>
  <color=#f8f8f2>};</color>

  <color=#75715e>/* Concrete MBean's visible interface. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>MBeanInfo</color> <color=#f8f8f2>mbeanInfo</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Fields used to register this concrete MBean. */</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>MBeanServer</color> <color=#f8f8f2>server</color><color=#f8f8f2>;</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>ObjectName</color> <color=#f8f8f2>jeName</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Name for this class. */</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>String</color> <color=#f8f8f2>className</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#f8f8f2>String</color> <color=#f8f8f2>DESCRIPTION</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Class type for the MBean. */</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>Class</color><color=#f92672><?></color> <color=#f8f8f2>currentClass</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Environment used in this MBean. */</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>MBeanOperationInfo</color><color=#f92672>></color> <color=#f8f8f2>operationList</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>MBeanOperationInfo</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#66d9ef>protected</color> <color=#a6e22e>JEMBean</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>env</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>initClassFields</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>resetMBeanInfo</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#a6e22e>JEMBean</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>initClassFields</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Initiate the class fields used in this MBean. */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>abstract</color> <color=#66d9ef>void</color> <color=#a6e22e>initClassFields</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Create the available management interface for this environment. The attributes and operations</color>
<color=#75715e>   * available vary according to environment configuration.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>resetMBeanInfo</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* Generate the MBean description. */</color>
    <color=#f8f8f2>mbeanInfo</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>MBeanInfo</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>currentClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>DESCRIPTION</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>getAttributeList</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>getConstructors</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>getOperationList</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>getNotificationInfo</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Get attribute metadata for this MBean.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return array of MBeanAttributeInfo objects describing the available attributes.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>abstract</color> <color=#f8f8f2>MBeanAttributeInfo</color><color=#f92672>[]</color> <color=#a6e22e>getAttributeList</color><color=#f8f8f2>();</color>

  <color=#75715e>/** Add MBean operations into the list. */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>abstract</color> <color=#66d9ef>void</color> <color=#a6e22e>addOperations</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Get constructor metadata for this MBean.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Since the process of getting constructors is the same for each concrete MBean, define it</color>
<color=#75715e>   * here to reduce coding work.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return array of MBeanConstructorInfo objects describing the constructor attributes.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unchecked"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>MBeanConstructorInfo</color><color=#f92672>[]</color> <color=#a6e22e>getConstructors</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Constructor</color><color=#f92672>[]</color> <color=#f8f8f2>constructors</color> <color=#f92672>=</color> <color=#f8f8f2>currentClass</color><color=#f8f8f2>.</color><color=#a6e22e>getConstructors</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>MBeanConstructorInfo</color><color=#f92672>[]</color> <color=#f8f8f2>constructorInfo</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MBeanConstructorInfo</color><color=#f92672>[</color><color=#f8f8f2>constructors</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>constructors</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>constructorInfo</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MBeanConstructorInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>currentClass</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>constructors</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>constructorInfo</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Get operation metadata for this MBean.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return array of MBeanOperationInfo describing available operations.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>MBeanOperationInfo</color><color=#f92672>[]</color> <color=#a6e22e>getOperationList</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>addOperations</color><color=#f8f8f2>();</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>operationList</color><color=#f8f8f2>.</color><color=#a6e22e>toArray</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>MBeanOperationInfo</color><color=#f92672>[</color><color=#f8f8f2>operationList</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color><color=#f92672>]</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Get notification metadata for this MBean.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return array of MBeanNotificationInfo describing notifications.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>MBeanNotificationInfo</color><color=#f92672>[]</color> <color=#a6e22e>getNotificationInfo</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For EnvironmentImpl.MBeanRegistrar interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Register this MBean with the MBeanServer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>doRegister</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>server</color> <color=#f92672>=</color> <color=#f8f8f2>ManagementFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getPlatformMBeanServer</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>(</color><color=#e6db74>"com.sleepycat.je.jmx:name="</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>className</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"("</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>noColonPathname</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getHome</color><color=#f8f8f2>().</color><color=#a6e22e>getPath</color><color=#f8f8f2>().</color><color=#a6e22e>replaceAll</color><color=#f8f8f2>(</color><color=#e6db74>":"</color><color=#f8f8f2>,</color> <color=#e6db74>"<colon>"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>noColonPathname</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>")"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>jeName</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ObjectName</color><color=#f8f8f2>(</color><color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>doRegisterMBean</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Register the MBean with the server. */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>abstract</color> <color=#66d9ef>void</color> <color=#a6e22e>doRegisterMBean</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For EnvironmentImpl.MBeanRegistrar interface.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Remove this MBean from the MBeanServer.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>doUnregister</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>server</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>server</color><color=#f8f8f2>.</color><color=#a6e22e>unregisterMBean</color><color=#f8f8f2>(</color><color=#f8f8f2>jeName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @see DynamicMBean#getMBeanInfo</color>
<color=#75715e>   *     <p>Implement the getMBeanInfo method of DynamicMBean.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>MBeanInfo</color> <color=#a6e22e>getMBeanInfo</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>mbeanInfo</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Helper for creating a StatsConfig object to use as an operation parameter. */</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>StatsConfig</color> <color=#a6e22e>getStatsConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color><color=#f92672>[]</color> <color=#f8f8f2>params</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StatsConfig</color> <color=#f8f8f2>statsConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StatsConfig</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>params</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>params</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>params</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Boolean</color> <color=#f8f8f2>clear</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Boolean</color><color=#f8f8f2>)</color> <color=#f8f8f2>params</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>statsConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setClear</color><color=#f8f8f2>(</color><color=#f8f8f2>clear</color><color=#f8f8f2>.</color><color=#a6e22e>booleanValue</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>params</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>params</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>params</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Boolean</color> <color=#f8f8f2>fast</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Boolean</color><color=#f8f8f2>)</color> <color=#f8f8f2>params</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>statsConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setFast</color><color=#f8f8f2>(</color><color=#f8f8f2>fast</color><color=#f8f8f2>.</color><color=#a6e22e>booleanValue</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>statsConfig</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>