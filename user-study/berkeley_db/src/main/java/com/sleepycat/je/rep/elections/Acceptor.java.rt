<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.elections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.JEVersion</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Acceptor.SuggestionGenerator.Ranking</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Proposer.Proposal</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Accept</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Propose</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Value</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.InvalidMessageException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.RequestMessage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.ResponseMessage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.ServiceDispatcher</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.BufferedReader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.InputStreamReader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.PrintWriter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.channels.Channels</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Plays the role of Acceptor in the consensus algorithm. It runs in its own thread listening for</color>
<color=#75715e> * and responding to messages sent by Proposers.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Acceptor</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ElectionAgentThread</color> <color=#f8f8f2>{</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The currently promised proposal. Proposals below this one are rejected.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Proposal</color> <color=#f8f8f2>promisedProposal</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>Value</color> <color=#f8f8f2>acceptedValue</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Used to return suggestions in response to Propose requests. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>SuggestionGenerator</color> <color=#f8f8f2>suggestionGenerator</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Identifies the Acceptor Service. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>SERVICE_NAME</color> <color=#f92672>=</color> <color=#e6db74>"Acceptor"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ElectionsConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Creates an Acceptor */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>Acceptor</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#f8f8f2>ElectionsConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>,</color> <color=#f8f8f2>SuggestionGenerator</color> <color=#f8f8f2>suggestionGenerator</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#e6db74>"Acceptor Thread "</color> <color=#f92672>+</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>config</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>;</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>suggestionGenerator</color> <color=#f92672>=</color> <color=#f8f8f2>suggestionGenerator</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** The Acceptor thread body. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>run</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>ServiceDispatcher</color> <color=#f8f8f2>serviceDispatcher</color> <color=#f92672>=</color> <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getServiceDispatcher</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>serviceDispatcher</color><color=#f8f8f2>.</color><color=#a6e22e>register</color><color=#f8f8f2>(</color><color=#f8f8f2>SERVICE_NAME</color><color=#f8f8f2>,</color> <color=#f8f8f2>channelQueue</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color> <color=#e6db74>"Acceptor started"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>channel</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>channel</color> <color=#f92672>=</color>
            <color=#f8f8f2>serviceDispatcher</color><color=#f8f8f2>.</color><color=#a6e22e>takeChannel</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>SERVICE_NAME</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/* block */</color><color=#f8f8f2>,</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>getReadTimeout</color><color=#f8f8f2>());</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>channel</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* A soft shutdown. */</color>
          <color=#66d9ef>return</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>BufferedReader</color> <color=#f8f8f2>in</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>PrintWriter</color> <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>in</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>BufferedReader</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>InputStreamReader</color><color=#f8f8f2>(</color><color=#f8f8f2>Channels</color><color=#f8f8f2>.</color><color=#a6e22e>newInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>)));</color>
          <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PrintWriter</color><color=#f8f8f2>(</color><color=#f8f8f2>Channels</color><color=#f8f8f2>.</color><color=#a6e22e>newOutputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>),</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>String</color> <color=#f8f8f2>requestLine</color> <color=#f92672>=</color> <color=#f8f8f2>in</color><color=#f8f8f2>.</color><color=#a6e22e>readLine</color><color=#f8f8f2>();</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>requestLine</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color> <color=#e6db74>"Acceptor: EOF on request"</color><color=#f8f8f2>);</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>RequestMessage</color> <color=#f8f8f2>requestMessage</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>requestMessage</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>parseRequest</color><color=#f8f8f2>(</color><color=#f8f8f2>requestLine</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InvalidMessageException</color> <color=#f8f8f2>ime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>processIME</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>,</color> <color=#f8f8f2>ime</color><color=#f8f8f2>);</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>ResponseMessage</color> <color=#f8f8f2>responseMessage</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>requestMessage</color><color=#f8f8f2>.</color><color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>PROPOSE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>responseMessage</color> <color=#f92672>=</color> <color=#f8f8f2>process</color><color=#f8f8f2>((</color><color=#f8f8f2>Propose</color><color=#f8f8f2>)</color> <color=#f8f8f2>requestMessage</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>requestMessage</color><color=#f8f8f2>.</color><color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>ACCEPT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>responseMessage</color> <color=#f92672>=</color> <color=#f8f8f2>process</color><color=#f8f8f2>((</color><color=#f8f8f2>Accept</color><color=#f8f8f2>)</color> <color=#f8f8f2>requestMessage</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>requestMessage</color><color=#f8f8f2>.</color><color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>SHUTDOWN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>SEVERE</color><color=#f8f8f2>,</color> <color=#e6db74>"Unrecognized request: "</color> <color=#f92672>+</color> <color=#f8f8f2>requestLine</color><color=#f8f8f2>);</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The request message may be of an earlier version. If so,</color>
<color=#75715e>           * this node transparently read the older version. JE only</color>
<color=#75715e>           * throws out InvalidMesageException when the version of</color>
<color=#75715e>           * the request message is newer than the current protocol.</color>
<color=#75715e>           * To avoid sending a repsonse that the requester cannot</color>
<color=#75715e>           * understand, we send a response in the same version as</color>
<color=#75715e>           * that of the original request message.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>responseMessage</color><color=#f8f8f2>.</color><color=#a6e22e>setSendVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>requestMessage</color><color=#f8f8f2>.</color><color=#a6e22e>getSendVersion</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>responseMessage</color><color=#f8f8f2>.</color><color=#a6e22e>wireFormat</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>WARNING</color><color=#f8f8f2>,</color> <color=#e6db74>"IO error on socket: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>Utils</color><color=#f8f8f2>.</color><color=#a6e22e>cleanup</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color> <color=#f8f8f2>channel</color><color=#f8f8f2>,</color> <color=#f8f8f2>in</color><color=#f8f8f2>,</color> <color=#f8f8f2>out</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>cleanup</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InterruptedException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isShutdown</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Treat it like a shutdown, exit the thread. */</color>
        <color=#66d9ef>return</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>WARNING</color><color=#f8f8f2>,</color> <color=#e6db74>"Acceptor unexpected interrupted"</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>serviceDispatcher</color><color=#f8f8f2>.</color><color=#a6e22e>cancel</color><color=#f8f8f2>(</color><color=#f8f8f2>SERVICE_NAME</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cleanup</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Responds to a Propose request.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param propose the request proposal</color>
<color=#75715e>   * @return the response: a Promise if the request was accepted, a Reject otherwise.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>Propose</color> <color=#f8f8f2>propose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>promisedProposal</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>promisedProposal</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>propose</color><color=#f8f8f2>.</color><color=#a6e22e>getProposal</color><color=#f8f8f2>())</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Reject Propose: "</color> <color=#f92672>+</color> <color=#f8f8f2>propose</color><color=#f8f8f2>.</color><color=#a6e22e>getProposal</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" Promised proposal: "</color> <color=#f92672>+</color> <color=#f8f8f2>promisedProposal</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Reject</color><color=#f8f8f2>(</color><color=#f8f8f2>promisedProposal</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>promisedProposal</color> <color=#f92672>=</color> <color=#f8f8f2>propose</color><color=#f8f8f2>.</color><color=#a6e22e>getProposal</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Value</color> <color=#f8f8f2>suggestedValue</color> <color=#f92672>=</color> <color=#f8f8f2>suggestionGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>promisedProposal</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Ranking</color> <color=#f8f8f2>suggestionRanking</color> <color=#f92672>=</color> <color=#f8f8f2>suggestionGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>getRanking</color><color=#f8f8f2>(</color><color=#f8f8f2>promisedProposal</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
        <color=#e6db74>"Promised: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>promisedProposal</color>
            <color=#f92672>+</color> <color=#e6db74>" Suggested Value: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>suggestedValue</color>
            <color=#f92672>+</color> <color=#e6db74>" Suggestion Ranking: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>suggestionRanking</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color>
    <color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#f8f8f2>Promise</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>promisedProposal</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>acceptedValue</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>suggestedValue</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>suggestionRanking</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getElectionPriority</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>JEVersion</color><color=#f8f8f2>.</color><color=#a6e22e>CURRENT_VERSION</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Responds to Accept request</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param accept the request</color>
<color=#75715e>   * @return an Accepted or Reject response as appropriate.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>Accept</color> <color=#f8f8f2>accept</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>promisedProposal</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>promisedProposal</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>accept</color><color=#f8f8f2>.</color><color=#a6e22e>getProposal</color><color=#f8f8f2>())</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Reject Accept: "</color> <color=#f92672>+</color> <color=#f8f8f2>accept</color><color=#f8f8f2>.</color><color=#a6e22e>getProposal</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" Promised proposal: "</color> <color=#f92672>+</color> <color=#f8f8f2>promisedProposal</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Reject</color><color=#f8f8f2>(</color><color=#f8f8f2>promisedProposal</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>acceptedValue</color> <color=#f92672>=</color> <color=#f8f8f2>accept</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
        <color=#e6db74>"Promised: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>promisedProposal</color>
            <color=#f92672>+</color> <color=#e6db74>" Accepted: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>accept</color><color=#f8f8f2>.</color><color=#a6e22e>getProposal</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" Value: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>acceptedValue</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Accepted</color><color=#f8f8f2>(</color><color=#f8f8f2>accept</color><color=#f8f8f2>.</color><color=#a6e22e>getProposal</color><color=#f8f8f2>(),</color> <color=#f8f8f2>acceptedValue</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>SuggestionGenerator</color> <color=#f8f8f2>{</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Used to generate a suggested value for use by a Proposer. It's a hint. The proposal argument</color>
<color=#75715e>     * may be used to freeze values like the VLSN number from advancing (if they were used in the</color>
<color=#75715e>     * ranking) until an election has completed.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param proposal the Proposal for which the value is being suggested.</color>
<color=#75715e>     * @return the suggested value.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Value</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>Proposal</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>);</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The importance associated with the above suggestion. Acceptors have to agree on a common</color>
<color=#75715e>     * system for ranking importance so that the relative importance of different suggestions can be</color>
<color=#75715e>     * meaningfully compared.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param the proposal associated with the ranking</color>
<color=#75715e>     * @return the importance of the suggestion as a number</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Ranking</color> <color=#a6e22e>getRanking</color><color=#f8f8f2>(</color><color=#f8f8f2>Proposal</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>);</color>

    <color=#75715e>/** A description of the ranking used when comparing Promises to pick a Master. */</color>
    <color=#66d9ef>class</color> <color=#a6e22e>Ranking</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Comparable</color><color=#f92672><</color><color=#f8f8f2>Ranking</color><color=#f92672>></color> <color=#f8f8f2>{</color>
      <color=#75715e>/* The major component of the ranking. */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>major</color><color=#f8f8f2>;</color>

      <color=#75715e>/* The minor component. */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>minor</color><color=#f8f8f2>;</color>

      <color=#66d9ef>static</color> <color=#f8f8f2>Ranking</color> <color=#f8f8f2>UNINITIALIZED</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Ranking</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>,</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>);</color>

      <color=#66d9ef>public</color> <color=#a6e22e>Ranking</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>major</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>minor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>major</color> <color=#f92672>=</color> <color=#f8f8f2>major</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>minor</color> <color=#f92672>=</color> <color=#f8f8f2>minor</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#a6e22e>@Override</color>
      <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>prime</color> <color=#f92672>=</color> <color=#ae81ff>31</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>prime</color> <color=#f92672>*</color> <color=#f8f8f2>result</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>major</color> <color=#f92672>^</color> <color=#f8f8f2>(</color><color=#f8f8f2>major</color> <color=#f92672>>>></color> <color=#ae81ff>32</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>prime</color> <color=#f92672>*</color> <color=#f8f8f2>result</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>minor</color> <color=#f92672>^</color> <color=#f8f8f2>(</color><color=#f8f8f2>minor</color> <color=#f92672>>>></color> <color=#ae81ff>32</color><color=#f8f8f2>));</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#a6e22e>@Override</color>
      <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>obj</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color> <color=#f92672>==</color> <color=#f8f8f2>obj</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>obj</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>obj</color><color=#f8f8f2>.</color><color=#a6e22e>getClass</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>Ranking</color> <color=#f8f8f2>other</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Ranking</color><color=#f8f8f2>)</color> <color=#f8f8f2>obj</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>major</color> <color=#f92672>!=</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>major</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>minor</color> <color=#f92672>==</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>minor</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#a6e22e>@Override</color>
      <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Ranking major:"</color> <color=#f92672>+</color> <color=#f8f8f2>major</color> <color=#f92672>+</color> <color=#e6db74>" minor:"</color> <color=#f92672>+</color> <color=#f8f8f2>minor</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#a6e22e>@Override</color>
      <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>Ranking</color> <color=#f8f8f2>o</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>compare</color><color=#f8f8f2>(</color><color=#f8f8f2>major</color><color=#f8f8f2>,</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>major</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>compare</color><color=#f8f8f2>(</color><color=#f8f8f2>minor</color><color=#f8f8f2>,</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>minor</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>