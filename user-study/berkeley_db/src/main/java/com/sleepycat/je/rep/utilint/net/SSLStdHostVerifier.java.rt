<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.net</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.InstanceLogger</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.InstanceParams</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.net.ssl.HostnameVerifier</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.net.ssl.SSLPeerUnverifiedException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.net.ssl.SSLSession</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.security.auth.x500.X500Principal</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.math.BigInteger</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.security.Principal</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.security.cert.Certificate</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.security.cert.CertificateParsingException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.security.cert.X509Certificate</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Collection</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>java.util.logging.Level.INFO</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * This is an implementation of HostnameVerifier which verifies that the host to which we are</color>
<color=#75715e> * connected is valid using the standard SSL matching rules. That is, the host string that we are</color>
<color=#75715e> * using to connect with must have a match to the common name or a subject alternative name.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SSLStdHostVerifier</color> <color=#66d9ef>implements</color> <color=#f8f8f2>HostnameVerifier</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>InstanceLogger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>ALTNAME_DNS</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>ALTNAME_IP</color> <color=#f92672>=</color> <color=#ae81ff>7</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Construct an SSLStdHostVerifier */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>SSLStdHostVerifier</color><color=#f8f8f2>(</color><color=#f8f8f2>InstanceParams</color> <color=#f8f8f2>params</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>params</color><color=#f8f8f2>.</color><color=#a6e22e>getContext</color><color=#f8f8f2>().</color><color=#a6e22e>getLoggerFactory</color><color=#f8f8f2>().</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>verify</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>targetHost</color><color=#f8f8f2>,</color> <color=#f8f8f2>SSLSession</color> <color=#f8f8f2>sslSession</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>targetHost</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>Principal</color> <color=#f8f8f2>principal</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Certificate</color><color=#f92672>[]</color> <color=#f8f8f2>peerCerts</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>principal</color> <color=#f92672>=</color> <color=#f8f8f2>sslSession</color><color=#f8f8f2>.</color><color=#a6e22e>getPeerPrincipal</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>peerCerts</color> <color=#f92672>=</color> <color=#f8f8f2>sslSession</color><color=#f8f8f2>.</color><color=#a6e22e>getPeerCertificates</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>SSLPeerUnverifiedException</color> <color=#f8f8f2>pue</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>principal</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>principal</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>X500Principal</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>X500Principal</color> <color=#f8f8f2>x500Principal</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>X500Principal</color><color=#f8f8f2>)</color> <color=#f8f8f2>principal</color><color=#f8f8f2>;</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>x500Principal</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(</color><color=#f8f8f2>X500Principal</color><color=#f8f8f2>.</color><color=#a6e22e>RFC1779</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>targetHost</color><color=#f8f8f2>.</color><color=#a6e22e>equalsIgnoreCase</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Check for SubjectAlternativeNames */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>peerCerts</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>X509Certificate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>X509Certificate</color> <color=#f8f8f2>peerCert</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>X509Certificate</color><color=#f8f8f2>)</color> <color=#f8f8f2>peerCerts</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>

      <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>List</color><color=#f92672><?>></color> <color=#f8f8f2>altNames</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>altNames</color> <color=#f92672>=</color> <color=#f8f8f2>peerCert</color><color=#f8f8f2>.</color><color=#a6e22e>getSubjectAlternativeNames</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>CertificateParsingException</color> <color=#f8f8f2>cpe</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Principal</color> <color=#f8f8f2>issuerPrinc</color> <color=#f92672>=</color> <color=#f8f8f2>peerCert</color><color=#f8f8f2>.</color><color=#a6e22e>getIssuerX500Principal</color><color=#f8f8f2>();</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>BigInteger</color> <color=#f8f8f2>serNo</color> <color=#f92672>=</color> <color=#f8f8f2>peerCert</color><color=#f8f8f2>.</color><color=#a6e22e>getSerialNumber</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>logger</color><color=#f8f8f2>.</color><color=#a6e22e>log</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>INFO</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Unable to parse peer certificate: "</color>
                <color=#f92672>+</color> <color=#e6db74>"issuer = "</color>
                <color=#f92672>+</color> <color=#f8f8f2>issuerPrinc</color>
                <color=#f92672>+</color> <color=#e6db74>", serialNumber = "</color>
                <color=#f92672>+</color> <color=#f8f8f2>serNo</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>altNames</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><?></color> <color=#f8f8f2>altName</color> <color=#f8f8f2>:</color> <color=#f8f8f2>altNames</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/*</color>
<color=#75715e>         * altName will be a 2-element list, with the first being</color>
<color=#75715e>         * the name type and the second being the "name".  For</color>
<color=#75715e>         * DNS and IP entries, the "name" will be a string.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>nameType</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>Integer</color><color=#f8f8f2>)</color> <color=#f8f8f2>altName</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>)).</color><color=#a6e22e>intValue</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nameType</color> <color=#f92672>==</color> <color=#f8f8f2>ALTNAME_IP</color> <color=#f92672>||</color> <color=#f8f8f2>nameType</color> <color=#f92672>==</color> <color=#f8f8f2>ALTNAME_DNS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nameValue</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>altName</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>targetHost</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>nameValue</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>