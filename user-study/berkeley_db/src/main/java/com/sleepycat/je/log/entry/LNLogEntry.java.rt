<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.log.entry</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryHeader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.VersionedWriteLoggable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.tree.Key</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.tree.LN</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.tree.VersionedLN</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Txn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DbLsn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.lang.reflect.Constructor</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Arrays</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Collection</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentFailureException.unexpectedState</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An LNLogEntry is the in-memory image of an LN logrec describing a write op (insertion, update, or</color>
<color=#75715e> * deletion) performed by a locker T on a record R. T always locks R in exclusive (WRITE or</color>
<color=#75715e> * WRITE_RANGE) mode before performing any write ops on it, and it retains its exclusive lock on R</color>
<color=#75715e> * until it terminates (commits or aborts). (Non-transactional lockers can be viewed as "simple"</color>
<color=#75715e> * transactions that perform at most one write op, and then immediately commit).</color>
<color=#75715e> *</color>
<color=#75715e> * <p>On disk, an LN logrec contains :</color>
<color=#75715e> *</color>
<color=#75715e> * <p>1 <= version <= 5</color>
<color=#75715e> *</color>
<color=#75715e> * <p>LN data databaseid key abortLsn -- if transactional abortKnownDeleted -- if transactional txn</color>
<color=#75715e> * id -- if transactional prev LSN of same txn -- if transactional</color>
<color=#75715e> *</color>
<color=#75715e> * <p>6 <= versions <= 10 :</color>
<color=#75715e> *</color>
<color=#75715e> * <p>databaseid abortLsn -- if transactional abortKnownDeleted -- if transactional txn id -- if</color>
<color=#75715e> * transactional prev LSN of same txn -- if transactional data key</color>
<color=#75715e> *</color>
<color=#75715e> * <p>11 == version :</color>
<color=#75715e> *</color>
<color=#75715e> * <p>databaseid abortLsn -- if transactional 1-byte flags abortKnownDeleted embeddedLN haveAbortKey</color>
<color=#75715e> * haveAbortData haveAbortVLSN txn id -- if transactional prev LSN of same txn -- if transactional</color>
<color=#75715e> * abort key -- if haveAbortKey abort data -- if haveAbortData abort vlsn -- if haveAbortVLSN data</color>
<color=#75715e> * key</color>
<color=#75715e> *</color>
<color=#75715e> * <p>In forReplication mode, these flags and fields are omitted: embeddedLN, haveAbortKey,</color>
<color=#75715e> * haveAbortData, haveAbortVLSN, abort key, abort data, abort vlsn</color>
<color=#75715e> *</color>
<color=#75715e> * <p>12 <= version :</color>
<color=#75715e> *</color>
<color=#75715e> * <p>1-byte flags abortKnownDeleted embeddedLN haveAbortKey haveAbortData haveAbortVLSN</color>
<color=#75715e> * haveAbortLSN haveAbortExpiration haveExpiration databaseid abortLsn -- if transactional and</color>
<color=#75715e> * haveAbortLSN txn id -- if transactional prev LSN of same txn -- if transactional abort key -- if</color>
<color=#75715e> * haveAbortKey abort data -- if haveAbortData abort vlsn -- if haveAbortVLSN abort expiration -- if</color>
<color=#75715e> * haveAbortExpiration expiration -- if haveExpiration data key</color>
<color=#75715e> *</color>
<color=#75715e> * <p>In forReplication mode, these flags and fields are omitted: abortKnownDeleted, embeddedLN,</color>
<color=#75715e> * haveAbortKey, haveAbortData, haveAbortVLSN, abort key, abort data, abort vlsn</color>
<color=#75715e> *</color>
<color=#75715e> * <p>NOTE: LNLogEntry is sub-classed by NameLNLogEntry, which adds some extra fields after the</color>
<color=#75715e> * record key.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>LNLogEntry</color><color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>LN</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>BaseReplicableEntry</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>ABORT_KD_MASK</color> <color=#f92672>=</color> <color=#ae81ff>0x1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>EMBEDDED_LN_MASK</color> <color=#f92672>=</color> <color=#ae81ff>0x2</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>HAVE_ABORT_KEY_MASK</color> <color=#f92672>=</color> <color=#ae81ff>0x4</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>HAVE_ABORT_DATA_MASK</color> <color=#f92672>=</color> <color=#ae81ff>0x8</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>HAVE_ABORT_VLSN_MASK</color> <color=#f92672>=</color> <color=#ae81ff>0x10</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>HAVE_ABORT_LSN_MASK</color> <color=#f92672>=</color> <color=#ae81ff>0x20</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>HAVE_ABORT_EXPIRATION_MASK</color> <color=#f92672>=</color> <color=#ae81ff>0x40</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>HAVE_EXPIRATION_MASK</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>0x80</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Used for computing the minimum log space used by an LNLogEntry. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>MIN_LOG_SIZE</color> <color=#f92672>=</color>
      <color=#ae81ff>1</color>
          <color=#f92672>+</color> <color=#75715e>// Flags</color>
          <color=#ae81ff>1</color>
          <color=#f92672>+</color> <color=#75715e>// DatabaseId</color>
          <color=#ae81ff>1</color>
          <color=#f92672>+</color> <color=#75715e>// LN with zero-length data</color>
          <color=#f8f8f2>LogEntryHeader</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_HEADER_SIZE</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The log version when the most recent format change for this entry was made (including any</color>
<color=#75715e>   * changes to the format of the underlying LN and other loggables).</color>
<color=#75715e>   *</color>
<color=#75715e>   * @see #getLastFormatChange</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>LAST_FORMAT_CHANGE</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Persistent fields.</color>
<color=#75715e>   */</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The id of the DB containing the record.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseId</color> <color=#f8f8f2>dbId</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The Txn performing the write op. It is null for non-transactional DBs.</color>
<color=#75715e>   * On disk we store only the txn id and the LSN of the previous logrec</color>
<color=#75715e>   * (if any) generated by this txn.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The LSN of the record's "abort" version, i.e., the version to revert to</color>
<color=#75715e>   * if this logrec must be undone as a result of a txn abort. It is set to</color>
<color=#75715e>   * the most recent version before the record was locked by the locker T</color>
<color=#75715e>   * associated with this logrec. Because T locks R before it writes it, the</color>
<color=#75715e>   * abort version is always a committed version.</color>
<color=#75715e>   *</color>
<color=#75715e>   * It is null for non-transactional lockers, because such lockers never</color>
<color=#75715e>   * abort.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Whether the record's abort version was a deleted version or not.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>abortKnownDeleted</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The key of the record's abort version, if haveAbortKey is true;</color>
<color=#75715e>   * null otherwise.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>abortKey</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The data portion of the record's abort version, if haveAbortData is</color>
<color=#75715e>   * true; null otherwise.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>abortData</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The VLSN of the record's abort version, if haveAbortVLSN is true;</color>
<color=#75715e>   * NULL_VLSN otherwise.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>abortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN_SEQUENCE</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Abort expiration time in days or hours. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>abortExpiration</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>abortExpirationInHours</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * True if the logrec stores an abort LSN, which is the case only if</color>
<color=#75715e>   * (a) this is a transactional logrec (b) the abort LSN is non-null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>haveAbortLSN</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * True if the logrec stores an abort key, which is the case only if</color>
<color=#75715e>   * (a) this is a transactional logrec, (b) the record's abort version</color>
<color=#75715e>   * was embedded in the BIN, and (c) the DB allows key updates.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>haveAbortKey</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * True if the logrec stores abort data, which is the case only if</color>
<color=#75715e>   * (a) this is a transactional logrec and (b) the record's abort</color>
<color=#75715e>   * version was embedded in the BIN.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>haveAbortData</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * True if the logrec stores an abort VLSN, which is the case only if</color>
<color=#75715e>   * (a) this is a transactional logrec (b) the record's abort version</color>
<color=#75715e>   * was embedded in the BIN, and (c) VLSN caching is enabled.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>haveAbortVLSN</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * True if the logrec stores an abort expiration, which is the case only if</color>
<color=#75715e>   * (a) this is a transactional logrec (b) the record's abort version has a</color>
<color=#75715e>   * non-zero expiration.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>haveAbortExpiration</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * True if the logrec stores a non-zero expiration.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>haveExpiration</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Whether, after the write op described by this logrec, the record is</color>
<color=#75715e>   * embedded in the BIN or not.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>embeddedLN</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The LN storing the record's data, after the write op described by this</color>
<color=#75715e>   * logrec. The ln has a null data value if the write op is a deletion. For</color>
<color=#75715e>   * replicated DBs, the ln contains the record's VLSN as well.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>LN</color> <color=#f8f8f2>ln</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The value of the record's key, after the write op described by this</color>
<color=#75715e>   * logrec.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>key</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Expiration time in days or hours. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Transient fields.</color>
<color=#75715e>   */</color>

  <color=#75715e>/* Transient field for duplicates conversion and user key/data methods. */</color>
  <color=#66d9ef>enum</color> <color=#f8f8f2>DupStatus</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>UNKNOWN</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>NEED_CONVERSION</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>DUP_DB</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>NOT_DUP_DB</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>DupStatus</color> <color=#f8f8f2>dupStatus</color><color=#f8f8f2>;</color>

  <color=#75715e>/* For construction of VersionedLN, when VLSN is preserved. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Constructor</color><color=#f92672><</color><color=#f8f8f2>VersionedLN</color><color=#f92672>></color> <color=#f8f8f2>versionedLNConstructor</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates an instance to read an entry.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param <T> the type of the contained LN</color>
<color=#75715e>   * @param cls the class of the contained LN</color>
<color=#75715e>   * @return the log entry</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>LN</color><color=#f92672>></color> <color=#f8f8f2>LNLogEntry</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#a6e22e>create</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>LNLogEntry</color><color=#f92672><></color><color=#f8f8f2>(</color><color=#f8f8f2>cls</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Constructor to read an entry. */</color>
  <color=#f8f8f2>LNLogEntry</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>cls</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>cls</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cls</color> <color=#f92672>==</color> <color=#f8f8f2>LN</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>versionedLNConstructor</color> <color=#f92672>=</color> <color=#f8f8f2>getNoArgsConstructor</color><color=#f8f8f2>(</color><color=#f8f8f2>VersionedLN</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>versionedLNConstructor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Constructor to write an entry. */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>LNLogEntry</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>LogEntryType</color> <color=#f8f8f2>entryType</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseId</color> <color=#f8f8f2>dbId</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>abortKD</color><color=#f8f8f2>,</color>
      <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>abortKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>abortData</color><color=#f8f8f2>,</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>abortVLSN</color><color=#f8f8f2>,</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>abortExpiration</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>abortExpirationInHours</color><color=#f8f8f2>,</color>
      <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>T</color> <color=#f8f8f2>ln</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>embeddedLN</color><color=#f8f8f2>,</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setLogType</color><color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dbId</color> <color=#f92672>=</color> <color=#f8f8f2>dbId</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>=</color> <color=#f8f8f2>txn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortKnownDeleted</color> <color=#f92672>=</color> <color=#f8f8f2>abortKD</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortKey</color> <color=#f92672>=</color> <color=#f8f8f2>abortKey</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortData</color> <color=#f92672>=</color> <color=#f8f8f2>abortData</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>abortVLSN</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>abortExpiration</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortExpirationInHours</color> <color=#f92672>=</color> <color=#f8f8f2>abortExpirationInHours</color><color=#f8f8f2>;</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>haveAbortLSN</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortLsn</color> <color=#f92672>!=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>haveAbortKey</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortKey</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>haveAbortData</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortData</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>haveAbortVLSN</color> <color=#f92672>=</color> <color=#f92672>!</color><color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>isNull</color><color=#f8f8f2>(</color><color=#f8f8f2>abortVLSN</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>haveAbortExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortExpiration</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>haveExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>expiration</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>embeddedLN</color> <color=#f92672>=</color> <color=#f8f8f2>embeddedLN</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>key</color> <color=#f92672>=</color> <color=#f8f8f2>key</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>ln</color> <color=#f92672>=</color> <color=#f8f8f2>ln</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>expiration</color> <color=#f92672>=</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>expirationInHours</color> <color=#f92672>=</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>versionedLNConstructor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#75715e>/* A txn should only be provided for transactional entry types. */</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>reset</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>dbId</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortKnownDeleted</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortKey</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortData</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN_SEQUENCE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortExpiration</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortExpirationInHours</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>haveAbortLSN</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>haveAbortKey</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>haveAbortData</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>haveAbortVLSN</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>haveAbortExpiration</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>haveExpiration</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>embeddedLN</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>ln</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>expiration</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>expirationInHours</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>dupStatus</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>readEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LogEntryHeader</color> <color=#f8f8f2>header</color><color=#f8f8f2>,</color> <color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>entryBuffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Subclasses must call readBaseLNEntry. */</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>getClass</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>LNLogEntry</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Prior to version 8, the optimization to omit the key size was</color>
<color=#75715e>     * mistakenly not applied to internal LN types such as FileSummaryLN</color>
<color=#75715e>     * and MapLN, and was only applied to user LN types.  The optimization</color>
<color=#75715e>     * should be applicable whenever LNLogEntry is not subclassed to add</color>
<color=#75715e>     * additional fields. [#18055]</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>keyIsLastSerializedField</color> <color=#f92672>=</color> <color=#f8f8f2>header</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>()</color> <color=#f92672>>=</color> <color=#ae81ff>8</color> <color=#f92672>||</color> <color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isUserLNType</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>readBaseLNEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>header</color><color=#f8f8f2>,</color> <color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyIsLastSerializedField</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Method shared by LNLogEntry subclasses.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param keyIsLastSerializedField specifies whether the key length can be omitted because the key</color>
<color=#75715e>   *     is the last field. This should be false when an LNLogEntry subclass adds fields to the</color>
<color=#75715e>   *     serialized format.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>final</color> <color=#66d9ef>void</color> <color=#a6e22e>readBaseLNEntry</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>LogEntryHeader</color> <color=#f8f8f2>header</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>keyIsLastSerializedField</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>reset</color><color=#f8f8f2>();</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color> <color=#f92672>=</color> <color=#f8f8f2>header</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>();</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>unpacked</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>6</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>recStartPosition</color> <color=#f92672>=</color> <color=#f8f8f2>entryBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>setFlags</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * For log version 6 and above we store the key last so that we can</color>
<color=#75715e>     * avoid storing the key size. Instead, we derive it from the LN size</color>
<color=#75715e>     * and the total entry size. The DatabaseId is also packed.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>6</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* LN is first for log versions prior to 6. */</color>
      <color=#f8f8f2>ln</color> <color=#f92672>=</color> <color=#f8f8f2>newLNInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>envImpl</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>readFromLog</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* DatabaseImpl Id. */</color>
    <color=#f8f8f2>dbId</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseId</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>dbId</color><color=#f8f8f2>.</color><color=#a6e22e>readFromLog</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Key. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>6</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*unpacked*/</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * AbortLsn. If it was a marker LSN that was used to fill in a</color>
<color=#75715e>       * create, mark it null.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortLSN</color> <color=#f92672>||</color> <color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>unpacked</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>abortLsn</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>setFlags</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>haveAbortLSN</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortLsn</color> <color=#f92672>!=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* txn id and prev LSN by same txn. */</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Txn</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>readFromLog</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>==</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>setFlags</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>abortKey</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortData</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>abortData</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>abortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedLong</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>abortExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortExpiration</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>abortExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>abortExpiration</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>abortExpirationInHours</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>expiration</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>expiration</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>expiration</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>expiration</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>expirationInHours</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>6</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>ln</color> <color=#f92672>=</color> <color=#f8f8f2>newLNInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>envImpl</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>readFromLog</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>);</color>

      <color=#66d9ef>int</color> <color=#f8f8f2>keySize</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keyIsLastSerializedField</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>bytesWritten</color> <color=#f92672>=</color> <color=#f8f8f2>entryBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>recStartPosition</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>keySize</color> <color=#f92672>=</color> <color=#f8f8f2>header</color><color=#f8f8f2>.</color><color=#a6e22e>getItemSize</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>bytesWritten</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>keySize</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readBytesNoLength</color><color=#f8f8f2>(</color><color=#f8f8f2>entryBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>keySize</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Save transient fields after read. */</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>header</color><color=#f8f8f2>.</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>setVLSNSequence</color><color=#f8f8f2>(</color><color=#f8f8f2>header</color><color=#f8f8f2>.</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>().</color><color=#a6e22e>getSequence</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Dup conversion will be done by postFetchInit. */</color>
    <color=#f8f8f2>dupStatus</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NEED_CONVERSION</color> <color=#f8f8f2>:</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>UNKNOWN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>setFlags</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>flags</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>embeddedLN</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>EMBEDDED_LN_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>abortKnownDeleted</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>ABORT_KD_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>haveAbortLSN</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>HAVE_ABORT_LSN_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>haveAbortKey</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>HAVE_ABORT_KEY_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>haveAbortData</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>HAVE_ABORT_DATA_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>haveAbortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>HAVE_ABORT_VLSN_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>haveAbortExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>HAVE_ABORT_EXPIRATION_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>haveExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>HAVE_EXPIRATION_MASK</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>hasReplicationFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isReplicationFormatWorthwhile</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>logBuffer</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>srcVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>destVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* The replication format is optimized only in versions >= 11. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>destVersion</color> <color=#f92672><</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * It is too much trouble to parse versions older than 12, because the</color>
<color=#75715e>     * flags are not at the front in older versions.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>srcVersion</color> <color=#f92672><</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>flags</color> <color=#f92672>=</color> <color=#f8f8f2>logBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * If we have an abort key or data, assume that the savings is</color>
<color=#75715e>     * substantial enough to be worthwhile.</color>
<color=#75715e>     *</color>
<color=#75715e>     * The abort key is unusual and implies that data is hidden in the key</color>
<color=#75715e>     * using a partial comparator, so we assume it is probably large,</color>
<color=#75715e>     * relative to the total size.</color>
<color=#75715e>     *</color>
<color=#75715e>     * If there is abort data, it may be small, however, because the</color>
<color=#75715e>     * presence of abort data implies that this is an update or deletion,</color>
<color=#75715e>     * there will also be an abort LSN and an abort VLSN (with HA). Plus,</color>
<color=#75715e>     * abort data is likely to be around the same size as the non-abort</color>
<color=#75715e>     * data, and keys are normally smallish, meaning that the abort data is</color>
<color=#75715e>     * largish relative to the total record size. So we assume the savings</color>
<color=#75715e>     * are substantial enough.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>flags</color> <color=#f92672>&</color> <color=#f8f8f2>(</color><color=#f8f8f2>HAVE_ABORT_KEY_MASK</color> <color=#f92672>|</color> <color=#f8f8f2>HAVE_ABORT_DATA_MASK</color><color=#f8f8f2>))</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * newLNInstance usually returns exactly the type of LN of the type that was contained in in the</color>
<color=#75715e>   * log. For example, if a LNLogEntry holds a MapLN, newLNInstance will return that MapLN. There is</color>
<color=#75715e>   * one extra possibility for vanilla (data record) LNs. In that case, this method may either</color>
<color=#75715e>   * return a LN or a generated type, the VersionedLN, which adds the vlsn information from the log</color>
<color=#75715e>   * header to the LN object.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>LN</color> <color=#a6e22e>newLNInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>versionedLNConstructor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getPreserveVLSN</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>newInstanceOfType</color><color=#f8f8f2>(</color><color=#f8f8f2>versionedLNConstructor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>newInstanceOfType</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>StringBuilder</color> <color=#a6e22e>dumpEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>dbId</color><color=#f8f8f2>.</color><color=#a6e22e>dumpLog</color><color=#f8f8f2>(</color><color=#f8f8f2>sb</color><color=#f8f8f2>,</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>dumpKey</color><color=#f8f8f2>(</color><color=#f8f8f2>sb</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>dumpLog</color><color=#f8f8f2>(</color><color=#f8f8f2>sb</color><color=#f8f8f2>,</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"<embeddedLN val=\""</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>embeddedLN</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\"/>"</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"<expires val=\""</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>TTL</color><color=#f8f8f2>.</color><color=#a6e22e>formatExpiration</color><color=#f8f8f2>(</color><color=#f8f8f2>expiration</color><color=#f8f8f2>,</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\"/>"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>dumpLog</color><color=#f8f8f2>(</color><color=#f8f8f2>sb</color><color=#f8f8f2>,</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"<abortLSN val=\""</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>abortLsn</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\"/>"</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"<abortKD val=\""</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>abortKnownDeleted</color> <color=#f92672>?</color> <color=#e6db74>"true"</color> <color=#f8f8f2>:</color> <color=#e6db74>"false"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\"/>"</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>dumpString</color><color=#f8f8f2>(</color><color=#f8f8f2>abortKey</color><color=#f8f8f2>,</color> <color=#e6db74>"abortKey"</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortData</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>dumpString</color><color=#f8f8f2>(</color><color=#f8f8f2>abortData</color><color=#f8f8f2>,</color> <color=#e6db74>"abortData"</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"<abortVLSN v=\""</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>abortVLSN</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\"/>"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"<abortExpires val=\""</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>TTL</color><color=#f8f8f2>.</color><color=#a6e22e>formatExpiration</color><color=#f8f8f2>(</color><color=#f8f8f2>abortExpiration</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortExpirationInHours</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\"/>"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>dumpRep</color><color=#f8f8f2>(</color><color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" txn="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LN</color> <color=#a6e22e>getMainItem</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getTransactionId</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Writing support.</color>
<color=#75715e>   */</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getLastFormatChange</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>LAST_FORMAT_CHANGE</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>VersionedWriteLoggable</color><color=#f92672>></color> <color=#a6e22e>getEmbeddedLoggables</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>asList</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>LN</color><color=#f8f8f2>(),</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseId</color><color=#f8f8f2>(),</color> <color=#66d9ef>new</color> <color=#f8f8f2>Txn</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getSize</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>getClass</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>LNLogEntry</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>;</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>getBaseLNEntrySize</color><color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*keyIsLastSerializedField*/</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Method shared by LNLogEntry subclasses.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param keyIsLastSerializedField specifies whether the key length can be omitted because the key</color>
<color=#75715e>   *     is the last field. This should be false when an LNLogEntry subclass adds fields to the</color>
<color=#75715e>   *     serialized format.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#a6e22e>getBaseLNEntrySize</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>keyIsLastSerializedField</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color>
        <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color>
            <color=#f92672>+</color> <color=#f8f8f2>dbId</color><color=#f8f8f2>.</color><color=#a6e22e>getLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color>
            <color=#f92672>+</color> <color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>keyIsLastSerializedField</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getPackedIntLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#75715e>// flags</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>12</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortLSN</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>forReplication</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getPackedLongLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>abortLsn</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getByteArrayLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>abortKey</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortData</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getByteArrayLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>abortData</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getPackedLongLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>abortVLSN</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>size</color> <color=#f92672>+=</color>
            <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getPackedIntLogSize</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>abortExpirationInHours</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>abortExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>abortExpiration</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getPackedIntLogSize</color><color=#f8f8f2>(</color><color=#f8f8f2>expirationInHours</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>expiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>writeEntry</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Subclasses must call writeBaseLNEntry. */</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>getClass</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>LNLogEntry</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>writeBaseLNEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*keyIsLastSerializedField*/</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Method shared by LNLogEntry subclasses.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param keyIsLastSerializedField specifies whether the key length can be omitted because the key</color>
<color=#75715e>   *     is the last field. This should be false when an LNLogEntry subclass adds fields to the</color>
<color=#75715e>   *     serialized format.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>final</color> <color=#66d9ef>void</color> <color=#a6e22e>writeBaseLNEntry</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>keyIsLastSerializedField</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>byte</color> <color=#f8f8f2>flags</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>12</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>forReplication</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortKnownDeleted</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>ABORT_KD_MASK</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>HAVE_ABORT_LSN_MASK</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>embeddedLN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>EMBEDDED_LN_MASK</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>HAVE_ABORT_KEY_MASK</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortData</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>HAVE_ABORT_DATA_MASK</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>HAVE_ABORT_VLSN_MASK</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>HAVE_ABORT_EXPIRATION_MASK</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>flags</color> <color=#f92672>|=</color> <color=#f8f8f2>HAVE_EXPIRATION_MASK</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>destBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>flags</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>dbId</color><color=#f8f8f2>.</color><color=#a6e22e>writeToLog</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>12</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortLSN</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>forReplication</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedLong</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672><</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>destBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>flags</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>writeToLog</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>==</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>destBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>flags</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>forReplication</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>11</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writeByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortKey</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortData</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writeByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortData</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedLong</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortVLSN</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveAbortExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedInt</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortExpirationInHours</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>abortExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>abortExpiration</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersion</color> <color=#f92672>>=</color> <color=#ae81ff>12</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveExpiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>expirationInHours</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>expiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>writeToLog</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>keyIsLastSerializedField</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>writeBytesNoLength</color><color=#f8f8f2>(</color><color=#f8f8f2>destBuffer</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isImmediatelyObsolete</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>isDeleted</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>embeddedLN</color> <color=#f92672>||</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isLNImmediatelyObsolete</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isDeleted</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>isDeleted</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For LN entries, we need to record the latest LSN for that node with the owning transaction,</color>
<color=#75715e>   * within the protection of the log latch. This is a callback for the log manager to do that</color>
<color=#75715e>   * recording.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>postLogWork</color><color=#f8f8f2>(</color><color=#f8f8f2>LogEntryHeader</color> <color=#f8f8f2>header</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>justLoggedLsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>addLogInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>justLoggedLsn</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Save transient fields after write. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>setVLSNSequence</color><color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>getSequence</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>postFetchInit</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>postFetchInit</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts the key/data for old format LNs in a duplicates DB.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method MUST be called before calling any of the following methods: getLN getKey</color>
<color=#75715e>   * getUserKeyData</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>TODO: This method is not called by the HA feeder when materializing entries. This is OK</color>
<color=#75715e>   * because entries with log version 7 and below are never materialized. But we may want to rename</color>
<color=#75715e>   * this method to make it clear that it only is, and only must be, called for the log versions <</color>
<color=#75715e>   * 8.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>postFetchInit</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>isDupDb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>needConversion</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>dupStatus</color> <color=#f92672>==</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NEED_CONVERSION</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>dupStatus</color> <color=#f92672>=</color> <color=#f8f8f2>isDupDb</color> <color=#f92672>?</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>DUP_DB</color> <color=#f8f8f2>:</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NOT_DUP_DB</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Do not convert more than once. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>needConversion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Nothing to convert for non-duplicates DB. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dupStatus</color> <color=#f92672>==</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NOT_DUP_DB</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>combineDupKeyData</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Combine old key and old LN's data into a new key, and set the LN's data to empty. */</color>
  <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>combineDupKeyData</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>isDeleted</color><color=#f8f8f2>();</color> <color=#75715e>// DeletedLNLogEntry overrides this method.</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DupKeyData</color><color=#f8f8f2>.</color><color=#a6e22e>combine</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>setEmpty</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Translates two-part keys in duplicate DBs back to the original user operation params.</color>
<color=#75715e>   * postFetchInit must be called before calling this method.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>getUserKeyData</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyParam</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>dataParam</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>requireKnownDupStatus</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dupStatus</color> <color=#f92672>==</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>DUP_DB</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DupKeyData</color><color=#f8f8f2>.</color><color=#a6e22e>split</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>),</color> <color=#f8f8f2>keyParam</color><color=#f8f8f2>,</color> <color=#f8f8f2>dataParam</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keyParam</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>keyParam</color><color=#f8f8f2>.</color><color=#a6e22e>setData</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dataParam</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>dataParam</color><color=#f8f8f2>.</color><color=#a6e22e>setData</color><color=#f8f8f2>(</color><color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Accessors.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isEmbeddedLN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>embeddedLN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>LN</color> <color=#a6e22e>getLN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>requireKnownDupStatus</color><color=#f8f8f2>();</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getKey</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>requireKnownDupStatus</color><color=#f8f8f2>();</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>key</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getData</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getEmbeddedData</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isEmbeddedLN</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>isDeleted</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>EMPTY_KEY</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getExpiration</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isExpirationInHours</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>requireKnownDupStatus</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dupStatus</color> <color=#f92672>!=</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>DUP_DB</color> <color=#f92672>&&</color> <color=#f8f8f2>dupStatus</color> <color=#f92672>!=</color> <color=#f8f8f2>DupStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NOT_DUP_DB</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>unexpectedState</color><color=#f8f8f2>(</color><color=#e6db74>"postFetchInit was not called"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This method is only used when the converted length is not needed, for example by</color>
<color=#75715e>   * StatsFileReader.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getUnconvertedDataLength</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>().</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This method is only used when the converted length is not needed, for example by</color>
<color=#75715e>   * StatsFileReader.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getUnconvertedKeyLength</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>DatabaseId</color> <color=#a6e22e>getDbId</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>dbId</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getAbortLsn</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getAbortKnownDeleted</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortKnownDeleted</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getAbortKey</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortKey</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getAbortData</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortData</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getAbortVLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortVLSN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getAbortExpiration</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortExpiration</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isAbortExpirationInHours</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortExpirationInHours</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>Long</color> <color=#a6e22e>getTxnId</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>Txn</color> <color=#a6e22e>getUserTxn</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryType</color><color=#f8f8f2>.</color><color=#a6e22e>isTransactional</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>txn</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>logicalEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>LogEntry</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>LNLogEntry</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>LNLogEntry</color><color=#f92672><?></color> <color=#f8f8f2>otherEntry</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>LNLogEntry</color><color=#f92672><?></color><color=#f8f8f2>)</color> <color=#f8f8f2>other</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>dbId</color><color=#f8f8f2>.</color><color=#a6e22e>logicalEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>otherEntry</color><color=#f8f8f2>.</color><color=#a6e22e>dbId</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>logicalEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>otherEntry</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>otherEntry</color><color=#f8f8f2>.</color><color=#a6e22e>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>otherEntry</color><color=#f8f8f2>.</color><color=#a6e22e>key</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

      <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>logicalEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>otherEntry</color><color=#f8f8f2>.</color><color=#a6e22e>ln</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>