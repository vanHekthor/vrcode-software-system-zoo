<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.stream</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.BaseProtocol.AlternateMatchpoint</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.BaseProtocol.Entry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.BaseProtocol.EntryNotFound</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.BaseProtocol.EntryRequestType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocol.Message</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.NamedChannel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.InternalException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Object to sync-up the Feeder and Subscriber to establish the VLSN from which subscriber should</color>
<color=#75715e> * should start stream log entries from feeder.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SubscriberFeederSyncup</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>NamedChannel</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>FeederFilter</color> <color=#f8f8f2>filter</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>EntryRequestType</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>SubscriberFeederSyncup</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>NamedChannel</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>FeederFilter</color> <color=#f8f8f2>filter</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EntryRequestType</color> <color=#f8f8f2>type</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>namedChannel</color> <color=#f92672>=</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>protocol</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>filter</color> <color=#f92672>=</color> <color=#f8f8f2>filter</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>repImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>type</color> <color=#f92672>=</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>logger</color> <color=#f92672>=</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Execute sync-up to the Feeder. Request Feeder to start a replication stream from a start VLSN,</color>
<color=#75715e>   * if it is available. Otherwise return NULL VLSN to subscriber.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param reqVLSN VLSN requested by subscriber to stream log entries</color>
<color=#75715e>   * @return start VLSN from subscribe can stream log entries</color>
<color=#75715e>   * @throws InternalException if fail to execute syncup</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>execute</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color> <color=#f8f8f2>reqVLSN</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>InternalException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>startTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Subscriber-Feeder "</color> <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" syncup started."</color><color=#f8f8f2>);</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* first query the start VLSN from feeder */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>startVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>getStartVLSNFromFeeder</color><color=#f8f8f2>(</color><color=#f8f8f2>reqVLSN</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>startVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Response from feeder  "</color>
                <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>": the start VLSN "</color>
                <color=#f92672>+</color> <color=#f8f8f2>startVLSN</color>
                <color=#f92672>+</color> <color=#e6db74>", the requested VLSN "</color>
                <color=#f92672>+</color> <color=#f8f8f2>reqVLSN</color>
                <color=#f92672>+</color> <color=#e6db74>", send startStream request with filter."</color><color=#f8f8f2>);</color>

        <color=#75715e>/* start streaming from feeder if valid start VLSN */</color>
        <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>StartStream</color><color=#f8f8f2>(</color><color=#f8f8f2>startVLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>filter</color><color=#f8f8f2>),</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Unable to stream from Feeder "</color>
                <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" from requested VLSN "</color>
                <color=#f92672>+</color> <color=#f8f8f2>reqVLSN</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>startVLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalStateException</color> <color=#f92672>|</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>InternalException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color>
              <color=#e6db74>"Subscriber to feeder "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>" sync-up done, elapsed time: %,dms"</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Request a start VLSN from feeder. The feeder will return a valid start VLSN, which can be equal</color>
<color=#75715e>   * to or earlier than the request VLSN, or null if feeder is unable to service the requested VLSN.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param requestVLSN start VLSN requested by subscriber</color>
<color=#75715e>   * @return VLSN a valid start VLSN from feeder, or null if it unavailable at the feeder</color>
<color=#75715e>   * @throws IOException if unable to read message from channel</color>
<color=#75715e>   * @throws IllegalStateException if the feeder sends an unexpected message</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getStartVLSNFromFeeder</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color> <color=#f8f8f2>requestVLSN</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>IllegalStateException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>fine</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#e6db74>"Subscriber send requested VLSN "</color>
            <color=#f92672>+</color> <color=#f8f8f2>requestVLSN</color>
            <color=#f92672>+</color> <color=#e6db74>" to feeder "</color>
            <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>

    <color=#75715e>/* ask the feeder for the requested VLSN. */</color>
    <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>EntryRequest</color><color=#f8f8f2>(</color><color=#f8f8f2>requestVLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>),</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>    * Expect the feeder to return one of following if type is</color>
<color=#75715e>    * EntryRequestType.DEFAULT:</color>
<color=#75715e>    *  a) not_found if the requested VLSN is too low</color>
<color=#75715e>    *  b) the requested VLSN if the requested VLSN is found</color>
<color=#75715e>    *  c) the alt match VLSN if the requested VLSN is too high</color>
<color=#75715e>    *</color>
<color=#75715e>    * If type is EntryRequestType.AVAILABLE:</color>
<color=#75715e>    *  a) the lowest available VLSN if the requested VLSN is too low</color>
<color=#75715e>    *  b) the requested VLSN if the requested VLSN is found</color>
<color=#75715e>    *  c) the highest available VLSN if the request VLSN is too high</color>

<color=#75715e>    * If type is EntryRequestType.NOW:</color>
<color=#75715e>    *  a) always returns highest available VLSN</color>
<color=#75715e>    */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Message</color> <color=#f8f8f2>message</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>namedChannel</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>message</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>vlsn</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>message</color><color=#f8f8f2>).</color><color=#a6e22e>getWireRecord</color><color=#f8f8f2>().</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>();</color>

      <color=#75715e>/* must be exact match for the default type */</color>
        <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>EntryRequestType</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>requestVLSN</color><color=#f8f8f2>));</color>

      <color=#75715e>/* dump traces */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>requestVLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>finest</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Subscriber successfully requested VLSN "</color>
                <color=#f92672>+</color> <color=#f8f8f2>requestVLSN</color>
                <color=#f92672>+</color> <color=#e6db74>" from feeder "</color>
                <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>requestVLSN</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>finest</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Requested VLSN "</color>
                <color=#f92672>+</color> <color=#f8f8f2>requestVLSN</color>
                <color=#f92672>+</color> <color=#e6db74>" is not available from feeder "</color>
                <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" instead, start stream from a lowest "</color>
                <color=#f92672>+</color> <color=#e6db74>"available VLSN "</color>
                <color=#f92672>+</color> <color=#f8f8f2>vlsn</color>
                <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>requestVLSN</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>EntryRequestType</color><color=#f8f8f2>.</color><color=#a6e22e>NOW</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>finest</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Stream from highest available vlsn "</color>
                  <color=#f92672>+</color> <color=#e6db74>"from feeder "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>":"</color>
                  <color=#f92672>+</color> <color=#f8f8f2>vlsn</color>
                  <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>finest</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Requested VLSN "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>requestVLSN</color>
                  <color=#f92672>+</color> <color=#e6db74>" is not available from feeder "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>" instead, start stream from a highest"</color>
                  <color=#f92672>+</color> <color=#e6db74>" available VLSN "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>vlsn</color>
                  <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>message</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>AlternateMatchpoint</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* now and available type should not see alter match point */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>EntryRequestType</color><color=#f8f8f2>.</color><color=#a6e22e>NOW</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>EntryRequestType</color><color=#f8f8f2>.</color><color=#a6e22e>AVAILABLE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>msg</color> <color=#f92672>=</color>
            <color=#e6db74>"Receive unexpected response "</color>
                <color=#f92672>+</color> <color=#f8f8f2>message</color>
                <color=#f92672>+</color> <color=#e6db74>"from feeder "</color>
                <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>vlsn</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>AlternateMatchpoint</color><color=#f8f8f2>)</color> <color=#f8f8f2>message</color><color=#f8f8f2>).</color><color=#a6e22e>getAlternateWireRecord</color><color=#f8f8f2>().</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>();</color>
      <color=#75715e>/* must be an earlier VLSN */</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>requestVLSN</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>finest</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Feeder "</color>
              <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" returns a valid start VLSN"</color>
              <color=#f92672>+</color> <color=#f8f8f2>vlsn</color>
              <color=#f92672>+</color> <color=#e6db74>" but earlier than requested one "</color>
              <color=#f92672>+</color> <color=#f8f8f2>requestVLSN</color>
              <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>message</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>EntryNotFound</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* now and available type should not see not found */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>EntryRequestType</color><color=#f8f8f2>.</color><color=#a6e22e>NOW</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>EntryRequestType</color><color=#f8f8f2>.</color><color=#a6e22e>AVAILABLE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#75715e>/*</color>
<color=#75715e>         * even for a brand new environment, the VLSN range at feeder</color>
<color=#75715e>         * is not empty so we should not see entry not found</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>msg</color> <color=#f92672>=</color>
            <color=#e6db74>"Receive unexpected response "</color>
                <color=#f92672>+</color> <color=#f8f8f2>message</color>
                <color=#f92672>+</color> <color=#e6db74>"from feeder "</color>
                <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>vlsn</color> <color=#f92672>=</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>finest</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Feeder "</color>
              <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" is unable to service the request vlsn "</color>
              <color=#f92672>+</color> <color=#f8f8f2>requestVLSN</color>
              <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* unexpected response from feeder */</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>msg</color> <color=#f92672>=</color>
          <color=#e6db74>"Receive unexpected response "</color>
              <color=#f92672>+</color> <color=#f8f8f2>message</color>
              <color=#f92672>+</color> <color=#e6db74>"from feeder "</color>
              <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>", request type: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>