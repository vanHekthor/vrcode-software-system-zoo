<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.log.entry</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseId</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryHeader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A Log entry allows you to read, write and dump a database log entry. Each entry may be made up of</color>
<color=#75715e> * one or more loggable items.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The log entry on disk consists of a log header defined by LogManager and the specific contents</color>
<color=#75715e> * of the log entry.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Log entries that support replication are required to implement {@link ReplicableLogEntry}.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>LogEntry</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Cloneable</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** Inform a LogEntry instance of its corresponding LogEntryType. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>setLogType</color><color=#f8f8f2>(</color><color=#f8f8f2>LogEntryType</color> <color=#f8f8f2>entryType</color><color=#f8f8f2>);</color>

  <color=#75715e>/** @return the type of log entry */</color>
  <color=#f8f8f2>LogEntryType</color> <color=#a6e22e>getLogType</color><color=#f8f8f2>();</color>

  <color=#75715e>/** Read in a log entry. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>readEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LogEntryHeader</color> <color=#f8f8f2>header</color><color=#f8f8f2>,</color> <color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>entryBuffer</color><color=#f8f8f2>);</color>

  <color=#75715e>/** Print out the contents of an entry. */</color>
  <color=#f8f8f2>StringBuilder</color> <color=#a6e22e>dumpEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>);</color>

  <color=#75715e>/** @return the first item of the log entry */</color>
  <color=#f8f8f2>Object</color> <color=#a6e22e>getMainItem</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Construct a complete item from a item entry, fetching additional log entries as needed to</color>
<color=#75715e>   * ensure that a usable main object is available.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For an OldBINDeltaLogEntry, fetches the full BIN and merges the delta information. This is</color>
<color=#75715e>   * necessary to return a Node main object. However, for the new BINDeltaLogEntry, the full BIN is</color>
<color=#75715e>   * not fetched, since the partial BIN (the delta) is usable as a Node.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Object</color> <color=#a6e22e>getResolvedItem</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @return the ID of the database containing this entry, or null if this entry type is not part of</color>
<color=#75715e>   *     a database.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>DatabaseId</color> <color=#a6e22e>getDbId</color><color=#f8f8f2>();</color>

  <color=#75715e>/** @return return the transaction id if this log entry is transactional, 0 otherwise. */</color>
  <color=#66d9ef>long</color> <color=#a6e22e>getTransactionId</color><color=#f8f8f2>();</color>

  <color=#75715e>/** @return size of byte buffer needed to store this entry. */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>getSize</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Serialize this object into the buffer.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param logBuffer is the destination buffer</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>writeEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>logBuffer</color><color=#f8f8f2>);</color>

  <color=#75715e>/** Returns true if this item should be counted as obsolete when logged. */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>isImmediatelyObsolete</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>

  <color=#75715e>/** Returns whether this is a deleted LN. */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>isDeleted</color><color=#f8f8f2>();</color>

  <color=#75715e>/** Do any processing we need to do after logging, while under the logging latch. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>postLogWork</color><color=#f8f8f2>(</color><color=#f8f8f2>LogEntryHeader</color> <color=#f8f8f2>header</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>justLoggedLsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>);</color>

  <color=#75715e>/** @return a shallow clone. */</color>
  <color=#f8f8f2>LogEntry</color> <color=#a6e22e>clone</color><color=#f8f8f2>();</color>

  <color=#75715e>/** @return true if these two log entries are logically the same. Used for replication. */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>logicalEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>LogEntry</color> <color=#f8f8f2>other</color><color=#f8f8f2>);</color>

  <color=#75715e>/** Dump the contents of the log entry that are interesting for replication. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>dumpRep</color><color=#f8f8f2>(</color><color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color><color=#f8f8f2>);</color>
<color=#f8f8f2>}</color>