<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.vlsn</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogItem</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LongStat</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.StatGroup</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.lang.ref.SoftReference</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.atomic.AtomicReference</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A no-wait cache used to retain the most recent VLSNs. The Feeders check this cache first for log</color>
<color=#75715e> * entries to send out to the Replicas. Feeders that are feeding at the most up to date portion of</color>
<color=#75715e> * the replication stream will likely hit in the cache, preventing a lookup in the log buffers or</color>
<color=#75715e> * log files.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The log item cache is made up of weak references so there is never any guarantee that even the</color>
<color=#75715e> * most recent 32 entries are in there.</color>
<color=#75715e> */</color>
<color=#66d9ef>class</color> <color=#a6e22e>LogItemCache</color> <color=#f8f8f2>{</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Must be a power of 2 and small, typically around 32 entries. Increasing</color>
<color=#75715e>   * sizes typically yield diminishing returns.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>cacheSize</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>sizeMask</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Soft reference to array, so that the LogItems can be released when</color>
<color=#75715e>   * under GC pressure.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#f8f8f2>SoftReference</color><color=#f92672><</color><color=#f8f8f2>AtomicReference</color><color=#f92672><</color><color=#f8f8f2>LogItem</color><color=#f92672>>[]></color> <color=#f8f8f2>cacheReference</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>SoftReference</color><color=#f92672><</color><color=#f8f8f2>AtomicReference</color><color=#f92672><</color><color=#f8f8f2>LogItem</color><color=#f92672>>[]></color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>LongStat</color> <color=#f8f8f2>nHits</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>LongStat</color> <color=#f8f8f2>nMisses</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a log item size of the specified size.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param cacheSize it must be a power of two</color>
<color=#75715e>   * @param statGroup the statsGroup to which this cache adds its stats</color>
<color=#75715e>   * @throws IllegalArgumentException via ReplicatedEnvironment ctor.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>LogItemCache</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>cacheSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>StatGroup</color> <color=#f8f8f2>statGroup</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>bitCount</color><color=#f8f8f2>(</color><color=#f8f8f2>cacheSize</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Bad cache size: "</color> <color=#f92672>+</color> <color=#f8f8f2>cacheSize</color> <color=#f92672>+</color> <color=#e6db74>"; it must be a power of 2"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cacheSize</color> <color=#f92672>=</color> <color=#f8f8f2>cacheSize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>sizeMask</color> <color=#f92672>=</color> <color=#f8f8f2>cacheSize</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>nHits</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LongStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSNIndexStatDefinition</color><color=#f8f8f2>.</color><color=#a6e22e>N_HITS</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>nMisses</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LongStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSNIndexStatDefinition</color><color=#f8f8f2>.</color><color=#a6e22e>N_MISSES</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>void</color> <color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>LogItem</color> <color=#f8f8f2>logItem</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>getArray</color><color=#f8f8f2>()</color><color=#f92672>[</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>getSequence</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#f8f8f2>sizeMask</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>logItem</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>LogItem</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LogItem</color> <color=#f8f8f2>item</color> <color=#f92672>=</color> <color=#f8f8f2>getArray</color><color=#f8f8f2>()</color><color=#f92672>[</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>.</color><color=#a6e22e>getSequence</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#f8f8f2>sizeMask</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>item</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>item</color><color=#f8f8f2>.</color><color=#a6e22e>header</color><color=#f8f8f2>.</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>nHits</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>item</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>nMisses</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For explicit release of references. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>clear</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>AtomicReference</color><color=#f92672><</color><color=#f8f8f2>LogItem</color><color=#f92672>></color> <color=#f8f8f2>element</color> <color=#f8f8f2>:</color> <color=#f8f8f2>getArray</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>element</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the cache array, creating a new one, if the GC had cleared the reference to the earlier</color>
<color=#75715e>   * one.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that there may be a slight inefficiency if getArray is called concurrently, and it had</color>
<color=#75715e>   * been cleared earlier, since it would be allocated twice and introduce a cache miss. This</color>
<color=#75715e>   * occurrence is infrequent enough that it's not worth the overhead of a sync mechanism.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the underlying array, allocating a new one, if the previous one had been GC'd</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unchecked"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>AtomicReference</color><color=#f92672><</color><color=#f8f8f2>LogItem</color><color=#f92672>>[]</color> <color=#a6e22e>getArray</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>AtomicReference</color><color=#f92672><</color><color=#f8f8f2>LogItem</color><color=#f92672>>[]</color> <color=#f8f8f2>array</color> <color=#f92672>=</color> <color=#f8f8f2>cacheReference</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>array</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>array</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>AtomicReference</color><color=#f92672>[</color><color=#f8f8f2>cacheSize</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>array</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>array</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>AtomicReference</color><color=#f92672><</color><color=#f8f8f2>LogItem</color><color=#f92672>></color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>cacheReference</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>SoftReference</color><color=#f92672><</color><color=#f8f8f2>AtomicReference</color><color=#f92672><</color><color=#f8f8f2>LogItem</color><color=#f92672>>[]></color><color=#f8f8f2>(</color><color=#f8f8f2>array</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>array</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>