<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.cleaner</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.ReplicationContext</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.entry.LNLogEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.recovery.RecoveryInfo</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.tree.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.BasicLocker</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.LockType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Locker</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DbLsn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The UP tracks utilization summary information for all log files.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Unlike the UtilizationTracker, the UP is not accessed under the log write latch and is instead</color>
<color=#75715e> * synchronized on itself for protecting the cache. It is not accessed during the primary data</color>
<color=#75715e> * access path, except for when flushing (writing) file summary LNs. This occurs in the following</color>
<color=#75715e> * cases:</color>
<color=#75715e> *</color>
<color=#75715e> * <ol></color>
<color=#75715e> *   <li>The summary information is flushed at the end of a checkpoint. This allows tracking to</color>
<color=#75715e> *       occur in memory in between checkpoints, and replayed during recovery.</color>
<color=#75715e> *   <li>When committing the truncateDatabase and removeDatabase operations, the summary information</color>
<color=#75715e> *       is flushed because detail tracking for those operations is not replayed during recovery</color>
<color=#75715e> *   <li>The evictor will ask the UtilizationTracker to flush the largest summary if the memory</color>
<color=#75715e> *       taken by the tracker exeeds its budget.</color>
<color=#75715e> * </ol></color>
<color=#75715e> *</color>
<color=#75715e> * <p>The cache is populated by the RecoveryManager just before performing the initial checkpoint.</color>
<color=#75715e> * The UP must be open and populated in order to respond to requests to flush summaries and to evict</color>
<color=#75715e> * tracked detail, even if the cleaner is disabled.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>WARNING: While synchronized on this object, eviction is not permitted. If it were, this could</color>
<color=#75715e> * cause deadlocks because the order of locking would be the UP object and then the evictor. During</color>
<color=#75715e> * normal eviction the order is to first lock the evictor and then the UP, when evicting tracked</color>
<color=#75715e> * detail.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The methods in this class synchronize to protect the cached summary information. Some methods</color>
<color=#75715e> * also access the UP database. However, because eviction must not occur while synchronized, UP</color>
<color=#75715e> * database access is not performed while synchronized except in one case: when inserting a new</color>
<color=#75715e> * summary record. In that case we disallow eviction during the database operation.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>UtilizationProfile</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>UtilizationTracker</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>reservedFilesDb</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>SortedMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileSummary</color><color=#f92672>></color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>cachePopulated</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Creates an empty UP. */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>UtilizationProfile</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>UtilizationTracker</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>env</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>tracker</color> <color=#f92672>=</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>fileSummaryMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><></color><color=#f8f8f2>();</color>

    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the base summary from the cached map. Add the tracked summary, if one exists, to the base</color>
<color=#75715e>   * summary. Sets all entries obsolete, if the file is in the migrateFiles set.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>FileSummary</color> <color=#a6e22e>getFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>file</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Get base summary. */</color>
    <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Add tracked summary */</color>
    <color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>trackedSummary</color> <color=#f92672>=</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getTrackedFile</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>trackedSummary</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>totals</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FileSummary</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>summary</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>totals</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>summary</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>totals</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>trackedSummary</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>totals</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>summary</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Count the given locally tracked info as obsolete and then log the file and database info. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>flushLocalTracker</color><color=#f8f8f2>(</color><color=#f8f8f2>LocalUtilizationTracker</color> <color=#f8f8f2>localTracker</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Count tracked info under the log write latch. */</color>
    <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>().</color><color=#a6e22e>transferToUtilizationTracker</color><color=#f8f8f2>(</color><color=#f8f8f2>localTracker</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Write out the modified file and database info. */</color>
    <color=#f8f8f2>flushFileUtilization</color><color=#f8f8f2>(</color><color=#f8f8f2>localTracker</color><color=#f8f8f2>.</color><color=#a6e22e>getTrackedFiles</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>flushDbUtilization</color><color=#f8f8f2>(</color><color=#f8f8f2>localTracker</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Flush a FileSummaryLN node for each given TrackedFileSummary. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>flushFileUtilization</color><color=#f8f8f2>(</color><color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>TrackedFileSummary</color><color=#f92672>></color> <color=#f8f8f2>activeFiles</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Utilization flushing may be disabled for unittests. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getCheckpointUP</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>getEnvironmentConfig</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Write out the modified file summaries. */</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>activeFile</color> <color=#f8f8f2>:</color> <color=#f8f8f2>activeFiles</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>fileNum</color> <color=#f92672>=</color> <color=#f8f8f2>activeFile</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>tfs</color> <color=#f92672>=</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getTrackedFile</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tfs</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>flushFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Flush a MapLN for each database that has dirty utilization in the given tracker. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>flushDbUtilization</color><color=#f8f8f2>(</color><color=#f8f8f2>LocalUtilizationTracker</color> <color=#f8f8f2>localTracker</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Utilization flushing may be disabled for unittests. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getCheckpointUP</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>getEnvironmentConfig</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Write out the modified MapLNs. */</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o</color> <color=#f8f8f2>:</color> <color=#f8f8f2>localTracker</color><color=#f8f8f2>.</color><color=#a6e22e>getTrackedDbs</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>o</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>isDeleted</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>isDirty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>().</color><color=#a6e22e>modifyDbRoot</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a copy of the current file summary map, optionally including tracked summary</color>
<color=#75715e>   * information, for use by the DbSpace utility and by unit tests. The returned map's key is a Long</color>
<color=#75715e>   * file number and its value is a FileSummary.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>SortedMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileSummary</color><color=#f92672>></color> <color=#a6e22e>getFileSummaryMap</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>includeTrackedFiles</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>cachePopulated</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>includeTrackedFiles</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Copy the fileSummaryMap to a new map, adding in the tracked</color>
<color=#75715e>       * summary information for each entry.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>TreeMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileSummary</color><color=#f92672>></color> <color=#f8f8f2>map</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><></color><color=#f8f8f2>();</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>file</color> <color=#f8f8f2>:</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>getFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Add tracked files that are not in fileSummaryMap yet. */</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>summary</color> <color=#f8f8f2>:</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getTrackedFiles</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color> <color=#f92672>=</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>map</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><></color><color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Gets the size of the file. If the file does not exist in fileSummaryMap, then return -1. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>int</color> <color=#a6e22e>getFileSize</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>file</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>getFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>summary</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a simplified copy of the current file summary map, i.e. the value is only the total</color>
<color=#75715e>   * size of the file.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Besides, we are not sure whether the FileSummary for the current last file is complete, so</color>
<color=#75715e>   * we remove the entry for the last file.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>SortedMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f92672>></color> <color=#a6e22e>getFileSizeSummaryMap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>TreeMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f92672>></color> <color=#f8f8f2>map</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><></color><color=#f8f8f2>();</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color> <color=#f8f8f2>:</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>totalSize</color> <color=#f92672>=</color> <color=#f8f8f2>getFileSize</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>totalSize</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Add tracked size, or create entry if not yet in the map. */</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>trackedSummary</color> <color=#f8f8f2>:</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getTrackedFiles</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color> <color=#f92672>=</color> <color=#f8f8f2>trackedSummary</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>trackedSummary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Remove the last file. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>lastKey</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>map</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Clears the cache of file summary info. The cache is not automatically repopulated, so this</color>
<color=#75715e>   * method should currently be called only by close.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>clearCache</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>memorySize</color> <color=#f92672>=</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>MemoryBudget</color><color=#f8f8f2>.</color><color=#a6e22e>UTILIZATION_PROFILE_ENTRY</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>MemoryBudget</color> <color=#f8f8f2>mb</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getMemoryBudget</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>mb</color><color=#f8f8f2>.</color><color=#a6e22e>updateAdminMemoryUsage</color><color=#f8f8f2>(</color><color=#ae81ff>0</color> <color=#f92672>-</color> <color=#f8f8f2>memorySize</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>fileSummaryMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>cachePopulated</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Updates the reserved file db and file summary db after removing a set of files from the</color>
<color=#75715e>   * FileSelector and changing their status to reserved in the FileProtector. 1. Insert reserved</color>
<color=#75715e>   * file record for each file. 2. Remove files from database (MapLN) metadata. 3. Delete file</color>
<color=#75715e>   * summary db records for each file.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>See populateCache for how a crash during these steps is handled.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>reserveFiles</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileSelector</color><color=#f8f8f2>.</color><color=#a6e22e>FileInfo</color><color=#f92672>></color> <color=#f8f8f2>reservedFiles</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f92672>></color> <color=#f8f8f2>dbIds</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>();</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileSelector</color><color=#f8f8f2>.</color><color=#a6e22e>FileInfo</color><color=#f92672>></color> <color=#f8f8f2>entry</color> <color=#f8f8f2>:</color> <color=#f8f8f2>reservedFiles</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>FileSelector</color><color=#f8f8f2>.</color><color=#a6e22e>FileInfo</color> <color=#f8f8f2>fsInfo</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>putReservedFileRecord</color><color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>(),</color> <color=#f8f8f2>fsInfo</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>dbIds</color><color=#f8f8f2>.</color><color=#a6e22e>addAll</color><color=#f8f8f2>(</color><color=#f8f8f2>fsInfo</color><color=#f8f8f2>.</color><color=#a6e22e>dbIds</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>files</color> <color=#f92672>=</color> <color=#f8f8f2>reservedFiles</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>removeDbMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>files</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbIds</color><color=#f8f8f2>);</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>file</color> <color=#f8f8f2>:</color> <color=#f8f8f2>files</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>deleteFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Stores a reserved file db record for a file that has been cleaned and is ready-to-deleted. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>putReservedFileRecord</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>FileSelector</color><color=#f8f8f2>.</color><color=#a6e22e>FileInfo</color> <color=#f8f8f2>fsInfo</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>ReservedFileInfo</color><color=#f8f8f2>.</color><color=#a6e22e>keyToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>ReservedFileInfo</color> <color=#f8f8f2>rfInfo</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>ReservedFileInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>fsInfo</color><color=#f8f8f2>.</color><color=#a6e22e>firstVlsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fsInfo</color><color=#f8f8f2>.</color><color=#a6e22e>lastVlsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>fsInfo</color><color=#f8f8f2>.</color><color=#a6e22e>dbIds</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>dataEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>ReservedFileInfo</color><color=#f8f8f2>.</color><color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>rfInfo</color><color=#f8f8f2>,</color> <color=#f8f8f2>dataEntry</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color>
          <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>reservedFilesDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*retainNonTxnLocks*/</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>Put</color><color=#f8f8f2>.</color><color=#a6e22e>OVERWRITE</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Deletes a reserved file db record after the file has been deleted. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>deleteReservedFileRecord</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>file</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>ReservedFileInfo</color><color=#f8f8f2>.</color><color=#a6e22e>keyToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>readOptions</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReadOptions</color><color=#f8f8f2>().</color><color=#a6e22e>setLockMode</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>reservedFilesDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>Get</color><color=#f8f8f2>.</color><color=#a6e22e>SEARCH</color><color=#f8f8f2>,</color> <color=#f8f8f2>readOptions</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes a file from the MapLN utilization info, the utilization database and the profile, after</color>
<color=#75715e>   * it has been determined that the file does not exist. This is unusual, so the inefficiency of</color>
<color=#75715e>   * removeAndFlushDbMetadata is acceptable.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>removeDeletedFile</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>removeAndFlushDbMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>removeFileSummaries</color><color=#f8f8f2>(</color><color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>singleton</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>deleteFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Remove newly reserved files from the utilization profile cache. This is called while</color>
<color=#75715e>   * synchronized on the FileSelector to prevent a window where the file could be selected for</color>
<color=#75715e>   * cleaning again.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method does not delete the utilization db records.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>removeFileSummaries</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>files</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>cachePopulated</color><color=#f8f8f2>;</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color> <color=#f8f8f2>:</color> <color=#f8f8f2>files</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>oldSummary</color> <color=#f92672>=</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>oldSummary</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>MemoryBudget</color> <color=#f8f8f2>mb</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getMemoryBudget</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>mb</color><color=#f8f8f2>.</color><color=#a6e22e>updateAdminMemoryUsage</color><color=#f8f8f2>(</color><color=#ae81ff>0</color> <color=#f92672>-</color> <color=#f8f8f2>MemoryBudget</color><color=#f8f8f2>.</color><color=#a6e22e>UTILIZATION_PROFILE_ENTRY</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes a set of files from the DatabaseImpl utilization info, dirtying the MapLNs in the</color>
<color=#75715e>   * process. The MapLNs will be flushed by the checkpointer. This method performs eviction and is</color>
<color=#75715e>   * not synchronized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For a given file, this method must be called after inserting its reserved db record. If</color>
<color=#75715e>   * there is a crash and recovery finds the reserved db record in the checkpointer interval,</color>
<color=#75715e>   * recovery will redo this action.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method is optimally called for multiple files at a time, since this updates the MapLNs</color>
<color=#75715e>   * more efficiently than if it were done one file at a time.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>removeDbMetadata</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>fileNums</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f92672>></color> <color=#f8f8f2>databases</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>LogManager</color> <color=#f8f8f2>logManager</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DbTree</color> <color=#f8f8f2>dbTree</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>();</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>anyRemoved</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>DatabaseId</color> <color=#f8f8f2>dbId</color> <color=#f8f8f2>:</color> <color=#f8f8f2>databases</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>dbTree</color><color=#f8f8f2>.</color><color=#a6e22e>getDb</color><color=#f8f8f2>(</color><color=#f8f8f2>dbId</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>db</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>anyRemoved</color> <color=#f92672>|=</color> <color=#f8f8f2>logManager</color><color=#f8f8f2>.</color><color=#a6e22e>removeDbFileSummaries</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNums</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>dbTree</color><color=#f8f8f2>.</color><color=#a6e22e>releaseDb</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>anyRemoved</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Like removeDbMetadata but operates on a single file and also flushes the updated MapLNs</color>
<color=#75715e>   * immediately. This is very inefficient and is meant only for infrequent cleanup.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>removeAndFlushDbMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>fileNums</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>singleton</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LogManager</color> <color=#f8f8f2>logManager</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DbTree</color> <color=#f8f8f2>dbTree</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Only call logMapTreeRoot once for ID and NAME DBs. */</color>
    <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>idDatabase</color> <color=#f92672>=</color> <color=#f8f8f2>dbTree</color><color=#f8f8f2>.</color><color=#a6e22e>getDb</color><color=#f8f8f2>(</color><color=#f8f8f2>DbTree</color><color=#f8f8f2>.</color><color=#a6e22e>ID_DB_ID</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>nameDatabase</color> <color=#f92672>=</color> <color=#f8f8f2>dbTree</color><color=#f8f8f2>.</color><color=#a6e22e>getDb</color><color=#f8f8f2>(</color><color=#f8f8f2>DbTree</color><color=#f8f8f2>.</color><color=#a6e22e>NAME_DB_ID</color><color=#f8f8f2>);</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>logRoot</color> <color=#f92672>=</color> <color=#f8f8f2>logManager</color><color=#f8f8f2>.</color><color=#a6e22e>removeDbFileSummaries</color><color=#f8f8f2>(</color><color=#f8f8f2>idDatabase</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNums</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logManager</color><color=#f8f8f2>.</color><color=#a6e22e>removeDbFileSummaries</color><color=#f8f8f2>(</color><color=#f8f8f2>nameDatabase</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNums</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>logRoot</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logRoot</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>logMapTreeRoot</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Use LockType.NONE for traversing the ID DB so that a lock is not</color>
<color=#75715e>     * held when calling modifyDbRoot, which must release locks to</color>
<color=#75715e>     * handle deadlocks.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>.</color><color=#a6e22e>traverseDbWithCursor</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>idDatabase</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
        <color=#66d9ef>true</color> <color=#75715e>/*allowEviction*/</color><color=#f8f8f2>,</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>.</color><color=#a6e22e>WithCursor</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>withCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>CursorImpl</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color>
              <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

            <color=#f8f8f2>MapLN</color> <color=#f8f8f2>mapLN</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>MapLN</color><color=#f8f8f2>)</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>lockAndGetCurrentLN</color><color=#f8f8f2>(</color><color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>mapLN</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>mapLN</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabase</color><color=#f8f8f2>();</color>
              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logManager</color><color=#f8f8f2>.</color><color=#a6e22e>removeDbFileSummaries</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNums</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

                <color=#75715e>/*</color>
<color=#75715e>                 * Because we're using dirty-read, silently do</color>
<color=#75715e>                 * nothing if the DB does not exist</color>
<color=#75715e>                 * (mustExist=false).</color>
<color=#75715e>                 */</color>
                <color=#f8f8f2>dbTree</color><color=#f8f8f2>.</color><color=#a6e22e>modifyDbRoot</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color> <color=#75715e>/*ifBeforeLsn*/</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*mustExist*/</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>});</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Deletes all FileSummaryLNs for the file. This method performs eviction and is not synchronized.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For a given file, this method should be called after calling removeDbMetadata as described</color>
<color=#75715e>   * in {@link #populateCache}.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>deleteFileSummary</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>CursorImpl</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>);</color>
      <color=#75715e>/* Perform eviction in unsynchronized methods. */</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowEviction</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>dataEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

      <color=#75715e>/* Do not return data to avoid a fetch of the existing LN. */</color>
      <color=#f8f8f2>dataEntry</color><color=#f8f8f2>.</color><color=#a6e22e>setPartial</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#75715e>/* Search by file number. */</color>
      <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>getFirstFSLN</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>WRITE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_RESULT</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Delete all LNs for this file number. */</color>
      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>fileNum</color> <color=#f92672>==</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>

        <color=#75715e>/* Perform eviction once per operation. */</color>
        <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>daemonEviction</color><color=#f8f8f2>(</color><color=#66d9ef>true</color> <color=#75715e>/*backgroundIO*/</color><color=#f8f8f2>);</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Eviction after deleting is not necessary since we did not</color>
<color=#75715e>         * fetch the LN.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>deleteCurrentRecord</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicationContext</color><color=#f8f8f2>.</color><color=#a6e22e>NO_REPLICATE</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>result</color> <color=#f92672>=</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>WRITE</color><color=#f8f8f2>,</color>
                <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                <color=#66d9ef>true</color> <color=#75715e>/*forward*/</color><color=#f8f8f2>,</color>
                <color=#66d9ef>false</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                <color=#66d9ef>null</color> <color=#75715e>/*rangeConstraint*/</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>locker</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Explicitly remove the file from the tracker.  */</color>
    <color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>tfs</color> <color=#f92672>=</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getTrackedFile</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tfs</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>().</color><color=#a6e22e>removeTrackedFile</color><color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Updates and stores the FileSummary for a given tracked file, if flushing of the summary is</color>
<color=#75715e>   * allowed.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>flushFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>tfs</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowFlush</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>putFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Updates and stores the FileSummary for a given tracked file. This method is synchronized and</color>
<color=#75715e>   * may not perform eviction.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>PackedOffsets</color> <color=#a6e22e>putFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>tfs</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Cannot write file summary in a read-only environment"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color> <color=#75715e>// no delta</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>cachePopulated</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Db does not exist and this is a read-only environment. */</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>long</color> <color=#f8f8f2>fileNum</color> <color=#f92672>=</color> <color=#f8f8f2>tfs</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Long</color> <color=#f8f8f2>fileNumLong</color> <color=#f92672>=</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Get existing file summary or create an empty one. */</color>
    <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>summary</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * An obsolete node may have been counted after its file was</color>
<color=#75715e>       * reserved or even deleted, for example, when compressing a BIN.</color>
<color=#75715e>       * Do not insert a new profile record if the file is reserved or</color>
<color=#75715e>       * if no corresponding log file exists.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getFileProtector</color><color=#f8f8f2>().</color><color=#a6e22e>isActiveOrNewFile</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * File was deleted by the cleaner.  Remove it from the</color>
<color=#75715e>         * UtilizationTracker and return.  Note that a file is normally</color>
<color=#75715e>         * removed from the tracker by FileSummaryLN.writeToLog method</color>
<color=#75715e>         * when it is called via insertFileSummary below. [#15512]</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>().</color><color=#a6e22e>removeTrackedFile</color><color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FileSummary</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * The key discriminator is a sequence that must be increasing over the</color>
<color=#75715e>     * life of the file.  We use the sum of all entries counted.  We must</color>
<color=#75715e>     * add the tracked and current summaries here to calculate the key.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>tmp</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FileSummary</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>tmp</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>summary</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>tmp</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>sequence</color> <color=#f92672>=</color> <color=#f8f8f2>tmp</color><color=#f8f8f2>.</color><color=#a6e22e>getEntriesCounted</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Insert an LN with the existing and tracked summary info. */</color>
    <color=#f8f8f2>FileSummaryLN</color> <color=#f8f8f2>ln</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>(</color><color=#f8f8f2>summary</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>setTrackedSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>insertFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>ln</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>sequence</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Cache the updated summary object.  */</color>
    <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getBaseSummary</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>MemoryBudget</color> <color=#f8f8f2>mb</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getMemoryBudget</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>mb</color><color=#f8f8f2>.</color><color=#a6e22e>updateAdminMemoryUsage</color><color=#f8f8f2>(</color><color=#f8f8f2>MemoryBudget</color><color=#f8f8f2>.</color><color=#a6e22e>UTILIZATION_PROFILE_ENTRY</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getObsoleteOffsets</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the stored/packed obsolete offsets for the given file.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param logUpdate if true, log any updates to the utilization profile. If false, only retrieve</color>
<color=#75715e>   *     the new information.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>PackedOffsets</color> <color=#a6e22e>getObsoleteDetailPacked</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>logUpdate</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>PackedOffsets</color> <color=#f8f8f2>packedOffsets</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PackedOffsets</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Return if no detail is being tracked. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getCleaner</color><color=#f8f8f2>().</color><color=#a6e22e>trackDetail</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>packedOffsets</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>packedOffsets</color><color=#f8f8f2>.</color><color=#a6e22e>pack</color><color=#f8f8f2>(</color><color=#f8f8f2>getObsoleteDetailInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>logUpdate</color><color=#f8f8f2>));</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>packedOffsets</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the sorted obsolete offsets for the given file. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#a6e22e>getObsoleteDetailSorted</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>sortedOffsets</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>long</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Return if no detail is being tracked. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getCleaner</color><color=#f8f8f2>().</color><color=#a6e22e>trackDetail</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>sortedOffsets</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>sortedOffsets</color> <color=#f92672>=</color> <color=#f8f8f2>getObsoleteDetailInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>sort</color><color=#f8f8f2>(</color><color=#f8f8f2>sortedOffsets</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>sortedOffsets</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#a6e22e>getObsoleteDetailInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>logUpdate</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>cachePopulated</color><color=#f8f8f2>;</color>

    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileNumVal</color> <color=#f92672>=</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#66d9ef>long</color><color=#f92672>[]></color> <color=#f8f8f2>list</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><></color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Get a TrackedFileSummary that cannot be flushed (evicted) while we</color>
<color=#75715e>     * gather obsolete offsets.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>TrackedFileSummary</color> <color=#f8f8f2>tfs</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>().</color><color=#a6e22e>getUnflushableTrackedSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumVal</color><color=#f8f8f2>);</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Read the summary db. */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>CursorImpl</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>);</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Perform eviction in unsynchronized methods. */</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowEviction</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>dataEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

        <color=#75715e>/* Search by file number. */</color>
        <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>getFirstFSLN</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNumVal</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_RESULT</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/* Read all LNs for this file number. */</color>
        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/* Perform eviction once per operation. */</color>
          <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>daemonEviction</color><color=#f8f8f2>(</color><color=#66d9ef>true</color> <color=#75715e>/*backgroundIO*/</color><color=#f8f8f2>);</color>

          <color=#66d9ef>final</color> <color=#f8f8f2>FileSummaryLN</color> <color=#f8f8f2>ln</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>)</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>lockAndGetCurrentLN</color><color=#f8f8f2>(</color><color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>);</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ln</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* Stop if the file number changes. */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileNumVal</color> <color=#f92672>!=</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>final</color> <color=#f8f8f2>PackedOffsets</color> <color=#f8f8f2>offsets</color> <color=#f92672>=</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getObsoleteOffsets</color><color=#f8f8f2>();</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>offsets</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>list</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>offsets</color><color=#f8f8f2>.</color><color=#a6e22e>toArray</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>/* Always evict after using a file summary LN. */</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>evictLN</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>

          <color=#f8f8f2>result</color> <color=#f92672>=</color>
              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>true</color> <color=#75715e>/*forward*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>null</color> <color=#75715e>/*rangeConstraint*/</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Write out tracked detail, if any, and add its offsets to the</color>
<color=#75715e>       * list.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>tfs</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logUpdate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>PackedOffsets</color> <color=#f8f8f2>offsets</color> <color=#f92672>=</color> <color=#f8f8f2>putFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>tfs</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>offsets</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>list</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>offsets</color><color=#f8f8f2>.</color><color=#a6e22e>toArray</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>offsetList</color> <color=#f92672>=</color> <color=#f8f8f2>tfs</color><color=#f8f8f2>.</color><color=#a6e22e>getObsoleteOffsets</color><color=#f8f8f2>();</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>offsetList</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>list</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>offsetList</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Allow flushing of TFS when all offsets have been gathered. */</color>
      <color=#f8f8f2>tfs</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowFlush</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Merge all offsets into a single array and pack the result. */</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>a</color> <color=#f8f8f2>:</color> <color=#f8f8f2>list</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>size</color> <color=#f92672>+=</color> <color=#f8f8f2>a</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>offsets</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>long</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>a</color> <color=#f8f8f2>:</color> <color=#f8f8f2>list</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>arraycopy</color><color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>offsets</color><color=#f8f8f2>,</color> <color=#f8f8f2>index</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>index</color> <color=#f92672>+=</color> <color=#f8f8f2>a</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>index</color> <color=#f92672>==</color> <color=#f8f8f2>offsets</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>offsets</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Populate the profile for file selection. This method performs eviction and is not synchronized.</color>
<color=#75715e>   * It must be called before recovery is complete so that synchronization is unnecessary. It should</color>
<color=#75715e>   * be called before the recovery checkpoint so that the checkpoint can flush dirty metadata.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>After a file is cleaned, at checkpoint end it is moved to reserved status and these steps</color>
<color=#75715e>   * are taken to delete its metadata: 1. The file is cleaned and a checkpoint flushes the updated</color>
<color=#75715e>   * INs. 2. Utilization info in MapLNs referencing the file are updated in cache and the MapLNs are</color>
<color=#75715e>   * dirtied. At some point later, the dirty MapLNs are flushed by a normally scheduled checkpoint.</color>
<color=#75715e>   * This could happen after any of the steps below. 3. A record is inserted for the file in the</color>
<color=#75715e>   * reserved file db. 4. All file summary db records for the file are deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When the reserved file is deleted, this is done in these steps. 5. The file itself is</color>
<color=#75715e>   * deleted. Note that because we do not flush the log before deleting the file, step 3 and 4 may</color>
<color=#75715e>   * not be durable. 6. The files's record in the reserved file db is deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Data file deletion and file metadata deletion cannot be performed atomically. In fact none</color>
<color=#75715e>   * of the steps are grouped atomically into transactions, and no-sync logging is used when writing</color>
<color=#75715e>   * to the file summary db and the reserved file db. A crash can occur at any point, and we must</color>
<color=#75715e>   * handle that in some way, either in recovery or here (in the populateCache method).</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>- A crash prior to durable completion of step 3 will be handled naturally by cleaning the</color>
<color=#75715e>   * file again, since it is present in the file summary db but not in the reserved file db.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>- If step 3 completes durably but a crash occurs before the dirty MapLNs are flushed, this</color>
<color=#75715e>   * is indicated by the presence of a reserved file record in the recovery interval, and step 2</color>
<color=#75715e>   * will be repeated here during recovery.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>- If step 3 completes durably but not step 4 or 5, then step 4 is completed here.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>- If step 3 and 5 complete durably but not step 4 and 6, then steps 4 and 6 are completed</color>
<color=#75715e>   * here.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>- If step 4 and 5 complete durably but not step 6, then step 6 is completed here.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Prior to log version 15, the reserved file db did not exist and reserved files were</color>
<color=#75715e>   * re-cleaned if they were not deleted before a crash. The old steps were: A. The file is cleaned</color>
<color=#75715e>   * and a checkpoint flushes the updated INs. B. If the file is reserved, this is tracked in memory</color>
<color=#75715e>   * but nothing is logged.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When deleting a file: C. The file itself is deleted. D. MapLNs are updated and flushed. E.</color>
<color=#75715e>   * All file summary db records for the file are deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This is handled now as follows, which is the same as the old approach.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>- A crash prior to step C results in re-cleaning the file.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>- If step C completes but step E does not, step D and E are performed here. MapLNs must be</color>
<color=#75715e>   * flushed immediately in this case, which is inefficient but hopefully very infrequent.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>populateCache</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>StartupTracker</color><color=#f8f8f2>.</color><color=#a6e22e>Counter</color> <color=#f8f8f2>counter</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RecoveryInfo</color> <color=#f8f8f2>recoveryInfo</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>recoveryReservedFiles</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f92672>></color> <color=#f8f8f2>recoveryReservedFileDbs</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>cachePopulated</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Open the file summary db on first use. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>openFileSummaryDatabase</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Db does not exist and this is a read-only environment. */</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Long</color><color=#f92672>[]</color> <color=#f8f8f2>existingFiles</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getFileManager</color><color=#f8f8f2>().</color><color=#a6e22e>getAllFileNumbers</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>reservedFileRecords</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>dataEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>FileProtector</color> <color=#f8f8f2>fileProtector</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getFileProtector</color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * For each reserved file record in the recovery interval, ensure that</color>
<color=#75715e>     * the MapLN metadata is updated.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forceCheckpoint</color> <color=#f92672>=</color>
        <color=#f8f8f2>removeDbMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>recoveryReservedFiles</color><color=#f8f8f2>,</color> <color=#f8f8f2>recoveryReservedFileDbs</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Open the reserved file db on first use. This may return false in a</color>
<color=#75715e>     * read-only old-version env where the file summary db exists but the</color>
<color=#75715e>     * reserved file db does not.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>openReservedFilesDatabase</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * First read through the reserved file db and add reserved</color>
<color=#75715e>       * files to the file protector. It is possible that a file does</color>
<color=#75715e>       * not exist for a record in the db, and again we must clean up</color>
<color=#75715e>       * as described in method comments.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>options</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReadOptions</color><color=#f8f8f2>().</color><color=#a6e22e>setLockMode</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>READ_UNCOMMITTED</color><color=#f8f8f2>);</color>

        <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color>
            <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>reservedFilesDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*retainNonTxnLocks*/</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

          <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>Get</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT</color><color=#f8f8f2>,</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#f8f8f2>counter</color><color=#f8f8f2>.</color><color=#a6e22e>incNumRead</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>daemonEviction</color><color=#f8f8f2>(</color><color=#66d9ef>false</color> <color=#75715e>/*backgroundIO*/</color><color=#f8f8f2>);</color>

            <color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>file</color> <color=#f92672>=</color> <color=#f8f8f2>ReservedFileInfo</color><color=#f8f8f2>.</color><color=#a6e22e>entryToKey</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>reservedFileRecords</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>);</color>

            <color=#66d9ef>final</color> <color=#f8f8f2>ReservedFileInfo</color> <color=#f8f8f2>info</color> <color=#f92672>=</color> <color=#f8f8f2>ReservedFileInfo</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>dataEntry</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>binarySearch</color><color=#f8f8f2>(</color><color=#f8f8f2>existingFiles</color><color=#f8f8f2>,</color> <color=#f8f8f2>file</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

              <color=#f8f8f2>counter</color><color=#f8f8f2>.</color><color=#a6e22e>incNumProcessed</color><color=#f8f8f2>();</color>
              <color=#f8f8f2>fileProtector</color><color=#f8f8f2>.</color><color=#a6e22e>reserveFile</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>,</color> <color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>lastVLSN</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>counter</color><color=#f8f8f2>.</color><color=#a6e22e>incNumDeleted</color><color=#f8f8f2>();</color>

              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>lastVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>isNull</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>recoveryInfo</color><color=#f8f8f2>.</color><color=#a6e22e>lastMissingFileNumber</color> <color=#f92672>=</color> <color=#f8f8f2>file</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>recoveryInfo</color><color=#f8f8f2>.</color><color=#a6e22e>lastMissingFileVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>lastVLSN</color><color=#f8f8f2>;</color>
              <color=#f8f8f2>}</color>

              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
              <color=#f8f8f2>}</color>

              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>oldMemorySize</color> <color=#f92672>=</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>MemoryBudget</color><color=#f8f8f2>.</color><color=#a6e22e>UTILIZATION_PROFILE_ENTRY</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Next read through the file summary db and populate the profile.</color>
<color=#75715e>     * As above, it is possible that a file does not exist for a record in</color>
<color=#75715e>     * the db, and again we must clean up as described in method comments.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>CursorImpl</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>cursor</color> <color=#f92672>=</color>
          <color=#66d9ef>new</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*retainNonTxnLocks*/</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*isSecondaryCursor*/</color><color=#f8f8f2>);</color>

      <color=#75715e>/* Perform eviction in unsynchronized methods. */</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowEviction</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>positionFirstOrLast</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#75715e>/* Retrieve the first record. */</color>
        <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>lockAndGetCurrent</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
                <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                <color=#66d9ef>true</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                <color=#66d9ef>true</color> <color=#75715e>/*unlatch*/</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* The record we're pointing at may be deleted. */</color>
          <color=#f8f8f2>result</color> <color=#f92672>=</color>
              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>true</color> <color=#75715e>/*forward*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>null</color> <color=#75715e>/*rangeConstraint*/</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>counter</color><color=#f8f8f2>.</color><color=#a6e22e>incNumRead</color><color=#f8f8f2>();</color>

          <color=#75715e>/*</color>
<color=#75715e>           * Perform eviction once per operation.  Pass false for</color>
<color=#75715e>           * backgroundIO because this is done during recovery and</color>
<color=#75715e>           * there is no reason to sleep.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>daemonEviction</color><color=#f8f8f2>(</color><color=#66d9ef>false</color> <color=#75715e>/*backgroundIO*/</color><color=#f8f8f2>);</color>

          <color=#66d9ef>final</color> <color=#f8f8f2>FileSummaryLN</color> <color=#f8f8f2>ln</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>)</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>lockAndGetCurrentLN</color><color=#f8f8f2>(</color><color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>);</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ln</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* Advance past a cleaned record. */</color>
            <color=#f8f8f2>result</color> <color=#f92672>=</color>
                <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color>
                    <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>true</color> <color=#75715e>/*forward*/</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>false</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>null</color> <color=#75715e>/*rangeConstraint*/</color><color=#f8f8f2>);</color>
            <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>

          <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyBytes</color> <color=#f92672>=</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>
          <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>isOldVersion</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>.</color><color=#a6e22e>hasStringKey</color><color=#f8f8f2>(</color><color=#f8f8f2>keyBytes</color><color=#f8f8f2>);</color>
          <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileNum</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>keyBytes</color><color=#f8f8f2>);</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>fileNumLong</color> <color=#f92672>=</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>;</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>fileProtector</color><color=#f8f8f2>.</color><color=#a6e22e>isReservedFile</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>)</color>
              <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>binarySearch</color><color=#f8f8f2>(</color><color=#f8f8f2>existingFiles</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNumLong</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#f8f8f2>counter</color><color=#f8f8f2>.</color><color=#a6e22e>incNumProcessed</color><color=#f8f8f2>();</color>

            <color=#75715e>/* File is active, cache the FileSummaryLN. */</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getBaseSummary</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>);</color>

            <color=#75715e>/*</color>
<color=#75715e>             * Update old version records to the new version.  A</color>
<color=#75715e>             * zero sequence number is used to distinguish the</color>
<color=#75715e>             * converted records and to ensure that later records</color>
<color=#75715e>             * will have a greater sequence number.</color>
<color=#75715e>             */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isOldVersion</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>insertFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>ln</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>deleteCurrentRecord</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicationContext</color><color=#f8f8f2>.</color><color=#a6e22e>NO_REPLICATE</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
              <color=#75715e>/* Always evict after using a file summary LN. */</color>
              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>evictLN</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

            <color=#75715e>/*</color>
<color=#75715e>             * File does not exist or is a reserved file. Remove</color>
<color=#75715e>             * the summary from the map and delete all</color>
<color=#75715e>             * FileSummaryLN records. If the file has a reserved</color>
<color=#75715e>             * file record (even if it was deleted above) then we</color>
<color=#75715e>             * can rely on the reserved file record mechanism to</color>
<color=#75715e>             * update MapLNs (per-db metadata); otherwise we must</color>
<color=#75715e>             * update the MapLNs here.</color>
<color=#75715e>             */</color>
            <color=#f8f8f2>counter</color><color=#f8f8f2>.</color><color=#a6e22e>incNumDeleted</color><color=#f8f8f2>();</color>

            <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>isReadOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>reservedFileRecords</color><color=#f8f8f2>.</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>removeAndFlushDbMetadata</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color>
              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isOldVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>deleteCurrentRecord</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicationContext</color><color=#f8f8f2>.</color><color=#a6e22e>NO_REPLICATE</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>deleteFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumLong</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>/*</color>
<color=#75715e>             * Do not evict after deleting since the compressor</color>
<color=#75715e>             * would have to fetch it again.</color>
<color=#75715e>             */</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/* Go on to the next entry. */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isOldVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#75715e>/* Advance past the single old version record. */</color>
            <color=#f8f8f2>result</color> <color=#f92672>=</color>
                <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color>
                    <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>true</color> <color=#75715e>/*forward*/</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>false</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>null</color> <color=#75715e>/*rangeConstraint*/</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

            <color=#75715e>/*</color>
<color=#75715e>             * Skip over other records for this file by adding one</color>
<color=#75715e>             * to the file number and doing a range search.</color>
<color=#75715e>             */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>getFirstFSLN</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileNum</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* positionFirstOrLast may leave BIN latched. */</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>locker</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>newMemorySize</color> <color=#f92672>=</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>MemoryBudget</color><color=#f8f8f2>.</color><color=#a6e22e>UTILIZATION_PROFILE_ENTRY</color><color=#f8f8f2>;</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>MemoryBudget</color> <color=#f8f8f2>mb</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getMemoryBudget</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>mb</color><color=#f8f8f2>.</color><color=#a6e22e>updateAdminMemoryUsage</color><color=#f8f8f2>(</color><color=#f8f8f2>newMemorySize</color> <color=#f92672>-</color> <color=#f8f8f2>oldMemorySize</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>cachePopulated</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>forceCheckpoint</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Positions at the most recent LN for the given file number. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getFirstFSLN</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>CursorImpl</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>LockType</color> <color=#f8f8f2>lockType</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyBytes</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>.</color><color=#a6e22e>makePartialKey</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>keyEntry</color><color=#f8f8f2>.</color><color=#a6e22e>setData</color><color=#f8f8f2>(</color><color=#f8f8f2>keyBytes</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>reset</color><color=#f8f8f2>();</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>searchRange</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color> <color=#75715e>/*comparator*/</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>result</color> <color=#f92672>&</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>.</color><color=#a6e22e>FOUND</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>boolean</color> <color=#f8f8f2>exactKeyMatch</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>result</color> <color=#f92672>&</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>.</color><color=#a6e22e>EXACT_KEY</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>exactKeyMatch</color>
          <color=#f92672>&&</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>lockAndGetCurrent</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>lockType</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>true</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*unlatch*/</color><color=#f8f8f2>)</color>
              <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>releaseBIN</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Always evict after using a file summary LN. */</color>
    <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>evictLN</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>dataEntry</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>lockType</color><color=#f8f8f2>,</color>
            <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
            <color=#66d9ef>true</color> <color=#75715e>/*forward*/</color><color=#f8f8f2>,</color>
            <color=#66d9ef>false</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
            <color=#66d9ef>null</color> <color=#75715e>/*rangeConstraint*/</color><color=#f8f8f2>);</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If the reserved files db is already open, return, otherwise attempt to open it. If the</color>
<color=#75715e>   * environment is read-only and the database doesn't exist, return false. If the environment is</color>
<color=#75715e>   * read-write the database will be created if it doesn't exist.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>openReservedFilesDatabase</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>reservedFilesDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>reservedFilesDb</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>().</color><color=#a6e22e>openNonRepInternalDB</color><color=#f8f8f2>(</color><color=#f8f8f2>DbType</color><color=#f8f8f2>.</color><color=#a6e22e>RESERVED_FILES</color><color=#f8f8f2>);</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>reservedFilesDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If the file summary db is already open, return, otherwise attempt to open it. If the</color>
<color=#75715e>   * environment is read-only and the database doesn't exist, return false. If the environment is</color>
<color=#75715e>   * read-write the database will be created if it doesn't exist.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>openFileSummaryDatabase</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>fileSummaryDb</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>().</color><color=#a6e22e>openNonRepInternalDB</color><color=#f8f8f2>(</color><color=#f8f8f2>DbType</color><color=#f8f8f2>.</color><color=#a6e22e>UTILIZATION</color><color=#f8f8f2>);</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For unit testing. */</color>
  <color=#f8f8f2>DatabaseImpl</color> <color=#a6e22e>getFileSummaryDb</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Insert the given LN with the given key values. This method is synchronized and may not perform</color>
<color=#75715e>   * eviction.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Is public only for unit testing.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>synchronized</color> <color=#66d9ef>boolean</color> <color=#a6e22e>insertFileSummary</color><color=#f8f8f2>(</color><color=#f8f8f2>FileSummaryLN</color> <color=#f8f8f2>ln</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>sequence</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyBytes</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>.</color><color=#a6e22e>makeFullKey</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>sequence</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>CursorImpl</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>);</color>

      <color=#75715e>/* Insert the LN. */</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>inserted</color> <color=#f92672>=</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>insertRecord</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>keyBytes</color><color=#f8f8f2>,</color> <color=#f8f8f2>ln</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*blindInsertion*/</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicationContext</color><color=#f8f8f2>.</color><color=#a6e22e>NO_REPLICATE</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>inserted</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>traceAndLog</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>SEVERE</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Cleaner duplicate key sequence file=0x"</color>
                <color=#f92672>+</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>toHexString</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>)</color>
                <color=#f92672>+</color> <color=#e6db74>" sequence=0x"</color>
                <color=#f92672>+</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>toHexString</color><color=#f8f8f2>(</color><color=#f8f8f2>sequence</color><color=#f8f8f2>));</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Always evict after using a file summary LN. */</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>evictLN</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>locker</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Checks that all FSLN offsets are indeed obsolete. Assumes that the system is quiesent (does not</color>
<color=#75715e>   * lock LNs). This method is not synchronized (because it doesn't access fileSummaryMap) and</color>
<color=#75715e>   * eviction is allowed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if no verification failures.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>verifyFileSummaryDatabase</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>openFileSummaryDatabase</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>CursorImpl</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>ok</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>locker</color> <color=#f92672>=</color> <color=#f8f8f2>BasicLocker</color><color=#f8f8f2>.</color><color=#a6e22e>createBasicLocker</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*noWait*/</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowEviction</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>positionFirstOrLast</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>lockAndGetCurrent</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
                <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                <color=#66d9ef>true</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                <color=#66d9ef>true</color> <color=#75715e>/*unlatch*/</color><color=#f8f8f2>);</color>

        <color=#75715e>/* Iterate over all file summary lns. */</color>
        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/* Perform eviction once per operation. */</color>
          <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>daemonEviction</color><color=#f8f8f2>(</color><color=#66d9ef>true</color> <color=#75715e>/*backgroundIO*/</color><color=#f8f8f2>);</color>

          <color=#f8f8f2>FileSummaryLN</color> <color=#f8f8f2>ln</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>)</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>lockAndGetCurrentLN</color><color=#f8f8f2>(</color><color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>);</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ln</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>long</color> <color=#f8f8f2>fileNumVal</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummaryLN</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>PackedOffsets</color> <color=#f8f8f2>offsets</color> <color=#f92672>=</color> <color=#f8f8f2>ln</color><color=#f8f8f2>.</color><color=#a6e22e>getObsoleteOffsets</color><color=#f8f8f2>();</color>

            <color=#75715e>/*</color>
<color=#75715e>             * Check every offset in the fsln to make sure it's</color>
<color=#75715e>             * truly obsolete.</color>
<color=#75715e>             */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>offsets</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>vals</color> <color=#f92672>=</color> <color=#f8f8f2>offsets</color><color=#f8f8f2>.</color><color=#a6e22e>toArray</color><color=#f8f8f2>();</color>
              <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color> <color=#f8f8f2>:</color> <color=#f8f8f2>vals</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>long</color> <color=#f8f8f2>lsn</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>makeLsn</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNumVal</color><color=#f8f8f2>,</color> <color=#f8f8f2>val</color><color=#f8f8f2>);</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>verifyLsnIsObsolete</color><color=#f8f8f2>(</color><color=#f8f8f2>lsn</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                  <color=#f8f8f2>ok</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>evictLN</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>

          <color=#f8f8f2>result</color> <color=#f92672>=</color>
              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>LockType</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*dirtyReadAll*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>true</color> <color=#75715e>/*forward*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>false</color> <color=#75715e>/*isLatched*/</color><color=#f8f8f2>,</color>
                  <color=#66d9ef>null</color> <color=#75715e>/*rangeConstraint*/</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>locker</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ok</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Return true if the LN at this lsn is obsolete.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>verifyLsnIsObsolete</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Read the whole entry out of the log. */</color>
    <color=#f8f8f2>Object</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>().</color><color=#a6e22e>getLogEntryHandleFileNotFound</color><color=#f8f8f2>(</color><color=#f8f8f2>lsn</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>LNLogEntry</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>LNLogEntry</color><color=#f92672><?></color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>LNLogEntry</color><color=#f92672><?></color><color=#f8f8f2>)</color> <color=#f8f8f2>o</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Find the owning database. */</color>
    <color=#f8f8f2>DatabaseId</color> <color=#f8f8f2>dbId</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getDbId</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>().</color><color=#a6e22e>getDb</color><color=#f8f8f2>(</color><color=#f8f8f2>dbId</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Search down to the bottom most level for the parent of this LN.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>BIN</color> <color=#f8f8f2>bin</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#75715e>/*</color>
<color=#75715e>       * The whole database is gone, so this LN is obsolete. No need</color>
<color=#75715e>       * to worry about delete cleanup; this is just verification and</color>
<color=#75715e>       * no cleaning is done.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>db</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>isDeleted</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>isImmediatelyObsolete</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>postFetchInit</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>Tree</color> <color=#f8f8f2>tree</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getTree</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>TreeLocation</color> <color=#f8f8f2>location</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeLocation</color><color=#f8f8f2>();</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>parentFound</color> <color=#f92672>=</color>
          <color=#f8f8f2>tree</color><color=#f8f8f2>.</color><color=#a6e22e>getParentBINForChildLN</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>location</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>(),</color>
              <color=#66d9ef>false</color> <color=#75715e>/*splitsAllowed*/</color><color=#f8f8f2>,</color>
              <color=#66d9ef>false</color> <color=#75715e>/*blindDeltaOps*/</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>CacheMode</color><color=#f8f8f2>.</color><color=#a6e22e>UNCHANGED</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>bin</color> <color=#f92672>=</color> <color=#f8f8f2>location</color><color=#f8f8f2>.</color><color=#a6e22e>bin</color><color=#f8f8f2>;</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#f8f8f2>location</color><color=#f8f8f2>.</color><color=#a6e22e>index</color><color=#f8f8f2>;</color>

      <color=#75715e>/* Is bin latched ? */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>parentFound</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Now we're at the BIN parent for this LN.  If knownDeleted, LN is</color>
<color=#75715e>       * deleted and can be purged.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bin</color><color=#f8f8f2>.</color><color=#a6e22e>isEntryKnownDeleted</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bin</color><color=#f8f8f2>.</color><color=#a6e22e>getLsn</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Oh no -- this lsn is in the tree. */</color>
      <color=#75715e>/* should print, or trace? */</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"lsn "</color> <color=#f92672>+</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>lsn</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#e6db74>" was found in tree."</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>().</color><color=#a6e22e>releaseDb</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bin</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>bin</color><color=#f8f8f2>.</color><color=#a6e22e>releaseLatch</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Update memory budgets when this profile is closed and will never be accessed again. */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>clearCache</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>fileSummaryDb</color><color=#f8f8f2>.</color><color=#a6e22e>releaseTreeAdminMemory</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>reservedFilesDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>reservedFilesDb</color><color=#f8f8f2>.</color><color=#a6e22e>releaseTreeAdminMemory</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>