<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.net</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.InetSocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.channels.SocketChannel</color><color=#f8f8f2>;</color>

<color=#75715e>/** @hidden Interface for creating DataChannel instances. */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>DataChannelFactory</color> <color=#f8f8f2>{</color>
  <color=#75715e>/**</color>
<color=#75715e>   * Creates a DataChannel from an newly accepted socketChannel</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param socketChannel the newly accepted SocketChannel</color>
<color=#75715e>   * @return an implementation of DataChannel that wraps the input SocketChannel</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>DataChannel</color> <color=#a6e22e>acceptChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>SocketChannel</color> <color=#f8f8f2>socketChannel</color><color=#f8f8f2>);</color>

  <color=#75715e>/** A collection of options to apply to a connection. */</color>
  <color=#66d9ef>class</color> <color=#a6e22e>ConnectOptions</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>tcpNoDelay</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>receiveBufferSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>openTimeout</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>readTimeout</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>blocking</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>reuseAddr</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a base set of connection options. The default values for the options are:</color>
<color=#75715e>     *</color>
<color=#75715e>     * <pre></color>
<color=#75715e>     *   tcpNoDelay = false</color>
<color=#75715e>     *   receiveBufferSize = 0</color>
<color=#75715e>     *   openTimeout = 0</color>
<color=#75715e>     *   readTimeout = 0</color>
<color=#75715e>     *   blocking = true</color>
<color=#75715e>     *   reuseAddr = false</color>
<color=#75715e>     * </pre></color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ConnectOptions</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the tcpNoDelay option for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param tcpNoDelay if true, disable the Nagle algorithm for delayed transmissions on</color>
<color=#75715e>     *     connection</color>
<color=#75715e>     * @return this instance</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>ConnectOptions</color> <color=#a6e22e>setTcpNoDelay</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>tcpNoDelay</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>tcpNoDelay</color> <color=#f92672>=</color> <color=#f8f8f2>tcpNoDelay</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Gets the tcpNoDelay option for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return true if the tcpNoDelay option is enabled</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getTcpNoDelay</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>tcpNoDelay</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the connection receive buffer size for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param rcvBufferSize the desired size of the receive buffer, or 0 to use system defaults.</color>
<color=#75715e>     * @return this instance</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>ConnectOptions</color> <color=#a6e22e>setReceiveBufferSize</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>rcvBufferSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>receiveBufferSize</color> <color=#f92672>=</color> <color=#f8f8f2>rcvBufferSize</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Gets the connection receive buffer size for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the configured receive buffer size option</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#a6e22e>getReceiveBufferSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>receiveBufferSize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the connection open timeout value for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param timeout the desired timeout value for connection initiation in milliseconds, or 0 if</color>
<color=#75715e>     *     system defaults should be used</color>
<color=#75715e>     * @return this instance</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>ConnectOptions</color> <color=#a6e22e>setOpenTimeout</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>openTimeout</color> <color=#f92672>=</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Gets the connection open timeout value for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the configured timeout value</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#a6e22e>getOpenTimeout</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>openTimeout</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the read timeout value for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param timeout the desired timeout value for read operations in milliseconds, or 0 if system</color>
<color=#75715e>     *     defaults should be used</color>
<color=#75715e>     * @return this instance</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>ConnectOptions</color> <color=#a6e22e>setReadTimeout</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>readTimeout</color> <color=#f92672>=</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Gets the read timeout value for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the configured timeout value</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#a6e22e>getReadTimeout</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>readTimeout</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the blocking mode option for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param blocking if true, the connection will use blocking mode IO</color>
<color=#75715e>     * @return this instance</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>ConnectOptions</color> <color=#a6e22e>setBlocking</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>blocking</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>blocking</color> <color=#f92672>=</color> <color=#f8f8f2>blocking</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Gets the blocking mode option for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the blockingMode configuration setting</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getBlocking</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>blocking</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the reuseAddr option for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param reuseAddr if true, enable the SO_REUSEADDR option on the underlying socket</color>
<color=#75715e>     * @return this instance</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>ConnectOptions</color> <color=#a6e22e>setReuseAddr</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>reuseAddr</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>reuseAddr</color> <color=#f92672>=</color> <color=#f8f8f2>reuseAddr</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Gets the reuseAddr option for the connection.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the setting of the reuseAddr option</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getReuseAddr</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>reuseAddr</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/** Generates a String representation of the object. */</color>
    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"ConnectOptions["</color>
          <color=#f92672>+</color> <color=#e6db74>"tcpNoDelay = "</color>
          <color=#f92672>+</color> <color=#f8f8f2>tcpNoDelay</color>
          <color=#f92672>+</color> <color=#e6db74>", receiveBufferSize = "</color>
          <color=#f92672>+</color> <color=#f8f8f2>receiveBufferSize</color>
          <color=#f92672>+</color> <color=#e6db74>", openTimeout = "</color>
          <color=#f92672>+</color> <color=#f8f8f2>openTimeout</color>
          <color=#f92672>+</color> <color=#e6db74>", readTimeout = "</color>
          <color=#f92672>+</color> <color=#f8f8f2>readTimeout</color>
          <color=#f92672>+</color> <color=#e6db74>", blocking = "</color>
          <color=#f92672>+</color> <color=#f8f8f2>blocking</color>
          <color=#f92672>+</color> <color=#e6db74>", reuseAddr = "</color>
          <color=#f92672>+</color> <color=#f8f8f2>reuseAddr</color>
          <color=#f92672>+</color> <color=#e6db74>"]"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>   * Creates a DataChannel that connects to the specified address, with the specified options.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param addr The address to which the connection should be made. It is possible for a</color>
<color=#75715e>   *     DataChannelFactory implementation to proxy this connection through an intermediary.</color>
<color=#75715e>   * @param connectOptions the collection of connection options to be applied to the connection.</color>
<color=#75715e>   * @return A DataChannel connected to the the specified address.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>DataChannel</color> <color=#a6e22e>connect</color><color=#f8f8f2>(</color><color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#f8f8f2>ConnectOptions</color> <color=#f8f8f2>connectOptions</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>;</color>
<color=#f8f8f2>}</color>