<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.StringBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleInput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleOutput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.Durability.ReplicaAckPolicy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.Durability.SyncPolicy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbConfigManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbTree</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.InsufficientAcksException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.InsufficientReplicasException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.NodeType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.Feeder</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.RepNode</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.cbvlsn.CleanerBarrierState</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.monitor.GroupChangeEvent.GroupChangeType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.Protocol</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.txn.MasterTxn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.txn.ReadonlyTxn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.util.DbResetRepGroup</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.HostPortPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Txn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.HashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.UUID</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.rep.NoConsistencyRequiredPolicy.NO_CONSISTENCY</color><color=#f8f8f2>;</color>
<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * This class is used to encapsulate all access to the rep group data that is present in every</color>
<color=#75715e> * replicated JE environment. The rep group data exists primarily to support dynamic group</color>
<color=#75715e> * membership. Both read and update access must be done through the APIs provided by this class.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The database is simply a representation of the RepGroup. Each entry in the database represents</color>
<color=#75715e> * a node in RepGroup; the key is the String node name, and the data is the serialized</color>
<color=#75715e> * ReplicationNode. There is a special entry keyed by GROUP_KEY that holds the contents of the</color>
<color=#75715e> * RepGroup (excluding the nodes) itself.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The database may be modified concurrently by multiple transactions as a master processes</color>
<color=#75715e> * requests to update it. It may also be accessed by multiple overlapping transactions as a Replica</color>
<color=#75715e> * replays the rep stream. These updates need to be interleaved with operations like getGroup() that</color>
<color=#75715e> * create copies of the RepGroup instance. To avoid deadlocks, entries in the database are accessed</color>
<color=#75715e> * in order of ascending key. GROUP_KEY in particular is associated with the lowest key value so</color>
<color=#75715e> * that it's locked first implicitly as part of any iteration and any other modifications to the</color>
<color=#75715e> * database must first lock it before making changes to the group itself.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>An instance of this class is created as part of a replication node and is retained for the</color>
<color=#75715e> * entire lifetime of that node.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>RepGroupDB</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>

  <color=#75715e>/* A convenient, cached empty group. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>emptyGroup</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The key used to store group-wide information in the database. It must</color>
<color=#75715e>   * be the lowest key in the database, so that it's locked first during</color>
<color=#75715e>   * database iteration.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>GROUP_KEY</color> <color=#f92672>=</color> <color=#e6db74>"$$GROUP_KEY$$"</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>groupKeyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

  <color=#75715e>/* Initialize the entry. */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>stringToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>GROUP_KEY</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupKeyEntry</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>lockMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#75715e>/* The fixed DB ID associated with the internal rep group database. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>DB_ID</color> <color=#f92672>=</color> <color=#f8f8f2>DbTree</color><color=#f8f8f2>.</color><color=#a6e22e>NEG_DB_ID_START</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Number of times to retry for ACKs on the master before returning to</color>
<color=#75715e>   * to the Replica, which will then again retry on some periodic basis.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>QUORUM_ACK_RETRIES</color> <color=#f92672>=</color> <color=#ae81ff>5</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Convenience Durability and Config constants. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>QUORUM_ACK_DURABILITY</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color><color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SYNC</color><color=#f8f8f2>,</color> <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SYNC</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SIMPLE_MAJORITY</color><color=#f8f8f2>);</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>QUORUM_ACK</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>NO_ACK</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>

  <color=#75715e>/*</color>
<color=#75715e>   * TODO: Change this when we support true read only transactions.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>READ_ONLY</color> <color=#f92672>=</color> <color=#f8f8f2>NO_ACK</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>NO_ACK_DURABILITY</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color><color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SYNC</color><color=#f8f8f2>,</color> <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SYNC</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>);</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>NO_ACK_NO_SYNC_DURABILITY</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color><color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>);</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* Initialize config constants. */</color>
    <color=#f8f8f2>QUORUM_ACK</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>QUORUM_ACK_DURABILITY</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>NO_ACK</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_ACK_DURABILITY</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Create an instance. Note that the database handle is not initialized at this time, since the</color>
<color=#75715e>   * state of the node master/replica is not known at the time the replication node (and</color>
<color=#75715e>   * consequently this instance) is created.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>RepGroupDB</color><color=#f8f8f2>(</color><color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>repImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>DbConfigManager</color> <color=#f8f8f2>configManager</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>emptyGroup</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>GROUP_NAME</color><color=#f8f8f2>),</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns all the members that are currently part of the replication group, using NO_CONSISTENCY.</color>
<color=#75715e>   * This method can read the database directly, and can be used when the replicated environment is</color>
<color=#75715e>   * detached and the RepNode is null. It's for the latter reason that the method reads uncommitted</color>
<color=#75715e>   * data. In detached mode, there may be transactions on the database that were in progress when</color>
<color=#75715e>   * the node was last shutdown. These transactions may have locks which will not be released until</color>
<color=#75715e>   * after the node is re-attached and the replication stream is resumed. Using uncommitted reads</color>
<color=#75715e>   * avoids use of locks in this circumstance. It's safe to read these records, since the database</color>
<color=#75715e>   * will eventually be updated with these changes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the group object</color>
<color=#75715e>   * @throws DatabaseException if the object could not be obtained</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>RepGroupImpl</color> <color=#a6e22e>getGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>RepImpl</color> <color=#f8f8f2>rImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Get persistent nodes from the database */</color>
    <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>foundDbImpl</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>rImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getGroupDb</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>foundDbImpl</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>foundDbImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/* Creates a temporary placeholder group for use until the real</color>
<color=#75715e>       * definition comes over the replication stream as part of the</color>
<color=#75715e>       * replicated group database.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>rImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>());</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>txnConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>READ_ONLY</color><color=#f8f8f2>.</color><color=#a6e22e>getDurability</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConsistencyPolicy</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_CONSISTENCY</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadUncommitted</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReadonlyTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>rImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txnConfig</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>);</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Correct summary info since we are reading uncommitted data</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>makeConsistent</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Get nodes w/ transient id from their feeders */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color> <color=#f92672>=</color> <color=#f8f8f2>rImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repNode</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Feeder</color> <color=#f8f8f2>feeder</color> <color=#f8f8f2>:</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>feederManager</color><color=#f8f8f2>().</color><color=#a6e22e>activeReplicasMap</color><color=#f8f8f2>().</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f92672>=</color> <color=#f8f8f2>feeder</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicaNode</color><color=#f8f8f2>();</color>
        <color=#75715e>/* RepNodeImpl may be null in a test with a dummy feeder. */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>().</color><color=#a6e22e>hasTransientId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>addTransientIdNode</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>group</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>RepGroupImpl</color> <color=#a6e22e>getGroup</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>getGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>GROUP_NAME</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the minimum JE version required for nodes to join the replication group and refreshes the</color>
<color=#75715e>   * group object cached in the rep group. Throws a {@link MinJEVersionUnsupportedException} if the</color>
<color=#75715e>   * requested version is not supported by current nodes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If this method returns successfully, nodes that are running a JE version older than the one</color>
<color=#75715e>   * specified will not be permitted to join the replication group in the future. Use this method to</color>
<color=#75715e>   * implement features that require all group members to meet a minimum version requirement.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The update attempts to obtain acknowledgments from a simple majority, to make sure that</color>
<color=#75715e>   * future masters agree that the update has taken place, but does not require this.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param newMinJEVersion the new minimum JE version</color>
<color=#75715e>   * @throws DatabaseException if an error occurs when accessing the replication group database</color>
<color=#75715e>   * @throws MinJEVersionUnsupportedException if the requested version is not supported</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMinJEVersion</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>newMinJEVersion</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>MinJEVersionUnsupportedException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>groupDbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getGroupDb</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Should never happen. */</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>MasterTxn</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MasterTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>QUORUM_ACK</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>setMinJEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>newMinJEVersion</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>saveGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>(</color><color=#f8f8f2>QUORUM_ACK_DURABILITY</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Updated minimum JE group version to "</color> <color=#f92672>+</color> <color=#f8f8f2>newMinJEVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InsufficientAcksException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Didn't receive acknowledgments from a simple majority.  OK to</color>
<color=#75715e>       * proceed, since this operation will be repeated if the change is</color>
<color=#75715e>       * lost.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Proceeding without enough acks, did not update minimum JE "</color>
              <color=#f92672>+</color> <color=#e6db74>"group version to "</color>
              <color=#f92672>+</color> <color=#f8f8f2>newMinJEVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>refreshCachedGroup</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** All rep group db access uses cursors with eviction disabled. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Cursor</color> <color=#a6e22e>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getCursorImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>).</color><color=#a6e22e>setAllowEviction</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a representation of the nodes of the group stored in the database, using the txn and</color>
<color=#75715e>   * handles that were passed in.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>RepGroupImpl</color> <color=#a6e22e>fetchGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>NodeBinding</color> <color=#f8f8f2>nodeBinding</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>GroupBinding</color> <color=#f8f8f2>groupBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepNodeImpl</color><color=#f92672>></color> <color=#f8f8f2>nodes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepNodeImpl</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadCommitted</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>mcursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>mcursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>
      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>mcursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToString</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>GROUP_KEY</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#f8f8f2>groupBinding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
                <color=#e6db74>"The argument: "</color>
                    <color=#f92672>+</color> <color=#f8f8f2>groupName</color>
                    <color=#f92672>+</color> <color=#e6db74>" does not match the expected group name: "</color>
                    <color=#f92672>+</color> <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The group entry should always be first, so we can use it</color>
<color=#75715e>           * to provide the group version for reading node entries.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>nodeBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>NodeBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeBinding</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Found node binding before group binding"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f92672>=</color> <color=#f8f8f2>nodeBinding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>nodes</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>getId</color><color=#f8f8f2>(),</color> <color=#f8f8f2>node</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>group</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Group key: "</color> <color=#f92672>+</color> <color=#f8f8f2>GROUP_KEY</color> <color=#f92672>+</color> <color=#e6db74>" is missing"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>setNodes</color><color=#f8f8f2>(</color><color=#f8f8f2>nodes</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>group</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>mcursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>mcursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Ensures that information about this node, the current master, is in the member database. If it</color>
<color=#75715e>   * isn't, enter it into the database. If the database does not exist, create it as well.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that this overloading is only used by a node that is the master.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws DatabaseException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>addFirstNode</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color> <color=#f8f8f2>configManager</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>GROUP_NAME</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>NODE_NAME</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>createGroupDb</color><color=#f8f8f2>();</color>

    <color=#75715e>/* setup the group information as data. */</color>
    <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>GroupBinding</color> <color=#f8f8f2>groupBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>groupEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>groupBinding</color><color=#f8f8f2>.</color><color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Create the common group entry. */</color>
    <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>txnConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_ACK</color><color=#f8f8f2>.</color><color=#a6e22e>getDurability</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConsistencyPolicy</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_CONSISTENCY</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MasterTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txnConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>

      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>groupKeyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Couldn't write first group entry "</color> <color=#f92672>+</color> <color=#f8f8f2>status</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>ensureMember</color><color=#f8f8f2>(</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>RepNodeImpl</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>(),</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>()));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Ensures that the membership info for the replica is in the database. A call to this method is</color>
<color=#75715e>   * initiated by the master as part of the feeder/replica handshake, where the replica provides</color>
<color=#75715e>   * membership information as part of the handshake protocol. The membership database must already</color>
<color=#75715e>   * exist, with the master in it, when this method is invoked.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method should not be called for nodes with transient IDs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param membershipInfo provided by the replica</color>
<color=#75715e>   * @throws InsufficientReplicasException upon failure of 2p member update</color>
<color=#75715e>   * @throws InsufficientAcksException upon failure of 2p member update</color>
<color=#75715e>   * @throws DatabaseException when the membership info could not be entered into the membership</color>
<color=#75715e>   *     database.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>ensureMember</color><color=#f8f8f2>(</color><color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>NodeGroupInfo</color> <color=#f8f8f2>membershipInfo</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>ensureMember</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>RepNodeImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>membershipInfo</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>void</color> <color=#a6e22e>ensureMember</color><color=#f8f8f2>(</color><color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>().</color><color=#a6e22e>hasTransientId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Attempt to call ensureMember on "</color> <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" node: "</color> <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>groupDbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getGroupDb</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Should never happen. */</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>nodeNameKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>stringToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>NodeBinding</color> <color=#f8f8f2>mib</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReadonlyTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>NO_ACK</color><color=#f8f8f2>);</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Fetch the group so we know the group format version.  Read the</color>
<color=#75715e>       * group before reading the node entry in each case to avoid the</color>
<color=#75715e>       * potential of deadlocks caused by reversing the order of lock</color>
<color=#75715e>       * acquisition.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>mib</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>NodeBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>

      <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>config</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>config</color><color=#f8f8f2>.</color><color=#a6e22e>setReadCommitted</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>config</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchKey</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Let's see if the entry needs updating. */</color>
        <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>miInDb</color> <color=#f92672>=</color> <color=#f8f8f2>mib</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>miInDb</color><color=#f8f8f2>.</color><color=#a6e22e>equivalent</color><color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>miInDb</color><color=#f8f8f2>.</color><color=#a6e22e>isQuorumAck</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* Present, matched and acknowledged. */</color>
            <color=#66d9ef>return</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>miInDb</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>
          <color=#75715e>/* Not acknowledged, retry the update. */</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* Present but not equivalent. */</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Incompatible node descriptions. "</color>
                  <color=#f92672>+</color> <color=#e6db74>"Membership database definition: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>miInDb</color>
                  <color=#f92672>+</color> <color=#e6db74>" Transient definition: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>miInDb</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
                <color=#e6db74>"Conflicting node types for node "</color>
                    <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                    <color=#f92672>+</color> <color=#e6db74>": expected "</color>
                    <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color>
                    <color=#f92672>+</color> <color=#e6db74>", found "</color>
                    <color=#f92672>+</color> <color=#f8f8f2>miInDb</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
              <color=#e6db74>"Incompatible node descriptions for node: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>", node ID: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeId</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Present but not ack'd node: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeId</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" ack status: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>miInDb</color><color=#f8f8f2>.</color><color=#a6e22e>isQuorumAck</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>createMember</color><color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Refresh group and Fire an ADD GroupChangeEvent. */</color>
    <color=#f8f8f2>refreshGroupAndNotifyGroupChange</color><color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>GroupChangeType</color><color=#f8f8f2>.</color><color=#a6e22e>ADD</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>refreshGroupAndNotifyGroupChange</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>GroupChangeType</color> <color=#f8f8f2>opType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>refreshCachedGroup</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>getMonitorEventManager</color><color=#f8f8f2>().</color><color=#a6e22e>notifyGroupChange</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>opType</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes a node from the replication group by marking the node's entry in the rep group db as</color>
<color=#75715e>   * removed, and optionally deleting the entry.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method should not be called for nodes with transient IDs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>removeMember</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>removeNode</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>delete</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#f8f8f2>delete</color> <color=#f92672>?</color> <color=#e6db74>"Deleting node: "</color> <color=#f8f8f2>:</color> <color=#e6db74>"Removing node: "</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>removeNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>removeNode</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>().</color><color=#a6e22e>hasTransientId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Attempt to call removeMember on a node with type "</color>
              <color=#f92672>+</color> <color=#f8f8f2>removeNode</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>": "</color>
              <color=#f92672>+</color> <color=#f8f8f2>removeNode</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>TwoPhaseUpdate</color> <color=#f8f8f2>twoPhaseUpdate</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>TwoPhaseUpdate</color><color=#f8f8f2>(</color><color=#f8f8f2>removeNode</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#a6e22e>@Override</color>
          <color=#66d9ef>void</color> <color=#a6e22e>phase1Body</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>);</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>changeVersion</color> <color=#f92672>=</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>incrementChangeVersion</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>saveGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>setChangeVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>changeVersion</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>setRemoved</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>saveNodeObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#75715e>/** Override phase 2 to delete the node entry if delete is true. */</color>
          <color=#a6e22e>@Override</color>
          <color=#66d9ef>void</color> <color=#a6e22e>phase2Body</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>delete</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>phase2Body</color><color=#f8f8f2>();</color>
              <color=#66d9ef>return</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>nodeNameKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>stringToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>removeNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>);</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>
            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>final</color> <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color>
                  <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchKey</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(),</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>);</color>
              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Node ID: "</color> <color=#f92672>+</color> <color=#f8f8f2>removeNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" not present in group db"</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color>
              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>};</color>

    <color=#f8f8f2>twoPhaseUpdate</color><color=#f8f8f2>.</color><color=#a6e22e>execute</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Refresh group and fire a REMOVE GroupChangeEvent. */</color>
    <color=#f8f8f2>refreshGroupAndNotifyGroupChange</color><color=#f8f8f2>(</color><color=#f8f8f2>removeNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>GroupChangeType</color><color=#f8f8f2>.</color><color=#a6e22e>REMOVE</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Successfully deleted node: "</color> <color=#f92672>+</color> <color=#f8f8f2>removeNode</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Add a new rep node into the RepGroupDB. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>createMember</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>fine</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Adding node: "</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>

    <color=#f8f8f2>twoPhaseMemberUpdate</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#e6db74>"Successfully added node:"</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" HostPort = "</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>": "</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" ["</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>"]"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Update a current rep node information in the RepGroupDB.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method should not be called for nodes with transient IDs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param node the new node information</color>
<color=#75715e>   * @param quorumAck whether to require acknowledgments from a quorum</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws InsufficientReplicasException upon failure of 2p member update</color>
<color=#75715e>   * @throws InsufficientAcksException upon failure of 2p member update</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>updateMember</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>quorumAck</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>().</color><color=#a6e22e>hasTransientId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Attempt to call updateMember on a node of type "</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>": "</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>fine</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Updating node: "</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>twoPhaseMemberUpdate</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>quorumAck</color><color=#f8f8f2>);</color>

    <color=#75715e>// TODO: clean up the Monitor interface.  There are several aspects of</color>
    <color=#75715e>// that interface that need fixing; but in particular it ought to have</color>
    <color=#75715e>// a way to inform listeners that a node has moved to a new network</color>
    <color=#75715e>// address.  Once that's done, the following should be replaced by a</color>
    <color=#75715e>// full refreshGroupAndNotifyGroupChange().  And actually that</color>
    <color=#75715e>// operation should be done closer to where we know the GroupDB has</color>
    <color=#75715e>// been changed.  In particular, if the GroupDB update suffers an IAE,</color>
    <color=#75715e>// the exception blows by the following, even though the database</color>
    <color=#75715e>// actually does now contain the updated value.</color>
    <color=#75715e>//</color>
    <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>refreshCachedGroup</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#e6db74>"Successfully updated node: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" Hostport = "</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>": "</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" ["</color>
            <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>"]"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Implements the two phase update of membership information.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>In the first phase the master repeatedly tries to commit the "put" operation until it gets a</color>
<color=#75715e>   * Quorum of acks, ensuring that the operation has been made durable. Nodes that obtain this entry</color>
<color=#75715e>   * will start using it in elections. However, the node itself will not participate in elections</color>
<color=#75715e>   * until it has successfully completed phase 2.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>In the second phase, the entry for the member is updated to note that a quorum of acks was</color>
<color=#75715e>   * received.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Failure leaves the database with the member info absent, or present but without the update</color>
<color=#75715e>   * to quorumAcks indicating that a quorum has acknowledged the change.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param node the member info for the node.</color>
<color=#75715e>   * @param quorumAck whether to require acknowledgments from a quorum</color>
<color=#75715e>   * @throws InsufficientReplicasException upon failure of 2p member update</color>
<color=#75715e>   * @throws InsufficientAcksException upon failure of 2p member update</color>
<color=#75715e>   * @throws DatabaseException upon failure.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>twoPhaseMemberUpdate</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>quorumAck</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>TwoPhaseUpdate</color> <color=#f8f8f2>twoPhaseUpdate</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>TwoPhaseUpdate</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>quorumAck</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>saveOrigId</color> <color=#f92672>=</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>getId</color><color=#f8f8f2>();</color>

          <color=#a6e22e>@Override</color>
          <color=#66d9ef>void</color> <color=#a6e22e>phase1Body</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>);</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>changeVersion</color> <color=#f92672>=</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>incrementChangeVersion</color><color=#f8f8f2>();</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>hasNullId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>setId</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNextNodeId</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>}</color>
            <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>checkForConflicts</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>saveGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>setChangeVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>changeVersion</color><color=#f8f8f2>);</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>existingNode</color> <color=#f92672>=</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNode</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>existingNode</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getJEVersion</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>updateJEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>existingNode</color><color=#f8f8f2>.</color><color=#a6e22e>getJEVersion</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>}</color>
            <color=#f8f8f2>saveNodeObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>

          <color=#a6e22e>@Override</color>
          <color=#66d9ef>void</color> <color=#a6e22e>deadlockHandler</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>setId</color><color=#f8f8f2>(</color><color=#f8f8f2>saveOrigId</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>

          <color=#a6e22e>@Override</color>
          <color=#66d9ef>void</color> <color=#a6e22e>insufficientReplicasHandler</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>setId</color><color=#f8f8f2>(</color><color=#f8f8f2>saveOrigId</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>};</color>

    <color=#f8f8f2>twoPhaseUpdate</color><color=#f8f8f2>.</color><color=#a6e22e>execute</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This method is not used when the CBVLSN is defunct -- see GlobalCBVLSN. This method was not</color>
<color=#75715e>   * moved to GlobalCBVLSN to avoid modularity problems.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Updates the database entry associated with the node with the new local CBVLSN, if it can do</color>
<color=#75715e>   * so without encountering lock contention, and unless the node is a secondary, arbiter, or</color>
<color=#75715e>   * external node. Also updates the rep node's transient group information about the global CBVLSN.</color>
<color=#75715e>   * If it encounters contention, it returns false, and the caller must retry at some later point in</color>
<color=#75715e>   * time.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that changes to the local CBVLSN do not update the group version number since they do</color>
<color=#75715e>   * not impact group membership.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param nameIdPair identifies the node being updated</color>
<color=#75715e>   * @param newCBVLSN the new local CBVLSN to be associated with the node.</color>
<color=#75715e>   * @param nodeType the node type of the RepNode</color>
<color=#75715e>   * @return true if the update succeeded.</color>
<color=#75715e>   * @throws DatabaseException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>updateLocalCBVLSN</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newCBVLSN</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>NodeType</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>groupDbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>probeGroupDb</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Contention on the groupDbImpl, try later. */</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Contention on the groupDbImpl, try later. */</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>nodeNameKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>stringToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>nameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>CleanerBarrierState</color> <color=#f8f8f2>barrierState</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>CleanerBarrierState</color><color=#f8f8f2>(</color><color=#f8f8f2>newCBVLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>ok</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * No database update for secondary, arbiter, or external nodes,</color>
<color=#75715e>       * but set ok to true so that the rep node's group information is</color>
<color=#75715e>       * updated.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeType</color><color=#f8f8f2>.</color><color=#a6e22e>isSecondary</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>.</color><color=#a6e22e>isArbiter</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>.</color><color=#a6e22e>isExternal</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ok</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>txnConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>

      <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_ACK_NO_SYNC_DURABILITY</color><color=#f8f8f2>);</color>
      <color=#75715e>/*</color>
<color=#75715e>       * Don't wait for locks. It's ok to miss an update because we could</color>
<color=#75715e>       * not acquire the lock, since the operation will be retried later</color>
<color=#75715e>       * by a subsequent heartbeat message.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setNoWait</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MasterTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txnConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>

      <color=#75715e>/* Read the group first to avoid deadlocks */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchKey</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Node ID: "</color> <color=#f92672>+</color> <color=#f8f8f2>nameIdPair</color> <color=#f92672>+</color> <color=#e6db74>" not present in group db"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Let's see if the entry needs updating. */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NodeBinding</color> <color=#f8f8f2>nodeBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>NodeBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f92672>=</color> <color=#f8f8f2>nodeBinding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>lastCBVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getBarrierState</color><color=#f8f8f2>().</color><color=#a6e22e>getLastCBVLSN</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastCBVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>newCBVLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ok</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>setBarrierState</color><color=#f8f8f2>(</color><color=#f8f8f2>barrierState</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>nodeBinding</color><color=#f8f8f2>.</color><color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Node ID: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>nameIdPair</color>
                <color=#f92672>+</color> <color=#e6db74>" stored localCBVLSN could not be updated. Status: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>status</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>fine</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Local CBVLSN updated to "</color> <color=#f92672>+</color> <color=#f8f8f2>newCBVLSN</color> <color=#f92672>+</color> <color=#e6db74>" for node "</color> <color=#f92672>+</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>ok</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ok</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_ACK_NO_SYNC_DURABILITY</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ok</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* RepNode may be null during shutdown. [#17424] */</color>
        <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repNode</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>updateGroupInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#f8f8f2>barrierState</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Returns just the de-serialized special rep group object from the</color>
<color=#75715e>   * database, using the specified lock mode.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>RepGroupImpl</color> <color=#a6e22e>fetchGroupObject</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>GroupBinding</color> <color=#f8f8f2>groupBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>groupEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchKey</color><color=#f8f8f2>(</color><color=#f8f8f2>groupKeyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Group entry key: "</color> <color=#f92672>+</color> <color=#f8f8f2>GROUP_KEY</color> <color=#f92672>+</color> <color=#e6db74>" missing from group database"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>groupBinding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Saves the rep group in the database.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>saveGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>GroupBinding</color> <color=#f8f8f2>groupBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>groupEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>groupBinding</color><color=#f8f8f2>.</color><color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>groupKeyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#e6db74>"Group entry save failed"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Save a ReplicationNode in the database, using the format version</color>
<color=#75715e>   * specified by the group.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>saveNodeObject</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>().</color><color=#a6e22e>hasTransientId</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>nodeNameKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>stringToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>NodeBinding</color> <color=#f8f8f2>nodeBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>NodeBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>memberInfoEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>nodeBinding</color><color=#f8f8f2>.</color><color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>memberInfoEntry</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeNameKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>memberInfoEntry</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#e6db74>"Group entry save failed"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Converts a numeric version string to a JEVersion, returning null for an empty string. */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>parseJEVersion</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>versionString</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>versionString</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#66d9ef>null</color> <color=#f8f8f2>:</color> <color=#66d9ef>new</color> <color=#f8f8f2>JEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>versionString</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Converts a JEVersion to a numeric version string, returning an empty string for null. */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>jeVersionString</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#e6db74>""</color> <color=#f8f8f2>:</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>getNumericVersionString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** RepGroupImpl version 3: Add the minJEVersion field */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>GroupBinding</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TupleBinding</color><color=#f92672><</color><color=#f8f8f2>RepGroupImpl</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#75715e>/** The rep group format version to use for writing, or -1 for reading. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>writeFormatVersion</color><color=#f8f8f2>;</color>

    <color=#75715e>/** Create an instance for reading. */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>GroupBinding</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>writeFormatVersion</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/** Create an instance for writing using the specified group format version. */</color>
    <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>writeFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>writeFormatVersion</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"writeFormatVersion must be non-negative: "</color> <color=#f92672>+</color> <color=#f8f8f2>writeFormatVersion</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>writeFormatVersion</color> <color=#f92672>=</color> <color=#f8f8f2>writeFormatVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>RepGroupImpl</color> <color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>TupleInput</color> <color=#f8f8f2>input</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>writeFormatVersion</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"GroupBinding not created for read"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readString</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>UUID</color> <color=#f8f8f2>uuid</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>UUID</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(),</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>());</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>formatVersion</color> <color=#f92672>=</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>name</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>uuid</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>formatVersion</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>((</color><color=#f8f8f2>formatVersion</color> <color=#f92672><</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>FORMAT_VERSION_3</color><color=#f8f8f2>)</color>
              <color=#f92672>?</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_FORMAT_VERSION_JE_VERSION</color>
              <color=#f8f8f2>:</color> <color=#f8f8f2>parseJEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readString</color><color=#f8f8f2>())));</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color><color=#f8f8f2>,</color> <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>output</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>writeFormatVersion</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"GroupBinding not created for write"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeString</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeLong</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>().</color><color=#a6e22e>getMostSignificantBits</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeLong</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>().</color><color=#a6e22e>getLeastSignificantBits</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeInt</color><color=#f8f8f2>(</color><color=#f8f8f2>writeFormatVersion</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeInt</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getChangeVersion</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeInt</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeIdSequence</color><color=#f8f8f2>());</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>writeFormatVersion</color> <color=#f92672>>=</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>FORMAT_VERSION_3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeString</color><color=#f8f8f2>(</color><color=#f8f8f2>jeVersionString</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getMinJEVersion</color><color=#f8f8f2>()));</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Supports the serialization/deserialization of node info into and out of the database. Nodes are</color>
<color=#75715e>   * always saved using the current group format version, and the node's format version is checked</color>
<color=#75715e>   * on reading to make sure it is not newer than the current group format version, although they</color>
<color=#75715e>   * could have an older format version if they have not been saved recently.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Prior to RepGroupImpl version 3, the second field was always the ordinal value of the node</color>
<color=#75715e>   * type, which was either 0 or 1. Starting with version 3, values greater than 1 are treated as</color>
<color=#75715e>   * the rep group version of the format used to write the node binding, with the node type</color>
<color=#75715e>   * following in the next field, and the jeVersion field added at the end.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>NodeBinding</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TupleBinding</color><color=#f92672><</color><color=#f8f8f2>RepNodeImpl</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#75715e>/** The approximate maximum size of the serialized form. */</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>APPROX_MAX_SIZE</color> <color=#f92672>=</color>
        <color=#ae81ff>40</color> <color=#f92672>+</color> <color=#75715e>/* node name (guess) */</color> <color=#ae81ff>4</color> <color=#f92672>+</color> <color=#75715e>/* node ID */</color> <color=#ae81ff>1</color> <color=#f92672>+</color> <color=#75715e>/* group version */</color> <color=#ae81ff>1</color> <color=#f92672>+</color> <color=#75715e>/* NodeType */</color> <color=#ae81ff>1</color>
            <color=#f92672>+</color> <color=#75715e>/* quorumAck */</color> <color=#ae81ff>1</color> <color=#f92672>+</color> <color=#75715e>/* isRemoved */</color> <color=#ae81ff>40</color> <color=#f92672>+</color> <color=#75715e>/* hostName (guess) */</color> <color=#ae81ff>4</color> <color=#f92672>+</color> <color=#75715e>/* port */</color> <color=#ae81ff>8</color>
            <color=#f92672>+</color> <color=#75715e>/* lastCBVLSN */</color> <color=#ae81ff>8</color> <color=#f92672>+</color> <color=#75715e>/* barrierTime */</color> <color=#ae81ff>4</color>
            <color=#f92672>+</color> <color=#75715e>/* changeVersion */</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color> <color=#75715e>/* jeVersion (approx) */</color>

    <color=#75715e>/** The maximum node type value for version 2. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>V2_MAX_NODE_TYPE</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

    <color=#75715e>/** The group format version to use for reading or writing. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>;</color>

    <color=#75715e>/** Create an instance for reading or writing using the specified group format version. */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>NodeBinding</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>groupFormatVersion</color> <color=#f92672>=</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>RepNodeImpl</color> <color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>TupleInput</color> <color=#f8f8f2>input</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>NameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>deserialize</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>versionOrNodeType</color> <color=#f92672>=</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readByte</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>v2</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>versionOrNodeType</color> <color=#f92672><=</color> <color=#f8f8f2>V2_MAX_NODE_TYPE</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>v2</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>versionOrNodeType</color> <color=#f92672>></color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Node entry version "</color>
                <color=#f92672>+</color> <color=#f8f8f2>versionOrNodeType</color>
                <color=#f92672>+</color> <color=#e6db74>" for node "</color>
                <color=#f92672>+</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" is illegal because it is newer than group version "</color>
                <color=#f92672>+</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>nodeTypeNum</color> <color=#f92672>=</color> <color=#f8f8f2>v2</color> <color=#f92672>?</color> <color=#f8f8f2>versionOrNodeType</color> <color=#f8f8f2>:</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readByte</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>RepNodeImpl</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>()</color><color=#f92672>[</color><color=#f8f8f2>nodeTypeNum</color><color=#f92672>]</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readBoolean</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readBoolean</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readString</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(),</color>
          <color=#66d9ef>new</color> <color=#f8f8f2>CleanerBarrierState</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>()),</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>()),</color>
          <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>v2</color> <color=#f92672>?</color> <color=#66d9ef>null</color> <color=#f8f8f2>:</color> <color=#f8f8f2>parseJEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readString</color><color=#f8f8f2>()));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/** Returns whether the node can be serialized using the specified group format version. */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>supportsObjectToEntry</color><color=#f8f8f2>(</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/* Version 2 supports a limited set of node types */</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>((</color><color=#f8f8f2>groupFormatVersion</color> <color=#f92672>></color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>FORMAT_VERSION_2</color><color=#f8f8f2>)</color>
          <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>().</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>ELECTABLE</color><color=#f8f8f2>)</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>mi</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>output</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>supportsObjectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Node type "</color>
                <color=#f92672>+</color> <color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" is not supported for group version "</color>
                <color=#f92672>+</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>v2</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>groupFormatVersion</color> <color=#f92672><=</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>FORMAT_VERSION_2</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>CleanerBarrierState</color> <color=#f8f8f2>syncState</color> <color=#f92672>=</color> <color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getBarrierState</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>serialize</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>v2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeByte</color><color=#f8f8f2>(</color><color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeByte</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>().</color><color=#a6e22e>ordinal</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeBoolean</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>isQuorumAck</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeBoolean</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>isRemoved</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeString</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeInt</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeLong</color><color=#f8f8f2>(</color><color=#f8f8f2>syncState</color><color=#f8f8f2>.</color><color=#a6e22e>getLastCBVLSN</color><color=#f8f8f2>().</color><color=#a6e22e>getSequence</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeLong</color><color=#f8f8f2>(</color><color=#f8f8f2>syncState</color><color=#f8f8f2>.</color><color=#a6e22e>getBarrierTime</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeInt</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getChangeVersion</color><color=#f8f8f2>());</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>v2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>writeString</color><color=#f8f8f2>(</color><color=#f8f8f2>jeVersionString</color><color=#f8f8f2>(</color><color=#f8f8f2>mi</color><color=#f8f8f2>.</color><color=#a6e22e>getJEVersion</color><color=#f8f8f2>()));</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Implements two phase updates for membership changes to the group database. It compartmentalizes</color>
<color=#75715e>   * the retry operations and exception handling so that it's independent of the core logic.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>TwoPhaseUpdate</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>quorumAck</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>;</color>

    <color=#66d9ef>protected</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>phase1Exception</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>TwoPhaseUpdate</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>quorumAck</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>node</color> <color=#f92672>=</color> <color=#f8f8f2>node</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>quorumAck</color> <color=#f92672>=</color> <color=#f8f8f2>quorumAck</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>groupDbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getGroupDb</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Should never happen. */</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Phase1 exception handlers for phase1Body-specific cleanup */</color>
    <color=#66d9ef>void</color> <color=#a6e22e>insufficientReplicasHandler</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

    <color=#66d9ef>void</color> <color=#a6e22e>deadlockHandler</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

    <color=#75715e>/* The changes to be made in phase1 */</color>
    <color=#66d9ef>abstract</color> <color=#66d9ef>void</color> <color=#a6e22e>phase1Body</color><color=#f8f8f2>();</color>

    <color=#75715e>/* The changes to be made in phase2. */</color>
    <color=#66d9ef>void</color> <color=#a6e22e>phase2Body</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>setQuorumAck</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>saveNodeObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>node</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupDbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>phase1</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>QUORUM_ACK_RETRIES</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MasterTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>quorumAck</color> <color=#f92672>?</color> <color=#f8f8f2>QUORUM_ACK</color> <color=#f8f8f2>:</color> <color=#f8f8f2>NO_ACK</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>phase1Body</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumAck</color> <color=#f92672>?</color> <color=#f8f8f2>QUORUM_ACK_DURABILITY</color> <color=#f8f8f2>:</color> <color=#f8f8f2>NO_ACK_DURABILITY</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
          <color=#66d9ef>return</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InsufficientReplicasException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>phase1Exception</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>insufficientReplicasHandler</color><color=#f8f8f2>();</color>
          <color=#75715e>/* Commit was aborted. */</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Phase 1 retry; for node: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>" insufficient active replicas: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InsufficientAcksException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>phase1Exception</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
          <color=#75715e>/* Local commit completed but did not get enough acks. */</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Phase 1 retry; for node: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>" insufficient acks: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>LockConflictException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* Likely a timeout, can't distinguish between them. */</color>
          <color=#f8f8f2>phase1Exception</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>deadlockHandler</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Phase 1 retry; for node: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>" deadlock exception: "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>severe</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Phase 1 failed unexpectedly: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Phase 1 failed: "</color> <color=#f92672>+</color> <color=#f8f8f2>phase1Exception</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>phase1Exception</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>phase2</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MasterTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>NO_ACK</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>phase2Body</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>severe</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Unexpected failure in Phase 2: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>void</color> <color=#a6e22e>execute</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Object</color> <color=#f8f8f2>lock</color><color=#f8f8f2>;</color>
      <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>lockMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>lock</color> <color=#f92672>=</color> <color=#f8f8f2>lockMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lock</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>lock</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Object</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>lockMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>lock</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>lock</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>phase1</color><color=#f8f8f2>();</color>
        <color=#75715e>/* Only executed if phase 1 succeeds. */</color>
        <color=#f8f8f2>phase2</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * An internal API used to obtain group information by opening a stand alone environment handle</color>
<color=#75715e>   * and reading the RepGroupDB. Used for debugging and utilities.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param envDir the directory containing the environment log files</color>
<color=#75715e>   * @return the group as currently defined by the environment</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>RepGroupImpl</color> <color=#a6e22e>getGroup</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>File</color> <color=#f8f8f2>envDir</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>envConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Environment</color><color=#f8f8f2>(</color><color=#f8f8f2>envDir</color><color=#f8f8f2>,</color> <color=#f8f8f2>envConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setTransactional</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setAllowCreate</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>beginTransaction</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>DbType</color><color=#f8f8f2>.</color><color=#a6e22e>REP_GROUP</color><color=#f8f8f2>.</color><color=#a6e22e>getInternalName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>groupEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupKeyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>READ_COMMITTED</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Group entry not found "</color> <color=#f92672>+</color> <color=#f8f8f2>status</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>GroupBinding</color> <color=#f8f8f2>groupBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#f8f8f2>groupBinding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getDbImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>),</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>group</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>abort</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>db</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Deletes all the current members from the rep group database and creates a new group, with just</color>
<color=#75715e>   * the member supplied via the configuration. This method exists to support the utility {@link</color>
<color=#75715e>   * DbResetRepGroup}</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The changes proceed in three steps:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>1) Determine the node id sequence number. This is to ensure that rep node ids are not</color>
<color=#75715e>   * reused. Old rep node ids are present in the logs as commit records.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>2) A new group object, with the node id sequence number determined in step 1), is created</color>
<color=#75715e>   * and all existing nodes are deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>3) The first node is added to the rep group.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param lastOldVLSN the VLSN used to associate the new barrier wrt this node.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>reinitFirstNode</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color> <color=#f8f8f2>lastOldVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color> <color=#f8f8f2>configManager</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>GROUP_NAME</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>NODE_NAME</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>hostPortPair</color> <color=#f92672>=</color> <color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_HOST_PORT</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>hostname</color> <color=#f92672>=</color> <color=#f8f8f2>HostPortPair</color><color=#f8f8f2>.</color><color=#a6e22e>getHostname</color><color=#f8f8f2>(</color><color=#f8f8f2>hostPortPair</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>port</color> <color=#f92672>=</color> <color=#f8f8f2>HostPortPair</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>(</color><color=#f8f8f2>hostPortPair</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>retainUUID</color> <color=#f92672>=</color> <color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>getBoolean</color><color=#f8f8f2>(</color><color=#f8f8f2>RESET_REP_GROUP_RETAIN_UUID</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getGroupDb</color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Retrieve the previous rep group object, so we can use its node</color>
<color=#75715e>     * sequence id.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>TransactionConfig</color> <color=#f8f8f2>txnConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TransactionConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setDurability</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_ACK</color><color=#f8f8f2>.</color><color=#a6e22e>getDurability</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>txnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setConsistencyPolicy</color><color=#f8f8f2>(</color><color=#f8f8f2>NO_CONSISTENCY</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>revertToNull</color><color=#f8f8f2>();</color> <color=#75715e>/* read transaction, so null id is ok. */</color>

    <color=#75715e>/* Now delete old nodes and the group, and establish a new group */</color>
    <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MasterTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txnConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>prevRepGroup</color> <color=#f92672>=</color> <color=#f8f8f2>fetchGroupObject</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>nodeIdSequenceStart</color> <color=#f92672>=</color> <color=#f8f8f2>prevRepGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeIdSequence</color><color=#f8f8f2>();</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>keyEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * We have the "predicted" real node id, so set it and it will be used</color>
<color=#75715e>     * in the commit lns that will be written in future.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>firstNodeId</color> <color=#f92672>=</color> <color=#f8f8f2>nodeIdSequenceStart</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>setId</color><color=#f8f8f2>(</color><color=#f8f8f2>firstNodeId</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>firstNode</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>RepNodeImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>hostname</color><color=#f8f8f2>,</color> <color=#f8f8f2>port</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>());</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>CleanerBarrierState</color> <color=#f8f8f2>barrierState</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>CleanerBarrierState</color><color=#f8f8f2>(</color><color=#f8f8f2>lastOldVLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>firstNode</color><color=#f8f8f2>.</color><color=#a6e22e>setBarrierState</color><color=#f8f8f2>(</color><color=#f8f8f2>barrierState</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MasterTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txnConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadCommitted</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>mcursor</color> <color=#f92672>=</color> <color=#f8f8f2>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>

    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>mcursor</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>StringBinding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToString</color><color=#f8f8f2>(</color><color=#f8f8f2>keyEntry</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>GROUP_KEY</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>retainUUID</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>().</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>value</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>incrementChangeVersion</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>GroupBinding</color> <color=#f8f8f2>groupBinding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupBinding</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>setNodeIdSequence</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeIdSequenceStart</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>groupEntry</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>groupBinding</color><color=#f8f8f2>.</color><color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>mcursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>groupEntry</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>status</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Unexpected state:"</color> <color=#f92672>+</color> <color=#f8f8f2>status</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Removing node: "</color> <color=#f92672>+</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>mcursor</color><color=#f8f8f2>.</color><color=#a6e22e>delete</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>mcursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>commit</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Now add the first node of the new group. */</color>
    <color=#f8f8f2>ensureMember</color><color=#f8f8f2>(</color><color=#f8f8f2>firstNode</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstNodeId</color> <color=#f92672>!=</color> <color=#f8f8f2>firstNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Expected nodeid:"</color> <color=#f92672>+</color> <color=#f8f8f2>firstNodeId</color> <color=#f92672>+</color> <color=#e6db74>" but found:"</color> <color=#f92672>+</color> <color=#f8f8f2>firstNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeId</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>