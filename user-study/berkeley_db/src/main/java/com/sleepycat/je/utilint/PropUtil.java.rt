<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.utilint</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.StringTokenizer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>

<color=#75715e>/** Convenience methods for handling JE properties. */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>PropUtil</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>NS_IN_MS</color> <color=#f92672>=</color> <color=#ae81ff>1000000</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>NS_IN_SEC</color> <color=#f92672>=</color> <color=#ae81ff>1000000000</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>NS_IN_MINUTE</color> <color=#f92672>=</color> <color=#f8f8f2>NS_IN_SEC</color> <color=#f92672>*</color> <color=#ae81ff>60</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>NS_IN_HOUR</color> <color=#f92672>=</color> <color=#f8f8f2>NS_IN_MINUTE</color> <color=#f92672>*</color> <color=#ae81ff>60</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts the given duration (interval value plus unit) to milliseconds, ensuring that any given</color>
<color=#75715e>   * value greater than zero converts to at least one millisecond to avoid a zero millisecond</color>
<color=#75715e>   * result, since Object.wait(0) waits forever.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException if the duration argument is illegal. Thrown via API setter</color>
<color=#75715e>   *     methods such as Transaction.setLockTimeout.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>durationToMillis</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>val</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Allow zero duration with null unit. */</color>
      <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>unit</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Duration TimeUnit argument may not be null if interval "</color> <color=#f92672>+</color> <color=#e6db74>"is non-zero"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>val</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Duration argument may not be negative: "</color> <color=#f92672>+</color> <color=#f8f8f2>val</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>newVal</color> <color=#f92672>=</color> <color=#f8f8f2>unit</color><color=#f8f8f2>.</color><color=#a6e22e>toMillis</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newVal</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Input val is positive, so return at least one. */</color>
      <color=#66d9ef>return</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newVal</color> <color=#f92672>></color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Duration argument may not be greater than "</color>
              <color=#f92672>+</color> <color=#e6db74>"Integer.MAX_VALUE milliseconds: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>newVal</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>newVal</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Converts the given duration value in milliseconds to the given unit.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException if the unit is null. Thrown via API getter methods such as</color>
<color=#75715e>   *     Transaction.getLockTimeout.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#a6e22e>millisToDuration</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>unit</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"TimeUnit argument may not be null"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>unit</color><color=#f8f8f2>.</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Parses a String duration property (time + optional unit) and returns the value in millis.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException if the duration string is illegal. Thrown via the Environment</color>
<color=#75715e>   *     ctor and setMutableConfig, and likewise for a ReplicatedEnvironment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>parseDuration</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>property</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>ns</color> <color=#f92672>=</color> <color=#f8f8f2>parseDurationNS</color><color=#f8f8f2>(</color><color=#f8f8f2>property</color><color=#f8f8f2>);</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>millis</color> <color=#f92672>=</color> <color=#f8f8f2>ns</color> <color=#f92672>/</color> <color=#f8f8f2>NS_IN_MS</color><color=#f8f8f2>;</color>

    <color=#75715e>/* If input val is positive, return at least one. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ns</color> <color=#f92672>></color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>millis</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>millis</color> <color=#f92672>></color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Duration argument may not be greater than "</color>
              <color=#f92672>+</color> <color=#e6db74>"Integer.MAX_VALUE milliseconds: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>property</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>millis</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Parses a String duration property (time + optional unit) and returns the value in nanos.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException if the duration string is illegal. Thrown via the Environment</color>
<color=#75715e>   *     ctor and setMutableConfig, and likewise for a ReplicatedEnvironment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#a6e22e>parseDurationNS</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>property</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StringTokenizer</color> <color=#f8f8f2>tokens</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>StringTokenizer</color><color=#f8f8f2>(</color><color=#f8f8f2>property</color><color=#f8f8f2>.</color><color=#a6e22e>toUpperCase</color><color=#f8f8f2>(</color><color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>util</color><color=#f8f8f2>.</color><color=#a6e22e>Locale</color><color=#f8f8f2>.</color><color=#a6e22e>ENGLISH</color><color=#f8f8f2>),</color> <color=#e6db74>" \t"</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>tokens</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreTokens</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Duration argument is empty"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>parseLong</color><color=#f8f8f2>(</color><color=#f8f8f2>tokens</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>NumberFormatException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Duration argument does not start with a long integer: "</color> <color=#f92672>+</color> <color=#f8f8f2>property</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#75715e>/* Convert time from specified unit to millis. */</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>ns</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tokens</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreTokens</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>unitName</color> <color=#f92672>=</color> <color=#f8f8f2>tokens</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tokens</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreTokens</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Duration argument has extra characters after unit: "</color> <color=#f92672>+</color> <color=#f8f8f2>property</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color> <color=#f92672>=</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>unitName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ns</color> <color=#f92672>=</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>NANOSECONDS</color><color=#f8f8f2>.</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>time</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>IEEETimeUnit</color> <color=#f8f8f2>unit</color> <color=#f92672>=</color> <color=#f8f8f2>IEEETimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>unitName</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>ns</color> <color=#f92672>=</color> <color=#f8f8f2>unit</color><color=#f8f8f2>.</color><color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#f8f8f2>time</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>e2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
              <color=#e6db74>"Duration argument has unknown unit name: "</color> <color=#f92672>+</color> <color=#f8f8f2>property</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Default unit is micros. */</color>
      <color=#f8f8f2>ns</color> <color=#f92672>=</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>NANOSECONDS</color><color=#f8f8f2>.</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>time</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MICROSECONDS</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#75715e>/* If input val is positive, return at least one. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>time</color> <color=#f92672>></color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>ns</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ns</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Formats a String duration property (time + optional unit). value in millis. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>formatDuration</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>time</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#e6db74>' '</color> <color=#f92672>+</color> <color=#f8f8f2>unit</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Support for conversion of IEEE time units. Although names are defined in uppercase, we</color>
<color=#75715e>   * uppercase the input string before calling IEEETimeUnit.valueOf, in order to support input names</color>
<color=#75715e>   * in both upper and lower case.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>enum</color> <color=#f8f8f2>IEEETimeUnit</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Nanoseconds */</color>
    <color=#f8f8f2>NS</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>long</color> <color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>nanosUnit</color><color=#f8f8f2>.</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>NANOSECONDS</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>},</color>

    <color=#75715e>/* Microseconds */</color>
    <color=#f8f8f2>US</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>long</color> <color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>nanosUnit</color><color=#f8f8f2>.</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MICROSECONDS</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>},</color>

    <color=#75715e>/* Milliseconds */</color>
    <color=#f8f8f2>MS</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>long</color> <color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>nanosUnit</color><color=#f8f8f2>.</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>},</color>

    <color=#75715e>/* Seconds */</color>
    <color=#f8f8f2>S</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>long</color> <color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>nanosUnit</color><color=#f8f8f2>.</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>val</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>SECONDS</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>},</color>

    <color=#75715e>/* Minutes */</color>
    <color=#f8f8f2>MIN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>long</color> <color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>val</color> <color=#f92672>*</color> <color=#f8f8f2>NS_IN_MINUTE</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>},</color>

    <color=#75715e>/* Hours */</color>
    <color=#f8f8f2>H</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>long</color> <color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>val</color> <color=#f92672>*</color> <color=#f8f8f2>NS_IN_HOUR</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>};</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>nanosUnit</color> <color=#f92672>=</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>NANOSECONDS</color><color=#f8f8f2>;</color>

    <color=#66d9ef>abstract</color> <color=#66d9ef>long</color> <color=#a6e22e>toNanos</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>val</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>