<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The result of an operation that successfully reads or writes a record.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>An OperationResult does not contain any failure information. Methods that perform unsuccessful</color>
<color=#75715e> * reads or writes return null or throw an exception. Null is returned if the operation failed for</color>
<color=#75715e> * commonly expected reasons, such as a read that fails because the key does not exist, or an</color>
<color=#75715e> * insertion that fails because the key does exist.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Methods that return OperationResult can be compared to methods that return {@link</color>
<color=#75715e> * OperationStatus} as follows: If {@link OperationStatus#SUCCESS} is returned by the latter</color>
<color=#75715e> * methods, this is equivalent to returning a non-null OperationResult by the former methods.</color>
<color=#75715e> *</color>
<color=#75715e> * @since 7.0</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>OperationResult</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>update</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>OperationResult</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>update</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>expirationTime</color> <color=#f92672>=</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>update</color> <color=#f92672>=</color> <color=#f8f8f2>update</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns whether the operation was an update, for distinguishing inserts and updates performed</color>
<color=#75715e>   * by a {@link Put#OVERWRITE} operation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return whether an existing record was updated by this operation.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isUpdate</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>update</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the expiration time of the record, in milliseconds, or zero if the record has no TTL</color>
<color=#75715e>   * and does not expire.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For 'get' operations, this is the expiration time of the current record. For 'put</color>
<color=#75715e>   * operations, this is the expiration time of the newly written record. For 'delete' operation,</color>
<color=#75715e>   * this is the expiration time of the record that was deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The return value will always be evenly divisible by the number of milliseconds in one hour.</color>
<color=#75715e>   * If {@code TimeUnit.Days} was specified when the record was written, the return value will also</color>
<color=#75715e>   * be evenly divisible by the number of milliseconds in one day.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the expiration time in milliseconds, or zero.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getExpirationTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>