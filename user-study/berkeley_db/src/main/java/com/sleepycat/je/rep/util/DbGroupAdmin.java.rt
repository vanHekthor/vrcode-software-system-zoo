<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.util</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.NodeType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.ReplicatedEnvironment</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.ReplicationNetworkConfig</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepGroupImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepNodeImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannelFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.HostPortPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.net.DataChannelFactoryBuilder</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.CmdUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.PropUtil</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.FileNotFoundException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.InetSocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.HashSet</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.StringTokenizer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * DbGroupAdmin supplies the functionality of the administrative class {@link ReplicationGroupAdmin}</color>
<color=#75715e> * in a convenient command line utility. For example, it can be used to display replication group</color>
<color=#75715e> * information, or to remove a node from the replication group.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note: This utility does not handle security and authorization. It is left to the user to</color>
<color=#75715e> * ensure that the utility is invoked with proper authorization.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>See {@link DbGroupAdmin#main} for a full description of the command line arguments.</color>
<color=#75715e> */</color>
<color=#75715e>/*</color>
<color=#75715e> * SSL deferred</color>
<color=#75715e> * See {@link ReplicationConfig} for descriptions of the parameters that</color>
<color=#75715e> * control replication service access.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>DbGroupAdmin</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>enum</color> <color=#f8f8f2>Command</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DUMP</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>REMOVE</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>TRANSFER_MASTER</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>UPDATE_ADDRESS</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>DELETE</color>
  <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>newHostName</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>newPort</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forceFlag</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DataChannelFactory</color> <color=#f8f8f2>channelFactory</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>ReplicationGroupAdmin</color> <color=#f8f8f2>groupAdmin</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Command</color><color=#f92672>></color> <color=#f8f8f2>actions</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Command</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>undocumentedUsageString</color> <color=#f92672>=</color>
      <color=#e6db74>"  -netProps <optional>   # name of a property file containing\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # properties needed for replication\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # service access\n"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>usageString</color> <color=#f92672>=</color>
      <color=#e6db74>"Usage: "</color>
          <color=#f92672>+</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getJavaCommand</color><color=#f8f8f2>(</color><color=#f8f8f2>DbGroupAdmin</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>)</color>
          <color=#f92672>+</color> <color=#e6db74>"\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  -groupName <group name>   # name of replication group\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  -helperHosts <host:port>  # identifier for one or more members\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # of the replication group which can\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # be contacted for group information,\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # in this format:\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # hostname[:port][,hostname[:port]]\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  -dumpGroup                # dump group information\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  -removeMember <node name> # node to be removed\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  -updateAddress <node name> <new host:port>\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # update the network address for a\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # specified node.  The node should not\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # be alive when updating the address\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  -transferMaster [-force] <node1,node2,...> <timeout>\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # transfer master role to one of the\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"                            # specified nodes."</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Undocumented options for main()</color>
<color=#75715e>   *   -netProps &lt;propFile&gt;  # (optional)</color>
<color=#75715e>   *                               # name of a property file containing</color>
<color=#75715e>   *                               # properties needed for replication</color>
<color=#75715e>   *                               # service access</color>
<color=#75715e>   *   -deleteMember <node name>   # Deletes the node from the group, doesn't</color>
<color=#75715e>   *                               # just mark it removed</color>
<color=#75715e>   */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Usage:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre></color>
<color=#75715e>   * java {com.sleepycat.je.rep.util.DbGroupAdmin |</color>
<color=#75715e>   *       -jar je-&lt;version&gt;.jar DbGroupAdmin}</color>
<color=#75715e>   *   -groupName &lt;group name&gt;  # name of replication group</color>
<color=#75715e>   *   -helperHosts &lt;host:port&gt; # identifier for one or more members</color>
<color=#75715e>   *                            # of the replication group which can be</color>
<color=#75715e>   *                            # contacted for group information, in</color>
<color=#75715e>   *                            # this format:</color>
<color=#75715e>   *                            # hostname[:port][,hostname[:port]]*</color>
<color=#75715e>   *   -dumpGroup               # dump group information</color>
<color=#75715e>   *   -removeMember &lt;node name&gt;# node to be removed</color>
<color=#75715e>   *   -updateAddress &lt;node name&gt; &lt;new host:port&gt;</color>
<color=#75715e>   *                            # update the network address for a specified</color>
<color=#75715e>   *                            # node. The node should not be alive when</color>
<color=#75715e>   *                            # updating address</color>
<color=#75715e>   *   -transferMaster [-force] &lt;node1,node2,...&gt; &lt;timeout&gt;</color>
<color=#75715e>   *                            # transfer master role to one of the</color>
<color=#75715e>   *                            # specified nodes.</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>...</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbGroupAdmin</color> <color=#f8f8f2>admin</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DbGroupAdmin</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>admin</color><color=#f8f8f2>.</color><color=#a6e22e>parseArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>admin</color><color=#f8f8f2>.</color><color=#a6e22e>run</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Print usage information for this utility.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param msg</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>printUsage</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>msg</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>usageString</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Parse the command line parameters.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param argv Input command line parameters.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>parseArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>argv</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>argc</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nArgs</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>netPropsName</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nArgs</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>thisArg</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-groupName"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-groupName requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-helperHosts"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>helperSockets</color> <color=#f92672>=</color> <color=#f8f8f2>HostPortPair</color><color=#f8f8f2>.</color><color=#a6e22e>getSockets</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-helperHosts requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-dumpGroup"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>actions</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>Command</color><color=#f8f8f2>.</color><color=#a6e22e>DUMP</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-removeMember"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>actions</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>Command</color><color=#f8f8f2>.</color><color=#a6e22e>REMOVE</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-removeMember requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-updateAddress"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>hostPort</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#f8f8f2>hostPort</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>":"</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>index</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Host port pair format must be "</color> <color=#f92672>+</color> <color=#e6db74>"<host name>:<port number>"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>newHostName</color> <color=#f92672>=</color> <color=#f8f8f2>hostPort</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>index</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>newPort</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>parseInt</color><color=#f8f8f2>(</color><color=#f8f8f2>hostPort</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>));</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-updateAddress requires a "</color> <color=#f92672>+</color> <color=#e6db74>"<host name>:<port number> argument"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>

          <color=#f8f8f2>actions</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>Command</color><color=#f8f8f2>.</color><color=#a6e22e>UPDATE_ADDRESS</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-updateAddress requires the node name argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-transferMaster"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#75715e>// TODO: it wouldn't be too hard to allow "-force" as a</color>
        <color=#75715e>// node name.</color>
        <color=#75715e>//</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color> <color=#f92672>&&</color> <color=#e6db74>"-force"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>]</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>forceFlag</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>argc</color><color=#f92672>++</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672>+</color> <color=#ae81ff>1</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>

          <color=#75715e>/*</color>
<color=#75715e>           * Allow either</color>
<color=#75715e>           *     -transferMaster mercury,venus 900 ms</color>
<color=#75715e>           * or</color>
<color=#75715e>           *     -transferMaster mercury,venus "900 ms"</color>
<color=#75715e>           */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672>+</color> <color=#ae81ff>1</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color> <color=#f92672>&&</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>charAt</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#e6db74>'-'</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>timeout</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#e6db74>" "</color> <color=#f92672>+</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>argc</color> <color=#f92672>+=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>timeout</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>

          <color=#f8f8f2>actions</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>Command</color><color=#f8f8f2>.</color><color=#a6e22e>TRANSFER_MASTER</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-transferMaster requires at least two arguments"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-netProps"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>netPropsName</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-netProps requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-deleteMember"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>actions</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>Command</color><color=#f8f8f2>.</color><color=#a6e22e>DELETE</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-deleteMember requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color> <color=#f92672>+</color> <color=#e6db74>" is not a valid argument"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>ReplicationNetworkConfig</color> <color=#f8f8f2>repNetConfig</color> <color=#f92672>=</color> <color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>createDefault</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>netPropsName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>repNetConfig</color> <color=#f92672>=</color> <color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>create</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>netPropsName</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>FileNotFoundException</color> <color=#f8f8f2>fnfe</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color>
            <color=#e6db74>"The net properties file "</color> <color=#f92672>+</color> <color=#f8f8f2>netPropsName</color> <color=#f92672>+</color> <color=#e6db74>" does not exist: "</color> <color=#f92672>+</color> <color=#f8f8f2>fnfe</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>iae</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color>
            <color=#e6db74>"The net properties file "</color> <color=#f92672>+</color> <color=#f8f8f2>netPropsName</color> <color=#f92672>+</color> <color=#e6db74>" is not valid: "</color> <color=#f92672>+</color> <color=#f8f8f2>iae</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>channelFactory</color> <color=#f92672>=</color> <color=#f8f8f2>initializeFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>repNetConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Execute commands */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>run</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>createGroupAdmin</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>actions</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Command</color> <color=#f8f8f2>action</color> <color=#f8f8f2>:</color> <color=#f8f8f2>actions</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>action</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/* Dump the group information. */</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>DUMP</color><color=#f8f8f2>:</color>
          <color=#f8f8f2>dumpGroup</color><color=#f8f8f2>();</color>
          <color=#66d9ef>break</color><color=#f8f8f2>;</color>

          <color=#75715e>/* Remove a member. */</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>REMOVE</color><color=#f8f8f2>:</color>
          <color=#f8f8f2>removeMember</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>);</color>
          <color=#66d9ef>break</color><color=#f8f8f2>;</color>

          <color=#75715e>/* Transfer the current mastership to a specified node. */</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>TRANSFER_MASTER</color><color=#f8f8f2>:</color>
          <color=#f8f8f2>transferMaster</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>);</color>
          <color=#66d9ef>break</color><color=#f8f8f2>;</color>

          <color=#75715e>/* Update the network address of a specified node. */</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>UPDATE_ADDRESS</color><color=#f8f8f2>:</color>
          <color=#f8f8f2>updateAddress</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>newHostName</color><color=#f8f8f2>,</color> <color=#f8f8f2>newPort</color><color=#f8f8f2>);</color>
          <color=#66d9ef>break</color><color=#f8f8f2>;</color>

          <color=#75715e>/* Delete a member */</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>DELETE</color><color=#f8f8f2>:</color>
          <color=#f8f8f2>deleteMember</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>);</color>
          <color=#66d9ef>break</color><color=#f8f8f2>;</color>

        <color=#66d9ef>default</color><color=#f8f8f2>:</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>AssertionError</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#a6e22e>DbGroupAdmin</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Create a DbGroupAdmin instance for programmatic use.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param groupName replication group name</color>
<color=#75715e>   * @param helperSockets set of host and port pairs for group members which can be queried to</color>
<color=#75715e>   *     obtain group information.</color>
<color=#75715e>   */</color>
  <color=#75715e>/*</color>
<color=#75715e>   * SSL deferred</color>
<color=#75715e>   * This constructor does not support non-default service net properties.</color>
<color=#75715e>   * See the other constructor forms which allow setting of net properties.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>DbGroupAdmin</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>)</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden SSL deferred Create a DbGroupAdmin instance for programmatic use.</color>
<color=#75715e>   * @param groupName replication group name</color>
<color=#75715e>   * @param helperSockets set of host and port pairs for group members which can be queried to</color>
<color=#75715e>   *     obtain group information.</color>
<color=#75715e>   * @param netPropsFile a File containing replication net property settings. This parameter is</color>
<color=#75715e>   *     ignored if null.</color>
<color=#75715e>   * @throws FileNotFoundException if the netPropsFile does not exist</color>
<color=#75715e>   * @throws IllegalArgumentException if the netPropsFile contains invalid settings.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>DbGroupAdmin</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>,</color> <color=#f8f8f2>File</color> <color=#f8f8f2>netPropsFile</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>FileNotFoundException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>,</color> <color=#f8f8f2>makeRepNetConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>netPropsFile</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden SSL deferred Create a DbGroupAdmin instance for programmatic use.</color>
<color=#75715e>   * @param groupName replication group name</color>
<color=#75715e>   * @param helperSockets set of host and port pairs for group members which can be queried to</color>
<color=#75715e>   *     obtain group information.</color>
<color=#75715e>   * @param netConfig replication net configuration - null allowable This parameter is ignored if</color>
<color=#75715e>   *     null.</color>
<color=#75715e>   * @throws IllegalArgumentException if the netProps contains invalid settings.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>DbGroupAdmin</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicationNetworkConfig</color> <color=#f8f8f2>netConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>helperSockets</color> <color=#f92672>=</color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>channelFactory</color> <color=#f92672>=</color> <color=#f8f8f2>initializeFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>netConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>createGroupAdmin</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Create the ReplicationGroupAdmin object. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>createGroupAdmin</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>groupName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Group name must be specified"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>helperSockets</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>helperSockets</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Host and ports of helper nodes must be specified"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>groupAdmin</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReplicationGroupAdmin</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>helperSockets</color><color=#f8f8f2>,</color> <color=#f8f8f2>channelFactory</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Display group information. Lists all members and the group master. Can be used when reviewing</color>
<color=#75715e>   * the <a</color>
<color=#75715e>   * href="http://www.oracle.com/technetwork/database/berkeleydb/je-faq-096044.html#HAChecklist">group</color>
<color=#75715e>   * configuration. </a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>dumpGroup</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>getFormattedOutput</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Remove a node from the replication group. Once removed, a node cannot be added again to the</color>
<color=#75715e>   * group under the same node name.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link NodeType#SECONDARY Secondary} nodes cannot be removed; they automatically leave the</color>
<color=#75715e>   * group when they are shut down or become disconnected from the master.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param name name of the node to be removed</color>
<color=#75715e>   * @see ReplicationGroupAdmin#removeMember</color>
<color=#75715e>   */</color>
  <color=#75715e>/*</color>
<color=#75715e>   * TODO: EXTERNAL is hidden for now. The doc need updated to include</color>
<color=#75715e>   * EXTERNAL when it becomes public.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>removeMember</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>name</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Node name must be specified"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>groupAdmin</color><color=#f8f8f2>.</color><color=#a6e22e>removeMember</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden internal, for use in disaster recovery [#23447]</color>
<color=#75715e>   *     <p>Deletes a node from the replication group, which allows the node to be added to the</color>
<color=#75715e>   *     group again under the same name.</color>
<color=#75715e>   *     <p>{@link NodeType#SECONDARY Secondary} and {@link NodeType#EXTERNAL External} nodes cannot</color>
<color=#75715e>   *     be deleted; they automatically leave the group when they are shut down or become</color>
<color=#75715e>   *     disconnected from the master.</color>
<color=#75715e>   * @param name name of the node to be deleted</color>
<color=#75715e>   * @see ReplicationGroupAdmin#deleteMember</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>deleteMember</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>name</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Node name must be specified"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>groupAdmin</color><color=#f8f8f2>.</color><color=#a6e22e>deleteMember</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Update the network address for a specified node. When updating the address of a node, the node</color>
<color=#75715e>   * cannot be alive. See {@link ReplicationGroupAdmin#updateAddress} for more information.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The address of a {@link NodeType#SECONDARY} node cannot be updated with this method, since</color>
<color=#75715e>   * nodes must be members but not alive to be updated, and secondary nodes are not members when</color>
<color=#75715e>   * they are not alive. To change the address of a secondary node, restart the node with the</color>
<color=#75715e>   * updated address.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param nodeName the name of the node whose address will be updated</color>
<color=#75715e>   * @param newHostName the new host name of the node</color>
<color=#75715e>   * @param newPort the new port number of the node</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"hiding"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>updateAddress</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>newHostName</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>newPort</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>newHostName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Node name and new host name must be specified"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newPort</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Port of the new network address must be specified"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>groupAdmin</color><color=#f8f8f2>.</color><color=#a6e22e>updateAddress</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>newHostName</color><color=#f8f8f2>,</color> <color=#f8f8f2>newPort</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Transfers the master role from the current master to one of the electable replicas specified in</color>
<color=#75715e>   * the argument list.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param nodeList comma-separated list of nodes</color>
<color=#75715e>   * @param timeout in <a href="../../EnvironmentConfig.html#timeDuration">same form</a> as accepted</color>
<color=#75715e>   *     by duration config params</color>
<color=#75715e>   * @see ReplicatedEnvironment#transferMaster</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"hiding"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>transferMaster</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeList</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
        <color=#f8f8f2>groupAdmin</color><color=#f8f8f2>.</color><color=#a6e22e>transferMaster</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>parseNodes</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeList</color><color=#f8f8f2>),</color>
            <color=#f8f8f2>PropUtil</color><color=#f8f8f2>.</color><color=#a6e22e>parseDuration</color><color=#f8f8f2>(</color><color=#f8f8f2>timeout</color><color=#f8f8f2>),</color>
            <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>forceFlag</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"The new master is: "</color> <color=#f92672>+</color> <color=#f8f8f2>result</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>parseNodes</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodes</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"node list may not be null"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>StringTokenizer</color> <color=#f8f8f2>st</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringTokenizer</color><color=#f8f8f2>(</color><color=#f8f8f2>nodes</color><color=#f8f8f2>,</color> <color=#e6db74>","</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>set</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>st</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreElements</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>st</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>set</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * This method presents group information in a user friendly way. Internal</color>
<color=#75715e>   * fields are hidden.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#a6e22e>getFormattedOutput</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroupImpl</color> <color=#f92672>=</color> <color=#f8f8f2>groupAdmin</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getRepGroupImpl</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Get the master node name. */</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>masterName</color> <color=#f92672>=</color> <color=#f8f8f2>groupAdmin</color><color=#f8f8f2>.</color><color=#a6e22e>getMasterNodeName</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Get the electable nodes information. */</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\nGroup: "</color> <color=#f92672>+</color> <color=#f8f8f2>repGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>"\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"Electable Members:\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>RepNodeImpl</color><color=#f92672>></color> <color=#f8f8f2>nodes</color> <color=#f92672>=</color> <color=#f8f8f2>repGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getElectableMembers</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodes</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"    No electable members\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f8f8f2>:</color> <color=#f8f8f2>nodes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>())</color> <color=#f92672>?</color> <color=#e6db74>"master, "</color> <color=#f8f8f2>:</color> <color=#e6db74>""</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color>
            <color=#e6db74>"    "</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" ("</color>
                <color=#f92672>+</color> <color=#f8f8f2>type</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>":"</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>", "</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getBarrierState</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>")\n"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Get the monitors information. */</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\nMonitor Members:\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>nodes</color> <color=#f92672>=</color> <color=#f8f8f2>repGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getMonitorMembers</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodes</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"    No monitors\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f8f8f2>:</color> <color=#f8f8f2>nodes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color>
            <color=#e6db74>"    "</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" ("</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>":"</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>")\n"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Get information about secondary nodes */</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\nSecondary Members:\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>nodes</color> <color=#f92672>=</color> <color=#f8f8f2>repGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryMembers</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodes</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"    No secondary members\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f8f8f2>:</color> <color=#f8f8f2>nodes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color>
            <color=#e6db74>"    "</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" ("</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>":"</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>", "</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getBarrierState</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>")\n"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Get information about external nodes */</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\nExternal Members:\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>nodes</color> <color=#f92672>=</color> <color=#f8f8f2>repGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getExternalMembers</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodes</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"    No external members\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f8f8f2>:</color> <color=#f8f8f2>nodes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color>
            <color=#e6db74>"    "</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" ("</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>":"</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>", "</color>
                <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getBarrierState</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>")\n"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>ReplicationNetworkConfig</color> <color=#a6e22e>makeRepNetConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>File</color> <color=#f8f8f2>propFile</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>FileNotFoundException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>propFile</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>createDefault</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>create</color><color=#f8f8f2>(</color><color=#f8f8f2>propFile</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>DataChannelFactory</color> <color=#a6e22e>initializeFactory</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>ReplicationNetworkConfig</color> <color=#f8f8f2>repNetConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>logContext</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repNetConfig</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>repNetConfig</color> <color=#f92672>=</color> <color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>createDefault</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>DataChannelFactoryBuilder</color><color=#f8f8f2>.</color><color=#a6e22e>construct</color><color=#f8f8f2>(</color><color=#f8f8f2>repNetConfig</color><color=#f8f8f2>,</color> <color=#f8f8f2>logContext</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>