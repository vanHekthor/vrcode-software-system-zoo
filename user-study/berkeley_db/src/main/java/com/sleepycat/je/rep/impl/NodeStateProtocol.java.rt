<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.ReplicatedEnvironment.State</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannelFactory</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Defines the protocol used in support of node state querying.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The message request sequence: NODE_STATE_REQ -> NODE_STATE_RESP</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>NodeStateProtocol</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TextProtocol</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>VERSION</color> <color=#f92672>=</color> <color=#e6db74>"1.0"</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The messages defined by this class. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>NODE_STATE_REQ</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>(</color><color=#e6db74>"STATEREQ"</color><color=#f8f8f2>,</color> <color=#f8f8f2>NodeStateRequest</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>NODE_STATE_RESP</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>(</color><color=#e6db74>"STATERESP"</color><color=#f8f8f2>,</color> <color=#f8f8f2>NodeStateResponse</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#a6e22e>NodeStateProtocol</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataChannelFactory</color> <color=#f8f8f2>channelFactory</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>VERSION</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>channelFactory</color><color=#f8f8f2>);</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>initializeMessageOps</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f92672>[]</color> <color=#f8f8f2>{</color><color=#f8f8f2>NODE_STATE_REQ</color><color=#f8f8f2>,</color> <color=#f8f8f2>NODE_STATE_RESP</color><color=#f8f8f2>});</color>

    <color=#f8f8f2>setTimeouts</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_GROUP_OPEN_TIMEOUT</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_GROUP_READ_TIMEOUT</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Message request the state of the specified node. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>NodeStateRequest</color> <color=#66d9ef>extends</color> <color=#f8f8f2>RequestMessage</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeStateRequest</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeStateRequest</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>line</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>tokens</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>InvalidMessageException</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>line</color><color=#f8f8f2>,</color> <color=#f8f8f2>tokens</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>nextPayloadToken</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>NODE_STATE_REQ</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>String</color> <color=#a6e22e>getMessagePrefix</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>messagePrefixNocheck</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormatPrefix</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#f8f8f2>SEPARATOR</color> <color=#f92672>+</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Message return state of specified node. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>NodeStateResponse</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ResponseMessage</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>State</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeStateResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>State</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>masterName</color> <color=#f92672>=</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>joinTime</color> <color=#f92672>=</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeState</color> <color=#f92672>=</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeStateResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>line</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>tokens</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>InvalidMessageException</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>line</color><color=#f8f8f2>,</color> <color=#f8f8f2>tokens</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>nextPayloadToken</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>masterName</color> <color=#f92672>=</color> <color=#f8f8f2>nextPayloadToken</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>joinTime</color> <color=#f92672>=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>parseLong</color><color=#f8f8f2>(</color><color=#f8f8f2>nextPayloadToken</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>nodeState</color> <color=#f92672>=</color> <color=#f8f8f2>State</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>nextPayloadToken</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getMasterName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getJoinTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>State</color> <color=#a6e22e>getNodeState</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>NODE_STATE_RESP</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>String</color> <color=#a6e22e>getMessagePrefix</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>messagePrefixNocheck</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormatPrefix</color><color=#f8f8f2>()</color>
          <color=#f92672>+</color> <color=#f8f8f2>SEPARATOR</color>
          <color=#f92672>+</color> <color=#f8f8f2>nodeName</color>
          <color=#f92672>+</color> <color=#f8f8f2>SEPARATOR</color>
          <color=#f92672>+</color> <color=#f8f8f2>masterName</color>
          <color=#f92672>+</color> <color=#f8f8f2>SEPARATOR</color>
          <color=#f92672>+</color> <color=#f8f8f2>joinTime</color>
          <color=#f92672>+</color> <color=#f8f8f2>SEPARATOR</color>
          <color=#f92672>+</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>