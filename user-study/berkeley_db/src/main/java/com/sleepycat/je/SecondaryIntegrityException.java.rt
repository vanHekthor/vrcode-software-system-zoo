<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Locker</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Thrown when an integrity problem is detected while accessing a secondary database, including</color>
<color=#75715e> * access to secondaries while writing to a primary database. Secondary integrity problems are</color>
<color=#75715e> * normally caused by the use of secondaries without transactions.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link Transaction} handle is invalidated as a result of this exception. In addition, the</color>
<color=#75715e> * corrupt index (secondary database) is marked as corrupt in memory. All subsequent access to the</color>
<color=#75715e> * index will throw {@code SecondaryIntegrityException}. To correct the problem, the application may</color>
<color=#75715e> * perform a full restore (an HA {@link com.sleepycat.je.rep.NetworkRestore} or restore from backup)</color>
<color=#75715e> * or rebuild the corrupt index.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Some possible causes of a secondary integrity exception are listed below. Note that only the</color>
<color=#75715e> * first item -- the use of a non-transactional store -- is applicable when using the {@link</color>
<color=#75715e> * com.sleepycat.persist DPL}. All other items below do not apply to the use of the DPL, because the</color>
<color=#75715e> * DPL ensures that secondary databases are configured and managed correctly.</color>
<color=#75715e> *</color>
<color=#75715e> * <ol></color>
<color=#75715e> *   <li>The use of non-transactional databases or stores can cause secondary corruption as</color>
<color=#75715e> *       described in <a href="SecondaryDatabase.html#transactions">Special considerations for using</color>
<color=#75715e> *       Secondary Databases with and without Transactions</a>. Secondary databases and indexes</color>
<color=#75715e> *       should always be used in conjunction with transactional databases and stores.</color>
<color=#75715e> *   <li>Secondary corruption can be caused by an incorrectly implemented secondary key creator</color>
<color=#75715e> *       method, for example, one which uses mutable state information or is not properly</color>
<color=#75715e> *       synchronized. When the DPL is not used, the application is responsible for correctly</color>
<color=#75715e> *       implementing the key creator.</color>
<color=#75715e> *   <li>Secondary corruption can be caused by failing to open a secondary database before writing</color>
<color=#75715e> *       to the primary database, by writing to a secondary database directly using a {@link</color>
<color=#75715e> *       Database} handle, or by truncating or removing primary database without also truncating or</color>
<color=#75715e> *       removing all secondary databases. When the DPL is not used, the application is responsible</color>
<color=#75715e> *       for managing associated databases correctly.</color>
<color=#75715e> * </ol></color>
<color=#75715e> *</color>
<color=#75715e> * @since 4.0</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SecondaryIntegrityException</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SecondaryReferenceException</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>1L</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @hidden</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>SecondaryIntegrityException</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>secDb</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>message</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>secDbName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>message</color><color=#f8f8f2>,</color> <color=#f8f8f2>secDbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>secDb</color><color=#f8f8f2>.</color><color=#a6e22e>setCorrupted</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @hidden</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#a6e22e>SecondaryIntegrityException</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>message</color><color=#f8f8f2>,</color> <color=#f8f8f2>SecondaryIntegrityException</color> <color=#f8f8f2>cause</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>message</color><color=#f8f8f2>,</color> <color=#f8f8f2>cause</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @hidden</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationFailureException</color> <color=#a6e22e>wrapSelf</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>SecondaryIntegrityException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>,</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>