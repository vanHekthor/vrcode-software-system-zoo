<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.arbiter.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Utils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Utils.FutureTrackingCompService</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepGroupImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.MessageExchange</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.RequestMessage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.monitor.LeaveGroupEvent.LeaveReason</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.monitor.MonitorService</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.monitor.Protocol.JoinGroup</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.monitor.Protocol.LeaveGroup</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.net.InetSocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.ExecutionException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.Future</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeoutException</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The class for firing MonitorChangeEvents.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Each time when there happens a MonitorChangeEvents, it refreshes the group information so that</color>
<color=#75715e> * it can send messages to current monitors.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>MonitorEventManager</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* The time when this node joins the group, 0 if it hasn't joined yet. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>joinTime</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>L</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>ArbiterImpl</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>MonitorEventManager</color><color=#f8f8f2>(</color><color=#f8f8f2>ArbiterImpl</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>arbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Return the time when JoinGroupEvent for this Arbiter fires. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getJoinTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Disable the LeaveGroupEvent because the node is abnormally closed. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>disableLeaveGroupEvent</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>joinTime</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>L</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Fire a JoinGroupEvent. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>notifyJoinGroup</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>joinTime</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Already notified. */</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>joinTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>JoinGroup</color> <color=#f8f8f2>joinEvent</color> <color=#f92672>=</color>
        <color=#f8f8f2>getProtocol</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>)</color>
        <color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#f8f8f2>JoinGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getMasterName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>refreshMonitors</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>joinEvent</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Fire a LeaveGroupEvent and wait for responses. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>notifyLeaveGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>LeaveReason</color> <color=#f8f8f2>reason</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>InterruptedException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>joinTime</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* No join event, therefore no matching leave event. */</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color> <color=#f92672>=</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>LeaveGroup</color> <color=#f8f8f2>leaveEvent</color> <color=#f92672>=</color>
        <color=#f8f8f2>getProtocol</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>)</color>
        <color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#f8f8f2>LeaveGroup</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getMasterName</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>reason</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>joinTime</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>());</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>FutureTrackingCompService</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>compService</color> <color=#f92672>=</color>
        <color=#f8f8f2>refreshMonitors</color><color=#f8f8f2>(</color><color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>leaveEvent</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Wait for the futures to be evaluated. */</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Future</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>f</color> <color=#f8f8f2>:</color> <color=#f8f8f2>compService</color><color=#f8f8f2>.</color><color=#a6e22e>getFutures</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Ignore the result. Wait 10 seconds for the evaluation of</color>
<color=#75715e>         * the future before giving up.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>10</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>SECONDS</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ExecutionException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Ignore the exception. */</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>TimeoutException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Continue after time out. */</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Create a monitor protocol. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>com</color><color=#f8f8f2>.</color><color=#a6e22e>sleepycat</color><color=#f8f8f2>.</color><color=#a6e22e>je</color><color=#f8f8f2>.</color><color=#a6e22e>rep</color><color=#f8f8f2>.</color><color=#a6e22e>monitor</color><color=#f8f8f2>.</color><color=#a6e22e>Protocol</color> <color=#a6e22e>getProtocol</color><color=#f8f8f2>(</color><color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>com</color><color=#f8f8f2>.</color><color=#a6e22e>sleepycat</color><color=#f8f8f2>.</color><color=#a6e22e>je</color><color=#f8f8f2>.</color><color=#a6e22e>rep</color><color=#f8f8f2>.</color><color=#a6e22e>monitor</color><color=#f8f8f2>.</color><color=#a6e22e>Protocol</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>NameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>NOCHECK</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getChannelFactory</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Refresh all the monitors with specified message. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>FutureTrackingCompService</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#a6e22e>refreshMonitors</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>RequestMessage</color> <color=#f8f8f2>requestMessage</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>monitors</color> <color=#f92672>=</color> <color=#f8f8f2>repGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getAllMonitorSockets</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>fine</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(),</color> <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#e6db74>"Refreshed "</color> <color=#f92672>+</color> <color=#f8f8f2>monitors</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" monitors."</color><color=#f8f8f2>);</color>
    <color=#75715e>/* Broadcast and forget. */</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>Utils</color><color=#f8f8f2>.</color><color=#a6e22e>broadcastMessage</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>monitors</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>MonitorService</color><color=#f8f8f2>.</color><color=#a6e22e>SERVICE_NAME</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>requestMessage</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>arbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getElections</color><color=#f8f8f2>().</color><color=#a6e22e>getThreadPool</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>