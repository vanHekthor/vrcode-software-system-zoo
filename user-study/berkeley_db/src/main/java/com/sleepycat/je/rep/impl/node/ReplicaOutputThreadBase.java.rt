<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.ReplicationSecurityException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.Protocol</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.RepUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.StoppableThread</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.TestHook</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.TestHookExecute</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.BlockingQueue</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The thread used to write responses asynchronously to the network, to avoid network stalls in the</color>
<color=#75715e> * replica replay thread. This thread, like the Replica.ReplayThread, is created each time the node</color>
<color=#75715e> * establishes contact with a new feeder and starts replaying the log from it.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The inputs and outputs of this thread are schematically described as:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>outputQueue -> ReplicaOutputThread (does write) -> writes to network</color>
<color=#75715e> *</color>
<color=#75715e> * <p>It's the third component of the three thread structure outlined in the Replica's class level</color>
<color=#75715e> * comment.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>ReplicaOutputThreadBase</color> <color=#66d9ef>extends</color> <color=#f8f8f2>StoppableThread</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** The size of the write queue. */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>queueSize</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The heartbeat interval in ms.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>heartbeatMs</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Thread exit exception. It's non-null if the thread exited due to an exception. It's the</color>
<color=#75715e>   * responsibility of the main replica thread to propagate the exception across the thread boundary</color>
<color=#75715e>   * in this case.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>volatile</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>exception</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * A reference to the common output queue shared with Replay</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>BlockingQueue</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Reserved transaction ids, that don't represent transaction Acks</color>
<color=#75715e>   * when encountered in the write queue.</color>
<color=#75715e>   */</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Forces the replica thread to exit when encountered in the write</color>
<color=#75715e>   * queue.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>EOF</color> <color=#f92672>=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Results in a heartbeat response when encountered in the write queue.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>HEARTBEAT_ACK</color> <color=#f92672>=</color> <color=#f8f8f2>EOF</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Results in a shutdown response when encountered in the write queue.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>SHUTDOWN_ACK</color> <color=#f92672>=</color> <color=#f8f8f2>EOF</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>TestHook</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>outputHook</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Keep the max size below Maximum Segment Size = 1460 bytes. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxGroupedAcks</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#ae81ff>1460</color> <color=#f92672>-</color> <color=#ae81ff>100</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>

  <color=#66d9ef>final</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>groupAcks</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><></color><color=#f8f8f2>(</color><color=#f8f8f2>maxGroupedAcks</color><color=#f8f8f2>);</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>groupAcksEnabled</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>volatile</color> <color=#66d9ef>long</color> <color=#f8f8f2>numGroupedAcks</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>ReplicaOutputThreadBase</color><color=#f8f8f2>(</color><color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getReplay</color><color=#f8f8f2>().</color><color=#a6e22e>getOutputQueue</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>getReplica</color><color=#f8f8f2>().</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>getReplica</color><color=#f8f8f2>().</color><color=#a6e22e>getReplicaFeederChannel</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#a6e22e>ReplicaOutputThreadBase</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>BlockingQueue</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"ReplicaOutputThread"</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>();</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>repImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>outputQueue</color> <color=#f92672>=</color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>protocol</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>replicaFeederChannel</color> <color=#f92672>=</color> <color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>heartbeatMs</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>HEARTBEAT_INTERVAL</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>queueSize</color> <color=#f92672>=</color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>.</color><color=#a6e22e>remainingCapacity</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>groupAcksEnabled</color> <color=#f92672>=</color>
        <color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>VERSION_5</color><color=#f8f8f2>)</color>
            <color=#f92672>&&</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>getBoolean</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>ENABLE_GROUP_ACKS</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>Logger</color> <color=#a6e22e>getLogger</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>Exception</color> <color=#a6e22e>getException</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>exception</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getNumGroupedAcks</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>numGroupedAcks</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For testing only. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getOutputQueueSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setOutputHook</color><color=#f8f8f2>(</color><color=#f8f8f2>TestHook</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f92672>></color> <color=#f8f8f2>outputHook</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>outputHook</color> <color=#f92672>=</color> <color=#f8f8f2>outputHook</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>run</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Max number of pending responses in the output queue. */</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>maxPending</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Number of singleton acks. */</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>numAcks</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#e6db74>"Replica output thread started. Queue size:"</color>
            <color=#f92672>+</color> <color=#f8f8f2>queueSize</color>
            <color=#f92672>+</color> <color=#e6db74>" Max grouped acks:"</color>
            <color=#f92672>+</color> <color=#f8f8f2>maxGroupedAcks</color><color=#f8f8f2>);</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>txnId</color> <color=#f92672>=</color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>.</color><color=#a6e22e>poll</color><color=#f8f8f2>(</color><color=#f8f8f2>heartbeatMs</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>);</color>
          <color=#f92672>!</color><color=#f8f8f2>EOF</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>txnId</color> <color=#f92672>=</color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>.</color><color=#a6e22e>poll</color><color=#f8f8f2>(</color><color=#f8f8f2>heartbeatMs</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>assert</color> <color=#f8f8f2>TestHookExecute</color><color=#f8f8f2>.</color><color=#a6e22e>doHookIfSet</color><color=#f8f8f2>(</color><color=#f8f8f2>outputHook</color><color=#f8f8f2>,</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>writeReauthentication</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>txnId</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>HEARTBEAT_ACK</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * Send a heartbeat if requested, or unsolicited in the</color>
<color=#75715e>           * absence of output activity for a heartbeat interval.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>writeHeartbeat</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>SHUTDOWN_ACK</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * Acknowledge the shutdown request, the actual shutdown is</color>
<color=#75715e>           * processed in the replay thread.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>ShutdownResponse</color><color=#f8f8f2>(),</color> <color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>);</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>pending</color> <color=#f92672>=</color> <color=#f8f8f2>outputQueue</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pending</color> <color=#f92672>></color> <color=#f8f8f2>maxPending</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>maxPending</color> <color=#f92672>=</color> <color=#f8f8f2>pending</color><color=#f8f8f2>;</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>maxPending</color> <color=#f92672>%</color> <color=#ae81ff>100</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Max pending acks:"</color> <color=#f92672>+</color> <color=#f8f8f2>maxPending</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>pending</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>groupAcksEnabled</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* A singleton ack. */</color>
          <color=#f8f8f2>numAcks</color><color=#f92672>++</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Ack</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>),</color> <color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * Have items pending inthe queue and group acks are</color>
<color=#75715e>           * enabled.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>groupWriteAcks</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#75715e>/* At eof */</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicationSecurityException</color> <color=#f8f8f2>rse</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>exception</color> <color=#f92672>=</color> <color=#f8f8f2>rse</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Output thread exiting due to security error, "</color>
              <color=#f92672>+</color> <color=#e6db74>"client: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>rse</color><color=#f8f8f2>.</color><color=#a6e22e>getConsumer</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>", error: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>rse</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>exception</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Get the attention of the main replica thread.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>RepUtils</color><color=#f8f8f2>.</color><color=#a6e22e>shutdownChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#66d9ef>this</color> <color=#f92672>+</color> <color=#e6db74>"exiting with exception:"</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
          <color=#66d9ef>this</color>
              <color=#f92672>+</color> <color=#e6db74>"exited. "</color>
              <color=#f92672>+</color> <color=#e6db74>"Singleton acks sent:"</color>
              <color=#f92672>+</color> <color=#f8f8f2>numAcks</color>
              <color=#f92672>+</color> <color=#e6db74>" Grouped acks sent:"</color>
              <color=#f92672>+</color> <color=#f8f8f2>numGroupedAcks</color>
              <color=#f92672>+</color> <color=#e6db74>" Max pending acks:"</color>
              <color=#f92672>+</color> <color=#f8f8f2>maxPending</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>void</color> <color=#a6e22e>writeReauthentication</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>void</color> <color=#a6e22e>writeHeartbeat</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Writes out the acks that are currently queued in the output queue</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Returns true if it encountered an EOF or a request for a shutdown.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>boolean</color> <color=#a6e22e>groupWriteAcks</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* More potential acks, group them. */</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>eof</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>groupAcks</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>groupAcks</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>outputQueue</color><color=#f8f8f2>.</color><color=#a6e22e>drainTo</color><color=#f8f8f2>(</color><color=#f8f8f2>groupAcks</color><color=#f8f8f2>,</color> <color=#f8f8f2>maxGroupedAcks</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
    <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>txnIds</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>long</color><color=#f92672>[</color><color=#f8f8f2>groupAcks</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color><color=#f92672>]</color><color=#f8f8f2>;</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>gtxnId</color> <color=#f8f8f2>:</color> <color=#f8f8f2>groupAcks</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>gtxnId</color> <color=#f92672>==</color> <color=#f8f8f2>EOF</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>eof</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>gtxnId</color> <color=#f92672>==</color> <color=#f8f8f2>SHUTDOWN_ACK</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>ShutdownResponse</color><color=#f8f8f2>(),</color> <color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>eof</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>gtxnId</color> <color=#f92672>==</color> <color=#f8f8f2>HEARTBEAT_ACK</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Heartbeat could be out of sequence relative to acks, but</color>
<color=#75715e>         * that's ok.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>writeHeartbeat</color><color=#f8f8f2>(</color><color=#f8f8f2>gtxnId</color><color=#f8f8f2>);</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>txnIds</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>++]</color> <color=#f92672>=</color> <color=#f8f8f2>gtxnId</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txnIds</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>long</color><color=#f92672>[]</color> <color=#f8f8f2>la</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>long</color><color=#f92672>[</color><color=#f8f8f2>txnIds</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>arraycopy</color><color=#f8f8f2>(</color><color=#f8f8f2>txnIds</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>la</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>la</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>txnIds</color> <color=#f92672>=</color> <color=#f8f8f2>la</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>GroupAck</color><color=#f8f8f2>(</color><color=#f8f8f2>txnIds</color><color=#f8f8f2>),</color> <color=#f8f8f2>replicaFeederChannel</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>numGroupedAcks</color> <color=#f92672>+=</color> <color=#f8f8f2>txnIds</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>eof</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>int</color> <color=#a6e22e>initiateSoftShutdown</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Queue EOF to terminate the thread */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>outputQueue</color><color=#f8f8f2>.</color><color=#a6e22e>offer</color><color=#f8f8f2>(</color><color=#f8f8f2>EOF</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* No room in write queue, resort to an interrupt. */</color>
      <color=#66d9ef>return</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Wait up to 10 seconds for any queued writes to be flushed out. */</color>
    <color=#66d9ef>return</color> <color=#ae81ff>10000</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>