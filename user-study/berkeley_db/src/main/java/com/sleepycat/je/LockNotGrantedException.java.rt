<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Locker</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Thrown when a non-blocking operation fails to get a lock, and {@link</color>
<color=#75715e> * EnvironmentConfig#LOCK_OLD_LOCK_EXCEPTIONS} is set to true. Non-blocking transactions are</color>
<color=#75715e> * configured using {@link TransactionConfig#setNoWait}.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The {@link Transaction} handle is invalidated as a result of this exception.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>For compatibility with JE 3.3 and earlier, {@link LockNotGrantedException} is thrown instead</color>
<color=#75715e> * of {@link LockNotAvailableException} when {@link EnvironmentConfig#LOCK_OLD_LOCK_EXCEPTIONS} is</color>
<color=#75715e> * set to true. This configuration parameter is false by default. See {@link</color>
<color=#75715e> * EnvironmentConfig#LOCK_OLD_LOCK_EXCEPTIONS} for information on the changes that should be made to</color>
<color=#75715e> * all applications that upgrade from JE 3.3 or earlier.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Normally, applications should catch the base class {@link LockConflictException} rather than</color>
<color=#75715e> * catching one of its subclasses. All lock conflicts are typically handled in the same way, which</color>
<color=#75715e> * is normally to abort and retry the transaction. See {@link LockConflictException} for more</color>
<color=#75715e> * information.</color>
<color=#75715e> *</color>
<color=#75715e> * @deprecated replaced by {@link LockNotAvailableException}</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>LockNotGrantedException</color> <color=#66d9ef>extends</color> <color=#f8f8f2>DeadlockException</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>646414701L</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * LockNotGrantedException extends DeadlockException in order to support</color>
<color=#75715e>   * the approach that all application need only handle</color>
<color=#75715e>   * DeadlockException. The idea is that we don't want an application to fail</color>
<color=#75715e>   * because a new type of exception is thrown when an operation is changed</color>
<color=#75715e>   * to non-blocking.</color>
<color=#75715e>   *</color>
<color=#75715e>   * Applications that care about LockNotGrantedExceptions can add another</color>
<color=#75715e>   * catch block to handle it, but otherwise they can be handled the same way</color>
<color=#75715e>   * as deadlocks.  See SR [#10672]</color>
<color=#75715e>   */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @hidden</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>LockNotGrantedException</color><color=#f8f8f2>(</color><color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>message</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* Do not set abort-only for a no-wait lock failure. */</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>message</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @hidden</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#a6e22e>LockNotGrantedException</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>message</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockNotGrantedException</color> <color=#f8f8f2>cause</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>message</color><color=#f8f8f2>,</color> <color=#f8f8f2>cause</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @hidden</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationFailureException</color> <color=#a6e22e>wrapSelf</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>LockNotGrantedException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>,</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>