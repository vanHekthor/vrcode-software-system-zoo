<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.GetMode</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.SearchMode</color><color=#f8f8f2>;</color>

<color=#75715e>/** The operation type passed to "get" methods on databases and cursors. */</color>
<color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>Get</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Searches using an exact match by key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Returns, or moves the cursor to, the record having a key exactly matching the given key</color>
<color=#75715e>   * parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, the record with the matching key and lowest data value</color>
<color=#75715e>   * (or the lowest primary key, for secondary databases) is selected.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed if no record matches.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>SEARCH</color><color=#f8f8f2>(</color><color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Searches using an exact match by key and data (or pKey).</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Returns, or moves the cursor to, the record having a key exactly matching the given key</color>
<color=#75715e>   * parameter, and having a data value (or primary key) exactly matching the given data (or pKey)</color>
<color=#75715e>   * parameter. The data is matched for Database and Cursor operations, while the primary key is</color>
<color=#75715e>   * matched for SecondaryDatabase and SecondaryCursor operations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, the search is performed by key and data (or pKey) using</color>
<color=#75715e>   * the database Btree. If the database has does not have duplicate keys, the search is performed</color>
<color=#75715e>   * by key alone using the Btree, and then the data (or primary key) of the matching record is</color>
<color=#75715e>   * simply compared to the data (pKey) parameter. In other words, using this operation has no</color>
<color=#75715e>   * performance advantage over {@link #SEARCH} when the database does not have duplicates.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if no record matches.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>SEARCH_BOTH</color><color=#f8f8f2>(</color><color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>BOTH</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Searches using a GTE match by key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Returns, or moves the cursor to, the record with a key that is greater than or equal to</color>
<color=#75715e>   * (GTE) the given key parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, the record with the lowest data value (or the lowest</color>
<color=#75715e>   * primary key, for a secondary database) is selected among the duplicates with the matching key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if no record matches.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>SEARCH_GTE</color><color=#f8f8f2>(</color><color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET_RANGE</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Searches using an exact match by key and a GTE match by data (or pKey).</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Returns, or moves the cursor to, the record with a key exactly matching the given key</color>
<color=#75715e>   * parameter, and having a data value (or primary key) that is greater than or equal to (GTE) the</color>
<color=#75715e>   * given data (or pKey) parameter. The data is matched for Database and Cursor operations, while</color>
<color=#75715e>   * the primary key is matched for SecondaryDatabase and SecondaryCursor operations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database does not have duplicate keys, the data (or pKey) is matched exactly and this</color>
<color=#75715e>   * operation is equivalent to {@link #SEARCH_BOTH}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if no record matches.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>SEARCH_BOTH_GTE</color><color=#f8f8f2>(</color><color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>BOTH_RANGE</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Accesses the current record.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Accesses the record at the current cursor position. If the cursor is uninitialized (not</color>
<color=#75715e>   * positioned on a record), {@link IllegalStateException} is thrown.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if the record at the current position has</color>
<color=#75715e>   * been deleted. This can occur in two cases: 1. If the record was deleted using this cursor and</color>
<color=#75715e>   * then accessed. 2. If the record was not locked by this cursor or transaction, and was deleted</color>
<color=#75715e>   * by another thread or transaction after this cursor was positioned on it.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>CURRENT</color><color=#f8f8f2>(),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Finds the first record in the database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record in the database with the lowest valued key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, the record with the lowest data value (or the lowest</color>
<color=#75715e>   * primary key, for a secondary database) is selected among the duplicates for the lowest key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if the database is empty.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>FIRST</color><color=#f8f8f2>(),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Finds the last record in the database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record in the database with the highest valued key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, the record with the highest data value (or the highest</color>
<color=#75715e>   * primary key, for a secondary database) is selected among the duplicates for the highest key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if the database is empty.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>LAST</color><color=#f8f8f2>(),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves to the next record.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record following the record at the current cursor position. If the</color>
<color=#75715e>   * cursor is uninitialized (not positioned on a record), moves to the first record and this</color>
<color=#75715e>   * operation is equivalent to {@link #FIRST}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database does not have duplicate keys, the following record is defined as the record</color>
<color=#75715e>   * with the next highest key. If the database does have duplicate keys, the following record is</color>
<color=#75715e>   * defined as the record with the same key and the next highest data value (or the next highest</color>
<color=#75715e>   * primary key, for a secondary database) among the duplicates for that key; or if there are no</color>
<color=#75715e>   * more records with the same key, the following record is the record with the next highest key</color>
<color=#75715e>   * and the lowest data value (or the lowest primary key, for a secondary database) among the</color>
<color=#75715e>   * duplicates for that key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if the record at the cursor position is</color>
<color=#75715e>   * the last record in the database.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>NEXT</color><color=#f8f8f2>(</color><color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*allowNexPrevUninitialized*/</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves to the next record with the same key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record following the record at the current cursor position and</color>
<color=#75715e>   * having the same key. If the cursor is uninitialized (not positioned on a record), {@link</color>
<color=#75715e>   * IllegalStateException} is thrown.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, moves to the record with the same key and the next</color>
<color=#75715e>   * highest data value (or the next highest primary key, for a secondary database) among the</color>
<color=#75715e>   * duplicates for that key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if there are no following records with the</color>
<color=#75715e>   * same key. This is always the case when database does not have duplicate keys.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>NEXT_DUP</color><color=#f8f8f2>(</color><color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT_DUP</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*allowNexPrevUninitialized*/</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves to the next record with a different key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record following the record at the current cursor position and</color>
<color=#75715e>   * having the next highest key. If the cursor is uninitialized (not positioned on a record), moves</color>
<color=#75715e>   * to the first record and this operation is equivalent to {@link #FIRST}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, moves to the record with the next highest key and the</color>
<color=#75715e>   * lowest data value (or the lowest primary key, for a secondary database) among the duplicates</color>
<color=#75715e>   * for that key; this effectively skips over records having the same key and a higher data value</color>
<color=#75715e>   * (or a higher primary key, for a secondary database). If the database does not have duplicate</color>
<color=#75715e>   * keys, this operation is equivalent to {@link #NEXT}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if there are no following records with a</color>
<color=#75715e>   * different key.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>NEXT_NO_DUP</color><color=#f8f8f2>(</color><color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT_NODUP</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*allowNexPrevUninitialized*/</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves to the previous record.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record preceding the record at the current cursor position. If the</color>
<color=#75715e>   * cursor is uninitialized (not positioned on a record), moves to the last record and this</color>
<color=#75715e>   * operation is equivalent to {@link #LAST}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database does not have duplicate keys, the preceding record is defined as the record</color>
<color=#75715e>   * with the next lowest key. If the database does have duplicate keys, the preceding record is</color>
<color=#75715e>   * defined as the record with the same key and the next lowest data value (or the next lowest</color>
<color=#75715e>   * primary key, for a secondary database) among the duplicates for that key; or if there are no</color>
<color=#75715e>   * preceding records with the same key, the preceding record is the record with the next lowest</color>
<color=#75715e>   * key and the highest data value (or the highest primary key, for a secondary database) among the</color>
<color=#75715e>   * duplicates for that key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if the record at the cursor position is</color>
<color=#75715e>   * the first record in the database.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>PREV</color><color=#f8f8f2>(</color><color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>PREV</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*allowNexPrevUninitialized*/</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves to the previous record with the same key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record preceding the record at the current cursor position and</color>
<color=#75715e>   * having the same key. If the cursor is uninitialized (not positioned on a record), {@link</color>
<color=#75715e>   * IllegalStateException} is thrown.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, moves to the record with the same key and the next</color>
<color=#75715e>   * lowest data value (or the next lowest primary key, for a secondary database) among the</color>
<color=#75715e>   * duplicates for that key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if there are no preceding records with the</color>
<color=#75715e>   * same key. This is always the case when database does not have duplicate keys.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>PREV_DUP</color><color=#f8f8f2>(</color><color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>PREV_DUP</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*allowNexPrevUninitialized*/</color><color=#f8f8f2>),</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves to the previous record with a different key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Moves the cursor to the record preceding the record at the current cursor position and</color>
<color=#75715e>   * having the next lowest key. If the cursor is uninitialized (not positioned on a record), moves</color>
<color=#75715e>   * to the last record and this operation is equivalent to {@link #LAST}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the database has duplicate keys, moves to the record with the next lowest key and the</color>
<color=#75715e>   * highest data value (or the highest primary key, for a secondary database) among the duplicates</color>
<color=#75715e>   * for that key; this effectively skips over records having the same key and a lower data value</color>
<color=#75715e>   * (or a lower primary key, for a secondary database). If the database does not have duplicate</color>
<color=#75715e>   * keys, this operation is equivalent to {@link #PREV}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The operation does not succeed (null is returned) if there are no preceding records with a</color>
<color=#75715e>   * different key.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>PREV_NO_DUP</color><color=#f8f8f2>(</color><color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>PREV_NODUP</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*allowNexPrevUninitialized*/</color><color=#f8f8f2>);</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>SearchMode</color> <color=#f8f8f2>searchMode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>GetMode</color> <color=#f8f8f2>getMode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>allowNexPrevUninitialized</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>Get</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>Get</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>SearchMode</color> <color=#f8f8f2>searchMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>searchMode</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>Get</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>GetMode</color> <color=#f8f8f2>getMode</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>allowNexPrevUninitialized</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>getMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>allowNexPrevUninitialized</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>Get</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>SearchMode</color> <color=#f8f8f2>searchMode</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>GetMode</color> <color=#f8f8f2>getMode</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>allowNexPrevUninitialized</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>searchMode</color> <color=#f92672>=</color> <color=#f8f8f2>searchMode</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>getMode</color> <color=#f92672>=</color> <color=#f8f8f2>getMode</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>allowNexPrevUninitialized</color> <color=#f92672>=</color> <color=#f8f8f2>allowNexPrevUninitialized</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>SearchMode</color> <color=#a6e22e>getSearchMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>searchMode</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#f8f8f2>GetMode</color> <color=#a6e22e>getGetMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>getMode</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>boolean</color> <color=#a6e22e>getAllowNextPrevUninitialized</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>allowNexPrevUninitialized</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>