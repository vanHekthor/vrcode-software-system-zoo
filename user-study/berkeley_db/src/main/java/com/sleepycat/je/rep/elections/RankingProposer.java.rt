<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.elections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Acceptor.SuggestionGenerator.Ranking</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Promise</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Value</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.MessageExchange</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.HashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>

<color=#75715e>/** Extends the base proposer to choose a phase 2 value based on a suggestion's relative ranking. */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>RankingProposer</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Proposer</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If non-zero, use the specified log version as the one that supports writing replication data in</color>
<color=#75715e>   * the previous format, to control whether the skipPromiseDueToVersion method should always return</color>
<color=#75715e>   * false, for testing.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>testLogVersionReplicatePrevious</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>RankingProposer</color><color=#f8f8f2>(</color><color=#f8f8f2>Elections</color> <color=#f8f8f2>elections</color><color=#f8f8f2>,</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>elections</color><color=#f8f8f2>,</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Chooses a Value based on the relative ranking of all Promise responses. The one with the</color>
<color=#75715e>   * highest ranking is chosen. Zero priority responses are never chosen. In the case of a tie,</color>
<color=#75715e>   * priority is used to resolve it. If priority is insufficient the socket address is used to order</color>
<color=#75715e>   * the choice so that a consistent result is obtained across the set irrespective of the iteration</color>
<color=#75715e>   * order over the set.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>protected</color> <color=#f8f8f2>Value</color> <color=#a6e22e>choosePhase2Value</color><color=#f8f8f2>(</color><color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Ranking</color> <color=#f8f8f2>maxRanking</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Ranking</color><color=#f8f8f2>(</color><color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>,</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>maxPriority</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>maxTarget</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>zeroPrioNodes</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Ranking</color> <color=#f8f8f2>arbRanking</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nonArbCount</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Check log versions in this group. */</color>
    <color=#f8f8f2>VersionCalculator</color> <color=#f8f8f2>calculator</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>VersionCalculator</color><color=#f8f8f2>(</color><color=#f8f8f2>elections</color><color=#f8f8f2>,</color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>Value</color> <color=#f8f8f2>acceptorValue</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>MessageExchange</color> <color=#f8f8f2>me</color> <color=#f8f8f2>:</color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>().</color><color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>PROMISE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Promise</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Promise</color><color=#f8f8f2>)</color> <color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getPriority</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>zeroPrioNodes</color><color=#f92672>++</color><color=#f8f8f2>;</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>calculator</color><color=#f8f8f2>.</color><color=#a6e22e>skipPromiseDueToVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* NULL name/ID pair means value came from arbiter */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Value</color> <color=#f8f8f2>suggestion</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getSuggestion</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>isArb</color> <color=#f92672>=</color>
          <color=#f8f8f2>(</color><color=#f8f8f2>suggestion</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>MasterValue</color><color=#f8f8f2>)</color>
              <color=#f92672>&&</color> <color=#f8f8f2>((</color><color=#f8f8f2>MasterValue</color><color=#f8f8f2>)</color> <color=#f8f8f2>suggestion</color><color=#f8f8f2>).</color><color=#a6e22e>getNameId</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>NULL</color><color=#f8f8f2>);</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Ignore arbiter if there are replies from multiple non-arbiters.</color>
<color=#75715e>       * Arbiters should only matter for RF=2, and should be ignored if</color>
<color=#75715e>       * both non-arbiter nodes replied, since they have all of the</color>
<color=#75715e>       * existing data and should be allowed to proceed even if they have</color>
<color=#75715e>       * lost data the arbiter remembers. [#25311]</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isArb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>nonArbCount</color><color=#f92672>++</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>arbRanking</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getSuggestionRanking</color><color=#f8f8f2>();</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>compareTo</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getSuggestionRanking</color><color=#f8f8f2>().</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>maxRanking</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>compareTo</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Use priority as a tie breaker. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>compareTo</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getPriority</color><color=#f8f8f2>()</color> <color=#f92672><</color> <color=#f8f8f2>maxPriority</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Use socket address to choose in case of a tie, so we</color>
<color=#75715e>         * always have a consistent ordering.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getPriority</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>maxPriority</color><color=#f8f8f2>)</color>
            <color=#f92672>&&</color> <color=#f8f8f2>((</color><color=#f8f8f2>maxTarget</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>target</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>().</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>maxTarget</color><color=#f8f8f2>)</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>acceptorValue</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getSuggestion</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>maxRanking</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getSuggestionRanking</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>maxPriority</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getPriority</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>maxTarget</color> <color=#f92672>=</color> <color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>target</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>acceptorValue</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>zeroPrioNodes</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>INFO</color><color=#f8f8f2>,</color>
          <color=#e6db74>"No positive election priority node responded."</color>
              <color=#f92672>+</color> <color=#e6db74>" Zero election priority node count:"</color>
              <color=#f92672>+</color> <color=#f8f8f2>zeroPrioNodes</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>phase1NoNonZeroPrio</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>acceptorValue</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>arbRanking</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>nonArbCount</color> <color=#f92672><=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Check if we have an arbiter response.  */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>maxRanking</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>arbRanking</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>phase1Arbiter</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>acceptorValue</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>acceptorValue</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a proposal number. Note that the proposal numbers must increase over time, even across</color>
<color=#75715e>   * restarts of the proposer process.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return a 24 character string representing the proposal number</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>Proposal</color> <color=#a6e22e>nextProposal</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>proposalGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextProposal</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>TimebasedProposalGenerator</color> <color=#f8f8f2>proposalGenerator</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TimebasedProposalGenerator</color><color=#f8f8f2>();</color>

  <color=#75715e>/* Adds versioning information as a factor for elections. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>VersionCalculator</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Elections</color> <color=#f8f8f2>elections</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The majority log version in this group. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>majorityVersion</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The lowest log version in this group. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>lowestVersion</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>;</color>
    <color=#75715e>/* True if there is only one log version in this group. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>singleVersion</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>VersionCalculator</color><color=#f8f8f2>(</color><color=#f8f8f2>Elections</color> <color=#f8f8f2>elections</color><color=#f8f8f2>,</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>exchanges</color> <color=#f92672>=</color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>elections</color> <color=#f92672>=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>calculate</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>calculate</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Calculate the lowest log version and the total nodes that take</color>
<color=#75715e>       * part in the election, save all the log version information to</color>
<color=#75715e>       * calculate the majority log version.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f92672>></color> <color=#f8f8f2>logFormats</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f92672>></color><color=#f8f8f2>();</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>MessageExchange</color> <color=#f8f8f2>me</color> <color=#f8f8f2>:</color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>().</color><color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>PROMISE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>Promise</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Promise</color><color=#f8f8f2>)</color> <color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>()</color> <color=#f92672><</color> <color=#f8f8f2>lowestVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>lowestVersion</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>logFormats</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>logFormats</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>(),</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>logFormats</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>(),</color> <color=#f8f8f2>logFormats</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>())</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If there is only log version in the whole group, return and do</color>
<color=#75715e>       * nothing.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logFormats</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>singleVersion</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If the RepNode is null, just return, so that the nodes with the</color>
<color=#75715e>       * smallest log version can always be elected as master.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Calculate the majority log version. */</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>electableNodeCount</color> <color=#f92672>=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>().</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getElectableGroupSize</color><color=#f8f8f2>();</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f92672>></color> <color=#f8f8f2>entry</color> <color=#f8f8f2>:</color> <color=#f8f8f2>logFormats</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#f8f8f2>(</color><color=#f8f8f2>electableNodeCount</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>majorityVersion</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>();</color>
          <color=#66d9ef>break</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * For JE 5 and earlier versions, if there are multiple log versions in a replication group,</color>
<color=#75715e>     * only elect the nodes with the lowest log version or the nodes with the majority log version</color>
<color=#75715e>     * to be the master. This behavior is required because, in those JE versions, the master can</color>
<color=#75715e>     * only supply replication data in the current log format, so the master must be chosen from</color>
<color=#75715e>     * nodes running the earlier version during an upgrade until a majority of the nodes have been</color>
<color=#75715e>     * upgraded. This restriction no longer applies as of log version 9 in JE 6 -- see [#22336].</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>Returns true if election will ignore the promise because there are multiple log versions</color>
<color=#75715e>     * in the group, all log versions correspond to JE 5 and earlier versions, and the log version</color>
<color=#75715e>     * of a replica satisfies one of the following rules:</color>
<color=#75715e>     *</color>
<color=#75715e>     * <ol></color>
<color=#75715e>     *   <li>If there is no majority log version in the group, and log version of this replica is</color>
<color=#75715e>     *       not the lowest log version.</color>
<color=#75715e>     *   <li>If there exists a majority log version, and log version of this replica is not the</color>
<color=#75715e>     *       lowest log version, nor the majority log version.</color>
<color=#75715e>     * </ol></color>
<color=#75715e>     */</color>
    <color=#66d9ef>boolean</color> <color=#a6e22e>skipPromiseDueToVersion</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>singleVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>logVersionReplicatePrevious</color> <color=#f92672>=</color> <color=#f8f8f2>testLogVersionReplicatePrevious</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logVersionReplicatePrevious</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>logVersionReplicatePrevious</color> <color=#f92672>=</color> <color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_VERSION_REPLICATE_OLDER</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lowestVersion</color> <color=#f92672>>=</color> <color=#f8f8f2>logVersionReplicatePrevious</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>majorityVersion</color> <color=#f92672>==</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color> <color=#f92672>&&</color> <color=#f8f8f2>logVersion</color> <color=#f92672>!=</color> <color=#f8f8f2>lowestVersion</color><color=#f8f8f2>)</color>
                <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>majorityVersion</color> <color=#f92672>!=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color>
                <color=#f92672>&&</color> <color=#f8f8f2>logVersion</color> <color=#f92672>!=</color> <color=#f8f8f2>lowestVersion</color>
                <color=#f92672>&&</color> <color=#f8f8f2>logVersion</color> <color=#f92672>!=</color> <color=#f8f8f2>majorityVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>