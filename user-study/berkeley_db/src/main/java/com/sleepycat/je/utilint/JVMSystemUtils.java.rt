<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.utilint</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.management.ManagementFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.management.OperatingSystemMXBean</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.reflect.Method</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>JVMSystemUtils</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>ZING_JVM</color><color=#f8f8f2>;</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>vendor</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#e6db74>"java.vendor"</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>vmName</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#e6db74>"java.vm.name"</color><color=#f8f8f2>);</color>
    <color=#75715e>/*</color>
<color=#75715e>     * Check java.vm.name to distinguish Zing from Zulu, as recommended</color>
<color=#75715e>     * by Azul.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>ZING_JVM</color> <color=#f92672>=</color>
        <color=#f8f8f2>vendor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
            <color=#f92672>&&</color> <color=#f8f8f2>vmName</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
            <color=#f92672>&&</color> <color=#f8f8f2>vendor</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"Azul Systems, Inc."</color><color=#f8f8f2>)</color>
            <color=#f92672>&&</color> <color=#f8f8f2>vmName</color><color=#f8f8f2>.</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#e6db74>"Zing"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Zing will bump the heap up to 1 GB if -Xmx is smaller. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>MIN_HEAP_MB</color> <color=#f92672>=</color> <color=#f8f8f2>ZING_JVM</color> <color=#f92672>?</color> <color=#ae81ff>1024</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ZING_MANAGEMENT_FACTORY_CLASS</color> <color=#f92672>=</color>
      <color=#e6db74>"com.azul.zing.management.ManagementFactory"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ZING_ACCESS_ERROR</color> <color=#f92672>=</color>
      <color=#e6db74>"Could not access Zing management bean."</color> <color=#f92672>+</color> <color=#e6db74>" Make sure -XX:+UseZingMXBeans was specified."</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>OperatingSystemMXBean</color> <color=#f8f8f2>osBean</color> <color=#f92672>=</color> <color=#f8f8f2>ManagementFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getOperatingSystemMXBean</color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>MATCH_FILE_SEPARATOR</color> <color=#f92672>=</color> <color=#e6db74>"\\"</color> <color=#f92672>+</color> <color=#f8f8f2>File</color><color=#f8f8f2>.</color><color=#a6e22e>separatorChar</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Get the system load average for the last minute.</color>
<color=#75715e>   *</color>
<color=#75715e>   * This method is no longer needed and could be removed. It was originally</color>
<color=#75715e>   * used to perform reflection when we supported Java 5, but from Java 6</color>
<color=#75715e>   * onward the getSystemLoadAverage method can be called directly. However,</color>
<color=#75715e>   * it is a commonly used utility method, so we have chosen not to remove</color>
<color=#75715e>   * it, for now at least.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>double</color> <color=#a6e22e>getSystemLoad</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>osBean</color><color=#f8f8f2>.</color><color=#a6e22e>getSystemLoadAverage</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the max amount of memory in the heap available, using an approach that depends on the</color>
<color=#75715e>   * JVM vendor, OS, etc.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>May return Long.MAX_VALUE if there is no inherent limit.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#a6e22e>getRuntimeMaxMemory</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Runtime.maxMemory is unreliable on MacOS Java 1.4.2. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#e6db74>"Mac OS X"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#e6db74>"os.name"</color><color=#f8f8f2>)))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>jvmVersion</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#e6db74>"java.version"</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jvmVersion</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>jvmVersion</color><color=#f8f8f2>.</color><color=#a6e22e>startsWith</color><color=#f8f8f2>(</color><color=#e6db74>"1.4.2"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>;</color> <color=#75715e>/* Undetermined heap size. */</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Runtime.maxMemory is unreliable on Zing. Call</color>
<color=#75715e>     * MemoryMXBean.getApplicationObjectHeapUsableMemory instead.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ZING_JVM</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><?></color> <color=#f8f8f2>factoryClass</color> <color=#f92672>=</color> <color=#f8f8f2>Class</color><color=#f8f8f2>.</color><color=#a6e22e>forName</color><color=#f8f8f2>(</color><color=#f8f8f2>ZING_MANAGEMENT_FACTORY_CLASS</color><color=#f8f8f2>);</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>Method</color> <color=#f8f8f2>getBeanMethod</color> <color=#f92672>=</color> <color=#f8f8f2>factoryClass</color><color=#f8f8f2>.</color><color=#a6e22e>getMethod</color><color=#f8f8f2>(</color><color=#e6db74>"getMemoryMXBean"</color><color=#f8f8f2>);</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>memoryBean</color> <color=#f92672>=</color> <color=#f8f8f2>getBeanMethod</color><color=#f8f8f2>.</color><color=#a6e22e>invoke</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><?></color> <color=#f8f8f2>beanClass</color> <color=#f92672>=</color> <color=#f8f8f2>memoryBean</color><color=#f8f8f2>.</color><color=#a6e22e>getClass</color><color=#f8f8f2>();</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>Method</color> <color=#f8f8f2>getMaxMemoryMethod</color> <color=#f92672>=</color>
            <color=#f8f8f2>beanClass</color><color=#f8f8f2>.</color><color=#a6e22e>getMethod</color><color=#f8f8f2>(</color><color=#e6db74>"getApplicationObjectHeapUsableMemory"</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>Long</color><color=#f8f8f2>)</color> <color=#f8f8f2>getMaxMemoryMethod</color><color=#f8f8f2>.</color><color=#a6e22e>invoke</color><color=#f8f8f2>(</color><color=#f8f8f2>memoryBean</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>ZING_ACCESS_ERROR</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Standard approach. */</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>Runtime</color><color=#f8f8f2>.</color><color=#a6e22e>getRuntime</color><color=#f8f8f2>().</color><color=#a6e22e>maxMemory</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the size of the System Zing Memory pool. This is the max memory for all running Zing</color>
<color=#75715e>   * JVMs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#a6e22e>getSystemZingMemorySize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>ZING_JVM</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Only allowed under Zing"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><?></color> <color=#f8f8f2>factoryClass</color> <color=#f92672>=</color> <color=#f8f8f2>Class</color><color=#f8f8f2>.</color><color=#a6e22e>forName</color><color=#f8f8f2>(</color><color=#f8f8f2>ZING_MANAGEMENT_FACTORY_CLASS</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>Method</color> <color=#f8f8f2>getPoolsMethod</color> <color=#f92672>=</color> <color=#f8f8f2>factoryClass</color><color=#f8f8f2>.</color><color=#a6e22e>getMethod</color><color=#f8f8f2>(</color><color=#e6db74>"getMemoryPoolMXBeans"</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><?></color> <color=#f8f8f2>pools</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><?></color><color=#f8f8f2>)</color> <color=#f8f8f2>getPoolsMethod</color><color=#f8f8f2>.</color><color=#a6e22e>invoke</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><?></color> <color=#f8f8f2>poolClass</color> <color=#f92672>=</color> <color=#f8f8f2>pools</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>).</color><color=#a6e22e>getClass</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Method</color> <color=#f8f8f2>getNameMethod</color> <color=#f92672>=</color> <color=#f8f8f2>poolClass</color><color=#f8f8f2>.</color><color=#a6e22e>getMethod</color><color=#f8f8f2>(</color><color=#e6db74>"getName"</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Method</color> <color=#f8f8f2>getSizeMethod</color> <color=#f92672>=</color> <color=#f8f8f2>poolClass</color><color=#f8f8f2>.</color><color=#a6e22e>getMethod</color><color=#f8f8f2>(</color><color=#e6db74>"getCurrentSize"</color><color=#f8f8f2>);</color>

      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>pool</color> <color=#f8f8f2>:</color> <color=#f8f8f2>pools</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#e6db74>"System Zing Memory"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>getNameMethod</color><color=#f8f8f2>.</color><color=#a6e22e>invoke</color><color=#f8f8f2>(</color><color=#f8f8f2>pool</color><color=#f8f8f2>)))</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>Long</color><color=#f8f8f2>)</color> <color=#f8f8f2>getSizeMethod</color><color=#f8f8f2>.</color><color=#a6e22e>invoke</color><color=#f8f8f2>(</color><color=#f8f8f2>pool</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"System Zing Memory pool not found"</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>ZING_ACCESS_ERROR</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Appends Zing-specific Java args, should be called before starting a Java process. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>addZingJVMArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>command</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>insertZingJVMArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>command</color><color=#f8f8f2>,</color> <color=#f8f8f2>command</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Insert Zing-specific Java args after the 'java' command, if 'java' is the 0th element. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>insertZingJVMArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>command</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>JVMSystemUtils</color><color=#f8f8f2>.</color><color=#a6e22e>ZING_JVM</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>prog</color> <color=#f92672>=</color> <color=#f8f8f2>command</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>).</color><color=#a6e22e>split</color><color=#f8f8f2>(</color><color=#f8f8f2>MATCH_FILE_SEPARATOR</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>prog</color><color=#f92672>[</color><color=#f8f8f2>prog</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"java"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>insertZingJVMArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>command</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * -XX:+UseZingMXBeans must be specified when running under Zing.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>insertZingJVMArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>command</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>insertAt</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>JVMSystemUtils</color><color=#f8f8f2>.</color><color=#a6e22e>ZING_JVM</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>command</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>insertAt</color><color=#f8f8f2>,</color> <color=#e6db74>"-XX:+UseZingMXBeans"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>