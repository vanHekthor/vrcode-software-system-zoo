<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.latch</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.EventTrace</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A subclass of Latch that may be used for debugging performance issues. This latch can be used in</color>
<color=#75715e> * place of an exclusive latch or object mutex in order to see who is waiting for a latch</color>
<color=#75715e> * acquisition, how long they're waiting, and who the previous holder was. It crudely writes to</color>
<color=#75715e> * System.out, but this can easily be changed to a java.util.Log or EventTrace as desired. You can</color>
<color=#75715e> * specify a threshold for the wait and previous holder time (nanos).</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that this class has not recently been used because it is not implemented for shared</color>
<color=#75715e> * (Btree) latches. The next time it is used, it should be integrated with the LatchFactory.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>TimingLatch</color> <color=#66d9ef>extends</color> <color=#f8f8f2>LatchImpl</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>WAIT_THRESHOLD_NANOS</color> <color=#f92672>=</color> <color=#ae81ff>50000</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>PREV_HOLD_THRESHOLD_NANOS</color> <color=#f92672>=</color> <color=#ae81ff>50000</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>acquireTime</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>releaseTime</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Thread</color> <color=#f8f8f2>lastThread</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>debug</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>waitThreshold</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>holdThreshold</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>TimingLatch</color><color=#f8f8f2>(</color><color=#f8f8f2>LatchContext</color> <color=#f8f8f2>context</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>context</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>debug</color> <color=#f92672>=</color> <color=#f8f8f2>debug</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>waitThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>WAIT_THRESHOLD_NANOS</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>holdThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>PREV_HOLD_THRESHOLD_NANOS</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#a6e22e>TimingLatch</color><color=#f8f8f2>(</color><color=#f8f8f2>LatchContext</color> <color=#f8f8f2>context</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>debug</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>waitThreshold</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>holdThreshold</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>context</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>debug</color> <color=#f92672>=</color> <color=#f8f8f2>debug</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>waitThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>waitThreshold</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>holdThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>holdThreshold</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>AcquireRequestEvent</color> <color=#66d9ef>extends</color> <color=#f8f8f2>EventTrace</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Thread</color> <color=#f8f8f2>us</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>AcquireRequestEvent</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>startTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>getName</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>us</color> <color=#f92672>=</color> <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>currentThread</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>(</color><color=#e6db74>"AcquireRequestEvent for "</color> <color=#f92672>+</color> <color=#f8f8f2>name</color> <color=#f92672>+</color> <color=#e6db74>" "</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>us</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" at "</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#e6db74>"%,d"</color><color=#f8f8f2>,</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>));</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>AcquireCompleteEvent</color> <color=#66d9ef>extends</color> <color=#f8f8f2>EventTrace</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>waitTime</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Thread</color> <color=#f8f8f2>us</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>AcquireCompleteEvent</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>waitTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>startTime</color> <color=#f92672>=</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>waitTime</color> <color=#f92672>=</color> <color=#f8f8f2>waitTime</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>getName</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>us</color> <color=#f92672>=</color> <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>currentThread</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>(</color><color=#e6db74>"AcquireCompleteEvent for "</color> <color=#f92672>+</color> <color=#f8f8f2>name</color> <color=#f92672>+</color> <color=#e6db74>" "</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>us</color><color=#f8f8f2>)</color>
          <color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" at "</color><color=#f8f8f2>)</color>
          <color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#e6db74>"%,d"</color><color=#f8f8f2>,</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>))</color>
          <color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" Took: "</color><color=#f8f8f2>)</color>
          <color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#e6db74>"%,d"</color><color=#f8f8f2>,</color> <color=#f8f8f2>waitTime</color><color=#f8f8f2>));</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReleaseEvent</color> <color=#66d9ef>extends</color> <color=#f8f8f2>EventTrace</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Thread</color> <color=#f8f8f2>us</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ReleaseEvent</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>startTime</color> <color=#f92672>=</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>getName</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>us</color> <color=#f92672>=</color> <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>currentThread</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>(</color><color=#e6db74>"ReleaseEvent for "</color> <color=#f92672>+</color> <color=#f8f8f2>name</color> <color=#f92672>+</color> <color=#e6db74>" "</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>us</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" at "</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#e6db74>"%,d"</color><color=#f8f8f2>,</color> <color=#f8f8f2>startTime</color><color=#f8f8f2>));</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>release</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>releaseTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>EventTrace</color><color=#f8f8f2>.</color><color=#a6e22e>addEvent</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ReleaseEvent</color><color=#f8f8f2>(</color><color=#f8f8f2>releaseTime</color><color=#f8f8f2>));</color>
    <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>release</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>acquireExclusive</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>debug</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>acquireExclusive</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>EventTrace</color><color=#f8f8f2>.</color><color=#a6e22e>addEvent</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>AcquireRequestEvent</color><color=#f8f8f2>());</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>acquireExclusiveNoWait</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>EventTrace</color><color=#f8f8f2>.</color><color=#a6e22e>addEvent</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>AcquireCompleteEvent</color><color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>(),</color> <color=#ae81ff>0</color><color=#f8f8f2>));</color>
        <color=#66d9ef>return</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>long</color> <color=#f8f8f2>startWait</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>();</color>
      <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>acquireExclusive</color><color=#f8f8f2>();</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>endWait</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>();</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>ourWaitTime</color> <color=#f92672>=</color> <color=#f8f8f2>endWait</color> <color=#f92672>-</color> <color=#f8f8f2>startWait</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>EventTrace</color><color=#f8f8f2>.</color><color=#a6e22e>addEvent</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>AcquireCompleteEvent</color><color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>(),</color> <color=#f8f8f2>ourWaitTime</color><color=#f8f8f2>));</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>previousHoldTime</color> <color=#f92672>=</color> <color=#f8f8f2>releaseTime</color> <color=#f92672>-</color> <color=#f8f8f2>acquireTime</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previousHoldTime</color> <color=#f92672>></color> <color=#f8f8f2>holdThreshold</color> <color=#f92672>||</color> <color=#f8f8f2>ourWaitTime</color> <color=#f92672>></color> <color=#f8f8f2>waitThreshold</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color>
                <color=#e6db74>"%1tT %s waited %,d nanosec for %s\n"</color> <color=#f92672>+</color> <color=#e6db74>" Previous held by %s for %,d nanosec."</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>(),</color>
                <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>currentThread</color><color=#f8f8f2>(),</color>
                <color=#f8f8f2>ourWaitTime</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>getName</color><color=#f8f8f2>(),</color>
                <color=#f8f8f2>lastThread</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>previousHoldTime</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>EventTrace</color><color=#f8f8f2>.</color><color=#a6e22e>dumpEvents</color><color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>EventTrace</color><color=#f8f8f2>.</color><color=#a6e22e>disableEvents</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>acquireTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>lastThread</color> <color=#f92672>=</color> <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>currentThread</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>