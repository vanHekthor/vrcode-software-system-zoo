<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Txn</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Arrays</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.HashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * SimpleTxnMap provides a customized (but limited functionality) map that's well suited to the</color>
<color=#75715e> * tracking of open transactions. Transactions are entered into this map when they are first</color>
<color=#75715e> * created, referenced while they are alive via their transaction id and subsequently, removed upon</color>
<color=#75715e> * commit or abort. So the map access pattern for each transaction looks like the sequence:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>put [get]* remove</color>
<color=#75715e> *</color>
<color=#75715e> * <p>For JE applications, like KVS, transactions can pass through this map at the rate of 30K to</color>
<color=#75715e> * 60K transactions/sec, so the map needs to process these operations efficiently.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This map tries to be efficient for the put, get, remove operations by:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>1) Avoiding any memory allocation for the typical: put, get, remove sequence. In contrast, a</color>
<color=#75715e> * heap entry uses 24 bytes for each entry plus 16 bytes for the long object argument when using</color>
<color=#75715e> * compressed oops. It could be that the heap storage could be replaced by stack storage for the</color>
<color=#75715e> * long object argument since it's a downward lexical funarg, but I don't know if the jvm does such</color>
<color=#75715e> * analysis.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>2) Having a very short instruction code path for the typical case.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The data structure used here is very simple, and consists of two maps.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>1) An array based map indexed by the low bits of the transaction id.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>2) A regular java Map</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The array based map is the preferred location for map entries. If the slot associated with the</color>
<color=#75715e> * transaction id is occupied, we fall back to the the java Map.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>So the best case behavior is as if the map were implemented entirely as an array and the worst</color>
<color=#75715e> * case is that we will do an extra integer mask, array index and compare operation before we resort</color>
<color=#75715e> * to using the java Map. Given the behavior of transactions, we expect that the vast majority of</color>
<color=#75715e> * the operations will be implemented by the array map.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This class provides a minimal subset of the operations provided by Map. All methods are</color>
<color=#75715e> * synchronized. This works well for replica replay in conjunction with a jvm's thread biased</color>
<color=#75715e> * locking strategy, but we may need explicit locks for other usage.</color>
<color=#75715e> *</color>
<color=#75715e> * @param <T> the type of Txn object stored as values in the map</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SimpleTxnMap</color><color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Txn</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#75715e>/* The low order bit mask used to mask the transaction Id */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>cacheMask</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The preferred array map.</color>
<color=#75715e>   *</color>
<color=#75715e>   * Invariant: The txn with a given id can be in exactly one of the maps,</color>
<color=#75715e>   * never in both.</color>
<color=#75715e>   *</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Txn</color><color=#f92672>[]</color> <color=#f8f8f2>arrayMap</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The number of entries in just the array map. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>arrayMapSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The backup map. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>backupMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><></color><color=#f8f8f2>();</color>

  <color=#66d9ef>public</color> <color=#a6e22e>SimpleTxnMap</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>arrayMapSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>bitCount</color><color=#f8f8f2>(</color><color=#f8f8f2>arrayMapSize</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"argument:"</color> <color=#f92672>+</color> <color=#f8f8f2>arrayMapSize</color> <color=#f92672>+</color> <color=#e6db74>" must be a power of two"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>arrayMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Txn</color><color=#f92672>[</color><color=#f8f8f2>arrayMapSize</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>cacheMask</color> <color=#f92672>=</color> <color=#f8f8f2>arrayMapSize</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Adds a txn to the map. Note that the "put" operation in keeping with transaction behavior does</color>
<color=#75715e>   * not expect to be called while a txn with that ID is already in the map.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>T</color> <color=#f8f8f2>txn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>())</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>txnId</color> <color=#f92672>=</color> <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>();</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#f8f8f2>cacheMask</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>cachedTxn</color> <color=#f92672>=</color> <color=#f8f8f2>arrayMap</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cachedTxn</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Free slot use it. */</color>
      <color=#f8f8f2>arrayMap</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>txn</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>arrayMapSize</color><color=#f92672>++</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Array slot occupied by a transaction, fall back to the map. */</color>
    <color=#f8f8f2>backupMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>T</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unchecked"</color><color=#f8f8f2>)</color>
    <color=#f8f8f2>T</color> <color=#f8f8f2>cachedTxn</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>T</color><color=#f8f8f2>)</color> <color=#f8f8f2>arrayMap</color><color=#f92672>[</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>txnId</color> <color=#f92672>&</color> <color=#f8f8f2>cacheMask</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>cachedTxn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>cachedTxn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>backupMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>cachedTxn</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>backupMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes the txn with that key, if it exists.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the Txn that was removed, or empty if it did not exist.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>T</color> <color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>txnId</color> <color=#f92672>&</color> <color=#f8f8f2>cacheMask</color><color=#f8f8f2>;</color>
    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unchecked"</color><color=#f8f8f2>)</color>
    <color=#f8f8f2>T</color> <color=#f8f8f2>cachedTxn</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>T</color><color=#f8f8f2>)</color> <color=#f8f8f2>arrayMap</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>cachedTxn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>cachedTxn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>arrayMap</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>arrayMapSize</color><color=#f92672>--</color><color=#f8f8f2>;</color>
      <color=#66d9ef>assert</color> <color=#f92672>!</color><color=#f8f8f2>backupMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>cachedTxn</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Array slot empty, or occupied by a different transaction,</color>
<color=#75715e>     * check backup.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>backupMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>int</color> <color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>backupMap</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#f8f8f2>arrayMapSize</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The methods below are not used in critical paths and are not optimized. They they are O(n)</color>
<color=#75715e>   * complexity. We can revisit with change in usage.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>clear</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>backupMap</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>fill</color><color=#f8f8f2>(</color><color=#f8f8f2>arrayMap</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>arrayMapSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns a new map containing the current snapshot of transactions in this map. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>T</color><color=#f92672>></color> <color=#a6e22e>getMap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>map</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>T</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>backupMap</color><color=#f8f8f2>);</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>element</color> <color=#f8f8f2>:</color> <color=#f8f8f2>arrayMap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unchecked"</color><color=#f8f8f2>)</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>T</color> <color=#f8f8f2>txn</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>T</color><color=#f8f8f2>)</color> <color=#f8f8f2>element</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>txn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>T</color> <color=#f8f8f2>old</color> <color=#f92672>=</color> <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>(),</color> <color=#f8f8f2>txn</color><color=#f8f8f2>);</color>
        <color=#66d9ef>assert</color> <color=#f8f8f2>old</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>map</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For test use only */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>T</color><color=#f92672>></color> <color=#a6e22e>getBackupMap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>backupMap</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>