<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.evictor</color><color=#f8f8f2>;</color>

<color=#75715e>/** Allocator that always fails to allocate. */</color>
<color=#66d9ef>class</color> <color=#a6e22e>DummyAllocator</color> <color=#66d9ef>implements</color> <color=#f8f8f2>OffHeapAllocator</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>DummyAllocator</color> <color=#f8f8f2>INSTANCE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DummyAllocator</color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#a6e22e>DummyAllocator</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMaxBytes</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>maxBytes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getUsedBytes</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>allocate</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>free</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>memId</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>size</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>memId</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>totalSize</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>memId</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>copy</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>memId</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>memOff</color><color=#f8f8f2>,</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>buf</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>bufOff</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>len</color><color=#f8f8f2>)</color> <color=#f8f8f2>{}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>copy</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>buf</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>bufOff</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>memId</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>memOff</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>len</color><color=#f8f8f2>)</color> <color=#f8f8f2>{}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>copy</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>fromMemId</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>fromMemOff</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>toMemId</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>toMemOff</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>len</color><color=#f8f8f2>)</color> <color=#f8f8f2>{}</color>
<color=#f8f8f2>}</color>