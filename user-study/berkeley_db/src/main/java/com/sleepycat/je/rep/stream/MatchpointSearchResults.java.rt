<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.stream</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.TxnAbort</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.TxnCommit</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DbLsn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.Timestamp</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.Serializable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Holds information seen by the ReplicaSyncupReader when scanning a replica's log for a matchpoint.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>MatchpointSearchResults</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Serializable</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>1L</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>matchpointLSN</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Track whether we passed a checkpoint which deleted cleaned log files.</color>
<color=#75715e>   * If so, we cannot do a hard recovery.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>passedCheckpointEnd</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * If we skip a gap in the log file when searching for a matchpoint, we</color>
<color=#75715e>   * no longer can be sure if we have passed checkpoints.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>passedSkippedGap</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * We save a set number of passed transactions for debugging information.</color>
<color=#75715e>   * The list is limited in size in case we end up passing a large number</color>
<color=#75715e>   * of transactions on our hunt for a matchpoint. Note that we save both</color>
<color=#75715e>   * durable and non-durable transactions to aid with debugging.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>PassedTxnInfo</color><color=#f92672>></color> <color=#f8f8f2>passedTxns</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>passedTxnLimit</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * We need to keep the penultimate passed txn so we can readjust the</color>
<color=#75715e>   * passed transaction information when the matchpoint is found. For</color>
<color=#75715e>   * example, suppose the log contains:</color>
<color=#75715e>   *   txn A commit</color>
<color=#75715e>   *   txn B commit</color>
<color=#75715e>   *   txn C commit</color>
<color=#75715e>   * and txn A commit is the matchpoint. The way the loop works, we'll</color>
<color=#75715e>   * have earliestPassedTxn = txnA, and penultimate = txn B. If the</color>
<color=#75715e>   * matchpoint is txnA, the log will be truncated at txnB, and we</color>
<color=#75715e>   * should reset earliestPassedTxn = txnB.</color>
<color=#75715e>   *</color>
<color=#75715e>   * Note that numPassedDurableCommits is a subset of numPassedCommits</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>PassedTxnInfo</color> <color=#f8f8f2>earliestPassedTxn</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>PassedTxnInfo</color> <color=#f8f8f2>penultimatePassedTxn</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>numPassedCommits</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>numPassedDurableCommits</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The DTVLSN established when scanning the log backwards from high to low</color>
<color=#75715e>   * VLSNS</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>dtvlsn</color> <color=#f92672>=</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>MatchpointSearchResults</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * The matchpointLSN should be a non-null value, because we always have</color>
<color=#75715e>     * to provide a valid truncation point.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>matchpointLSN</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>makeLsn</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>passedTxnLimit</color> <color=#f92672>=</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>TXN_ROLLBACK_LIMIT</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>passedTxns</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>PassedTxnInfo</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>numPassedCommits</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>numPassedDurableCommits</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If we see a checkpoint end record, see if it is a barrier to rolling back, and advance the file</color>
<color=#75715e>   * reader position.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>notePassedCheckpointEnd</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>passedCheckpointEnd</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Keep track if we have jumped over a gap in the log files, and might have missed a checkpoint</color>
<color=#75715e>   * end.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>noteSkippedGap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>passedSkippedGap</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * At the end of the search for a matchpoint, set the matchpointLSN and adjust the debugging list</color>
<color=#75715e>   * of passed transactions. The matchpoint entry is just before the truncation point, and does not</color>
<color=#75715e>   * get truncated.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>setMatchpoint</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>match</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>matchpointLSN</color> <color=#f92672>=</color> <color=#f8f8f2>match</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>earliestPassedTxn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>earliestPassedTxn</color><color=#f8f8f2>.</color><color=#a6e22e>lsn</color> <color=#f92672>==</color> <color=#f8f8f2>matchpointLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>numPassedCommits</color><color=#f92672>--</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>passedTxns</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>lastSavedTxn</color> <color=#f92672>=</color> <color=#f8f8f2>passedTxns</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>passedTxns</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>lastSavedTxn</color><color=#f8f8f2>).</color><color=#a6e22e>lsn</color> <color=#f92672>==</color> <color=#f8f8f2>match</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>passedTxns</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>lastSavedTxn</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>earliestPassedTxn</color> <color=#f92672>=</color> <color=#f8f8f2>penultimatePassedTxn</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The reader saw a transaction commit; record relevant information. Note that we record all</color>
<color=#75715e>   * transactions (replicated and non-replicated) to avoid cutting off a checkpoint. Note that the</color>
<color=#75715e>   * stream can be a combination of log records from pre and post-dtvlsn masters. Note that we are</color>
<color=#75715e>   * scanning the log backwards, so we are encountering commits in decreasing VLSN sequence.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param commit the commit being passed. Note that this object is reused and so should not be</color>
<color=#75715e>   *     saved.</color>
<color=#75715e>   * @param commitVLSN the VLSN associated with the commit. It could be null if the commit was local</color>
<color=#75715e>   *     and not HA</color>
<color=#75715e>   * @param commitLSN the LSN at which the commit is located</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>notePassedCommits</color><color=#f8f8f2>(</color><color=#f8f8f2>TxnCommit</color> <color=#f8f8f2>commit</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>commitLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>durableCommit</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Timestamp</color> <color=#f8f8f2>commitTime</color> <color=#f92672>=</color> <color=#f8f8f2>commit</color><color=#f8f8f2>.</color><color=#a6e22e>getTime</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>txnId</color> <color=#f92672>=</color> <color=#f8f8f2>commit</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>commitDTVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>commit</color><color=#f8f8f2>.</color><color=#a6e22e>getDTVLSN</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>commitVLSN</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>commitVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>isNull</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* A replicated txn */</color>
      <color=#f8f8f2>processDTVLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>commitVLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>commitDTVLSN</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>commit</color><color=#f8f8f2>.</color><color=#a6e22e>hasLoggedEntries</color><color=#f8f8f2>()</color>
          <color=#f92672>&&</color> <color=#f8f8f2>((</color><color=#f8f8f2>dtvlsn</color><color=#f8f8f2>.</color><color=#a6e22e>getSequence</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>UNINITIALIZED_VLSN_SEQUENCE</color><color=#f8f8f2>)</color>
              <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>commitVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>dtvlsn</color><color=#f8f8f2>)</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>numPassedDurableCommits</color><color=#f92672>++</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>durableCommit</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>numPassedCommits</color><color=#f92672>++</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>earliestPassedTxn</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>penultimatePassedTxn</color> <color=#f92672>=</color> <color=#f8f8f2>earliestPassedTxn</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>earliestPassedTxn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PassedTxnInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>commitTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>,</color> <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>commitLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>durableCommit</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Save only a limited number of passed txns, for displaying to the log</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>numPassedCommits</color> <color=#f92672><=</color> <color=#f8f8f2>passedTxnLimit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>passedTxns</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>earliestPassedTxn</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>processDTVLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color> <color=#f8f8f2>txnEndVLSN</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>txnEndDTVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dtvlsn</color><color=#f8f8f2>.</color><color=#a6e22e>isNull</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#75715e>/*</color>
<color=#75715e>       * The first commit/abort record, set the dtvlsn to a</color>
<color=#75715e>       * non null value</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>dtvlsn</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>txnEndDTVLSN</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#75715e>/*</color>
<color=#75715e>       * Already set, verify sequencing. Make allowance for transitions</color>
<color=#75715e>       * from pre to post-DTVLSN stream segments. Note that we are going</color>
<color=#75715e>       * backwards in the log at this point.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>txnEndDTVLSN</color> <color=#f92672>></color> <color=#f8f8f2>dtvlsn</color><color=#f8f8f2>.</color><color=#a6e22e>getSequence</color><color=#f8f8f2>())</color>
          <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>dtvlsn</color><color=#f8f8f2>.</color><color=#a6e22e>getSequence</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>UNINITIALIZED_VLSN_SEQUENCE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"DTVLSNs should only decrease with decreasing VLSNs."</color>
                <color=#f92672>+</color> <color=#e6db74>" prev:"</color>
                <color=#f92672>+</color> <color=#f8f8f2>dtvlsn</color>
                <color=#f92672>+</color> <color=#e6db74>" next:"</color>
                <color=#f92672>+</color> <color=#f8f8f2>txnEndDTVLSN</color>
                <color=#f92672>+</color> <color=#e6db74>" commit VLSN:"</color>
                <color=#f92672>+</color> <color=#f8f8f2>txnEndVLSN</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Use the DTVLSN value from a replicated abort to set the dtvlsn.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param abort the abort log record</color>
<color=#75715e>   * @param abortVLSN the VLSN associated with the abort log record</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>notePassedAborts</color><color=#f8f8f2>(</color><color=#f8f8f2>TxnAbort</color> <color=#f8f8f2>abort</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>abortVLSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>abortVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>isNull</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* A non-replicated abort. */</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>abortDTVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>abort</color><color=#f8f8f2>.</color><color=#a6e22e>getDTVLSN</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>processDTVLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>abortVLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortDTVLSN</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>boolean</color> <color=#a6e22e>getPassedCheckpointEnd</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>passedCheckpointEnd</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>boolean</color> <color=#a6e22e>getSkippedGap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>passedSkippedGap</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getMatchpointLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>matchpointLSN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getNumPassedCommits</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>numPassedCommits</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getNumPassedDurableCommits</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>numPassedDurableCommits</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>PassedTxnInfo</color> <color=#a6e22e>getEarliestPassedTxn</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>earliestPassedTxn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getDTVLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>dtvlsn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Display the saved transaction information. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>dumpPassedTxns</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>PassedTxnInfo</color> <color=#f8f8f2>info</color> <color=#f8f8f2>:</color> <color=#f8f8f2>passedTxns</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>info</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\n"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#e6db74>"matchpointLSN="</color>
        <color=#f92672>+</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>matchpointLSN</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#e6db74>" passedCkpt="</color>
        <color=#f92672>+</color> <color=#f8f8f2>passedCheckpointEnd</color>
        <color=#f92672>+</color> <color=#e6db74>" passedTxnLimit="</color>
        <color=#f92672>+</color> <color=#f8f8f2>passedTxnLimit</color>
        <color=#f92672>+</color> <color=#e6db74>" passedTxns="</color>
        <color=#f92672>+</color> <color=#f8f8f2>passedTxns</color>
        <color=#f92672>+</color> <color=#e6db74>" earliestTxn="</color>
        <color=#f92672>+</color> <color=#f8f8f2>earliestPassedTxn</color>
        <color=#f92672>+</color> <color=#e6db74>" penultimateTxn="</color>
        <color=#f92672>+</color> <color=#f8f8f2>penultimatePassedTxn</color>
        <color=#f92672>+</color> <color=#e6db74>" numPassedCommits="</color>
        <color=#f92672>+</color> <color=#f8f8f2>numPassedCommits</color>
        <color=#f92672>+</color> <color=#e6db74>" numPassedDurableCommits="</color>
        <color=#f92672>+</color> <color=#f8f8f2>numPassedDurableCommits</color>
        <color=#f92672>+</color> <color=#e6db74>" passedSkippedGap="</color>
        <color=#f92672>+</color> <color=#f8f8f2>passedSkippedGap</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If 1 or more commits was passed, construct a message that can be used by RollbackException and</color>
<color=#75715e>   * RollbackProhibitedException.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getRollbackMsg</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>numPassedCommits</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>" uncommitted operations"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>numPassedDurableCommits</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>" "</color>
          <color=#f92672>+</color> <color=#f8f8f2>numPassedCommits</color>
          <color=#f92672>+</color> <color=#e6db74>" total commits to the earliest point indicated by transaction "</color>
          <color=#f92672>+</color> <color=#f8f8f2>earliestPassedTxn</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#e6db74>" "</color>
        <color=#f92672>+</color> <color=#f8f8f2>numPassedCommits</color>
        <color=#f92672>+</color> <color=#e6db74>" total commits("</color>
        <color=#f92672>+</color> <color=#f8f8f2>numPassedDurableCommits</color>
        <color=#f92672>+</color> <color=#e6db74>" of which were durable) "</color>
        <color=#f92672>+</color> <color=#e6db74>"to the earliest point indicated by transaction "</color>
        <color=#f92672>+</color> <color=#f8f8f2>earliestPassedTxn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Struct to hold information about passed txns. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>PassedTxnInfo</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Serializable</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>1L</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>Timestamp</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>id</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>durableCommit</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>PassedTxnInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>Timestamp</color> <color=#f8f8f2>time</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>id</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>durableCommit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>time</color> <color=#f92672>=</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>id</color> <color=#f92672>=</color> <color=#f8f8f2>id</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>vlsn</color> <color=#f92672>=</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lsn</color> <color=#f92672>=</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>durableCommit</color> <color=#f92672>=</color> <color=#f8f8f2>durableCommit</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"id="</color>
          <color=#f92672>+</color> <color=#f8f8f2>id</color>
          <color=#f92672>+</color> <color=#e6db74>" time="</color>
          <color=#f92672>+</color> <color=#f8f8f2>time</color>
          <color=#f92672>+</color> <color=#e6db74>" vlsn="</color>
          <color=#f92672>+</color> <color=#f8f8f2>vlsn</color>
          <color=#f92672>+</color> <color=#e6db74>" lsn="</color>
          <color=#f92672>+</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>lsn</color><color=#f8f8f2>)</color>
          <color=#f92672>+</color> <color=#e6db74>" durable="</color>
          <color=#f92672>+</color> <color=#f8f8f2>durableCommit</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>