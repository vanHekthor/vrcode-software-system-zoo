<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.networkRestore</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocol</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The protocol used to obtain backup files from a LF Feeder. The message exchange is always</color>
<color=#75715e> * initiated by the client.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The following describes the request/response messages exchanged between the two nodes:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>FeederInfoReq -> FeederInfoResp</color>
<color=#75715e> *</color>
<color=#75715e> * <p>FileListReq -> FileListResp</color>
<color=#75715e> *</color>
<color=#75715e> * <p>FileInfoReq -> FileInfoResp</color>
<color=#75715e> *</color>
<color=#75715e> * <p>FileReq -> FileStart <byte stream> FileEnd</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Done</color>
<color=#75715e> *</color>
<color=#75715e> * <p>So a complete sequence of successful request messages looks like:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>FeederInfoReq FileListReq [[FileInfoReq] [FileReq] ]+ Done</color>
<color=#75715e> *</color>
<color=#75715e> * <p>A response sequence would look like:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>FeederInfoResp FileListResp [[FileInfoResp] [FileStart <byte stream> FileEnd] ]+</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The client may abandon its interaction with the server if it decides the server is overloaded.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The client tries to minimize the number of files it actually requests based upon its current</color>
<color=#75715e> * state.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>When a FileReq is received by the server, other files previously requested (using FileReq) may</color>
<color=#75715e> * be deleted by the server. These previously requested files must not be requested again using</color>
<color=#75715e> * FileReq or FileReqInfo.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Protocol</color> <color=#66d9ef>extends</color> <color=#f8f8f2>BinaryProtocol</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>VERSION</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The messages defined by this class. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FEEDER_INFO_REQ</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>FeederInfoReq</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FEEDER_INFO_RESP</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>FeederInfoResp</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FILE_LIST_REQ</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileListReq</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FILE_LIST_RESP</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>4</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileListResp</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FILE_REQ</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>5</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileReq</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FILE_START</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>6</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileStart</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FILE_END</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>7</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileEnd</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FILE_INFO_REQ</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>8</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileInfoReq</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FILE_INFO_RESP</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>9</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileInfoResp</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>DONE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>10</color><color=#f8f8f2>,</color> <color=#f8f8f2>Done</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#a6e22e>Protocol</color><color=#f8f8f2>(</color><color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>configuredVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#f8f8f2>VERSION</color><color=#f8f8f2>,</color> <color=#f8f8f2>configuredVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>initializeMessageOps</color><color=#f8f8f2>(</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f92672>[]</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>FEEDER_INFO_REQ</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FEEDER_INFO_RESP</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FILE_LIST_REQ</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FILE_LIST_RESP</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FILE_INFO_REQ</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FILE_INFO_RESP</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FILE_REQ</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FILE_START</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>FILE_END</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>DONE</color>
        <color=#f8f8f2>});</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Requests the list of log files that need to be backed up. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FeederInfoReq</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FeederInfoReq</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FeederInfoReq</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FEEDER_INFO_REQ</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FeederInfoResp</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* The number of feeders that are currently busy at this server. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>;</color>

    <color=#75715e>/* The vlsn range covered by this server if it's a rep node. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>rangeFirst</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>rangeLast</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FeederInfoResp</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>rangeFirst</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>rangeLast</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>activeFeeders</color> <color=#f92672>=</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>rangeFirst</color> <color=#f92672>=</color> <color=#f8f8f2>rangeFirst</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>rangeLast</color> <color=#f92672>=</color> <color=#f8f8f2>rangeLast</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FeederInfoResp</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>activeFeeders</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>rangeFirst</color> <color=#f92672>=</color> <color=#f8f8f2>getVLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>rangeLast</color> <color=#f92672>=</color> <color=#f8f8f2>getVLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FEEDER_INFO_RESP</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>activeFeeders</color><color=#f8f8f2>,</color> <color=#f8f8f2>rangeFirst</color><color=#f8f8f2>,</color> <color=#f8f8f2>rangeLast</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getActiveFeeders</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getRangeFirst</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>rangeFirst</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getRangeLast</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>rangeLast</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Requests the list of log files that need to be backed up. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileListReq</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileListReq</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FileListReq</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FILE_LIST_REQ</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Response to the above containing the list of files. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileListResp</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileNames</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileListResp</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileNames</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fileNames</color> <color=#f92672>=</color> <color=#f8f8f2>fileNames</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileListResp</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>fileNames</color> <color=#f92672>=</color> <color=#f8f8f2>getStringArray</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FILE_LIST_RESP</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>((</color><color=#f8f8f2>Object</color><color=#f8f8f2>)</color> <color=#f8f8f2>fileNames</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#a6e22e>getFileNames</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>fileNames</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Requests that a specific file be sent to the client. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileReq</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileReq</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fileName</color> <color=#f92672>=</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileReq</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>fileName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FILE_REQ</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>fileName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getFileName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Requests information about a specific log file. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileInfoReq</color> <color=#66d9ef>extends</color> <color=#f8f8f2>FileReq</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>needSHA1</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileInfoReq</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>needSHA1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>fileName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>needSHA1</color> <color=#f92672>=</color> <color=#f8f8f2>needSHA1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileInfoReq</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>needSHA1</color> <color=#f92672>=</color> <color=#f8f8f2>getBoolean</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FILE_INFO_REQ</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>needSHA1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getNeedSHA1</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>needSHA1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The Response for information about a specific log file.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileInfoResp</color> <color=#66d9ef>extends</color> <color=#f8f8f2>FileStart</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>digestSHA1</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileInfoResp</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>,</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>digestSHA1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>digestSHA1</color> <color=#f92672>=</color> <color=#f8f8f2>digestSHA1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileInfoResp</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>digestSHA1</color> <color=#f92672>=</color> <color=#f8f8f2>getByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FILE_INFO_RESP</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>digestSHA1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the SHA1 value if it was requested, or a zero length byte array if it was not</color>
<color=#75715e>     * requested.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getDigestSHA1</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>digestSHA1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The message starting the response triple:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>FileStart <byte stream> FileEnd</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileStart</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* Must match the request name. */</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>;</color>

    <color=#75715e>/* The actual file length in bytes on disk */</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileStart</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fileName</color> <color=#f92672>=</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fileLength</color> <color=#f92672>=</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lastModifiedTime</color> <color=#f92672>=</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileStart</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>fileName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>fileLength</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>lastModifiedTime</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FILE_START</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getFileLength</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getLastModifiedTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The message ending the response triple:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>FileStart <byte stream> FileEnd</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileEnd</color> <color=#66d9ef>extends</color> <color=#f8f8f2>FileInfoResp</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileEnd</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>,</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>digestSHA1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>fileName</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastModifiedTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>digestSHA1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FileEnd</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FILE_END</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>wireFormat</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Message from client indicating it's done with all the files it needs and that the connection</color>
<color=#75715e>   * can be terminated.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Done</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>Done</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>public</color> <color=#a6e22e>Done</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>DONE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>