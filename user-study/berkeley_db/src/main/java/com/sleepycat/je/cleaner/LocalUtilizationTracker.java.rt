<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.cleaner</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryType</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.IdentityHashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Accumulates changes to the utilization profile locally in a single thread.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Per-database information is keyed by DatabaseImpl so that no tree lookup of a database is</color>
<color=#75715e> * required (as when a DatabaseId is used).</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The countNewLogEntry, countObsoleteNode and countObsoleteNodeInexact methods may be called</color>
<color=#75715e> * without taking the log write latch. Totals and offset are accumulated locally in this object</color>
<color=#75715e> * only, not in DatabaseImpl objects.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>When finished with this object, its information should be added to the Environment's</color>
<color=#75715e> * UtilizationTracker and DatabaseImpl objects by calling transferToUtilizationTracker under the log</color>
<color=#75715e> * write latch. This is done in the Checkpointer, Evictor and INCompressor by calling</color>
<color=#75715e> * UtilizationProfile.flushLocalTracker which calls LogManager.transferToUtilizationTracker which</color>
<color=#75715e> * calls BaseLocalUtilizationTracker.transferToUtilizationTracker.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>LocalUtilizationTracker</color> <color=#66d9ef>extends</color> <color=#f8f8f2>BaseLocalUtilizationTracker</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>public</color> <color=#a6e22e>LocalUtilizationTracker</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>IdentityHashMap</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f8f8f2>,</color> <color=#f8f8f2>DbFileSummaryMap</color><color=#f92672>></color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Counts the addition of all new log entries including LNs. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>countNewLogEntry</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>LogEntryType</color> <color=#f8f8f2>type</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>countNew</color><color=#f8f8f2>(</color><color=#f8f8f2>lsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Counts a node that has become obsolete and tracks the LSN offset, if non-zero, to avoid a</color>
<color=#75715e>   * lookup during cleaning.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>A zero LSN offset is used as a special value when obsolete offset tracking is not desired.</color>
<color=#75715e>   * [#15365] The file header entry (at offset zero) is never counted as obsolete, it is assumed to</color>
<color=#75715e>   * be obsolete by the cleaner.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method should only be called for LNs and INs (i.e, only for nodes). If type is null we</color>
<color=#75715e>   * assume it is an LN.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>countObsoleteNode</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>LogEntryType</color> <color=#f8f8f2>type</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>countObsolete</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>lsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>// countPerFile</color>
        <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>// countPerDb</color>
        <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>// trackOffset</color>
        <color=#66d9ef>true</color><color=#f8f8f2>);</color> <color=#75715e>// checkDupOffsets</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Counts as countObsoleteNode does, but since the LSN may be inexact, does not track the obsolete</color>
<color=#75715e>   * LSN offset.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method should only be called for LNs and INs (i.e, only for nodes). If type is null we</color>
<color=#75715e>   * assume it is an LN.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>countObsoleteNodeInexact</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>lsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>LogEntryType</color> <color=#f8f8f2>type</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>countObsolete</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>lsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>// countPerFile</color>
        <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>// countPerDb</color>
        <color=#66d9ef>false</color><color=#f8f8f2>,</color> <color=#75715e>// trackOffset</color>
        <color=#66d9ef>false</color><color=#f8f8f2>);</color> <color=#75715e>// checkDupOffsets</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Object</color><color=#f92672>></color> <color=#a6e22e>getTrackedDbs</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>getDatabaseMap</color><color=#f8f8f2>().</color><color=#a6e22e>keySet</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the DatabaseImpl from the database key, which in this case is the DatabaseImpl. */</color>
  <color=#a6e22e>@Override</color>
  <color=#f8f8f2>DatabaseImpl</color> <color=#a6e22e>databaseKeyToDatabaseImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>databaseKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>databaseKey</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Do nothing, since DbTree.getDb was not called by databaseKeyToDatabaseImpl. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>void</color> <color=#a6e22e>releaseDatabaseImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{}</color>
<color=#f8f8f2>}</color>