<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Locker</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.LockerFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DatabaseUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A secondary database handle.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Secondary databases are opened with {@link Environment#openSecondaryDatabase</color>
<color=#75715e> * Environment.openSecondaryDatabase} and are always associated with a single primary database. The</color>
<color=#75715e> * distinguishing characteristics of a secondary database are:</color>
<color=#75715e> *</color>
<color=#75715e> * <ul></color>
<color=#75715e> *   <li>Records are automatically added to a secondary database when records are added, modified</color>
<color=#75715e> *       and deleted in the primary database. Direct calls to <code>put()</code> methods on a</color>
<color=#75715e> *       secondary database are prohibited.</color>
<color=#75715e> *   <li>The {@link #delete delete} method of a secondary database will delete the primary record</color>
<color=#75715e> *       and as well as all its associated secondary records.</color>
<color=#75715e> *   <li>Calls to all <code>get()</code> methods will return the data from the associated primary</color>
<color=#75715e> *       database.</color>
<color=#75715e> *   <li>Additional <code>get()</code> method signatures are provided to return the primary key in</color>
<color=#75715e> *       an additional <code>pKey</code> parameter.</color>
<color=#75715e> *   <li>Calls to {@link #openCursor openCursor} will return a {@link SecondaryCursor}, which itself</color>
<color=#75715e> *       has <code>get()</code> methods that return the data of the primary database and additional</color>
<color=#75715e> *       <code>get()</code> method signatures for returning the primary key.</color>
<color=#75715e> * </ul></color>
<color=#75715e> *</color>
<color=#75715e> * <p>Before opening or creating a secondary database you must implement the {@link</color>
<color=#75715e> * SecondaryKeyCreator} or {@link SecondaryMultiKeyCreator} interface.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>For example, to create a secondary database that supports duplicates:</color>
<color=#75715e> *</color>
<color=#75715e> * <pre></color>
<color=#75715e> *     Database primaryDb; // The primary database must already be open.</color>
<color=#75715e> *     SecondaryKeyCreator keyCreator; // Your key creator implementation.</color>
<color=#75715e> *     SecondaryConfig secConfig = new SecondaryConfig();</color>
<color=#75715e> *     secConfig.setAllowCreate(true);</color>
<color=#75715e> *     secConfig.setSortedDuplicates(true);</color>
<color=#75715e> *     secConfig.setKeyCreator(keyCreator);</color>
<color=#75715e> *     SecondaryDatabase newDb = env.openSecondaryDatabase(transaction,</color>
<color=#75715e> *                                                         "myDatabaseName",</color>
<color=#75715e> *                                                         primaryDb,</color>
<color=#75715e> *                                                         secConfig)</color>
<color=#75715e> * </pre></color>
<color=#75715e> *</color>
<color=#75715e> * <p>If a primary database is to be associated with one or more secondary databases, it may not be</color>
<color=#75715e> * configured for duplicates.</color>
<color=#75715e> *</color>
<color=#75715e> * <p><b>WARNING:</b> The associations between primary and secondary databases are not stored</color>
<color=#75715e> * persistently. Whenever a primary database is opened for write access by the application, the</color>
<color=#75715e> * appropriate associated secondary databases should also be opened by the application. This is</color>
<color=#75715e> * necessary to ensure data integrity when changes are made to the primary database. If the</color>
<color=#75715e> * secondary database is not opened, it will not be updated when the primary is updated, and the</color>
<color=#75715e> * references between the databases will become invalid. (Note that this warning does not apply when</color>
<color=#75715e> * using the {@link com.sleepycat.persist DPL}, which does store secondary relationships</color>
<color=#75715e> * persistently.)</color>
<color=#75715e> *</color>
<color=#75715e> * <h3><a name="transactions">Special considerations for using Secondary Databases with and without</color>
<color=#75715e> * Transactions</a></h3></color>
<color=#75715e> *</color>
<color=#75715e> * <p>Normally, during a primary database write operation (insert, update or delete), all associated</color>
<color=#75715e> * secondary databases are also updated. However, when an exception occurs during the write</color>
<color=#75715e> * operation, the updates may be incomplete. If the databases are transactional, this is handled by</color>
<color=#75715e> * aborting the transaction to undo the incomplete operation. If an auto-commit transaction is used</color>
<color=#75715e> * (null is passed for the transaction), the transaction will be aborted automatically. If an</color>
<color=#75715e> * explicit transaction is used, it must be aborted by the application caller after the exception is</color>
<color=#75715e> * caught.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>However, if the databases are non-transactional, integrity problems can result when an</color>
<color=#75715e> * exception occurs during the write operation. Because the write operation is not made atomic by a</color>
<color=#75715e> * transaction, references between the databases will become invalid if the operation is incomplete.</color>
<color=#75715e> * This results in a {@link SecondaryIntegrityException} when attempting to access the databases</color>
<color=#75715e> * later.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>A secondary integrity problem is persistent; it cannot be resolved by reopening the databases</color>
<color=#75715e> * or the environment. The only way to resolve the problem is to restore the environment from a</color>
<color=#75715e> * valid backup, or, if the integrity of the primary database is assumed, to remove and recreate all</color>
<color=#75715e> * secondary databases.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Therefore, secondary databases and indexes should always be used in conjunction with</color>
<color=#75715e> * transactional databases and stores. Without transactions, it is the responsibility of the</color>
<color=#75715e> * application to handle the results of the incomplete write operation or to take steps to prevent</color>
<color=#75715e> * this situation from happening in the first place.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The following exceptions may be thrown during a write operation, and may cause an integrity</color>
<color=#75715e> * problem in the absence of transactions.</color>
<color=#75715e> *</color>
<color=#75715e> * <ul></color>
<color=#75715e> *   <li>{@link SecondaryConstraintException}, see its subclasses for more information.</color>
<color=#75715e> *   <li>{@link LockConflictException}, when more than one thread is accessing the databases.</color>
<color=#75715e> *   <li>{@link EnvironmentFailureException}, if an unexpected or system failure occurs.</color>
<color=#75715e> *   <li>There is always the possibility of an {@link Error} or an unintended {@link</color>
<color=#75715e> *       RuntimeException}.</color>
<color=#75715e> * </ul></color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SecondaryDatabase</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* For type-safe check against EMPTY_SET */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseEntry</color><color=#f92672>></color> <color=#f8f8f2>EMPTY_SET</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>emptySet</color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>;</color> <color=#75715e>// May be null.</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>isFullyPopulated</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a secondary database but does not open or fully initialize it.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException via Environment.openSecondaryDatabase.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>SecondaryDatabase</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>SecondaryConfig</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>primaryDatabase</color> <color=#f92672>=</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDatabase</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryAssociation</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Exactly one must be non-null: "</color> <color=#f92672>+</color> <color=#e6db74>"PrimaryDatabase or SecondaryAssociation"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowPopulate</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"AllowPopulate must be false when a SecondaryAssociation"</color> <color=#f92672>+</color> <color=#e6db74>" is configured"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryAssociation</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Exactly one must be non-null: "</color> <color=#f92672>+</color> <color=#e6db74>"PrimaryDatabase or SecondaryAssociation"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseImpl</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>configuration</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Duplicates not allowed for a primary database: "</color> <color=#f92672>+</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>getDebugName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironment</color><color=#f8f8f2>().</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Primary and secondary databases must be in the same"</color> <color=#f92672>+</color> <color=#e6db74>" environment"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>configuration</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOnly</color><color=#f8f8f2>()</color>
          <color=#f92672>&&</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyCreator</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color>
          <color=#f92672>&&</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getMultiKeyCreator</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"SecondaryConfig.getKeyCreator()/getMultiKeyCreator()"</color>
                <color=#f92672>+</color> <color=#e6db74>" may be null only if the primary database is read-only"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyCreator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getMultiKeyCreator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"secConfig.getKeyCreator() and getMultiKeyCreator() may not"</color> <color=#f92672>+</color> <color=#e6db74>" both be non-null"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyNullifier</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
        <color=#f92672>&&</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignMultiKeyNullifier</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"secConfig.getForeignKeyNullifier() and"</color>
              <color=#f92672>+</color> <color=#e6db74>" getForeignMultiKeyNullifier() may not both be non-null"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDeleteAction</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>NULLIFY</color>
        <color=#f92672>&&</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyNullifier</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color>
        <color=#f92672>&&</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignMultiKeyNullifier</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"ForeignKeyNullifier or ForeignMultiKeyNullifier must be"</color>
              <color=#f92672>+</color> <color=#e6db74>" non-null when ForeignKeyDeleteAction is NULLIFY"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyNullifier</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getMultiKeyCreator</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"ForeignKeyNullifier may not be used with"</color>
              <color=#f92672>+</color> <color=#e6db74>" SecondaryMultiKeyCreator -- use"</color>
              <color=#f92672>+</color> <color=#e6db74>" ForeignMultiKeyNullifier instead"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDatabase</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>foreignDb</color> <color=#f92672>=</color> <color=#f8f8f2>secConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDatabase</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>foreignDb</color><color=#f8f8f2>.</color><color=#a6e22e>getDbImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Duplicates must not be allowed for a foreign key "</color>
                <color=#f92672>+</color> <color=#e6db74>" database: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>foreignDb</color><color=#f8f8f2>.</color><color=#a6e22e>getDebugName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Create a database, called by Environment */</color>
  <color=#a6e22e>@Override</color>
  <color=#f8f8f2>DatabaseImpl</color> <color=#a6e22e>initNew</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>databaseName</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>initNew</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>databaseName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>init</color><color=#f8f8f2>(</color><color=#f8f8f2>locker</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Open a database, called by Environment</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException via Environment.openSecondaryDatabase.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>void</color> <color=#a6e22e>initExisting</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>databaseName</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Disallow one secondary associated with two different primaries. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDatabase</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>otherPriDb</color> <color=#f92672>=</color> <color=#f8f8f2>database</color><color=#f8f8f2>.</color><color=#a6e22e>findPrimaryDatabase</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>otherPriDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>otherPriDb</color><color=#f8f8f2>.</color><color=#a6e22e>getDbImpl</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>getDbImpl</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Secondary already associated with different primary: "</color> <color=#f92672>+</color> <color=#f8f8f2>otherPriDb</color><color=#f8f8f2>.</color><color=#a6e22e>getDebugName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>initExisting</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>database</color><color=#f8f8f2>,</color> <color=#f8f8f2>databaseName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>init</color><color=#f8f8f2>(</color><color=#f8f8f2>locker</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Adds secondary to primary's list, and populates the secondary if needed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param locker should be the locker used to open the database. If a transactional locker, the</color>
<color=#75715e>   *     population operations will occur in the same transaction; this may result in a large number</color>
<color=#75715e>   *     of retained locks. If a non-transactional locker, the Cursor will create a ThreadLocker</color>
<color=#75715e>   *     (even if a BasicLocker used for handle locking is passed), and locks will not be retained.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>init</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>trace</color><color=#f8f8f2>(</color><color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINEST</color><color=#f8f8f2>,</color> <color=#e6db74>"SecondaryDatabase open"</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>getDbImpl</color><color=#f8f8f2>().</color><color=#a6e22e>setKnownSecondary</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>secondaryConfig</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>configuration</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>Database</color> <color=#f8f8f2>foreignDb</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDatabase</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>foreignDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>foreignDb</color><color=#f8f8f2>.</color><color=#a6e22e>foreignKeySecondaries</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Populate secondary if requested and secondary is empty. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getAllowPopulate</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>secCursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>priCursor</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>secCursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

      <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>secCursor</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Is empty, so populate */</color>
      <color=#f8f8f2>priCursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>priCursor</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>updateSecondary</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>secCursor</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>key</color> <color=#75715e>/*priKey*/</color><color=#f8f8f2>,</color>
            <color=#66d9ef>null</color> <color=#75715e>/*oldData*/</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>data</color> <color=#75715e>/*newData*/</color><color=#f8f8f2>,</color>
            <color=#66d9ef>null</color> <color=#75715e>/*cacheMode*/</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationTime</color><color=#f8f8f2>(),</color>
            <color=#66d9ef>false</color> <color=#75715e>/*expirationUpdated*/</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationTime</color><color=#f8f8f2>());</color>

        <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>priCursor</color><color=#f8f8f2>.</color><color=#a6e22e>retrieveNext</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secCursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>secCursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priCursor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>priCursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#f8f8f2>SecondaryAssociation</color> <color=#a6e22e>makeSecondaryAssociation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* Only one is non-null: primaryDatabase, SecondaryAssociation. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDatabase</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>simpleAssocSecondaries</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>secAssoc</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>configuration</color><color=#f8f8f2>.</color><color=#a6e22e>getSecondaryAssociation</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Closes a secondary database and dis-associates it from its primary database. A secondary</color>
<color=#75715e>   * database should be closed before closing its associated primary database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@inheritDoc}</color>
<color=#75715e>   * <!-- inherit other javadoc from overridden method --></color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* removeReferringAssociations will be called during close. */</color>
    <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>void</color> <color=#a6e22e>removeReferringAssociations</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>removeReferringAssociations</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDatabase</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>simpleAssocSecondaries</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secondaryConfig</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>foreignDb</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDatabase</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>foreignDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>foreignDb</color><color=#f8f8f2>.</color><color=#a6e22e>foreignKeySecondaries</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only.</color>
<color=#75715e>   *     <p>Enables incremental population of this secondary database, so that index population can</color>
<color=#75715e>   *     occur incrementally, and concurrently with primary database writes.</color>
<color=#75715e>   *     <p>After calling this method (and before calling {@link #endIncrementalPopulation}), it is</color>
<color=#75715e>   *     expected that the application will populate the secondary explicitly by calling {@link</color>
<color=#75715e>   *     Database#populateSecondaries} to process all records for the primary database(s) associated</color>
<color=#75715e>   *     with this secondary.</color>
<color=#75715e>   *     <p>The concurrent population mode supports concurrent indexing by ordinary writes to the</color>
<color=#75715e>   *     primary database(s) and calls to {@link Database#populateSecondaries}. To provide this</color>
<color=#75715e>   *     capability, some primary-secondary integrity checking is disabled. The integrity checking</color>
<color=#75715e>   *     (that is disabled) is meant only to detect application bugs, and is not necessary for</color>
<color=#75715e>   *     normal operations. Specifically, the checks that are disabled are:</color>
<color=#75715e>   *     <ul></color>
<color=#75715e>   *       <li>When a new secondary key is inserted, because a primary record is inserted or</color>
<color=#75715e>   *           updated, we normally check that a key mapped to the primary record does not already</color>
<color=#75715e>   *           exist in the secondary database.</color>
<color=#75715e>   *       <li>When an existing secondary key is deleted, because a primary record is updated or</color>
<color=#75715e>   *           deleted, we normally check that a key mapped to the primary record already does exist</color>
<color=#75715e>   *           in the secondary database.</color>
<color=#75715e>   *     </ul></color>
<color=#75715e>   *     Without these checks, one can think of the secondary indexing operations as being</color>
<color=#75715e>   *     idempotent. Via the idempotent indexing operations, explicit population (via {@link</color>
<color=#75715e>   *     Database#populateSecondaries}) and normal secondary population (via primary writes)</color>
<color=#75715e>   *     collaborate to add and delete index records as needed.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>startIncrementalPopulation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>isFullyPopulated</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only.</color>
<color=#75715e>   *     <p>Disables incremental population of this secondary database, after this index has been</color>
<color=#75715e>   *     fully populated.</color>
<color=#75715e>   *     <p>After calling this method, this database may not be populated by calling {@link</color>
<color=#75715e>   *     Database#populateSecondaries}, and all primary-secondary integrity checking for this</color>
<color=#75715e>   *     secondary is enabled.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>endIncrementalPopulation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>isFullyPopulated</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only.</color>
<color=#75715e>   * @return true if {@link #startIncrementalPopulation} was called, and {@link</color>
<color=#75715e>   *     #endIncrementalPopulation} was not subsequently called.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isIncrementalPopulationEnabled</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f92672>!</color><color=#f8f8f2>isFullyPopulated</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only.</color>
<color=#75715e>   *     <p>Reads {@code batchSize} records starting at the given {@code key} and {@code data}, and</color>
<color=#75715e>   *     deletes any secondary records having a primary key (the data of the secondary record) for</color>
<color=#75715e>   *     which {@link SecondaryAssociation#getPrimary} returns null. The next key/data pair to be</color>
<color=#75715e>   *     processed is returned in the {@code key} and {@code data} parameters so these can be passed</color>
<color=#75715e>   *     in to process the next batch.</color>
<color=#75715e>   *     <p>It is the application's responsibility to save the key/data pair returned by this</color>
<color=#75715e>   *     method, and then pass the saved key/data when the method is called again to process the</color>
<color=#75715e>   *     next batch of records. The application may wish to save the key/data persistently in order</color>
<color=#75715e>   *     to avoid restarting the processing from the beginning of the database after a crash.</color>
<color=#75715e>   * @param key contains the starting key for the batch of records to be processed when this method</color>
<color=#75715e>   *     is called, and contains the next key to be processed when this method returns. If {@code</color>
<color=#75715e>   *     key.getData() == null} when this method is called, the batch will begin with the first</color>
<color=#75715e>   *     record in the database.</color>
<color=#75715e>   * @param data contains the starting data element (primary key) for the batch of records to be</color>
<color=#75715e>   *     processed when this method is called, and contains the next data element to be processed</color>
<color=#75715e>   *     when this method returns. If {@code key.getData() == null} when this method is called, the</color>
<color=#75715e>   *     batch will begin with the first record in the database.</color>
<color=#75715e>   * @param batchSize is the maximum number of records to be read, and also the maximum number of</color>
<color=#75715e>   *     deletions that will be included in a single transaction.</color>
<color=#75715e>   * @return true if more records may need to be processed, or false if processing is complete.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>deleteObsoletePrimaryKeys</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>checkEnv</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>DatabaseUtil</color><color=#f8f8f2>.</color><color=#a6e22e>checkForNullDbt</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#e6db74>"key"</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>batchSize</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"batchSize must be positive"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>getDatabaseImpl</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>trace</color><color=#f8f8f2>(</color><color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINEST</color><color=#f8f8f2>,</color> <color=#e6db74>"deleteObsoletePrimaryKeys"</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color>
          <color=#f8f8f2>LockerFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getWritableLocker</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>envHandle</color><color=#f8f8f2>,</color>
              <color=#66d9ef>null</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isInternalDb</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>isTransactional</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isReplicated</color><color=#f8f8f2>()</color> <color=#75715e>/*autoTxnIsReplicated*/</color><color=#f8f8f2>);</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>deleteObsoletePrimaryKeysInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Throwable</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Error</color> <color=#f8f8f2>E</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>envHandle</color><color=#f8f8f2>.</color><color=#a6e22e>invalidate</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>E</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Use a scan to walk through the primary keys. If the primary key is obsolete</color>
<color=#75715e>   * (SecondaryAssociation.getPrimary returns null), delete the record.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>deleteObsoletePrimaryKeysInternal</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* TODO: use dirty-read scan with mode to return deleted records. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>scanMode</color> <color=#f92672>=</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>searchResult</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Start at first key. */</color>
      <color=#f8f8f2>searchResult</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>position</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>scanMode</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Resume at key/data pair last processed. */</color>
      <color=#f8f8f2>searchResult</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>scanMode</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>BOTH_RANGE</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>searchResult</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>searchResult</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>scanMode</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET_RANGE</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nProcessed</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>searchResult</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nProcessed</color> <color=#f92672>>=</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>nProcessed</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secAssoc</color><color=#f8f8f2>.</color><color=#a6e22e>getPrimary</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>deleteNoNotify</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>getDbImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getRepContext</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>searchResult</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>retrieveNext</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>scanMode</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For internal use only. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>populateSecondaries</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>(</color><color=#e6db74>"Not allowed on a secondary"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For internal use only. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>populateSecondaries</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>(</color><color=#e6db74>"Not allowed on a secondary"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the primary database associated with this secondary database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the primary database associated with this secondary database.</color>
<color=#75715e>   */</color>
  <color=#75715e>/*</color>
<color=#75715e>   * To be added when SecondaryAssociation is published:</color>
<color=#75715e>   * If a {@link SecondaryAssociation} is {@link</color>
<color=#75715e>   * SecondaryCursor#setSecondaryAssociation configured}, this method returns</color>
<color=#75715e>   * null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Database</color> <color=#a6e22e>getPrimaryDatabase</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns an empty list, since this database is itself a secondary database. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>SecondaryDatabase</color><color=#f92672>></color> <color=#a6e22e>getSecondaryDatabases</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>emptyList</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a copy of the secondary configuration of this database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return a copy of the secondary configuration of this database.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @deprecated As of JE 4.0.13, replaced by {@link SecondaryDatabase#getConfig()}.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>SecondaryConfig</color> <color=#a6e22e>getSecondaryConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>getConfig</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a copy of the secondary configuration of this database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return a copy of the secondary configuration of this database.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>SecondaryConfig</color> <color=#a6e22e>getConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryConfig</color><color=#f8f8f2>)</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>getConfig</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the secondary config without cloning, for internal use. */</color>
  <color=#f8f8f2>SecondaryConfig</color> <color=#a6e22e>getPrivateSecondaryConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Obtain a cursor on a database, returning a <code>SecondaryCursor</code>. Calling this method is</color>
<color=#75715e>   * the equivalent of calling {@link #openCursor} and casting the result to {@link</color>
<color=#75715e>   * SecondaryCursor}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param txn the transaction used to protect all operations performed with the cursor, or null if</color>
<color=#75715e>   *     the operations should not be transaction protected. If the database is non-transactional,</color>
<color=#75715e>   *     null must be specified. For a transactional database, the transaction is optional for</color>
<color=#75715e>   *     read-only access and required for read-write access.</color>
<color=#75715e>   * @param cursorConfig The cursor attributes. If null, default attributes are used.</color>
<color=#75715e>   * @return A secondary database cursor.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @deprecated As of JE 4.0.13, replaced by {@link SecondaryDatabase#openCursor}.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>SecondaryCursor</color> <color=#a6e22e>openSecondaryCursor</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>openCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Obtain a cursor on a database, returning a <code>SecondaryCursor</code>. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>SecondaryCursor</color> <color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>checkReadable</color><color=#f8f8f2>();</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecondaryCursor</color><color=#f8f8f2>)</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Overrides Database method. */</color>
  <color=#a6e22e>@Override</color>
  <color=#f8f8f2>Cursor</color> <color=#a6e22e>newDbcInstance</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>();</color><color=#75715e>//    return new SecondaryCursor(this, txn, cursorConfig);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Deletes the record associated with the given secondary key. In the presence of duplicate keys,</color>
<color=#75715e>   * all primary records associated with the given secondary key will be deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When multiple primary records are deleted, the expiration time in the returned result is</color>
<color=#75715e>   * that of the last record deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When the primary records are deleted, their associated secondary records are deleted as if</color>
<color=#75715e>   * {@link Database#delete} were called. This includes, but is not limited to, the secondary record</color>
<color=#75715e>   * referenced by the given key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param key the key used as <a href="DatabaseEntry.html#inParam">input</a>.</color>
<color=#75715e>   *     <!-- inherit other javadoc from overridden method --></color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationResult</color> <color=#a6e22e>delete</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>WriteOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>checkEnv</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>checkReadable</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>trace</color><color=#f8f8f2>(</color><color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINEST</color><color=#f8f8f2>,</color> <color=#e6db74>"SecondaryDatabase.delete"</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color> <color=#f92672>=</color> <color=#f8f8f2>options</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>options</color><color=#f8f8f2>.</color><color=#a6e22e>getCacheMode</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color>
        <color=#f8f8f2>LockerFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getWritableLocker</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>envHandle</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isInternalDb</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>isTransactional</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isReplicated</color><color=#f8f8f2>());</color> <color=#75715e>// autoTxnIsReplicated</color>

    <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>commitResult</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color> <color=#f92672>=</color>
          <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>isSerializableIsolation</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color> <color=#f8f8f2>:</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>READ_UNCOMMITTED_ALL</color><color=#f8f8f2>;</color>

      <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Read the primary key (the data of a secondary). */</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>pKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>searchResult</color> <color=#f92672>=</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>

        <color=#75715e>/*</color>
<color=#75715e>         * For each duplicate secondary key, delete the primary record</color>
<color=#75715e>         * and all its associated secondary records, including the one</color>
<color=#75715e>         * referenced by this secondary cursor.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>searchResult</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>primaryDb</color> <color=#f92672>=</color> <color=#f8f8f2>getPrimary</color><color=#f8f8f2>(</color><color=#f8f8f2>pKey</color><color=#f8f8f2>);</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDb</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#75715e>/* Primary was removed from the association. */</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>deleteNoNotify</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepContext</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

            <color=#f8f8f2>commitResult</color> <color=#f92672>=</color> <color=#f8f8f2>primaryDb</color><color=#f8f8f2>.</color><color=#a6e22e>deleteInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>commitResult</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lockMode</color> <color=#f92672>!=</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

                <color=#75715e>/*</color>
<color=#75715e>                 * The primary record was not found. The index</color>
<color=#75715e>                 * may be either corrupt or the record was</color>
<color=#75715e>                 * deleted between finding it in the secondary</color>
<color=#75715e>                 * without locking and trying to delete it. If</color>
<color=#75715e>                 * it was deleted or expired then just skip it.</color>
<color=#75715e>                 */</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>checkCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

                  <color=#75715e>/* There is a secondary index entry */</color>
                  <color=#66d9ef>throw</color> <color=#f8f8f2>secondaryRefersToMissingPrimaryKey</color><color=#f8f8f2>(</color>
                      <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>searchResult</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationTime</color><color=#f8f8f2>());</color>
                <color=#f8f8f2>}</color>
              <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>cursorImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isProbablyExpired</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

                  <color=#75715e>/* There is a secondary index entry. */</color>
                  <color=#66d9ef>throw</color> <color=#f8f8f2>secondaryRefersToMissingPrimaryKey</color><color=#f8f8f2>(</color>
                      <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>searchResult</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationTime</color><color=#f8f8f2>());</color>
                <color=#f8f8f2>}</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>

          <color=#f8f8f2>getDatabaseImpl</color><color=#f8f8f2>();</color>

          <color=#f8f8f2>searchResult</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>retrieveNext</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT_DUP</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>commitResult</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getEnv</color><color=#f8f8f2>().</color><color=#a6e22e>incDeleteFailOps</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>commitResult</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Error</color> <color=#f8f8f2>E</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>envHandle</color><color=#f8f8f2>.</color><color=#a6e22e>invalidate</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>E</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>(</color><color=#f8f8f2>commitResult</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Deletes the record associated with the given secondary key. In the presence of duplicate keys,</color>
<color=#75715e>   * all primary records associated with the given secondary key will be deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When the primary records are deleted, their associated secondary records are deleted as if</color>
<color=#75715e>   * {@link Database#delete} were called. This includes, but is not limited to, the secondary record</color>
<color=#75715e>   * referenced by the given key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Calling this method is equivalent to calling {@link #delete(Transaction, DatabaseEntry,</color>
<color=#75715e>   * WriteOptions)}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param key the key used as <a href="DatabaseEntry.html#inParam">input</a>.</color>
<color=#75715e>   *     <!-- inherit other javadoc from overridden method --></color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>delete</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>delete</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NOTFOUND</color> <color=#f8f8f2>:</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Moves the cursor to a record according to the specified {@link Get} type.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The difference between this method and the method it overrides in {@link Cursor} is that the</color>
<color=#75715e>   * key here is defined as the secondary records's key, and the data is defined as the primary</color>
<color=#75715e>   * record's data.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationResult</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Get</color> <color=#f8f8f2>getType</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>getType</color><color=#f8f8f2>,</color> <color=#f8f8f2>options</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Retrieves a record according to the specified {@link Get} type.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the operation succeeds, the record will be locked according to the {@link</color>
<color=#75715e>   * ReadOptions#getLockMode() lock mode} specified, the key, primary key and/or data will be</color>
<color=#75715e>   * returned via the (non-null) DatabaseEntry parameters, and a non-null OperationResult will be</color>
<color=#75715e>   * returned. If the operation fails because the record requested is not found, null is returned.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The following table lists each allowed operation and whether the key, pKey and data</color>
<color=#75715e>   * parameters are <a href="DatabaseEntry.html#params">input or output parameters</a>. See the</color>
<color=#75715e>   * individual {@link Get} operations for more information. <div></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1" summary=""></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <th>Get operation</th></color>
<color=#75715e>   *     <th>Description</th></color>
<color=#75715e>   *     <th>'key' parameter</th></color>
<color=#75715e>   *     <th>'pKey' parameter</th></color>
<color=#75715e>   *     <th>'data' parameter</th></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#SEARCH}</td></color>
<color=#75715e>   *     <td>Searches using an exact match by key.</td></color>
<color=#75715e>   *     <td><a href="DatabaseEntry.html#inParam">input</a></td></color>
<color=#75715e>   *     <td><a href="DatabaseEntry.html#outParam">output</a></td></color>
<color=#75715e>   *     <td><a href="DatabaseEntry.html#outParam">output</a></td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   *     <td>{@link Get#SEARCH_BOTH}</td></color>
<color=#75715e>   *     <td>Searches using an exact match by key and data.</td></color>
<color=#75715e>   *     <td><a href="DatabaseEntry.html#inParam">input</a></td></color>
<color=#75715e>   *     <td><a href="DatabaseEntry.html#inParam">input</a></td></color>
<color=#75715e>   *     <td><a href="DatabaseEntry.html#outParam">output</a></td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * </div></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param txn For a transactional database, an explicit transaction may be specified to</color>
<color=#75715e>   *     transaction-protect the operation, or null may be specified to perform the operation</color>
<color=#75715e>   *     without transaction protection. For a non-transactional database, null must be specified.</color>
<color=#75715e>   * @param key the secondary key input parameter.</color>
<color=#75715e>   * @param pKey the primary key input or output parameter, depending on getType.</color>
<color=#75715e>   * @param data the primary data output parameter.</color>
<color=#75715e>   * @param getType the Get operation type. May not be null.</color>
<color=#75715e>   * @param options the ReadOptions, or null to use default options.</color>
<color=#75715e>   * @return the OperationResult if the record requested is found, else null.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="OperationFailureException.html#readFailures">Read Operation Failures</a> occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws IllegalStateException if the database has been closed.</color>
<color=#75715e>   * @throws IllegalArgumentException if an invalid parameter is specified. This includes passing a</color>
<color=#75715e>   *     null getType, a null input key/pKey parameter, an input key/pKey parameter with a null data</color>
<color=#75715e>   *     array, a partial key/pKey input parameter, and specifying a {@link</color>
<color=#75715e>   *     ReadOptions#getLockMode() lock mode} of READ_COMMITTED.</color>
<color=#75715e>   * @since 7.0</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationResult</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Get</color> <color=#f8f8f2>getType</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>ReadOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>checkEnv</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>checkReadable</color><color=#f8f8f2>();</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>options</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>options</color> <color=#f92672>=</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_READ_OPTIONS</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color> <color=#f92672>=</color> <color=#f8f8f2>options</color><color=#f8f8f2>.</color><color=#a6e22e>getLockMode</color><color=#f8f8f2>();</color>

      <color=#f8f8f2>trace</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINEST</color><color=#f8f8f2>,</color> <color=#e6db74>"SecondaryDatabase.get"</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>getType</color><color=#f8f8f2>),</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>checkLockModeWithoutTxn</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>CursorConfig</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lockMode</color> <color=#f92672>==</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>READ_COMMITTED</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursorConfig</color> <color=#f92672>=</color> <color=#f8f8f2>READ_COMMITTED_CURSOR_CONFIG</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>lockMode</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursorConfig</color> <color=#f92672>=</color> <color=#f8f8f2>DEFAULT_CURSOR_CONFIG</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color> <color=#f92672>=</color>
          <color=#f8f8f2>LockerFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getReadableLocker</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getReadCommitted</color><color=#f8f8f2>());</color>

      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>SecondaryCursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>SecondaryCursor</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursorConfig</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

          <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>getType</color><color=#f8f8f2>,</color> <color=#f8f8f2>options</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>locker</color><color=#f8f8f2>.</color><color=#a6e22e>operationEnd</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Error</color> <color=#f8f8f2>E</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>envHandle</color><color=#f8f8f2>.</color><color=#a6e22e>invalidate</color><color=#f8f8f2>(</color><color=#f8f8f2>E</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>E</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @param key the secondary key used as input. It must be initialized with a non-null byte array</color>
<color=#75715e>   *     by the caller.</color>
<color=#75715e>   * @param data the primary data returned as output. Its byte array does not need to be initialized</color>
<color=#75715e>   *     by the caller.</color>
<color=#75715e>   *     <!-- inherit other javadoc from overridden method --></color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>(),</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Retrieves the key/data pair with the given key. If the matching key has duplicate values, the</color>
<color=#75715e>   * first data item in the set of duplicates is returned. Retrieval of duplicates requires the use</color>
<color=#75715e>   * of {@link Cursor} operations.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Calling this method is equivalent to calling {@link #get(Transaction, DatabaseEntry,</color>
<color=#75715e>   * DatabaseEntry, DatabaseEntry, Get, ReadOptions)} with {@link Get#SEARCH}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param txn For a transactional database, an explicit transaction may be specified to</color>
<color=#75715e>   *     transaction-protect the operation, or null may be specified to perform the operation</color>
<color=#75715e>   *     without transaction protection. For a non-transactional database, null must be specified.</color>
<color=#75715e>   * @param key the secondary key used as <a href="DatabaseEntry.html#inParam">input</a>.</color>
<color=#75715e>   * @param pKey the primary key returned as <a href="DatabaseEntry.html#outParam">output</a>.</color>
<color=#75715e>   * @param data the primary data returned as <a href="DatabaseEntry.html#outParam">output</a>.</color>
<color=#75715e>   * @param lockMode the locking attributes; if null, default attributes are used.</color>
<color=#75715e>   * @return {@link OperationStatus#NOTFOUND OperationStatus.NOTFOUND} if no matching key/data pair</color>
<color=#75715e>   *     is found; otherwise, {@link OperationStatus#SUCCESS OperationStatus.SUCCESS}.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="OperationFailureException.html#readFailures">Read Operation Failures</a> occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws IllegalStateException if the database has been closed.</color>
<color=#75715e>   * @throws IllegalArgumentException if an invalid parameter is specified.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
        <color=#f8f8f2>get</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>Get</color><color=#f8f8f2>.</color><color=#a6e22e>SEARCH</color><color=#f8f8f2>,</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOptions</color><color=#f8f8f2>(</color><color=#f8f8f2>lockMode</color><color=#f8f8f2>));</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NOTFOUND</color> <color=#f8f8f2>:</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This operation is not allowed with this method signature. {@link UnsupportedOperationException}</color>
<color=#75715e>   * will always be thrown by this method. The corresponding method with the <code>pKey</code></color>
<color=#75715e>   * parameter should be used instead.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>getSearchBoth</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#f8f8f2>notAllowedException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Retrieves the key/data pair with the specified secondary and primary key, that is, both the</color>
<color=#75715e>   * primary and secondary key items must match.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Calling this method is equivalent to calling {@link #get(Transaction, DatabaseEntry,</color>
<color=#75715e>   * DatabaseEntry, DatabaseEntry, Get, ReadOptions)} with {@link Get#SEARCH_BOTH}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param txn For a transactional database, an explicit transaction may be specified to</color>
<color=#75715e>   *     transaction-protect the operation, or null may be specified to perform the operation</color>
<color=#75715e>   *     without transaction protection. For a non-transactional database, null must be specified.</color>
<color=#75715e>   * @param key the secondary key used as <a href="DatabaseEntry.html#inParam">input</a>.</color>
<color=#75715e>   * @param pKey the primary key used as <a href="DatabaseEntry.html#outParam">input</a>.</color>
<color=#75715e>   * @param data the primary data returned as <a href="DatabaseEntry.html#outParam">output</a>.</color>
<color=#75715e>   * @param lockMode the locking attributes; if null, default attributes are used.</color>
<color=#75715e>   * @return {@link OperationStatus#NOTFOUND OperationStatus.NOTFOUND} if no matching key/data pair</color>
<color=#75715e>   *     is found; otherwise, {@link OperationStatus#SUCCESS OperationStatus.SUCCESS}.</color>
<color=#75715e>   * @throws OperationFailureException if one of the <a</color>
<color=#75715e>   *     href="OperationFailureException.html#readFailures">Read Operation Failures</a> occurs.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   * @throws IllegalStateException if the database has been closed.</color>
<color=#75715e>   * @throws IllegalArgumentException if an invalid parameter is specified.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>getSearchBoth</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
        <color=#f8f8f2>get</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>pKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>Get</color><color=#f8f8f2>.</color><color=#a6e22e>SEARCH_BOTH</color><color=#f8f8f2>,</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getReadOptions</color><color=#f8f8f2>(</color><color=#f8f8f2>lockMode</color><color=#f8f8f2>));</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>NOTFOUND</color> <color=#f8f8f2>:</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This operation is not allowed on a secondary database. {@link UnsupportedOperationException}</color>
<color=#75715e>   * will always be thrown by this method. The corresponding method on the primary database should</color>
<color=#75715e>   * be used instead.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationResult</color> <color=#a6e22e>put</color><color=#f8f8f2>(</color>
      <color=#75715e>/*final Transaction txn,*/</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Put</color> <color=#f8f8f2>putType</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>WriteOptions</color> <color=#f8f8f2>options</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>throw</color> <color=#f8f8f2>notAllowedException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This operation is not allowed on a secondary database. {@link UnsupportedOperationException}</color>
<color=#75715e>   * will always be thrown by this method. The corresponding method on the primary database should</color>
<color=#75715e>   * be used instead.</color>
<color=#75715e>   */</color>
<color=#75715e>//  @Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>put</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Transaction</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#f8f8f2>notAllowedException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This operation is not allowed on a secondary database. {@link UnsupportedOperationException}</color>
<color=#75715e>   * will always be thrown by this method. The corresponding method on the primary database should</color>
<color=#75715e>   * be used instead.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>putNoOverwrite</color><color=#f8f8f2>(</color>
      <color=#75715e>/*final Transaction txn,*/</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Put</color> <color=#f8f8f2>putType</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#f8f8f2>notAllowedException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This operation is not allowed on a secondary database. {@link UnsupportedOperationException}</color>
<color=#75715e>   * will always be thrown by this method. The corresponding method on the primary database should</color>
<color=#75715e>   * be used instead.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>OperationStatus</color> <color=#a6e22e>putDupData</color><color=#f8f8f2>(</color>
      <color=#75715e>/*final Transaction txn,*/</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Put</color> <color=#f8f8f2>putType</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#f8f8f2>notAllowedException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * This operation is not allowed on a secondary database. {@link UnsupportedOperationException}</color>
<color=#75715e>   * will always be thrown by this method. The corresponding method on the primary database should</color>
<color=#75715e>   * be used instead.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>JoinCursor</color> <color=#a6e22e>join</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color><color=#f92672>[]</color> <color=#f8f8f2>cursors</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>JoinConfig</color> <color=#f8f8f2>config</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>throw</color> <color=#f8f8f2>notAllowedException</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Updates a single secondary when a put() or delete() is performed on the primary.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For an insert, newData will be non-null and oldData will be null.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For an update, newData will be non-null and oldData will be non-null.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For a delete, newData will be null and oldData may be null or non-null depending on whether</color>
<color=#75715e>   * its need by the key creator/extractor.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param locker the internal locker.</color>
<color=#75715e>   * @param cursor secondary cursor to use, or null if this method should open and close a cursor if</color>
<color=#75715e>   *     one is needed.</color>
<color=#75715e>   * @param priKey the primary key.</color>
<color=#75715e>   * @param oldData the primary data before the change, or null if the record did not previously</color>
<color=#75715e>   *     exist.</color>
<color=#75715e>   * @param newData the primary data after the change, or null if the record has been deleted.</color>
<color=#75715e>   * @param cacheMode CacheMode to use for accessing secondary.</color>
<color=#75715e>   * @param expirationTime expiration time of primary record, to be written to secondary records.</color>
<color=#75715e>   * @param expirationUpdated whether the primary was updated and the expiration time changed.</color>
<color=#75715e>   * @param oldExpirationTime the expiration time of the previous version of the primary record.</color>
<color=#75715e>   *     When the primary was updated, this is the expiration time of the previous version. When the</color>
<color=#75715e>   *     primary was not updated, this is the expiration time of the current or newly inserted</color>
<color=#75715e>   *     primary record.</color>
<color=#75715e>   * @return the number of secondary records written (inserted, deleted or updated).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>int</color> <color=#a6e22e>updateSecondary</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>oldData</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>newData</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>expirationTime</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationUpdated</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationInHours</color> <color=#f92672>=</color> <color=#f8f8f2>TTL</color><color=#f8f8f2>.</color><color=#a6e22e>isSystemTimeInHours</color><color=#f8f8f2>(</color><color=#f8f8f2>expirationTime</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>expiration</color> <color=#f92672>=</color> <color=#f8f8f2>TTL</color><color=#f8f8f2>.</color><color=#a6e22e>systemTimeToExpiration</color><color=#f8f8f2>(</color><color=#f8f8f2>expirationTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>SecondaryKeyCreator</color> <color=#f8f8f2>keyCreator</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyCreator</color><color=#f8f8f2>();</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>SecondaryMultiKeyCreator</color> <color=#f8f8f2>multiKeyCreator</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getMultiKeyCreator</color><color=#f8f8f2>();</color>

    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>localCursor</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>cursor</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keyCreator</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Each primary record may have a single secondary key. */</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>multiKeyCreator</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

      <color=#75715e>/* Get old and new secondary keys. */</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>oldSecKey</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>newSecKey</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>oldData</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>newData</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>oldSecKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>keyCreator</color><color=#f8f8f2>.</color><color=#a6e22e>createSecondaryKey</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldData</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldSecKey</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>oldSecKey</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newData</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>newSecKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>keyCreator</color><color=#f8f8f2>.</color><color=#a6e22e>createSecondaryKey</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>newData</color><color=#f8f8f2>,</color> <color=#f8f8f2>newSecKey</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>newSecKey</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Delete the old key if it is no longer present. */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>doDelete</color> <color=#f92672>=</color> <color=#f8f8f2>oldSecKey</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>oldSecKey</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>newSecKey</color><color=#f8f8f2>);</color>

      <color=#75715e>/* Insert the new key if it was not present before. */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>doInsert</color> <color=#f92672>=</color> <color=#f8f8f2>newSecKey</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>newSecKey</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>oldSecKey</color><color=#f8f8f2>);</color>

      <color=#75715e>/* Update secondary if key did not change but expiration did. */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>doUpdate</color> <color=#f92672>=</color> <color=#f8f8f2>expirationUpdated</color> <color=#f92672>&&</color> <color=#f8f8f2>newSecKey</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>doInsert</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>doDelete</color> <color=#f92672>||</color> <color=#f8f8f2>doInsert</color> <color=#f92672>||</color> <color=#f8f8f2>doUpdate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>localCursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>doDelete</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>deleteKey</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldSecKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>doInsert</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>insertKey</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>doUpdate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>updateExpiration</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>oldSecKey</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>localCursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>doDelete</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>doInsert</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>doUpdate</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Each primary record may have multiple secondary keys. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>multiKeyCreator</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"SecondaryConfig.getKeyCreator()/getMultiKeyCreator()"</color>
                <color=#f92672>+</color> <color=#e6db74>" may be null only if the primary database is read-only"</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Get old and new secondary keys. */</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseEntry</color><color=#f92672>></color> <color=#f8f8f2>oldKeys</color><color=#f8f8f2>;</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseEntry</color><color=#f92672>></color> <color=#f8f8f2>newKeys</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>oldData</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>newData</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>oldKeys</color> <color=#f92672>=</color> <color=#f8f8f2>EMPTY_SET</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>oldKeys</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>();</color>
        <color=#f8f8f2>multiKeyCreator</color><color=#f8f8f2>.</color><color=#a6e22e>createSecondaryKeys</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldData</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldKeys</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newData</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>newKeys</color> <color=#f92672>=</color> <color=#f8f8f2>EMPTY_SET</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>newKeys</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>();</color>
        <color=#f8f8f2>multiKeyCreator</color><color=#f8f8f2>.</color><color=#a6e22e>createSecondaryKeys</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>newData</color><color=#f8f8f2>,</color> <color=#f8f8f2>newKeys</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseEntry</color><color=#f92672>></color> <color=#f8f8f2>toDelete</color><color=#f8f8f2>;</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseEntry</color><color=#f92672>></color> <color=#f8f8f2>toInsert</color><color=#f8f8f2>;</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>DatabaseEntry</color><color=#f92672>></color> <color=#f8f8f2>toUpdate</color><color=#f8f8f2>;</color>

      <color=#75715e>/* Delete old keys that are no longer present. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>oldKeys</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>toDelete</color> <color=#f92672>=</color> <color=#f8f8f2>EMPTY_SET</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>toDelete</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>(</color><color=#f8f8f2>oldKeys</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>toDelete</color><color=#f8f8f2>.</color><color=#a6e22e>removeAll</color><color=#f8f8f2>(</color><color=#f8f8f2>newKeys</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Insert new keys that were not present before. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newKeys</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>toInsert</color> <color=#f92672>=</color> <color=#f8f8f2>EMPTY_SET</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>toInsert</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>(</color><color=#f8f8f2>newKeys</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>toInsert</color><color=#f8f8f2>.</color><color=#a6e22e>removeAll</color><color=#f8f8f2>(</color><color=#f8f8f2>oldKeys</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Update secondary if key did not change but expiration did. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>expirationUpdated</color> <color=#f92672>||</color> <color=#f8f8f2>newKeys</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>toUpdate</color> <color=#f92672>=</color> <color=#f8f8f2>EMPTY_SET</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>toUpdate</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>(</color><color=#f8f8f2>newKeys</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>toUpdate</color><color=#f8f8f2>.</color><color=#a6e22e>retainAll</color><color=#f8f8f2>(</color><color=#f8f8f2>oldKeys</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>toDelete</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>toInsert</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>toUpdate</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>localCursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>toDelete</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>secKey</color> <color=#f8f8f2>:</color> <color=#f8f8f2>toDelete</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>deleteKey</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>toInsert</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>secKey</color> <color=#f8f8f2>:</color> <color=#f8f8f2>toInsert</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>insertKey</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>toUpdate</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>secKey</color> <color=#f8f8f2>:</color> <color=#f8f8f2>toUpdate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>updateExpiration</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color>
                  <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>localCursor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>toDelete</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#f8f8f2>toInsert</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#f8f8f2>toUpdate</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Deletes an old secondary key. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>deleteKey</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>oldSecKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color><color=#f8f8f2>oldSecKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>BOTH</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>deleteInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>getDbImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getRepContext</color><color=#f8f8f2>(),</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isFullyPopulated</color>
        <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>getEnv</color><color=#f8f8f2>().</color><color=#a6e22e>expiresWithin</color><color=#f8f8f2>(</color><color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>getEnv</color><color=#f8f8f2>().</color><color=#a6e22e>getTtlClockTolerance</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>SecondaryIntegrityException</color><color=#f8f8f2>(</color>
          <color=#66d9ef>this</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCursorImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getLocker</color><color=#f8f8f2>(),</color>
          <color=#e6db74>"Secondary is corrupt: the primary record contains a key "</color>
              <color=#f92672>+</color> <color=#e6db74>"that is not present in the secondary"</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>getDebugName</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>oldSecKey</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Inserts a new secondary key. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>insertKey</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Check for the existence of a foreign key. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>foreignDb</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDatabase</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>foreignDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>foreignCursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#f8f8f2>foreignDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>tmpData</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
            <color=#f8f8f2>foreignCursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>tmpData</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ForeignConstraintException</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Secondary "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>getDebugName</color><color=#f8f8f2>()</color>
                  <color=#f92672>+</color> <color=#e6db74>" foreign key not allowed: it is not"</color>
                  <color=#f92672>+</color> <color=#e6db74>" present in the foreign database "</color>
                  <color=#f92672>+</color> <color=#f8f8f2>foreignDb</color><color=#f8f8f2>.</color><color=#a6e22e>getDebugName</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>getDebugName</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>ExpirationInfo</color> <color=#f8f8f2>expInfo</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>ExpirationInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>expiration</color><color=#f8f8f2>,</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color> <color=#75715e>/*updateExpiration*/</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Insert the new key. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>configuration</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>expInfo</color><color=#75715e>/*, PutMode.NO_DUP_DATA*/</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>isFullyPopulated</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>SecondaryIntegrityException</color><color=#f8f8f2>(</color>
            <color=#66d9ef>this</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Secondary/primary record already present"</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>getDebugName</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>expInfo</color><color=#75715e>/*, PutMode.NO_OVERWRITE*/</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>isFullyPopulated</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UniqueConstraintException</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Unique secondary key is already present"</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>getDebugName</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>newSecKey</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Updates a new secondary key, which doesn't change the key or data but is needed to update the</color>
<color=#75715e>   * expiration time.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>updateExpiration</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>PutMode</color> <color=#f8f8f2>putMode</color><color=#f8f8f2>;</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>ExpirationInfo</color> <color=#f8f8f2>expInfo</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>ExpirationInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>expiration</color><color=#f8f8f2>,</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*updateExpiration*/</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color> <color=#f92672>=</color> <color=#f8f8f2>getEnv</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isFullyPopulated</color>
        <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>expiresWithin</color><color=#f8f8f2>(</color><color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getTtlClockTolerance</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>result</color> <color=#f92672>=</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>configuration</color><color=#f8f8f2>.</color><color=#a6e22e>getSortedDuplicates</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>BOTH</color> <color=#f8f8f2>:</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET</color><color=#f8f8f2>,</color>
              <color=#66d9ef>false</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>SecondaryIntegrityException</color><color=#f8f8f2>(</color>
            <color=#66d9ef>this</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCursorImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getLocker</color><color=#f8f8f2>(),</color>
            <color=#e6db74>"Secondary is corrupt: the primary record contains a "</color>
                <color=#f92672>+</color> <color=#e6db74>"key that is not present in the secondary"</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>getDebugName</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>oldExpirationTime</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>putMode</color> <color=#f92672>=</color> <color=#f8f8f2>PutMode</color><color=#f8f8f2>.</color><color=#a6e22e>CURRENT</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>putMode</color> <color=#f92672>=</color> <color=#f8f8f2>PutMode</color><color=#f8f8f2>.</color><color=#a6e22e>OVERWRITE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>putInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>expInfo</color><color=#75715e>/*, putMode*/</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Called when a record in the foreign database is deleted.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param secKey is the primary key of the foreign database, which is the secondary key (ordinary</color>
<color=#75715e>   *     key) of this secondary database.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>onForeignKeyDelete</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Locker</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>CacheMode</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>ForeignKeyDeleteAction</color> <color=#f8f8f2>deleteAction</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyDeleteAction</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Use RMW if we're going to be deleting the secondary records. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LockMode</color> <color=#f8f8f2>lockMode</color> <color=#f92672>=</color>
        <color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color> <color=#f92672>==</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>ABORT</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color> <color=#f8f8f2>:</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Use the deleted foreign primary key to read the data of this</color>
<color=#75715e>     * database, which is the associated primary's key.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

      <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>secResult</color> <color=#f92672>=</color>
          <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color><color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>lockMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>secResult</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color> <color=#f92672>==</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>ABORT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * ABORT - throw an exception to cause the user to abort</color>
<color=#75715e>           * the transaction.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>DeleteConstraintException</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>locker</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Secondary refers to a deleted foreign key"</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>getDebugName</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>secResult</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationTime</color><color=#f8f8f2>());</color>

        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color> <color=#f92672>==</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>CASCADE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * CASCADE - delete the associated primary record.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>primaryDb</color> <color=#f92672>=</color> <color=#f8f8f2>getPrimary</color><color=#f8f8f2>(</color><color=#f8f8f2>priKey</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>priResult</color> <color=#f92672>=</color> <color=#f8f8f2>primaryDb</color><color=#f8f8f2>.</color><color=#a6e22e>deleteInternal</color><color=#f8f8f2>(</color><color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priResult</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>cursorImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isProbablyExpired</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

              <color=#66d9ef>throw</color> <color=#f8f8f2>secondaryRefersToMissingPrimaryKey</color><color=#f8f8f2>(</color>
                  <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>secResult</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationTime</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>

        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleteAction</color> <color=#f92672>==</color> <color=#f8f8f2>ForeignKeyDeleteAction</color><color=#f8f8f2>.</color><color=#a6e22e>NULLIFY</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * NULLIFY - set the secondary key to null in the</color>
<color=#75715e>           * associated primary record.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>primaryDb</color> <color=#f92672>=</color> <color=#f8f8f2>getPrimary</color><color=#f8f8f2>(</color><color=#f8f8f2>priKey</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>primaryDb</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#66d9ef>try</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>priCursor</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Cursor</color><color=#f8f8f2>(</color><color=#f8f8f2>primaryDb</color><color=#f8f8f2>,</color> <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

              <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

              <color=#66d9ef>final</color> <color=#f8f8f2>OperationResult</color> <color=#f8f8f2>priResult</color> <color=#f92672>=</color>
                  <color=#f8f8f2>priCursor</color><color=#f8f8f2>.</color><color=#a6e22e>search</color><color=#f8f8f2>(</color><color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>RMW</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>SearchMode</color><color=#f8f8f2>.</color><color=#a6e22e>SET</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priResult</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>cursorImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isProbablyExpired</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                  <color=#66d9ef>throw</color> <color=#f8f8f2>secondaryRefersToMissingPrimaryKey</color><color=#f8f8f2>(</color>
                      <color=#f8f8f2>locker</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>secResult</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationTime</color><color=#f8f8f2>());</color>
                <color=#f8f8f2>}</color>
                <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
              <color=#f8f8f2>}</color>

              <color=#66d9ef>final</color> <color=#f8f8f2>ForeignMultiKeyNullifier</color> <color=#f8f8f2>multiNullifier</color> <color=#f92672>=</color>
                  <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignMultiKeyNullifier</color><color=#f8f8f2>();</color>

              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>multiNullifier</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>multiNullifier</color><color=#f8f8f2>.</color><color=#a6e22e>nullifyForeignKey</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

                  <color=#f8f8f2>priCursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
              <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>final</color> <color=#f8f8f2>ForeignKeyNullifier</color> <color=#f8f8f2>nullifier</color> <color=#f92672>=</color> <color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getForeignKeyNullifier</color><color=#f8f8f2>();</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nullifier</color><color=#f8f8f2>.</color><color=#a6e22e>nullifyForeignKey</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                  <color=#f8f8f2>priCursor</color><color=#f8f8f2>.</color><color=#a6e22e>putCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#75715e>/* Should never occur. */</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>secResult</color> <color=#f92672>=</color>
            <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>retrieveNext</color><color=#f8f8f2>(</color><color=#f8f8f2>secKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>LockMode</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>cacheMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>GetMode</color><color=#f8f8f2>.</color><color=#a6e22e>NEXT_DUP</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * If either ImmutableSecondaryKey or ExtractFromPrimaryKeyOnly is configured, an update cannot</color>
<color=#75715e>   * change a secondary key. ImmutableSecondaryKey is a guarantee from the user meaning just that,</color>
<color=#75715e>   * and ExtractFromPrimaryKeyOnly also implies the secondary key cannot change because it is</color>
<color=#75715e>   * derived from the primary key which is immutable (like any other key).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>updateMayChangeSecondary</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f92672>!</color><color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getImmutableSecondaryKey</color><color=#f8f8f2>()</color>
        <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getExtractFromPrimaryKeyOnly</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * When false is returned, this allows optimizing for the case where a primary update operation</color>
<color=#75715e>   * can update secondaries without reading the primary data.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>needOldDataForUpdate</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>SecondaryDatabase</color><color=#f92672>></color> <color=#f8f8f2>secondaries</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secondaries</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#f8f8f2>secDb</color> <color=#f8f8f2>:</color> <color=#f8f8f2>secondaries</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secDb</color><color=#f8f8f2>.</color><color=#a6e22e>updateMayChangeSecondary</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * When false is returned, this allows optimizing for the case where a primary delete operation</color>
<color=#75715e>   * can update secondaries without reading the primary data.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>needOldDataForDelete</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>SecondaryDatabase</color><color=#f92672>></color> <color=#f8f8f2>secondaries</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>secondaries</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>SecondaryDatabase</color> <color=#f8f8f2>secDb</color> <color=#f8f8f2>:</color> <color=#f8f8f2>secondaries</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>secDb</color><color=#f8f8f2>.</color><color=#a6e22e>secondaryConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getExtractFromPrimaryKeyOnly</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* A secondary DB has no secondaries of its own, by definition. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>hasSecondaryOrForeignKeyAssociations</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Utility to call SecondaryAssociation.getPrimary.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Handles exceptions and does an important debugging check that can't be done at database open</color>
<color=#75715e>   * time: ensures that the same SecondaryAssociation instance is used for all associated DBs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Returns null if getPrimary returns null, so the caller must handle this possibility. Null</color>
<color=#75715e>   * normally means that a secondary read operation can skip the record.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>Database</color> <color=#a6e22e>getPrimary</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>priKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>priDb</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>priDb</color> <color=#f92672>=</color> <color=#f8f8f2>secAssoc</color><color=#f8f8f2>.</color><color=#a6e22e>getPrimary</color><color=#f8f8f2>(</color><color=#f8f8f2>priKey</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>RuntimeException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Exception from SecondaryAssociation.getPrimary"</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priDb</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>priDb</color><color=#f8f8f2>.</color><color=#a6e22e>secAssoc</color> <color=#f92672>!=</color> <color=#f8f8f2>secAssoc</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Primary and secondary have different SecondaryAssociation "</color>
              <color=#f92672>+</color> <color=#e6db74>"instances. Remember to configure the SecondaryAssociation "</color>
              <color=#f92672>+</color> <color=#e6db74>"on the primary database."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>priDb</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseImpl</color> <color=#a6e22e>checkReadable</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>getDatabaseImpl</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isFullyPopulated</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Incremental population is currently enabled."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>UnsupportedOperationException</color> <color=#a6e22e>notAllowedException</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>(</color><color=#e6db74>"Operation not allowed on a secondary"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Send trace messages to the java.util.logger. Don't rely on the logger alone to conditionalize</color>
<color=#75715e>   * whether we send this message, we don't even want to construct the message if the level is not</color>
<color=#75715e>   * enabled.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>trace</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Level</color> <color=#f8f8f2>level</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>methodName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>.</color><color=#a6e22e>isLoggable</color><color=#f8f8f2>(</color><color=#f8f8f2>level</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>methodName</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" name="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>getDebugName</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" primary="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>primaryDatabase</color><color=#f8f8f2>.</color><color=#a6e22e>getDebugName</color><color=#f8f8f2>());</color>

      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>getEnv</color><color=#f8f8f2>(),</color> <color=#f8f8f2>level</color><color=#f8f8f2>,</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>