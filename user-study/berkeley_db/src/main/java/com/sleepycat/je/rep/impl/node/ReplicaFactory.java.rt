<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.StatsConfig</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocol.Message</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.StatGroup</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocolStatDefinition.N_BYTES_READ</color><color=#f8f8f2>;</color>
<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocolStatDefinition.N_MESSAGES_READ</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReplicaFactory</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>ReplicaType</color> <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>ReplicaType</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#f8f8f2>statsInterval</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>ReplicaType</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DEFAULT</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>NULL_REPLICA</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setReplicaType</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicaType</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setStatsInterval</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>interval</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>statsInterval</color> <color=#f92672>=</color> <color=#f8f8f2>interval</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Replica</color> <color=#a6e22e>create</color><color=#f8f8f2>(</color><color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>Replay</color> <color=#f8f8f2>replay</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>DEFAULT</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Replica</color><color=#f8f8f2>(</color><color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>replay</color><color=#f8f8f2>);</color>

      <color=#66d9ef>case</color> <color=#f8f8f2>NULL_REPLICA</color><color=#f8f8f2>:</color>

        <color=#75715e>/** Create a replica which just eats messages. Used for testing network bandwidth. */</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Replica</color><color=#f8f8f2>(</color><color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>replay</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#a6e22e>@Override</color>
          <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>doRunReplicaLoopInternalWork</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

            <color=#66d9ef>long</color> <color=#f8f8f2>ctime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
            <color=#66d9ef>long</color> <color=#f8f8f2>opCount</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>opCount</color><color=#f92672>++</color><color=#f8f8f2>;</color>
              <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color>
              <color=#f8f8f2>Message</color> <color=#f8f8f2>message</color> <color=#f92672>=</color> <color=#f8f8f2>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>getReplicaFeederChannel</color><color=#f8f8f2>());</color>
              <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>statsInterval</color> <color=#f92672>></color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>opCount</color> <color=#f92672>%</color> <color=#f8f8f2>statsInterval</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>StatGroup</color> <color=#f8f8f2>stats</color> <color=#f92672>=</color> <color=#f8f8f2>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>getStats</color><color=#f8f8f2>(</color><color=#f8f8f2>StatsConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>
                <color=#66d9ef>long</color> <color=#f8f8f2>bytesRead</color> <color=#f92672>=</color> <color=#f8f8f2>stats</color><color=#f8f8f2>.</color><color=#a6e22e>getLong</color><color=#f8f8f2>(</color><color=#f8f8f2>N_BYTES_READ</color><color=#f8f8f2>);</color>
                <color=#66d9ef>long</color> <color=#f8f8f2>messagesRead</color> <color=#f92672>=</color> <color=#f8f8f2>stats</color><color=#f8f8f2>.</color><color=#a6e22e>getLong</color><color=#f8f8f2>(</color><color=#f8f8f2>N_MESSAGES_READ</color><color=#f8f8f2>);</color>
                <color=#66d9ef>long</color> <color=#f8f8f2>elapsedTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>ctime</color><color=#f8f8f2>;</color>
                <color=#66d9ef>long</color> <color=#f8f8f2>bytesPerMilliSecond</color> <color=#f92672>=</color> <color=#f8f8f2>bytesRead</color> <color=#f92672>/</color> <color=#f8f8f2>elapsedTime</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
                    <color=#e6db74>" Bytes Read: "</color>
                        <color=#f92672>+</color> <color=#f8f8f2>bytesRead</color>
                        <color=#f92672>+</color> <color=#e6db74>" Messages Read: "</color>
                        <color=#f92672>+</color> <color=#f8f8f2>messagesRead</color>
                        <color=#f92672>+</color> <color=#e6db74>" BytesPerMSec: "</color>
                        <color=#f92672>+</color> <color=#f8f8f2>bytesPerMilliSecond</color>
                        <color=#f92672>+</color> <color=#e6db74>" MS: "</color>
                        <color=#f92672>+</color> <color=#f8f8f2>elapsedTime</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>ctime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>};</color>

      <color=#66d9ef>default</color><color=#f8f8f2>:</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#e6db74>"unknown type passed to makeReplica: "</color> <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>