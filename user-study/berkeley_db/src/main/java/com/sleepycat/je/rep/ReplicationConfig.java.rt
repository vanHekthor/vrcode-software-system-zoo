<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentConfig</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.ProgressListener</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.ReplicaConsistencyPolicy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.config.EnvironmentParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbConfigManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.RepConfigProxy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.FeederFilter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.subscription.StreamAuthenticator</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.HostPortPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.RepUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.net.InetSocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Properties</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Specifies the immutable attributes of a replicated environment.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>To change the default settings for a replicated environment, an application creates a</color>
<color=#75715e> * configuration object, customizes settings and uses it for {@link ReplicatedEnvironment}</color>
<color=#75715e> * construction. The set methods of this class validate the configuration values when the method is</color>
<color=#75715e> * invoked. An IllegalArgumentException is thrown if the value is not valid for that attribute.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that ReplicationConfig only describes those attributes which must be set at {@code</color>
<color=#75715e> * ReplicatedEnvironment} construction time, while its superclass {@link ReplicationMutableConfig}</color>
<color=#75715e> * describes attributes that may be modified during the life of the replication group.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>ReplicationConfig follows precedence rules similar to those of {@link EnvironmentConfig}.</color>
<color=#75715e> *</color>
<color=#75715e> * <ol></color>
<color=#75715e> *   <li>Configuration parameters specified in {@literal <environmentHome>/je.properties} take first</color>
<color=#75715e> *       precedence.</color>
<color=#75715e> *   <li>Configuration parameters set in the ReplicationConfig object used at {@code</color>
<color=#75715e> *       ReplicatedEnvironment} construction are next.</color>
<color=#75715e> *   <li>Any configuration parameters not set by the application are set to system defaults,</color>
<color=#75715e> *       described along with the parameter name String constants in this class.</color>
<color=#75715e> * </ol></color>
<color=#75715e> *</color>
<color=#75715e> * <p>After a {@code ReplicatedEnvironment} has been constructed, its mutable properties may be</color>
<color=#75715e> * changed using {@code ReplicatedEnvironment#setMutableConfig}. See {@code</color>
<color=#75715e> * ReplicationMutableConfig} for a list of mutable properties; all other properties are immutable.</color>
<color=#75715e> * Whether a property is mutable or immutable is also described along with the parameter name String</color>
<color=#75715e> * constants in this class.</color>
<color=#75715e> *</color>
<color=#75715e> * <h4>Getting the Current ReplicatedEnvironment Properties</h4></color>
<color=#75715e> *</color>
<color=#75715e> * To get the current "live" properties of a replicated environment after constructing it or</color>
<color=#75715e> * changing its properties, you must call {@link ReplicatedEnvironment#getRepConfig} or {@link</color>
<color=#75715e> * ReplicatedEnvironment#getRepMutableConfig}. The original ReplicationConfig or</color>
<color=#75715e> * ReplicationMutableConfig object used to set the properties is not kept up to date as properties</color>
<color=#75715e> * are changed, and does not reflect property validation or properties that are computed.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReplicationConfig</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ReplicationMutableConfig</color> <color=#66d9ef>implements</color> <color=#f8f8f2>RepConfigProxy</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>1L</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Note: all replicated parameters should start with</color>
<color=#75715e>   * EnvironmentParams.REP_PARAMS_PREFIX, which is "je.rep.",</color>
<color=#75715e>   * see SR [#19080].</color>
<color=#75715e>   */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The name for the replication group. The name should consist of letters, digits, and/or hyphen</color>
<color=#75715e>   * ("-"), underscore ("_"), or period (".").</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>String</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>"DefaultGroup"</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationConfig#setGroupName</color>
<color=#75715e>   * @see ReplicationConfig#getGroupName</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>GROUP_NAME</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"groupName"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The node name uniquely identifies this node within the replication group. The name should</color>
<color=#75715e>   * consist of letters, digits, and/or hyphen ("-"), underscore ("_"), or period (".").</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the node name is immutable. Normally the host name should not be used as the node</color>
<color=#75715e>   * name, unless you intend to reuse the host name when a machine fails and is replaced, or the</color>
<color=#75715e>   * node is upgraded to new hardware.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>String</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>"DefaultRepNodeName"</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationConfig#setNodeName</color>
<color=#75715e>   * @see ReplicationConfig#getNodeName</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NODE_NAME</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"nodeName"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The type of this node.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>{@link NodeType}</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>ELECTABLE</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationConfig#setNodeType</color>
<color=#75715e>   * @see ReplicationConfig#getNodeType</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NODE_TYPE</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"nodeType"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The string identifying one or more helper host and port pairs in this format:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre></color>
<color=#75715e>   * hostname[:port][,hostname[:port]]*</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>String</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>""</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationConfig#setHelperHosts</color>
<color=#75715e>   * @see ReplicationConfig#getHelperHosts</color>
<color=#75715e>   * @deprecated replaced by {@link ReplicationMutableConfig#HELPER_HOSTS}.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Deprecated</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>HELPER_HOSTS</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"helperHosts"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The default port used for replication.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>5001</td></color>
<color=#75715e>   * <td>1024</td></color>
<color=#75715e>   * <td>Short.MAX_VALUE</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>DEFAULT_PORT</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"defaultPort"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Names the hostname and port associated with this node in the replication group, e.g.</color>
<color=#75715e>   * je.rep.nodeHostPort=foo.com:5001.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The hostname is defaulted to "localhost" to make it easy to prototype and to execute the</color>
<color=#75715e>   * examples, but the user should be very sure to set a specific hostname before starting nodes on</color>
<color=#75715e>   * multiple machines. The value of je.rep.nodeHostPort is saved persistently in replication group</color>
<color=#75715e>   * metadata and is expected to be a unique address, and a value of "localhost" in the replication</color>
<color=#75715e>   * metadata will cause severe communication confusion.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The port portion of the host value is optional. If it's not specified, the value of</color>
<color=#75715e>   * "je.rep.defaultPort" is used.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>String</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>"localhost"</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationConfig#setNodeHostPort</color>
<color=#75715e>   * @see ReplicationConfig#getNodeHostPort</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NODE_HOST_PORT</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"nodeHostPort"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * When this configuration parameter is set to true, it binds the HA socket to INADDR_ANY, so that</color>
<color=#75715e>   * HA services are available on all network interfaces. The default value (false) results in the</color>
<color=#75715e>   * HA socket being bound to the specific interface specified by the {@link #NODE_HOST_PORT}</color>
<color=#75715e>   * configuration.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>false</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>BIND_INADDR_ANY</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"bindInaddrAny"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The default consistency policy used by a replica. This value is used when no {@link</color>
<color=#75715e>   * com.sleepycat.je.TransactionConfig#setConsistencyPolicy transaction consistency policy} is</color>
<color=#75715e>   * specified, including when a null {@code Transaction} parameter is used for a read operation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Only two policies are meaningful as properties denoting environment level default policies:</color>
<color=#75715e>   * {@link NoConsistencyRequiredPolicy} and {@link TimeConsistencyPolicy}. They can be specified</color>
<color=#75715e>   * as:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre>  NoConsistencyRequiredPolicy</pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * or</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre>  {@code TimeConsistencyPolicy(<permissibleLag>,<timeout>)}</pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * where {@code <permissibleLag>} and {@code <timeout>} are {@link <a</color>
<color=#75715e>   * href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a>}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For example, a time based consistency policy with a lag of one second and a timeout of one</color>
<color=#75715e>   * hour is denoted by the string: {@code TimeConsistencyPolicy(1 s,1 h)}</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td><td>Default</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>String</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>"TimeConsistencyPolicy(1 s,1 h)"</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationConfig#setConsistencyPolicy</color>
<color=#75715e>   * @see ReplicationConfig#getConsistencyPolicy</color>
<color=#75715e>   * @see com.sleepycat.je.TransactionConfig#setConsistencyPolicy</color>
<color=#75715e>   * @see com.sleepycat.je.TransactionConfig#getConsistencyPolicy</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>CONSISTENCY_POLICY</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"consistencyPolicy"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @deprecated and no longer used as of JE 7.5. Reserved files are now retained based on available</color>
<color=#75715e>   *     disk space -- see {@link EnvironmentConfig#MAX_DISK} and {@link</color>
<color=#75715e>   *     EnvironmentConfig#FREE_DISK} should be used instead. However, this param is still used when</color>
<color=#75715e>   *     some, but not all, nodes in a group have been upgraded to 7.5 or later.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REP_STREAM_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"repStreamTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @deprecated and no longer used as of JE 7.5. Reserved files are now retained based on available</color>
<color=#75715e>   *     disk space -- see {@link EnvironmentConfig#MAX_DISK} and {@link</color>
<color=#75715e>   *     EnvironmentConfig#FREE_DISK} should be used instead.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLAY_COST_PERCENT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replayCostPercent"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @deprecated and no longer needed as of JE 7.5. Reserved files are now retained based on</color>
<color=#75715e>   *     available disk space -- see {@link EnvironmentConfig#MAX_DISK} and {@link</color>
<color=#75715e>   *     EnvironmentConfig#FREE_DISK} should be used instead. However, this param is still used when</color>
<color=#75715e>   *     it has been specified and is non-zero, and FREE_DISK has not been specified. In this case,</color>
<color=#75715e>   *     REPLAY_FREE_DISK_PERCENT overrides the FREE_DISK default value. If both</color>
<color=#75715e>   *     REPLAY_FREE_DISK_PERCENT and FREE_DISK are specified, an IllegalArgumentException is</color>
<color=#75715e>   *     thrown.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLAY_FREE_DISK_PERCENT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replayFreeDiskPercent"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum amount of time for a replay transaction to wait for a lock.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>500 ms</td></color>
<color=#75715e>   * <td>1 ms</td></color>
<color=#75715e>   * <td>75 min</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLAY_TXN_LOCK_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replayTxnLockTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum number of <i>most recently used</i> database handles that are kept open during the</color>
<color=#75715e>   * replay of the replication stream.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Int</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>10</td></color>
<color=#75715e>   * <td>1</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @deprecated replaced by {@link ReplicationMutableConfig#REPLAY_MAX_OPEN_DB_HANDLES}.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Deprecated</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLAY_MAX_OPEN_DB_HANDLES</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replayMaxOpenDbHandles"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum amount of time that an inactive database handle is kept open during a replay of the</color>
<color=#75715e>   * replication stream. Handles that are inactive for more than this time period are automatically</color>
<color=#75715e>   * closed. Note that this does not impact any handles that may have been opened by the</color>
<color=#75715e>   * application.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>{@link <a href="#timeDuration">Duration</a>}</td></color>
<color=#75715e>   * <td>Yes</td></color>
<color=#75715e>   * <td>30 sec</td></color>
<color=#75715e>   * <td>1 sec</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   * @deprecated replaced by {@link ReplicationMutableConfig#REPLAY_DB_HANDLE_TIMEOUT}.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Deprecated</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLAY_DB_HANDLE_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replayOpenHandleTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The amount of time to wait for a Replica to become consistent with the Master, when a <code></color>
<color=#75715e>   * ReplicatedEnvironment</code> handle is created and no <code>ConsistencyPolicy</code> is</color>
<color=#75715e>   * specified. If the Replica does not become consistent within this period, a <code></color>
<color=#75715e>   * ReplicaConsistencyException</code> is thrown by the <code>ReplicatedEnvironment</code></color>
<color=#75715e>   * constructor.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If an explicit <code>ConsistencyPolicy</code> is specified via a constructor argument, then</color>
<color=#75715e>   * the timeout defined by the <code>ConsistencyPolicy</code> argument is used instead of this</color>
<color=#75715e>   * default.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>5 min</td></color>
<color=#75715e>   * <td>10 ms</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ENV_CONSISTENCY_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"envConsistencyTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The amount of time that the {@link</color>
<color=#75715e>   * com.sleepycat.je.Transaction#commit(com.sleepycat.je.Durability)} on the Master will wait for a</color>
<color=#75715e>   * sufficient number of acknowledgments from electable Replicas. If the Master does not receive a</color>
<color=#75715e>   * sufficient number of acknowledgments within this timeout period, the <code>commit()</code> will</color>
<color=#75715e>   * throw {@link InsufficientAcksException}. In the special case of a two node group, if this node</color>
<color=#75715e>   * is the designated <code>Primary</code>, the <code>Primary</code> will be <code>activated</code></color>
<color=#75715e>   * , and the <code>commit()</code> will proceed normally instead of throwing an exception.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>5 s</td></color>
<color=#75715e>   * <td>10 ms</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   * @see ReplicationMutableConfig#DESIGNATED_PRIMARY</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLICA_ACK_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replicaAckTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden The amount of time that the {@link</color>
<color=#75715e>   *     com.sleepycat.je.Transaction#commit(com.sleepycat.je.Durability)} on the Master will wait</color>
<color=#75715e>   *     for acknowledgments from an Arbiter. This wait occurs after waiting for the</color>
<color=#75715e>   *     REPLICA_ACK_TIMEOUT period and not receiving the required number of acknowledgments. If the</color>
<color=#75715e>   *     Master does not receive a sufficient number of acknowledgments within this timeout period,</color>
<color=#75715e>   *     the <code>commit()</code> will throw {@link InsufficientAcksException}.</color>
<color=#75715e>   *     <p></color>
<color=#75715e>   *     <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>2 s</td></color>
<color=#75715e>   * <td>10 ms</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ARBITER_ACK_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"arbiterAckTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The amount of time that a {@link</color>
<color=#75715e>   * ReplicatedEnvironment#beginTransaction(com.sleepycat.je.Transaction,</color>
<color=#75715e>   * com.sleepycat.je.TransactionConfig)} on the Master will wait for a sufficient number of</color>
<color=#75715e>   * electable Replicas, as determined by the default <code>Durability</code> policy, to contact the</color>
<color=#75715e>   * Master. If the timeout period expires before a sufficient number of Replicas contact the</color>
<color=#75715e>   * Master, the {@link ReplicatedEnvironment#beginTransaction(com.sleepycat.je.Transaction,</color>
<color=#75715e>   * com.sleepycat.je.TransactionConfig)} will throw {@link InsufficientReplicasException}. In the</color>
<color=#75715e>   * special case of a two node group, if this node is the designated <code>Primary</code>, the</color>
<color=#75715e>   * <code>Primary</code> will be <code>activated</code>, and the <code>beginTransaction()</code></color>
<color=#75715e>   * will proceed normally instead of throwing an exception.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>10 s</td></color>
<color=#75715e>   * <td>10 ms</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   * @see ReplicationMutableConfig#DESIGNATED_PRIMARY</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>INSUFFICIENT_REPLICAS_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"insufficientReplicasTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum message size which will be accepted by a node (to prevent DOS attacks). While the</color>
<color=#75715e>   * default shown here is 0, it dynamically calculated when the node is created and is set to the</color>
<color=#75715e>   * half of the environment cache size. The cache size is mutable, but changing the cache size at</color>
<color=#75715e>   * run time (after environment initialization) will not change the value of this parameter. If a</color>
<color=#75715e>   * value other than cache size / 2 is desired, this non-mutable parameter should be specified at</color>
<color=#75715e>   * initialization time.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Long</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>half of cache size</td></color>
<color=#75715e>   * <td>256KB</td></color>
<color=#75715e>   * <td>Long.MAX_VALUE</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>MAX_MESSAGE_SIZE</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"maxMessageSize"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the maximum acceptable clock skew between this Replica and its Feeder, which is the node</color>
<color=#75715e>   * that is the source of its replication stream. This value is checked whenever a Replica</color>
<color=#75715e>   * establishes a connection to its replication stream source. The connection is abandoned if the</color>
<color=#75715e>   * clock skew is larger than this value.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>2 s</td></color>
<color=#75715e>   * <td>0 s</td></color>
<color=#75715e>   * <td>1 min</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationConfig#setMaxClockDelta</color>
<color=#75715e>   * @see ReplicationConfig#getMaxClockDelta</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>MAX_CLOCK_DELTA</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"maxClockDelta"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The number of times an unsuccessful election will be retried by a designated <code>Primary</color>
<color=#75715e>   * </code> in a two node group before it is activated and becomes the Master.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr><td>Name</td><td>Type</td><td>Mutable</td></color>
<color=#75715e>   * <td>Default</td><td>Minimum</td><td>Maximum</td></tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>2</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>Integer.MAX_VALUE</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see ReplicationMutableConfig#DESIGNATED_PRIMARY</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ELECTIONS_PRIMARY_RETRIES</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"electionsPrimaryRetries"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The time interval between rebroadcasts of election results by the master node to all nodes not</color>
<color=#75715e>   * currently connected to it. These rebroadcasts help ensure that a replication group is fully</color>
<color=#75715e>   * restored after a network partition, by permitting nodes on either side of the resolved</color>
<color=#75715e>   * partition to catch up with the latest election results.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>A network partition, may in some circumstances, result in a node continuing to think it is</color>
<color=#75715e>   * the master, even though it is on the side of the partition containing a minority of electable</color>
<color=#75715e>   * nodes, and the side with the majority has elected a new master. Rebroadcasting election results</color>
<color=#75715e>   * on a periodic basis ensures that the obsolete master is brought up to date after the network</color>
<color=#75715e>   * partition has been resolved. As a result of the update, the environment at the obsolete master</color>
<color=#75715e>   * will transition into a replica state.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Decreasing the period will result in more frequent broadcasts and thus a faster return to</color>
<color=#75715e>   * normal operations after a network partition has been resolved.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>1 min</td></color>
<color=#75715e>   * <td>1 s</td></color>
<color=#75715e>   * <td>none</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ELECTIONS_REBROADCAST_PERIOD</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"electionsRebroadcastPeriod"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * In rare cases, a node may need to rollback committed transactions in order to rejoin a</color>
<color=#75715e>   * replication group. This parameter limits the number of durable transactions that may be rolled</color>
<color=#75715e>   * back. Durable transactions are transactions that were successfully committed with a durability</color>
<color=#75715e>   * requiring acknowledgments from at least a simple majority of nodes. If the number of durable</color>
<color=#75715e>   * committed transactions targeted for rollback exceeds this parameter, a {@link</color>
<color=#75715e>   * RollbackProhibitedException} will be thrown.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>10</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>Integer.MAX_VALUE</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see RollbackProhibitedException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>TXN_ROLLBACK_LIMIT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"txnRollbackLimit"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * In rare cases, a node may need to rollback committed transactions in order to rejoin a</color>
<color=#75715e>   * replication group. If this parameter is set to true and a rollback is necessary to rejoin the</color>
<color=#75715e>   * group, a {@link RollbackProhibitedException} will be thrown.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Unlike setting {@link #TXN_ROLLBACK_LIMIT} to zero, setting this parameter to true disables</color>
<color=#75715e>   * the rollback without regard to whether the transactions to roll back are considered durable.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Setting {@code TXN_ROLLBACK_DISABLED} to true should not be necessary for most applications.</color>
<color=#75715e>   * Its intended purpose is for the rare application that needs manual control over rollback of all</color>
<color=#75715e>   * transactions, including transactions that are not considered to be durable.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>False</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>TXN_ROLLBACK_DISABLED</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"txnRollbackDisabled"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A heartbeat is exchanged between the feeder and replica to ensure they are alive. This is the</color>
<color=#75715e>   * timeout associated with the heartbeat on the feeder side of the connection.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Reducing this value enables the master to discover failed Replicas, and recycle feeder</color>
<color=#75715e>   * connections, faster. However, it increases the chances of false timeouts, if the network is</color>
<color=#75715e>   * experiencing transient problems, or the Java GC is responsible for long pauses. In the latter</color>
<color=#75715e>   * case, it's generally better to tune the GC to avoid such pauses.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>30 s</td></color>
<color=#75715e>   * <td>2 s</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   * @since 4.0.100</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>FEEDER_TIMEOUT</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"feederTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A heartbeat is exchanged between the feeder and replica to ensure they are alive. This is the</color>
<color=#75715e>   * timeout associated with the heartbeat on the replica side of the connection.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Reducing the value means that a master failure will be discovered more promptly in some</color>
<color=#75715e>   * circumstances and the overall time needed to failover to a new master will be reduced. However,</color>
<color=#75715e>   * it increases the chances of false timeouts, if the network is experiencing transient problems,</color>
<color=#75715e>   * or the Java GC is responsible for long pauses. In the latter case, it's generally better to</color>
<color=#75715e>   * tune the GC to avoid such pauses.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td></color>
<color=#75715e>   * {@link <a href="../EnvironmentConfig.html#timeDuration">Duration</a>}</color>
<color=#75715e>   * </td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>30 s</td></color>
<color=#75715e>   * <td>2 s</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   * @since 4.0.100</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLICA_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replicaTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The size of the the TCP receive buffer associated with the socket used by the replica to</color>
<color=#75715e>   * transfer the replication stream.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Larger values help handle incoming network traffic even when the replica has been paused for</color>
<color=#75715e>   * a garbage collection. The parameter default value of 1 MB should be sufficient in most of the</color>
<color=#75715e>   * environments. Consider increasing the value if network monitoring shows packet loss, or if your</color>
<color=#75715e>   * JE environment contains large data values. Note that if the size specified is larger than the</color>
<color=#75715e>   * operating system constrained maximum, it will be limited to this maximum value. For example, on</color>
<color=#75715e>   * Linux you may need to set the kernel parameter: net.core.rmem_max property using the command:</color>
<color=#75715e>   * <i>sysctl -w net.core.rmem_max=1048576</i> to increase the operating system imposed limit.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>A parameter value of zero will result in the use of operating system specified default</color>
<color=#75715e>   * socket buffer size.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>1048576</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @since 5.0.37</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLICA_RECEIVE_BUFFER_SIZE</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replicaReceiveBufferSize"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum number of transactions that can be grouped to amortize the cost of an fsync when a</color>
<color=#75715e>   * transaction commits with SyncPolicy#SYNC on the Replica. A value of zero effectively turns off</color>
<color=#75715e>   * the group commit optimization.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Specifying larger values can result in more transactions being grouped together decreasing</color>
<color=#75715e>   * average commit times.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>An fsync is issued if the size of the transaction group reaches the maximum within the time</color>
<color=#75715e>   * period specified by {@link #REPLICA_GROUP_COMMIT_INTERVAL}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The {@link ReplicatedEnvironmentStats#getNReplayGroupCommitMaxExceeded()} statistic may be</color>
<color=#75715e>   * used to tune this parameter. Large values indicate that commit throughput could be improved by</color>
<color=#75715e>   * increasing the current value.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>200</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @since 5.0.76</color>
<color=#75715e>   * @see #REPLICA_GROUP_COMMIT_INTERVAL</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLICA_MAX_GROUP_COMMIT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replicaMaxGroupCommit"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The time interval during which transactions may be grouped to amortize the cost of fsync when a</color>
<color=#75715e>   * transaction commits with SyncPolicy#SYNC on the Replica. This parameter is only meaningful if</color>
<color=#75715e>   * the {@link #REPLICA_MAX_GROUP_COMMIT group commit size} is greater than one.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The first (as ordered by transaction serialization) transaction in a transaction group may</color>
<color=#75715e>   * be delayed by at most this amount. Subsequent transactions in the group will have smaller</color>
<color=#75715e>   * delays since they are later in the serialization order.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The {@link ReplicatedEnvironmentStats#getNReplayGroupCommitTimeouts()} statistic may be used</color>
<color=#75715e>   * to tune this parameter. Large numbers of timeouts in conjunction with large numbers of group</color>
<color=#75715e>   * commits ( {@link ReplicatedEnvironmentStats#getNReplayGroupCommits()}) indicate that commit</color>
<color=#75715e>   * throughput could be improved by increasing the time interval.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>{@link <a href="#timeDuration">Duration</a>}</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>3 ms</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @since 5.0.76</color>
<color=#75715e>   * @see #REPLICA_MAX_GROUP_COMMIT</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>REPLICA_GROUP_COMMIT_INTERVAL</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"replicaGroupCommitInterval"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The maximum amount of time for the internal housekeeping, like elections, syncup with the</color>
<color=#75715e>   * master, etc. to be accomplished when opening a new handle to an environment.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This timeout does not encompass the time spent making the node consistent with the master,</color>
<color=#75715e>   * if it is a Replica. The timeout associated with making a replica consistent is normally</color>
<color=#75715e>   * determined by the {@link #ENV_CONSISTENCY_TIMEOUT} parameter but can be overridden by the</color>
<color=#75715e>   * timeout associated with the <code>ReplicaConsistencyPolicy</code> if a <code>consistencyPolicy</color>
<color=#75715e>   * </code> argument was supplied to the handle constructor.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the default value (10 hours) is a long time to allow for cases where elections may</color>
<color=#75715e>   * take a long time when other nodes are not available.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Duration</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>10 h</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   *</color>
<color=#75715e>   * @see <a href="../EnvironmentConfig.html#timeDuration">Time Duration Properties</a></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ENV_SETUP_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"envSetupTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden</color>
<color=#75715e>   * @deprecated For internal use only.</color>
<color=#75715e>   *     <p>When set to <code>true</code>, it permits opening of a ReplicatedEnvironment handle in</color>
<color=#75715e>   *     the {@link ReplicatedEnvironment.State#UNKNOWN} state, if a Master could not be determined</color>
<color=#75715e>   *     within the timeout specified by {@link ReplicationConfig#ENV_SETUP_TIMEOUT}. If it's false,</color>
<color=#75715e>   *     an <code></color>
<color=#75715e>   * UnknownMasterException</code> exception is thrown upon expiration of the timeout.</color>
<color=#75715e>   *     <p>A ReplicatedEnvironment handle in the {@link ReplicatedEnvironment.State#UNKNOWN} state</color>
<color=#75715e>   *     can only be used to initiate read operations with an appropriately relaxed {@link</color>
<color=#75715e>   *     NoConsistencyRequiredPolicy}; write operations will fail with a <code>ReplicaWriteException</color>
<color=#75715e>   *     </code>. The handle will transition to a <code>Master</code> or <code>Replica</code> state</color>
<color=#75715e>   *     when it can contact a sufficient number of other nodes in the replication group.</color>
<color=#75715e>   *     <p></color>
<color=#75715e>   *     <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>False</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Deprecated</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ALLOW_UNKNOWN_STATE_ENV_OPEN</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"allowUnknownStateEnvOpen"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Permits opening of a ReplicatedEnvironment handle in the</color>
<color=#75715e>   * {@link ReplicatedEnvironment.State#UNKNOWN} state, if a Master cannot be</color>
<color=#75715e>   * determined within this timeout period. For the timeout to be meaningful</color>
<color=#75715e>   * it must be less than {@link #ENV_SETUP_TIMEOUT}. This parameter is</color>
<color=#75715e>   * ignored when creating a replicated environment for the first time.</color>
<color=#75715e>   * <p></color>
<color=#75715e>   * A ReplicatedEnvironment handle in the</color>
<color=#75715e>   * {@link ReplicatedEnvironment.State#UNKNOWN} state can only be used to</color>
<color=#75715e>   * initiate read operations with an appropriately relaxed, e.g.</color>
<color=#75715e>   * {@link NoConsistencyRequiredPolicy}; write operations will fail with a</color>
<color=#75715e>   * {@link ReplicaWriteException}. The handle will transition to a</color>
<color=#75715e>   * {@code Master} or {@code Replica} state when it can contact a</color>
<color=#75715e>   * sufficient number of other nodes in the replication group.</color>
<color=#75715e>   * <p></color>
<color=#75715e>   * If the parameter is set to zero, and an election cannot be concluded</color>
<color=#75715e>   * within the timeout defined by {@link #ENV_SETUP_TIMEOUT}, the</color>
<color=#75715e>   * ReplicatedEnvironment constructor will throw {@link</color>
<color=#75715e>   * UnknownMasterException}.</color>
<color=#75715e>   * <p></color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Duration</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * <td><code>ENV_SETUP_TIMEOUT</code></td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   *</color>
<color=#75715e>   * @since 5.0.33</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ENV_UNKNOWN_STATE_TIMEOUT</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"envUnknownStateTimeout"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * When set to <code>true</code>, which is currently the default, the replication network protocol</color>
<color=#75715e>   * will use the JVM platform default charset (text encoding) for node names and host names. This</color>
<color=#75715e>   * is incorrect, in that it requires that the JVM for all nodes in a replication group have the</color>
<color=#75715e>   * same default charset.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When this parameter is set to <code>false</code>, the UTF-8 charset is always used in the</color>
<color=#75715e>   * replication protocol. In other words, the JVM default charset has no impact on the replication</color>
<color=#75715e>   * protocol.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>An application is <em>not</em> impacted by this issue, and does not need to set this</color>
<color=#75715e>   * parameter, if it has the following characteristics.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <ul></color>
<color=#75715e>   *   <li>The default charset on all JVMs is UTF-8 or ASCII, or</color>
<color=#75715e>   *   <li>all node names and host names contain only ASCII characters, and the default charset on</color>
<color=#75715e>   *       all JVMs is a superset of ASCII.</color>
<color=#75715e>   * </ul></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>In JE 5.1, the default value for this parameter will be changed to false. In preparation for</color>
<color=#75715e>   * this, impacted applications should explicitly set the parameter to false at the next available</color>
<color=#75715e>   * opportunity. For applications not yet deployed, this should be done now. For deployed</color>
<color=#75715e>   * applications, a hot upgrade may not be performed when changing the parameter. Instead, a cold</color>
<color=#75715e>   * upgrade must be performed: all nodes must be stopped and upgraded before bringing them up</color>
<color=#75715e>   * again. In other words, for impacted applications the value of this configuration parameter must</color>
<color=#75715e>   * be the same for all running nodes in a replication group.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the default charset issue applies only to the replication network protocol and not</color>
<color=#75715e>   * to stored data of any kind.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>True</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PROTOCOL_OLD_STRING_ENCODING</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"protocolOldStringEncoding"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only.</color>
<color=#75715e>   *     <p>When set to <code>true</code> the ReplicatedEnvironment will be used by the Arbiter. *</color>
<color=#75715e>   *     <p></color>
<color=#75715e>   *     <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Boolean</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>False</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ARBITER_USE</color> <color=#f92672>=</color> <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"arbiterUse"</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The size of the the queue used to hold commit records that the Feeder uses to request</color>
<color=#75715e>   * acknowledgment from an Arbiter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>An entry is attempted to be put on the queue. If it cannot be done within a certain amount</color>
<color=#75715e>   * of time, the transaction will fail due to insufficient acks.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * <table border="1"></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>Name</td></color>
<color=#75715e>   * <td>Type</td></color>
<color=#75715e>   * <td>Mutable</td></color>
<color=#75715e>   * <td>Default</td></color>
<color=#75715e>   * <td>Minimum</td></color>
<color=#75715e>   * <td>Maximum</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * <tr></color>
<color=#75715e>   * <td>{@value}</td></color>
<color=#75715e>   * <td>Integer</td></color>
<color=#75715e>   * <td>No</td></color>
<color=#75715e>   * <td>4096</td></color>
<color=#75715e>   * <td>0</td></color>
<color=#75715e>   * <td>-none-</td></color>
<color=#75715e>   * </tr></color>
<color=#75715e>   * </table></color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ARBITER_OUTPUT_QUEUE_SIZE</color> <color=#f92672>=</color>
      <color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>REP_PARAM_PREFIX</color> <color=#f92672>+</color> <color=#e6db74>"arbiterOutputQueueSize"</color><color=#f8f8f2>;</color>

  <color=#75715e>/** @hidden For internal use, to allow null as a valid value for the config parameter. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>ReplicationConfig</color> <color=#f8f8f2>DEFAULT</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReplicationConfig</color><color=#f8f8f2>();</color>

  <color=#75715e>/* Support conversion of a non-replicated environment to replicated. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>allowConvert</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The ReplicationNetworkConfig portion of the overall replication</color>
<color=#75715e>   * configuration.</color>
<color=#75715e>   *</color>
<color=#75715e>   * This field should be typed as ReplicationNetworkConfig, but because this</color>
<color=#75715e>   * class is serializable and field is not transient, javadoc wants to</color>
<color=#75715e>   * describe it as part of the javadoc output, but the fact that the type is</color>
<color=#75715e>   * hidden causes javadoc to encounter a NullPointerException.  As a</color>
<color=#75715e>   * temporary measure, this class is typed as Object in order to avoid</color>
<color=#75715e>   * the javadoc error.  When ReplicationNetworkConfig becomes public, the</color>
<color=#75715e>   * type of the field should be changed to ReplicationNetworkConfig.  This</color>
<color=#75715e>   * will not cause any problems with cross-release serialization as long as</color>
<color=#75715e>   * we take care that only ReplicationNetworkConfig instances are assigned</color>
<color=#75715e>   * to this field.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>repNetConfig</color> <color=#f92672>=</color> <color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>createDefault</color><color=#f8f8f2>();</color>

  <color=#75715e>/* A ProgressListener for tracking this node's syncups. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>transient</color> <color=#f8f8f2>ProgressListener</color><color=#f92672><</color><color=#f8f8f2>SyncupProgress</color><color=#f92672>></color> <color=#f8f8f2>syncupProgressListener</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>transient</color> <color=#f8f8f2>LogFileRewriteListener</color> <color=#f8f8f2>logRewriteListener</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>transient</color> <color=#f8f8f2>FeederFilter</color> <color=#f8f8f2>feederFilter</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>transient</color> <color=#f8f8f2>StreamAuthenticator</color> <color=#f8f8f2>authenticator</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a ReplicationConfig initialized with the system default settings. Defaults are</color>
<color=#75715e>   * documented with the string constants in this class.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>ReplicationConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a ReplicationConfig initialized with the system default settings and the specified</color>
<color=#75715e>   * group name, node name, and hostname/port values.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the node name is immutable. Normally the host name should not be used as the node</color>
<color=#75715e>   * name, unless you intend to reuse the host name when a machine fails and is replaced, or the</color>
<color=#75715e>   * node is upgraded to new hardware.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param groupName the name for the replication group</color>
<color=#75715e>   * @param nodeName the name for this node</color>
<color=#75715e>   * @param hostPort the hostname and port for this node</color>
<color=#75715e>   * @see #setGroupName</color>
<color=#75715e>   * @see #setNodeName</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>ReplicationConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>hostPort</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>setGroupName</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>setNodeName</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>setNodeHostPort</color><color=#f8f8f2>(</color><color=#f8f8f2>hostPort</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a ReplicationConfig which includes the properties specified in the properties</color>
<color=#75715e>   * parameter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param properties Supported properties are described as the string constants in this class.</color>
<color=#75715e>   * @throws IllegalArgumentException If any properties read from the properties parameter are</color>
<color=#75715e>   *     invalid.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>ReplicationConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>Properties</color> <color=#f8f8f2>properties</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>properties</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/* validateParams */</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>propagateRepNetProps</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Internal use only, from RepConfigManager. */</color>
  <color=#f8f8f2>ReplicationConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>Properties</color> <color=#f8f8f2>properties</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>properties</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>propagateRepNetProps</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the name associated with the replication group.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the name of this replication group.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getGroupName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>GROUP_NAME</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the name for the replication group.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The name should consist of letters, digits, and/or hyphen ("-"), underscore ("_"), or period</color>
<color=#75715e>   * (".").</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param groupName the string representing the name</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   * @throws IllegalArgumentException If the string name is not valid</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setGroupName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setGroupNameVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>groupName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setGroupNameVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>GROUP_NAME</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Returns a boolean that specifies if we need to convert the existing logs to replicated</color>
<color=#75715e>   * format.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if we want to convert the existing logs to replicated format</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>getAllowConvert</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>allowConvert</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For internal use only.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If set to true, this environment should be converted to replicated format.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param allowConvert if true, this environment should be converted to replicated format.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>setAllowConvert</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>allowConvert</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>allowConvert</color> <color=#f92672>=</color> <color=#f8f8f2>allowConvert</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the unique name associated with this node.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the node name</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_NAME</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the name to be associated with this node. It must be unique within the group. When the</color>
<color=#75715e>   * node is instantiated and joins the replication group, a check is done to ensure that the name</color>
<color=#75715e>   * is unique, and a {@link RestartRequiredException} is thrown if it is not.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The name should consist of letters, digits, and/or hyphen ("-"), underscore ("_"), or period</color>
<color=#75715e>   * (".").</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that the node name is immutable. Normally the host name should not be used as the node</color>
<color=#75715e>   * name, unless you intend to reuse the host name when a machine fails and is replaced, or the</color>
<color=#75715e>   * node is upgraded to new hardware.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param nodeName the node name for this replicated environment.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   * @throws IllegalArgumentException If the name is not valid</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setNodeName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setNodeNameVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setNodeNameVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_NAME</color><color=#f8f8f2>,</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the {@link NodeType} of this node.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the node type</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>NodeType</color> <color=#a6e22e>getNodeType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_TYPE</color><color=#f8f8f2>.</color><color=#a6e22e>getEnumerator</color><color=#f8f8f2>(</color><color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_TYPE</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the type of this node.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param nodeType the node type</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setNodeType</color><color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setNodeTypeVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeType</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setNodeTypeVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_TYPE</color><color=#f8f8f2>,</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>(),</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the hostname and port associated with this node. The hostname and port combination are</color>
<color=#75715e>   * denoted by a string of the form:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre></color>
<color=#75715e>   *   hostname:port</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the hostname and port string.</color>
<color=#75715e>   * @see ReplicationConfig#NODE_HOST_PORT</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeHostPort</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_HOST_PORT</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the hostname and port associated with this node. The hostname and port combination are</color>
<color=#75715e>   * denoted by a string of the form:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <pre></color>
<color=#75715e>   *  hostname[:port]</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   *</color>
<color=#75715e>   * The port must be outside the range of "Well Known Ports" (zero through 1023).</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param hostPort the string containing the hostname and port as above.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   * @see ReplicationConfig#NODE_HOST_PORT</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setNodeHostPort</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>hostPort</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setNodeHostPortVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>hostPort</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setNodeHostPortVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>hostPort</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_HOST_PORT</color><color=#f8f8f2>,</color> <color=#f8f8f2>hostPort</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the configured replica timeout value.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the timeout in milliseconds</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getReplicaAckTimeout</color><color=#f8f8f2>(</color><color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getDurationVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>REPLICA_ACK_TIMEOUT</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Set the replica commit timeout.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param replicaAckTimeout time in milliseconds</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setReplicaAckTimeout</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>replicaAckTimeout</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setReplicaAckTimeoutVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>replicaAckTimeout</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setReplicaAckTimeoutVoid</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>replicaAckTimeout</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setDurationVal</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>REPLICA_ACK_TIMEOUT</color><color=#f8f8f2>,</color> <color=#f8f8f2>replicaAckTimeout</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the maximum acceptable clock skew between this Replica and its Feeder, which is the</color>
<color=#75715e>   * node that is the source of its replication stream.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the max permissible clock skew</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getMaxClockDelta</color><color=#f8f8f2>(</color><color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getDurationVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_CLOCK_DELTA</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the maximum acceptable clock skew between this Replica and its Feeder, which is the node</color>
<color=#75715e>   * that is the source of its replication stream. This value is checked whenever a Replica</color>
<color=#75715e>   * establishes a connection to its replication stream source. The connection is abandoned if the</color>
<color=#75715e>   * clock skew is larger than this value.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param maxClockDelta the maximum acceptable clock skew</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   * @throws IllegalArgumentException if the value is not a positive integer</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setMaxClockDelta</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>maxClockDelta</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setMaxClockDeltaVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>maxClockDelta</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMaxClockDeltaVoid</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>maxClockDelta</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setDurationVal</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_CLOCK_DELTA</color><color=#f8f8f2>,</color> <color=#f8f8f2>maxClockDelta</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>,</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the consistency policy to be associated with the configuration. This policy acts as the</color>
<color=#75715e>   * default policy used to govern the consistency requirements when starting new transactions. See</color>
<color=#75715e>   * the {@link <a href="{@docRoot}../ReplicationGuide/consistency.html">overview on consistency in</color>
<color=#75715e>   * replicated systems</a>} for more background.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param policy the consistency policy to be set for this config.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setConsistencyPolicy</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicaConsistencyPolicy</color> <color=#f8f8f2>policy</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setConsistencyPolicyVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>policy</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setConsistencyPolicyVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicaConsistencyPolicy</color> <color=#f8f8f2>policy</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setVal</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>CONSISTENCY_POLICY</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getPropertyString</color><color=#f8f8f2>(</color><color=#f8f8f2>policy</color><color=#f8f8f2>),</color> <color=#f8f8f2>validateParams</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the default consistency policy associated with the configuration.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>If the user does not set the default consistency policy through {@link</color>
<color=#75715e>   * ReplicationConfig#setConsistencyPolicy}, the system will use the policy defined by {@link</color>
<color=#75715e>   * ReplicationConfig#CONSISTENCY_POLICY}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the consistency policy currently associated with this config.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicaConsistencyPolicy</color> <color=#a6e22e>getConsistencyPolicy</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>propertyValue</color> <color=#f92672>=</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>CONSISTENCY_POLICY</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>RepUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getReplicaConsistencyPolicy</color><color=#f8f8f2>(</color><color=#f8f8f2>propertyValue</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>paramName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNetPropertySet</color><color=#f8f8f2>().</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>paramName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>getRepNetConfig</color><color=#f8f8f2>().</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color><color=#f8f8f2>paramName</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>setConfigParam</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>props</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>paramName</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>value</color><color=#f8f8f2>,</color>
          <color=#66d9ef>false</color><color=#f8f8f2>,</color> <color=#75715e>/* require mutability. */</color>
          <color=#f8f8f2>validateParams</color><color=#f8f8f2>,</color>
          <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#75715e>/* forReplication */</color>
          <color=#66d9ef>true</color><color=#f8f8f2>);</color> <color=#75715e>/* verifyForReplication */</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden SSL deferred Get the replication service net configuration associated with this</color>
<color=#75715e>   *     ReplicationConfig.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationNetworkConfig</color> <color=#a6e22e>getRepNetConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>repNetConfig</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden SSL deferred Set the replication service net configuration associated with this</color>
<color=#75715e>   *     ReplicationConfig.</color>
<color=#75715e>   * @param netConfig the new ReplicationNetworkConfig to be associated with this ReplicationConfig.</color>
<color=#75715e>   *     This must not be null.</color>
<color=#75715e>   * @throws IllegalArgumentException if the netConfig is null</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setRepNetConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicationNetworkConfig</color> <color=#f8f8f2>netConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setRepNetConfigVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>netConfig</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For bean editors */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setRepNetConfigVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicationNetworkConfig</color> <color=#f8f8f2>netConfig</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>netConfig</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"netConfig may not be null"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>repNetConfig</color> <color=#f92672>=</color> <color=#f8f8f2>netConfig</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns a copy of this configuration object. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>clone</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ReplicationConfig</color> <color=#f8f8f2>copy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicationConfig</color><color=#f8f8f2>)</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>copy</color><color=#f8f8f2>.</color><color=#a6e22e>setRepNetConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>getRepNetConfig</color><color=#f8f8f2>().</color><color=#a6e22e>clone</color><color=#f8f8f2>());</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>copy</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>CloneNotSupportedException</color> <color=#f8f8f2>willNeverOccur</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For use by this class and by ReplicatedEnvironment.setupRepConfig() Moves any</color>
<color=#75715e>   *     properties that belong to ReplicationNetworkConfig to repNetConfig. This is intended to be</color>
<color=#75715e>   *     called after a bulk property load.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>propagateRepNetProps</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* If there is no current RepNetConfig, simply adopt the new config. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>ReplicationNetworkConfig</color> <color=#f8f8f2>rnConfig</color> <color=#f92672>=</color> <color=#f8f8f2>getRepNetConfig</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>rnConfig</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>setRepNetConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>create</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>));</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Construct a new properties set that includes both the properties</color>
<color=#75715e>     * that we hold directly, plus any properties stored on an existing</color>
<color=#75715e>     * repNetConfig object.  Our properties will override those on</color>
<color=#75715e>     * repNetConfig.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Properties</color> <color=#f8f8f2>combProps</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Properties</color><color=#f8f8f2>(</color><color=#f8f8f2>rnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getProps</color><color=#f8f8f2>());</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>propName</color> <color=#f8f8f2>:</color> <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>stringPropertyNames</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>combProps</color><color=#f8f8f2>.</color><color=#a6e22e>setProperty</color><color=#f8f8f2>(</color><color=#f8f8f2>propName</color><color=#f8f8f2>,</color> <color=#f8f8f2>props</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#f8f8f2>propName</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Create a new ReplicationNetworkConfig instance based on the combined</color>
<color=#75715e>     * properties.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>ReplicationNetworkConfig</color> <color=#f8f8f2>newRepNetConfig</color> <color=#f92672>=</color> <color=#f8f8f2>ReplicationNetworkConfig</color><color=#f8f8f2>.</color><color=#a6e22e>create</color><color=#f8f8f2>(</color><color=#f8f8f2>combProps</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * If the type of the config object did not change, there may be</color>
<color=#75715e>     * non-property fields that should be retained from the original,</color>
<color=#75715e>     * so use the orignal object and just change the properties.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newRepNetConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getClass</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>repNetConfig</color><color=#f8f8f2>.</color><color=#a6e22e>getClass</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>rnConfig</color><color=#f8f8f2>.</color><color=#a6e22e>applyRepNetProperties</color><color=#f8f8f2>(</color><color=#f8f8f2>combProps</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>setRepNetConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>newRepNetConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only: Internal convenience method.</color>
<color=#75715e>   *     <p>Returns the set of sockets associated with helper nodes. This method should only be used</color>
<color=#75715e>   *     when the configuration object is known to have an authoritative value for the helper hosts</color>
<color=#75715e>   *     values. In a replication node, the je.properties file may override the values in this</color>
<color=#75715e>   *     configuration object.</color>
<color=#75715e>   * @return the set of helper sockets, returns an empty set if there are no helpers.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#a6e22e>getHelperSockets</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>HostPortPair</color><color=#f8f8f2>.</color><color=#a6e22e>getSockets</color><color=#f8f8f2>(</color><color=#f8f8f2>getHelperHosts</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden Internal convenience methods for returning replication sockets.</color>
<color=#75715e>   *     <p>This method should only be used when the configuration object is known to have an</color>
<color=#75715e>   *     authoritative value for its socket value. In a replication node, the je.properties file may</color>
<color=#75715e>   *     override the values in this configuration object.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>InetSocketAddress</color> <color=#a6e22e>getNodeSocketAddress</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>InetSocketAddress</color><color=#f8f8f2>(</color><color=#f8f8f2>getNodeHostname</color><color=#f8f8f2>(),</color> <color=#f8f8f2>getNodePort</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the hostname component of the nodeHost property.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the hostname string</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeHostname</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>hostAndPort</color> <color=#f92672>=</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_HOST_PORT</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>colonToken</color> <color=#f92672>=</color> <color=#f8f8f2>hostAndPort</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>":"</color><color=#f8f8f2>);</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>colonToken</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>hostAndPort</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>colonToken</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>hostAndPort</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the port component of the nodeHost property.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the port number</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getNodePort</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>hostAndPort</color> <color=#f92672>=</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>NODE_HOST_PORT</color><color=#f8f8f2>);</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>colonToken</color> <color=#f92672>=</color> <color=#f8f8f2>hostAndPort</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>":"</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>String</color> <color=#f8f8f2>portString</color> <color=#f92672>=</color>
        <color=#f8f8f2>(</color><color=#f8f8f2>colonToken</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color>
            <color=#f92672>?</color> <color=#f8f8f2>hostAndPort</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#f8f8f2>colonToken</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color>
            <color=#f8f8f2>:</color> <color=#f8f8f2>DbConfigManager</color><color=#f8f8f2>.</color><color=#a6e22e>getVal</color><color=#f8f8f2>(</color><color=#f8f8f2>props</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_PORT</color><color=#f8f8f2>);</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>parseInt</color><color=#f8f8f2>(</color><color=#f8f8f2>portString</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configure the environment to make periodic calls to a {@link ProgressListener} to provide</color>
<color=#75715e>   * feedback on replication stream sync-up. The ProgressListener.progress() method is called at</color>
<color=#75715e>   * different stages of the syncup process. See {@link SyncupProgress} for information about those</color>
<color=#75715e>   * stages.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When using progress listeners, review the information at {@link ProgressListener#progress}</color>
<color=#75715e>   * to avoid any unintended disruption to replication stream syncup.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param progressListener The ProgressListener to callback during environment instantiation</color>
<color=#75715e>   *     (syncup).</color>
<color=#75715e>   * @see <a href="{@docRoot}/../ReplicationGuide/progoverviewlifecycle.html"</color>
<color=#75715e>   *     target="_top">Replication Group Life Cycle</a></color>
<color=#75715e>   * @since 5.0</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setSyncupProgressListener</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>ProgressListener</color><color=#f92672><</color><color=#f8f8f2>SyncupProgress</color><color=#f92672>></color> <color=#f8f8f2>progressListener</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setSyncupProgressListenerVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>progressListener</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setSyncupProgressListenerVoid</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>ProgressListener</color><color=#f92672><</color><color=#f8f8f2>SyncupProgress</color><color=#f92672>></color> <color=#f8f8f2>progressListener</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>syncupProgressListener</color> <color=#f92672>=</color> <color=#f8f8f2>progressListener</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Return the ProgressListener to be used at this environment startup. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ProgressListener</color><color=#f92672><</color><color=#f8f8f2>SyncupProgress</color><color=#f92672>></color> <color=#a6e22e>getSyncupProgressListener</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>syncupProgressListener</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden Installs a callback to be notified when JE is about to modify previously written log</color>
<color=#75715e>   *     files.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setLogFileRewriteListener</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>LogFileRewriteListener</color> <color=#f8f8f2>listener</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setLogFileRewriteListenerVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>listener</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setLogFileRewriteListenerVoid</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>LogFileRewriteListener</color> <color=#f8f8f2>l</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>logRewriteListener</color> <color=#f92672>=</color> <color=#f8f8f2>l</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LogFileRewriteListener</color> <color=#a6e22e>getLogFileRewriteListener</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>logRewriteListener</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden Configures a filter object that is transmitted to the remote Feeder as part of the</color>
<color=#75715e>   *     replica feeder syncup. The remote feeder then invokes this filter on each record before it</color>
<color=#75715e>   *     sends the record to the replica. The filter can be used to filter out replication records</color>
<color=#75715e>   *     at the feeder itself and this eliminate the feeder to replica transmission overhead for</color>
<color=#75715e>   *     records in which it has no interest.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setFeederFilter</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>FeederFilter</color> <color=#f8f8f2>feederFilter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setFeederFilterVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>feederFilter</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setFeederFilterVoid</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>FeederFilter</color> <color=#f8f8f2>feederFilter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>feederFilter</color> <color=#f92672>=</color> <color=#f8f8f2>feederFilter</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>FeederFilter</color> <color=#a6e22e>getFeederFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>feederFilter</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden Sets the feeder authenticator.</color>
<color=#75715e>   * @param authenticator the feeder authenticator</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationConfig</color> <color=#a6e22e>setAuthenticator</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>StreamAuthenticator</color> <color=#f8f8f2>authenticator</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>setAuthenticatorVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>authenticator</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden Sets the feeder authenticator</color>
<color=#75715e>   * @param authenticator feeder authenticator</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAuthenticatorVoid</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>StreamAuthenticator</color> <color=#f8f8f2>authenticator</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>authenticator</color> <color=#f92672>=</color> <color=#f8f8f2>authenticator</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden Returns feeder authenticator</color>
<color=#75715e>   * @return feeder authenticator, null if no feeder authenticator is available.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>StreamAuthenticator</color> <color=#a6e22e>getAuthenticator</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>authenticator</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden For internal use only.</color>
<color=#75715e>   *     <p>Performs the checks need to ensure that this is a valid replicated environment</color>
<color=#75715e>   *     configuration. This method must only be invoked after all the appropriate fields are set.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>verify</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>getGroupName</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#e6db74>""</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>getGroupName</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Missing group name"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>getNodeName</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#e6db74>""</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>getNodeName</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Missing node name"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>getNodeHostPort</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#e6db74>""</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>getNodeHostPort</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Missing node host"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>