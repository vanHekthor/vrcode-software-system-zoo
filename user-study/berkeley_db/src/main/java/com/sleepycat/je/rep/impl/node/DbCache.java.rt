<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseId</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbTree</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.TriggerManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepConfigManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Txn</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Iterator</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.LinkedHashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Cache used to maintain DatabaseImpl handles. The cache retains some configurable number of MRU</color>
<color=#75715e> * entries. In addition, the cache will discard MRU entries that have not been used within a</color>
<color=#75715e> * configurable timeout period.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Implementation notes:</color>
<color=#75715e> *</color>
<color=#75715e> * <ul></color>
<color=#75715e> *   <li>The methods are not synchronized, since it's used exclusively from the single threaded</color>
<color=#75715e> *       replay thread.</color>
<color=#75715e> *   <li>The timeout mechanism is coarse and is implemented by a lightweight tick mechanism that</color>
<color=#75715e> *       minimizes calls to the system clock, since we expect the cache to be consulted very</color>
<color=#75715e> *       frequently and need to minimize the overhead. The tick method should be invoked with a</color>
<color=#75715e> *       period that's less than the timeout interval if it is to work effectively.</color>
<color=#75715e> * </ul></color>
<color=#75715e> */</color>
<color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"serial"</color><color=#f8f8f2>)</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>DbCache</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>DbCacheLinkedHashMap</color> <color=#f8f8f2>map</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>DbTree</color> <color=#f8f8f2>dbTree</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxEntries</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>timeoutMs</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The current tick and its associated timestamp. It's updated by the</color>
<color=#75715e>   * tick() method.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>tick</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>tickTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates an instance of a DbCache.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param dbTree the source of the data being cached</color>
<color=#75715e>   * @param maxEntries the max MRU entries to be retained in the cache</color>
<color=#75715e>   * @param timeoutMs the timeout used to remove stale entries. A timeout value of zero means that</color>
<color=#75715e>   *     each call to tick() will move the "clock" forward. It's useful for testing purposes.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>DbCache</color><color=#f8f8f2>(</color><color=#f8f8f2>DbTree</color> <color=#f8f8f2>dbTree</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxEntries</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>timeoutMs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>dbTree</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dbTree</color> <color=#f92672>=</color> <color=#f8f8f2>dbTree</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>timeoutMs</color> <color=#f92672>=</color> <color=#f8f8f2>timeoutMs</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>maxEntries</color> <color=#f92672>=</color> <color=#f8f8f2>maxEntries</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>map</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DbCacheLinkedHashMap</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The tick() method forms the basis for removing stale entries from the cache. It effectively</color>
<color=#75715e>   * advances the "clock" and removes any entries that have been rendered stale.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>tick</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>timeoutMs</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>tickTime</color><color=#f8f8f2>)</color> <color=#f92672><=</color> <color=#f8f8f2>timeoutMs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>Info</color><color=#f92672>></color> <color=#f8f8f2>vi</color> <color=#f92672>=</color> <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>().</color><color=#a6e22e>iterator</color><color=#f8f8f2>();</color> <color=#f8f8f2>vi</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>();</color> <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Info</color> <color=#f8f8f2>dbInfo</color> <color=#f92672>=</color> <color=#f8f8f2>vi</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbInfo</color><color=#f8f8f2>.</color><color=#a6e22e>lastAccess</color> <color=#f92672><</color> <color=#f8f8f2>tick</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>release</color><color=#f8f8f2>(</color><color=#f8f8f2>dbInfo</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>vi</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>tick</color><color=#f92672>++</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>tickTime</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>release</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>dbTree</color><color=#f8f8f2>.</color><color=#a6e22e>releaseDb</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>noteWriteHandleClose</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>TriggerManager</color><color=#f8f8f2>.</color><color=#a6e22e>runCloseTriggers</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the DatabaseImpl associated with the dbId, caching the return value, if it's not</color>
<color=#75715e>   * already cached. The open triggers will be invoked if this was the first write reference.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param dbId the dbId that is to be resolved.</color>
<color=#75715e>   * @return the corresponding DatabaseImpl</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>DatabaseImpl</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseId</color> <color=#f8f8f2>dbId</color><color=#f8f8f2>,</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Info</color> <color=#f8f8f2>info</color> <color=#f92672>=</color> <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>dbId</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>info</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>lastAccess</color> <color=#f92672>=</color> <color=#f8f8f2>tick</color><color=#f8f8f2>;</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>info</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Info</color><color=#f8f8f2>(</color><color=#f8f8f2>dbTree</color><color=#f8f8f2>.</color><color=#a6e22e>getDb</color><color=#f8f8f2>(</color><color=#f8f8f2>dbId</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>dbId</color><color=#f8f8f2>,</color> <color=#f8f8f2>info</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>noteWriteHandleOpen</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>TriggerManager</color><color=#f8f8f2>.</color><color=#a6e22e>runOpenTriggers</color><color=#f8f8f2>(</color><color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>info</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Updates the configuration of the db cache, by resetting <code>maxEntries</code> and <code></color>
<color=#75715e>   * timeoutMs</code> to the configured values.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that setting the cache to a smaller max entry does not immediately reduce the number of</color>
<color=#75715e>   * entries currently in the cache, if the size of the cache is already at the maximum. The</color>
<color=#75715e>   * reduction will take place incrementally over time, as calls to "put" operations are made and</color>
<color=#75715e>   * {@link DbCacheLinkedHashMap#removeEldestEntry} is invoked for each put operation. This</color>
<color=#75715e>   * incremental cache size reduction is not expected to be a significant drawback in practice.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param configMgr the configuration holding the cache parameters</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>RepConfigManager</color> <color=#f8f8f2>configMgr</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>maxEntries</color> <color=#f92672>=</color> <color=#f8f8f2>configMgr</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>REPLAY_MAX_OPEN_DB_HANDLES</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>timeoutMs</color> <color=#f92672>=</color> <color=#f8f8f2>configMgr</color><color=#f8f8f2>.</color><color=#a6e22e>getDuration</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>REPLAY_DB_HANDLE_TIMEOUT</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the max entries that can be held by the cache. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getMaxEntries</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>maxEntries</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the configured timeout in ms. If a db handle has been inactive for a period of time</color>
<color=#75715e>   * that exceeds the timeout it's removed from the cache.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getTimeoutMs</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>timeoutMs</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Clears out the cache releasing db handles as well */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>clear</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Info</color> <color=#f8f8f2>dbInfo</color> <color=#f8f8f2>:</color> <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>release</color><color=#f8f8f2>(</color><color=#f8f8f2>dbInfo</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>map</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* For testing only. */</color>
  <color=#f8f8f2>LinkedHashMap</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f8f8f2>,</color> <color=#f8f8f2>Info</color><color=#f92672>></color> <color=#a6e22e>getMap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>map</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Struct to associate a tick with the dbImpl */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>Info</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>lastAccess</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>Info</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lastAccess</color> <color=#f92672>=</color> <color=#f8f8f2>DbCache</color><color=#f8f8f2>.</color><color=#a6e22e>this</color><color=#f8f8f2>.</color><color=#a6e22e>tick</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Subclass supplies the method used to remove the LRU entry and the bookkeeping that goes along</color>
<color=#75715e>   * with it.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>DbCacheLinkedHashMap</color> <color=#66d9ef>extends</color> <color=#f8f8f2>LinkedHashMap</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f8f8f2>,</color> <color=#f8f8f2>Info</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>boolean</color> <color=#a6e22e>removeEldestEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f8f8f2>,</color> <color=#f8f8f2>Info</color><color=#f92672>></color> <color=#f8f8f2>eldest</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>size</color><color=#f8f8f2>()</color> <color=#f92672><=</color> <color=#f8f8f2>maxEntries</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>release</color><color=#f8f8f2>(</color><color=#f8f8f2>eldest</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>().</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>