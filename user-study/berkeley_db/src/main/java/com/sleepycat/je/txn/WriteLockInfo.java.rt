<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.txn</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.tree.Key</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DbLsn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#75715e>/*</color>
<color=#75715e> * Given a locker T and a record R, a WriteLockInfo stores the info needed to</color>
<color=#75715e> * undo the write ops (insertions, deletions, or updates) performed by T on</color>
<color=#75715e> * R, if T aborts. Specifically, it stores the info needed to restore R to its</color>
<color=#75715e> * "abort" version, i.e., the version of R that existed at the time when T</color>
<color=#75715e> * locked R for the 1st time (and before T actually performed its 1st write</color>
<color=#75715e> * op on R). Given that only transactional lockers may abort, WriteLockInfo</color>
<color=#75715e> * are used by Txn lockers only.</color>
<color=#75715e> *</color>
<color=#75715e> * Notice that, conceptually, to write R, T locks R in exclusive mode and</color>
<color=#75715e> * retains that lock until it terminates (commits or aborts). In other words,</color>
<color=#75715e> * T locks R only once. However, because locks are acquired on LSNs and LSNs</color>
<color=#75715e> * change every time a record is written, T may actually lock R multiple times,</color>
<color=#75715e> * Everytime T locks a new LSN of R, it creates a new WriteLockIno. However,</color>
<color=#75715e> * care is taken so that all WriteLockInfos for the same logical record and</color>
<color=#75715e> * the same txn store the same info about the abort version (for details see</color>
<color=#75715e> * CursorImpl.LockStanding, CursorImpl.lockLN(), and LN.logInternals()). In</color>
<color=#75715e> * fact, if T writes R multiple times and then aborts, only one of the logrecs</color>
<color=#75715e> * generated by T for R will be undone, restoring R to its abort version; the</color>
<color=#75715e> * rest will be skipped.</color>
<color=#75715e> *</color>
<color=#75715e> * Info about the aort version is needed during commit as well. Specifically,</color>
<color=#75715e> * its LSN and on-disk size are needed to count the abort version obsolete</color>
<color=#75715e> * when T commits.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>WriteLockInfo</color> <color=#f8f8f2>{</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The LSN of the record's abort version. This is stored persistently in</color>
<color=#75715e>   * each logrec renerated by T on R. May be null if R was created by T</color>
<color=#75715e>   * (will definitely be null if the txn did not reuse an existing slot for</color>
<color=#75715e>   * the new record).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Whether the record's abort version is a deletion version or not.</color>
<color=#75715e>   * It is stored persistently in each logrec renerated by T on R.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>abortKnownDeleted</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * See comment for abortData field below.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>abortKey</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * If the record's abort version was embedded in a BIN, the associated</color>
<color=#75715e>   * logrec that contains that version may have been cleaned away by the</color>
<color=#75715e>   * time the txn aborts. So, we must save in each logrec the data portion</color>
<color=#75715e>   * of the abort version. abortdata serves this purpose. If key updates</color>
<color=#75715e>   * are allowed in the containing DB, the key of the abort version is</color>
<color=#75715e>   * saved in abortKey as well. Finally, if VLSN caching in BINs is enabled,</color>
<color=#75715e>   * the VLSN of the abort version is saved in abortVLSN as well.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>abortData</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * See comment for abortData field above.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>abortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN_SEQUENCE</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The on-disk size of the abort version, or zero if abortLsn is NULL_LSN</color>
<color=#75715e>   * or if the size is not known. Used for obsolete counting during commit.</color>
<color=#75715e>   * Not stored persistently.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>abortLogSize</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Abort expiration time. Is negative if in hours, positive if in days. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>abortExpiration</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * The containing database, or null if abortLsn is NULL_LSN.  Used for</color>
<color=#75715e>   * obsolete counting during a commit.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * True if the LSN has never been locked before by this Txn. Used so we</color>
<color=#75715e>   * can determine when to set abortLsn.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>neverLocked</color><color=#f8f8f2>;</color>

  <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>WriteLockInfo</color> <color=#f8f8f2>basicWriteLockInfo</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WriteLockInfo</color><color=#f8f8f2>();</color>

  <color=#75715e>// public for Sizeof</color>
  <color=#66d9ef>public</color> <color=#a6e22e>WriteLockInfo</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortKnownDeleted</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>neverLocked</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getAbortKnownDeleted</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortKnownDeleted</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAbortKnownDeleted</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortKnownDeleted</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getAbortLsn</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAbortLsn</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>abortLsn</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getAbortKey</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortKey</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAbortKey</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortKey</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getAbortData</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortData</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAbortData</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortData</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getAbortVLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortVLSN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAbortVLSN</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getAbortLogSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortLogSize</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAbortLogSize</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>logSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortLogSize</color> <color=#f92672>=</color> <color=#f8f8f2>logSize</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAbortExpiration</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationInHours</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>expirationInHours</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>expiration</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>expiration</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getAbortExpiration</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>abortExpiration</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isAbortExpirationInHours</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>abortExpiration</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>DatabaseImpl</color> <color=#a6e22e>getDb</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDb</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>db</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getNeverLocked</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>neverLocked</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setNeverLocked</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>neverLocked</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>neverLocked</color> <color=#f92672>=</color> <color=#f8f8f2>neverLocked</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Copy all the information needed to create a clone of the lock.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>copyAllInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>WriteLockInfo</color> <color=#f8f8f2>source</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>abortLsn</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>abortLsn</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortKnownDeleted</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>abortKnownDeleted</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortKey</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>abortKey</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortData</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>abortData</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>abortVLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortLogSize</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>abortLogSize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>abortExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>abortExpiration</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>db</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>neverLocked</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>neverLocked</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#e6db74>"abortLsn="</color>
        <color=#f92672>+</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>abortLsn</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#e6db74>" abortKnownDeleted="</color>
        <color=#f92672>+</color> <color=#f8f8f2>abortKnownDeleted</color>
        <color=#f92672>+</color> <color=#e6db74>" abortKey="</color>
        <color=#f92672>+</color> <color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>abortKey</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#e6db74>" abortData="</color>
        <color=#f92672>+</color> <color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>abortData</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#e6db74>" abortLogSize="</color>
        <color=#f92672>+</color> <color=#f8f8f2>abortLogSize</color>
        <color=#f92672>+</color> <color=#e6db74>" abortVLSN="</color>
        <color=#f92672>+</color> <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#e6db74>"%,d"</color><color=#f8f8f2>,</color> <color=#f8f8f2>abortVLSN</color><color=#f8f8f2>)</color>
        <color=#f92672>+</color> <color=#e6db74>" abortExpiration="</color>
        <color=#f92672>+</color> <color=#f8f8f2>getAbortExpiration</color><color=#f8f8f2>()</color>
        <color=#f92672>+</color> <color=#e6db74>" abortExpirationInHours="</color>
        <color=#f92672>+</color> <color=#f8f8f2>isAbortExpirationInHours</color><color=#f8f8f2>()</color>
        <color=#f92672>+</color> <color=#e6db74>" neverLocked="</color>
        <color=#f92672>+</color> <color=#f8f8f2>neverLocked</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>