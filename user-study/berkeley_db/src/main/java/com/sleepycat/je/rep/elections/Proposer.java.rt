<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.elections</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.QuorumPolicy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Accept</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Promise</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Protocol.Value</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.Utils.FutureTrackingCompService</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.MessageExchange</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.MessageOp</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.ProtocolError</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.ResponseMessage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.ReplicationFormatter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.IntStat</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.StatGroup</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.net.InetSocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.HashSet</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Formatter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.rep.elections.ProposerStatDefinition.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Plays the role of a Proposer in the consensus algorithm.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that the Proposer also plays the role of a distinguished learner and informs all other</color>
<color=#75715e> * listeners about the acceptance of a proposal.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>Proposer</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* The elections instance that is running this Learner agent. */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>Elections</color> <color=#f8f8f2>elections</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The statistics from one call of issueProposal. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>StatGroup</color> <color=#f8f8f2>statistics</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>IntStat</color> <color=#f8f8f2>phase1NoQuorum</color><color=#f8f8f2>;</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>IntStat</color> <color=#f8f8f2>phase1NoNonZeroPrio</color><color=#f8f8f2>;</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>IntStat</color> <color=#f8f8f2>phase1Arbiter</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>IntStat</color> <color=#f8f8f2>phase1HigherProposal</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>IntStat</color> <color=#f8f8f2>phase2NoQuorum</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>IntStat</color> <color=#f8f8f2>phase2HigherProposal</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>IntStat</color> <color=#f8f8f2>promiseCount</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>shutdown</color><color=#f8f8f2>;</color>

  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>Formatter</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Initializes a proposer with the set of acceptors identified by the sockets on which they accept</color>
<color=#75715e>   * proposals.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>Proposer</color><color=#f8f8f2>(</color><color=#f8f8f2>Elections</color> <color=#f8f8f2>elections</color><color=#f8f8f2>,</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>elections</color> <color=#f92672>=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLoggerFormatterNeeded</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>formatter</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReplicationFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>nameIdPair</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>statistics</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>StatGroup</color><color=#f8f8f2>(</color><color=#f8f8f2>ProposerStatDefinition</color><color=#f8f8f2>.</color><color=#a6e22e>GROUP_NAME</color><color=#f8f8f2>,</color> <color=#f8f8f2>ProposerStatDefinition</color><color=#f8f8f2>.</color><color=#a6e22e>GROUP_DESC</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>phase1NoQuorum</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>,</color> <color=#f8f8f2>PHASE1_NO_QUORUM</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>phase1NoNonZeroPrio</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>,</color> <color=#f8f8f2>PHASE1_NO_NON_ZERO_PRIO</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>phase1Arbiter</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>,</color> <color=#f8f8f2>PHASE1_ARBITER</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>phase1HigherProposal</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>,</color> <color=#f8f8f2>PHASE1_HIGHER_PROPOSAL</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>phase2NoQuorum</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>,</color> <color=#f8f8f2>PHASE2_NO_QUORUM</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>phase2HigherProposal</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>,</color> <color=#f8f8f2>PHASE2_HIGHER_PROPOSAL</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>promiseCount</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IntStat</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>,</color> <color=#f8f8f2>PROMISE_COUNT</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Shut down the proposer and reclaim its resources. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>shutdown</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>shutdown</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the current proposer statistics. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>StatGroup</color> <color=#a6e22e>getProposerStats</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>statistics</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Predicate to determine whether we have a quorum based upon the quorum policy. Note that the</color>
<color=#75715e>   * case of two attendees is special-cased when a SIMPLE_MAJORITY is called for, to return success</color>
<color=#75715e>   * with just one yes vote.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param quorumPolicy the policy to be used for the quorum.</color>
<color=#75715e>   * @param votes the number of yes votes.</color>
<color=#75715e>   * @return true if the number of votes satisfies the quorum policy.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>haveQuorum</color><color=#f8f8f2>(</color><color=#f8f8f2>QuorumPolicy</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>votes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getElectionQuorum</color><color=#f8f8f2>().</color><color=#a6e22e>haveQuorum</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>votes</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Implements phase 1. It sends our Propose requests to all acceptors and tallies up the results.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param proposal the new unique proposal.</color>
<color=#75715e>   * @return the results from running Phase1, or null if phase 1 did not get a promise from the</color>
<color=#75715e>   *     majority of acceptors.</color>
<color=#75715e>   * @throws HigherNumberedProposal</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Phase1Result</color> <color=#a6e22e>phase1</color><color=#f8f8f2>(</color><color=#f8f8f2>QuorumPolicy</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>Proposal</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>HigherNumberedProposal</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color> <color=#e6db74>"Phase 1 proposal: "</color> <color=#f92672>+</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Broadcast Propose requests. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>acceptorSockets</color> <color=#f92672>=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getAcceptorSockets</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>FutureTrackingCompService</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>compService</color> <color=#f92672>=</color>
        <color=#f8f8f2>Utils</color><color=#f8f8f2>.</color><color=#a6e22e>broadcastMessage</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>acceptorSockets</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Acceptor</color><color=#f8f8f2>.</color><color=#a6e22e>SERVICE_NAME</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>new</color> <color=#f8f8f2>Propose</color><color=#f8f8f2>(</color><color=#f8f8f2>proposal</color><color=#f8f8f2>),</color>
            <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getThreadPool</color><color=#f8f8f2>());</color>

    <color=#f8f8f2>Phase1Result</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>tallyPhase1Results</color><color=#f8f8f2>(</color><color=#f8f8f2>proposal</color><color=#f8f8f2>,</color> <color=#f8f8f2>compService</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveQuorum</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>promisories</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>phase1NoQuorum</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>

    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Tally the results from Phase 1. Terminate the tally if we see any rejection messages which</color>
<color=#75715e>   * indicate our proposal has been obsoleted by a more recent one. It also tracks the highest</color>
<color=#75715e>   * numbered proposal and the associated value that was accepted by the Acceptors.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param currentProposal the proposal for this round</color>
<color=#75715e>   * @param compService the futures resulting from Prepare messages</color>
<color=#75715e>   * @return results Summarized results from Phase 1</color>
<color=#75715e>   * @throws HigherNumberedProposal</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Phase1Result</color> <color=#a6e22e>tallyPhase1Results</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>Proposal</color> <color=#f8f8f2>currentProposal</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>FutureTrackingCompService</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>compService</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>HigherNumberedProposal</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Phase1Result</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Phase1Result</color><color=#f8f8f2>();</color>

    <color=#66d9ef>new</color> <color=#f8f8f2>Utils</color><color=#f8f8f2>.</color><color=#a6e22e>WithFutureExceptionHandler</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color><color=#f8f8f2>(</color>
        <color=#f8f8f2>compService</color><color=#f8f8f2>,</color>
        <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>getReadTimeout</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#a6e22e>@Override</color>
      <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>processResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>MessageExchange</color> <color=#f8f8f2>me</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>op</color> <color=#f92672>=</color> <color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>().</color><color=#a6e22e>getOp</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>op</color> <color=#f92672>==</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>REJECT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * The acceptor has already received a higher numbered</color>
<color=#75715e>           * Prepare request. Abandon this round as an optimization.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>compService</color><color=#f8f8f2>.</color><color=#a6e22e>cancelFutures</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>phase1HigherProposal</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>HigherNumberedProposal</color><color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>target</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>op</color> <color=#f92672>==</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>PROMISE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>promisories</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>target</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>promisoryMessages</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>Promise</color> <color=#f8f8f2>accept</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Promise</color><color=#f8f8f2>)</color> <color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>Proposal</color> <color=#f8f8f2>acceptProposal</color> <color=#f92672>=</color> <color=#f8f8f2>accept</color><color=#f8f8f2>.</color><color=#a6e22e>getHighestProposal</color><color=#f8f8f2>();</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>acceptProposal</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color>
              <color=#f92672>||</color> <color=#f8f8f2>((</color><color=#f8f8f2>acceptProposal</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color>
                  <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>acceptProposal</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>acceptProposal</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>acceptProposal</color> <color=#f92672>=</color> <color=#f8f8f2>acceptProposal</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>acceptedValue</color> <color=#f92672>=</color> <color=#f8f8f2>accept</color><color=#f8f8f2>.</color><color=#a6e22e>getAcceptedValue</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>op</color> <color=#f92672>==</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>PROTOCOL_ERROR</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>ProtocolError</color> <color=#f8f8f2>protocolError</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ProtocolError</color><color=#f8f8f2>)</color> <color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>();</color>
          <color=#75715e>/* Possible protocol version, group, or config skew. */</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>WARNING</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Proposer phase 1 protocol error: "</color> <color=#f92672>+</color> <color=#f8f8f2>protocolError</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#66d9ef>return</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
              <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
              <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
              <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>WARNING</color><color=#f8f8f2>,</color>
              <color=#e6db74>"Proposer phase 1 unknown"</color> <color=#f92672>+</color> <color=#e6db74>" response: "</color> <color=#f92672>+</color> <color=#f8f8f2>op</color><color=#f8f8f2>);</color>
          <color=#66d9ef>return</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#a6e22e>@Override</color>
      <color=#66d9ef>protected</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isShutdown</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>shutdown</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}.</color><color=#a6e22e>execute</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>promisories</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>acceptProposal</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>acceptProposal</color> <color=#f92672>=</color> <color=#f8f8f2>currentProposal</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>promiseCount</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>promisories</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>());</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Runs Phase 2 for the proposal and value.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param proposal the proposal resulting from Phase1</color>
<color=#75715e>   * @param phase2Value the value that we would like to be chosen.</color>
<color=#75715e>   * @param promisories from Phase1</color>
<color=#75715e>   * @return a summary of the result or null if proposal was not accepted</color>
<color=#75715e>   * @throws HigherNumberedProposal</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Phase2Result</color> <color=#a6e22e>phase2</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>QuorumPolicy</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Proposal</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Value</color> <color=#f8f8f2>phase2Value</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>promisories</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>HigherNumberedProposal</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
        <color=#e6db74>"Phase 2 proposal: "</color> <color=#f92672>+</color> <color=#f8f8f2>proposal</color> <color=#f92672>+</color> <color=#e6db74>" Value: "</color> <color=#f92672>+</color> <color=#f8f8f2>phase2Value</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Broadcast Accept requests to promisories. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Accept</color> <color=#f8f8f2>accept</color> <color=#f92672>=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>new</color> <color=#f8f8f2>Accept</color><color=#f8f8f2>(</color><color=#f8f8f2>proposal</color><color=#f8f8f2>,</color> <color=#f8f8f2>phase2Value</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>FutureTrackingCompService</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>compService</color> <color=#f92672>=</color>
        <color=#f8f8f2>Utils</color><color=#f8f8f2>.</color><color=#a6e22e>broadcastMessage</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>promisories</color><color=#f8f8f2>,</color> <color=#f8f8f2>Acceptor</color><color=#f8f8f2>.</color><color=#a6e22e>SERVICE_NAME</color><color=#f8f8f2>,</color> <color=#f8f8f2>accept</color><color=#f8f8f2>,</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getThreadPool</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>Phase2Result</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>tallyPhase2Results</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>compService</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveQuorum</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>accepts</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>phase2NoQuorum</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Tallies the results from Phase 2.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param compService the futures from phase2</color>
<color=#75715e>   * @return the Phase2Result</color>
<color=#75715e>   * @throws HigherNumberedProposal if a higher numbered proposal was encountered</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Phase2Result</color> <color=#a6e22e>tallyPhase2Results</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>QuorumPolicy</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>FutureTrackingCompService</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>compService</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>HigherNumberedProposal</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Phase2Result</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Phase2Result</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Utils</color><color=#f8f8f2>.</color><color=#a6e22e>WithFutureExceptionHandler</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color><color=#f8f8f2>(</color>
          <color=#f8f8f2>compService</color><color=#f8f8f2>,</color>
          <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>().</color><color=#a6e22e>getReadTimeout</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
          <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>processResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>MessageExchange</color> <color=#f8f8f2>me</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>ResponseMessage</color> <color=#f8f8f2>responseMessage</color> <color=#f92672>=</color> <color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>getResponseMessage</color><color=#f8f8f2>();</color>

          <color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color> <color=#f92672>=</color> <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>();</color>
          <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>op</color> <color=#f92672>=</color> <color=#f8f8f2>responseMessage</color><color=#f8f8f2>.</color><color=#a6e22e>getOp</color><color=#f8f8f2>();</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>op</color> <color=#f92672>==</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>REJECT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>compService</color><color=#f8f8f2>.</color><color=#a6e22e>cancelFutures</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>phase2HigherProposal</color><color=#f8f8f2>.</color><color=#a6e22e>increment</color><color=#f8f8f2>();</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>HigherNumberedProposal</color><color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>target</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>op</color> <color=#f92672>==</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>ACCEPTED</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>accepts</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>me</color><color=#f8f8f2>.</color><color=#a6e22e>target</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>haveQuorum</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>accepts</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>compService</color><color=#f8f8f2>.</color><color=#a6e22e>cancelFutures</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
              <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>HaveQuorum</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>op</color> <color=#f92672>==</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>PROTOCOL_ERROR</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>ProtocolError</color> <color=#f8f8f2>errorMessage</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>ProtocolError</color><color=#f8f8f2>)</color> <color=#f8f8f2>responseMessage</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
                <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>WARNING</color><color=#f8f8f2>,</color>
                <color=#e6db74>"Proposer phase 2 "</color> <color=#f92672>+</color> <color=#e6db74>"protocol error:"</color> <color=#f92672>+</color> <color=#f8f8f2>errorMessage</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
                <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>WARNING</color><color=#f8f8f2>,</color>
                <color=#e6db74>"Proposer Phase 2 "</color> <color=#f92672>+</color> <color=#e6db74>"unknown response: "</color> <color=#f92672>+</color> <color=#f8f8f2>op</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>protected</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isShutdown</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>shutdown</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}.</color><color=#a6e22e>execute</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>HaveQuorum</color> <color=#f8f8f2>hq</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Terminated phase2 early from an early quorum. */</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Selects the value to be used during Phase2, which if it succeeds will become the "chosen</color>
<color=#75715e>   * value".</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param exchanges the message exchanges from Phase 1</color>
<color=#75715e>   * @return the candidate value for Phase2, or null, if no suitable value was found during phase 1</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>abstract</color> <color=#f8f8f2>Value</color> <color=#a6e22e>choosePhase2Value</color><color=#f8f8f2>(</color><color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>exchanges</color><color=#f8f8f2>);</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates the next unique Proposal to be used</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the Proposal</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>abstract</color> <color=#f8f8f2>Proposal</color> <color=#a6e22e>nextProposal</color><color=#f8f8f2>();</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Runs an election using the consensus algorithm. An election can be used either to determine an</color>
<color=#75715e>   * existing consensus value, or to force an election if the current value is not suitable.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param quorumPolicy the policy used to determine whether we have a quorum.</color>
<color=#75715e>   * @param retryPredicate the interface which determines whether a retry should be attempted.</color>
<color=#75715e>   * @return the WinningProposal encapsulating the proposal and chosen value</color>
<color=#75715e>   * @throws MaxRetriesException when a winning proposal could not be established.</color>
<color=#75715e>   * @throws InterruptedException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>WinningProposal</color> <color=#a6e22e>issueProposal</color><color=#f8f8f2>(</color><color=#f8f8f2>QuorumPolicy</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>RetryPredicate</color> <color=#f8f8f2>retryPredicate</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>MaxRetriesException</color><color=#f8f8f2>,</color> <color=#f8f8f2>InterruptedException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>statistics</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>

    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>retryPredicate</color><color=#f8f8f2>.</color><color=#a6e22e>retry</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Proposal</color> <color=#f8f8f2>proposal</color> <color=#f92672>=</color> <color=#f8f8f2>nextProposal</color><color=#f8f8f2>();</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Phase1Result</color> <color=#f8f8f2>result1</color> <color=#f92672>=</color> <color=#f8f8f2>phase1</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result1</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>Value</color> <color=#f8f8f2>phase2Value</color> <color=#f92672>=</color> <color=#f8f8f2>choosePhase2Value</color><color=#f8f8f2>(</color><color=#f8f8f2>result1</color><color=#f8f8f2>.</color><color=#a6e22e>promisoryMessages</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>phase2Value</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>Phase2Result</color> <color=#f8f8f2>result2</color> <color=#f92672>=</color>
            <color=#f8f8f2>phase2</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>,</color> <color=#f8f8f2>phase2Value</color><color=#f8f8f2>,</color> <color=#f8f8f2>result1</color><color=#f8f8f2>.</color><color=#a6e22e>promisories</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result2</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>elections</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>formatter</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>INFO</color><color=#f8f8f2>,</color>
            <color=#e6db74>"Winning proposal: "</color> <color=#f92672>+</color> <color=#f8f8f2>proposal</color> <color=#f92672>+</color> <color=#e6db74>" Value: "</color> <color=#f92672>+</color> <color=#f8f8f2>phase2Value</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>WinningProposal</color><color=#f8f8f2>(</color><color=#f8f8f2>proposal</color><color=#f8f8f2>,</color> <color=#f8f8f2>phase2Value</color><color=#f8f8f2>,</color> <color=#f8f8f2>statistics</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>HigherNumberedProposal</color> <color=#f8f8f2>eip</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>MaxRetriesException</color><color=#f8f8f2>(</color><color=#f8f8f2>statistics</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Local classes */</color>

  <color=#75715e>/** Summarizes Phase 1 results */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>Phase1Result</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Subset of acceptors who have promised not to accept lower numbered</color>
<color=#75715e>     * proposals.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>promisories</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>MessageExchange</color><color=#f92672>></color> <color=#f8f8f2>promisoryMessages</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * The highest accepted proposal that was received from the</color>
<color=#75715e>     * promisories.  It can be null.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Proposal</color> <color=#f8f8f2>acceptProposal</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * The value associated with the proposal. It's non-null if</color>
<color=#75715e>     * acceptProposal is not null.</color>
<color=#75715e>     */</color>
    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color>
    <color=#f8f8f2>Value</color> <color=#f8f8f2>acceptedValue</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Summarizes Phase 2 results. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>Phase2Result</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Subset of promisories who accepted the current proposal. */</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>InetSocketAddress</color><color=#f92672>></color> <color=#f8f8f2>accepts</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><></color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Summarizes the results of the election */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>WinningProposal</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Proposal</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Value</color> <color=#f8f8f2>chosenValue</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>StatGroup</color> <color=#f8f8f2>proposerStats</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>WinningProposal</color><color=#f8f8f2>(</color><color=#f8f8f2>Proposal</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>,</color> <color=#f8f8f2>Value</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#f8f8f2>StatGroup</color> <color=#f8f8f2>proposerStats</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proposal</color> <color=#f92672>=</color> <color=#f8f8f2>proposal</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>chosenValue</color> <color=#f92672>=</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proposerStats</color> <color=#f92672>=</color> <color=#f8f8f2>proposerStats</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Exception to indicate that a more recent election is in progress. */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"serial"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>HigherNumberedProposal</color> <color=#66d9ef>extends</color> <color=#f8f8f2>RuntimeException</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* The acceptor that had a more recent proposal. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>acceptor</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>HigherNumberedProposal</color><color=#f8f8f2>(</color><color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>acceptor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>acceptor</color> <color=#f92672>=</color> <color=#f8f8f2>acceptor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getMessage</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#e6db74>"More recent proposal at: "</color> <color=#f92672>+</color> <color=#f8f8f2>acceptor</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Exception thrown when a Proposal issue fails because the retry limit has been exceeded. */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"serial"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>MaxRetriesException</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>StatGroup</color> <color=#f8f8f2>proposerStats</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>MaxRetriesException</color><color=#f8f8f2>(</color><color=#f8f8f2>StatGroup</color> <color=#f8f8f2>proposerStats</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proposerStats</color> <color=#f92672>=</color> <color=#f8f8f2>proposerStats</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Exception to indicate we have an early Quorum. */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"serial"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>HaveQuorum</color> <color=#66d9ef>extends</color> <color=#f8f8f2>RuntimeException</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>HaveQuorum</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** The Interface defining a Proposal. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>Proposal</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Comparable</color><color=#f92672><</color><color=#f8f8f2>Proposal</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The string representation of the proposal. It must not contain the Protocol.SEPARATOR</color>
<color=#75715e>     * character.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the String representation of theProposal</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>String</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>ProposalParser</color> <color=#f8f8f2>{</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Converts the wire format back into a Proposal</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param wireFormat String representation of a Proposal</color>
<color=#75715e>     * @return the de-serialized Proposal</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Proposal</color> <color=#a6e22e>parse</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Interface to determine whether the Proposer should be retry with a new Proposal or abandon the</color>
<color=#75715e>   * effort.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>RetryPredicate</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>boolean</color> <color=#a6e22e>retry</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>InterruptedException</color><color=#f8f8f2>;</color>

    <color=#66d9ef>int</color> <color=#a6e22e>retries</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>