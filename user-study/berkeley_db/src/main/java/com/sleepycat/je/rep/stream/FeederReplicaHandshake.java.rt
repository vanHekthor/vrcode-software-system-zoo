<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.stream</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.JEVersion</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.LockTimeoutException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.InsufficientAcksException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.InsufficientReplicasException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.NodeType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepGroupImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepGroupImpl.NodeConflictException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepNodeImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.Feeder</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.Feeder.ExitException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.RepNode</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.Protocol.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocol.Message</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocol.ProtocolException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.NamedChannel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.TestHook</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.TestHookExecute</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.SocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Implements the Feeder side of the handshake between the Feeder and the Replica. The</color>
<color=#75715e> * ReplicaFeederHandshake class takes care of the other side.</color>
<color=#75715e> *</color>
<color=#75715e> * @see <a</color>
<color=#75715e> *     href="https://sleepycat.oracle.com/pmwiki/pmwiki.php?n=JEHomePage.ReplicaFeederHandshake">FeederReplicaHandshake</a></color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FeederReplicaHandshake</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>GROUP_RETRY</color> <color=#f92672>=</color> <color=#ae81ff>60</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>GROUP_RETRY_SLEEP_MS</color> <color=#f92672>=</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>
  <color=#75715e>/* The rep node (server or replica) */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>NamedChannel</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>feederNameIdPair</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Established during the first message. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>replicaNameIdPair</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>ReplicaJEVersions</color> <color=#f8f8f2>replicaJEVersions</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The negotiated highest version associated with log records to be sent by this feeder in the HA</color>
<color=#75715e>   * stream.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The node associated with the replica, or null if not known. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>replicaNode</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A test hook that is called before a message is written. Note that the hook is inherited by the</color>
<color=#75715e>   * ReplicaFeederHandshake, and will be kept in place for the entire handshake.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>TestHook</color><color=#f92672><</color><color=#f8f8f2>Message</color><color=#f92672>></color> <color=#f8f8f2>writeMessageHook</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Used during testing: A non-zero value overrides the actual log</color>
<color=#75715e>   * version.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#f8f8f2>testCurrentLogVersion</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * An instance of this class is created with each new handshake preceding the setting up of a</color>
<color=#75715e>   * connection.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param repNode the replication node</color>
<color=#75715e>   * @param feeder the feeder instance</color>
<color=#75715e>   * @param namedChannel the channel to be used for the handshake</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>FeederReplicaHandshake</color><color=#f8f8f2>(</color><color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>Feeder</color> <color=#f8f8f2>feeder</color><color=#f8f8f2>,</color> <color=#f8f8f2>NamedChannel</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>repNode</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>namedChannel</color> <color=#f92672>=</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>feederNameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>writeMessageHook</color> <color=#f92672>=</color> <color=#f8f8f2>feeder</color><color=#f8f8f2>.</color><color=#a6e22e>getWriteMessageHook</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the replica node ID. The returned value is only valid after the handshake has been</color>
<color=#75715e>   * executed.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the replica node name id pair</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>NameIdPair</color> <color=#a6e22e>getReplicaNameIdPair</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the current log version for the feeder, which is the highest log version of any</color>
<color=#75715e>   * replicable log entry supplied by this feeder. Uses LogEntryType.LOG_VERSION_HIGHEST_REPLICABLE,</color>
<color=#75715e>   * not LOG_VERSION, since some log versions may have only applied to non-replicable log entries,</color>
<color=#75715e>   * as was the case for log version 10.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>getCurrentLogVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>testCurrentLogVersion</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color>
        <color=#f92672>?</color> <color=#f8f8f2>testCurrentLogVersion</color>
        <color=#f8f8f2>:</color> <color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_VERSION_HIGHEST_REPLICABLE</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the negotiated log version that will be used for the HA stream between the feeder and</color>
<color=#75715e>   * the replica.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getStreamLogVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>streamLogVersion</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"execute() method was not invoked"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>setTestLogVersion</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>testLogVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>testCurrentLogVersion</color> <color=#f92672>=</color> <color=#f8f8f2>testLogVersion</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Get the current JE version, supporting a test override. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getCurrentJEVersion</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Get the current protocol version, supporting a test override. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>getCurrentProtocolVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>getJEVersionProtocolVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>getCurrentJEVersion</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Determines log compatibility. Returns null if they are compatible or the server would like to</color>
<color=#75715e>   * defer the rejection to the replica. Return a JEVersionsReject message if the server does not</color>
<color=#75715e>   * wish to communicate with the replica.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This check requires the log version of the replicas to be greater than or equal to {@value</color>
<color=#75715e>   * LogEntryType#LOG_VERSION_REPLICATE_OLDER} . Allowing the replica version to be behind the</color>
<color=#75715e>   * feeder version supports replication during upgrades where the feeder is upgraded before the</color>
<color=#75715e>   * replica. [#22336]</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This check also requires that the JE version of the replica is at least the minJEVersion</color>
<color=#75715e>   * specified by the RepGroupImpl, if any. This check makes sure that nodes running an older</color>
<color=#75715e>   * software version cannot join the group after a new and incompatible feature has been used.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>JEVersionsReject</color> <color=#a6e22e>checkJECompatibility</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>JEVersions</color> <color=#f8f8f2>jeVersions</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>replicaLogVersion</color> <color=#f92672>=</color> <color=#f8f8f2>jeVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>replicaLogVersion</color> <color=#f92672><</color> <color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_VERSION_REPLICATE_OLDER</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color>
      <color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#f8f8f2>JEVersionsReject</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Incompatible log versions. "</color>
              <color=#f92672>+</color> <color=#e6db74>"Feeder log version: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>getCurrentLogVersion</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>", Feeder JE version: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>getCurrentJEVersion</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>", Replica log version: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaLogVersion</color>
              <color=#f92672>+</color> <color=#e6db74>", Replica JE version: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>jeVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>minJEVersion</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getMinJEVersion</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>minJEVersion</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>jeVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>())</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color>
      <color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#f8f8f2>JEVersionsReject</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Unsupported JE version. "</color>
              <color=#f92672>+</color> <color=#e6db74>"Feeder JE version: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>getCurrentJEVersion</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>", Feeder min JE version: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>minJEVersion</color>
              <color=#f92672>+</color> <color=#e6db74>", Replica JE version: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>jeVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the JE version supported by the replica, or {@code null} if the value is not yet known.</color>
<color=#75715e>   * This method should only be called after the {@link #execute} method has returned successfully.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the replica's JE version or {@code null}</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>getReplicaJEVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>replicaJEVersions</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>replicaJEVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a RepNodeImpl that represents the replica for a successful handshake. This method</color>
<color=#75715e>   * should only be called after the {@link #execute} method has returned successfully, and will</color>
<color=#75715e>   * throw IllegalStateException otherwise.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the replica node</color>
<color=#75715e>   * @throws IllegalStateException if the handshake did not complete</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>RepNodeImpl</color> <color=#a6e22e>getReplicaNode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>replicaNode</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Handshake did not complete"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>replicaNode</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Executes the feeder side of the handshake.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws ProtocolException</color>
<color=#75715e>   * @throws ExitException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>execute</color><color=#f8f8f2>()</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ProtocolException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ExitException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#e6db74>"Feeder-replica handshake start"</color><color=#f8f8f2>);</color>

    <color=#75715e>/* First negotiate a compatible protocol */</color>
    <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color> <color=#f92672>=</color> <color=#f8f8f2>negotiateProtocol</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Now exchange JE version information using the negotiated protocol */</color>
    <color=#f8f8f2>replicaJEVersions</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicaJEVersions</color><color=#f8f8f2>)</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>namedChannel</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>versionMsg</color> <color=#f92672>=</color>
        <color=#e6db74>" Replica "</color>
            <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" Versions"</color>
            <color=#f92672>+</color> <color=#e6db74>" JE: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>replicaJEVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>().</color><color=#a6e22e>getVersionString</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" Log: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>replicaJEVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" Protocol: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>fine</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#f8f8f2>versionMsg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>JEVersionsReject</color> <color=#f8f8f2>reject</color> <color=#f92672>=</color> <color=#f8f8f2>checkJECompatibility</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#f8f8f2>replicaJEVersions</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>reject</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>msg</color> <color=#f92672>=</color>
          <color=#e6db74>"Version incompatibility: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>reject</color><color=#f8f8f2>.</color><color=#a6e22e>getErrorMessage</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" with replica "</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>writeMessage</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#f8f8f2>reject</color><color=#f8f8f2>);</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Use the minimum common log version. This ensures that the feeder</color>
<color=#75715e>     * can generate it and that the replica can understand it.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>streamLogVersion</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>getCurrentLogVersion</color><color=#f8f8f2>(),</color> <color=#f8f8f2>replicaJEVersions</color><color=#f8f8f2>.</color><color=#a6e22e>getLogVersion</color><color=#f8f8f2>());</color>

    <color=#f8f8f2>writeMessage</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>protocol</color>
        <color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#f8f8f2>FeederJEVersions</color><color=#f8f8f2>(</color><color=#f8f8f2>getCurrentJEVersion</color><color=#f8f8f2>(),</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getMinJEVersion</color><color=#f8f8f2>()));</color>

    <color=#75715e>/* Ensure that the feeder sends the agreed upon version. */</color>
    <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>setStreamLogVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>);</color>

    <color=#75715e>/* Verify replica membership info */</color>
    <color=#f8f8f2>verifyMembershipInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>checkClockSkew</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#e6db74>"Feeder-replica "</color>
            <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
            <color=#f92672>+</color> <color=#e6db74>" handshake completed."</color>
            <color=#f92672>+</color> <color=#f8f8f2>versionMsg</color>
            <color=#f92672>+</color> <color=#e6db74>" Stream Log: "</color>
            <color=#f92672>+</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>getStreamLogVersion</color><color=#f8f8f2>());</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Write a protocol message to the channel. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>writeMessage</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Message</color> <color=#f8f8f2>message</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>TestHookExecute</color><color=#f8f8f2>.</color><color=#a6e22e>doHookIfSet</color><color=#f8f8f2>(</color><color=#f8f8f2>writeMessageHook</color><color=#f8f8f2>,</color> <color=#f8f8f2>message</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>message</color><color=#f8f8f2>,</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Responds to message exchanges used to establish clock skew.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws ProtocolException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>checkClockSkew</color><color=#f8f8f2>(</color><color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ProtocolException</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>SNTPRequest</color> <color=#f8f8f2>request</color><color=#f8f8f2>;</color>
    <color=#66d9ef>do</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>request</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getChannel</color><color=#f8f8f2>(),</color> <color=#f8f8f2>SNTPRequest</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>writeMessage</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>SNTPResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>request</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>request</color><color=#f8f8f2>.</color><color=#a6e22e>isLast</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Verifies that the group as configured here at the Feeder matches the configuration of the</color>
<color=#75715e>   * replica.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param protocol the protocol to use for this verification</color>
<color=#75715e>   * @throws IOException</color>
<color=#75715e>   * @throws DatabaseException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>verifyMembershipInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ExitException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>NodeGroupInfo</color> <color=#f8f8f2>nodeGroup</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>NodeGroupInfo</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>namedChannel</color><color=#f8f8f2>));</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f92672>=</color> <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getNode</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>());</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeId</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"The replica node ID sent during protocol negotiation: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color>
                <color=#f92672>+</color> <color=#e6db74>" differs from the one sent in the MembershipInfo "</color>
                <color=#f92672>+</color> <color=#e6db74>"request: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeId</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeType</color><color=#f8f8f2>().</color><color=#a6e22e>hasTransientId</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Note the secondary or external node if this is a new node.</color>
<color=#75715e>         * Otherwise, fall through, and the subsequent code will</color>
<color=#75715e>         * notice the incompatible node type.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#75715e>/* A new node with transient id */</color>
          <color=#f8f8f2>node</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>RepNodeImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>);</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>addTransientIdNode</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalStateException</color> <color=#f92672>|</color> <color=#f8f8f2>NodeConflictException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>isQuorumAck</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Not currently a confirmed member. */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeType</color><color=#f8f8f2>().</color><color=#a6e22e>isArbiter</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>RepNodeImpl</color><color=#f92672>></color> <color=#f8f8f2>arbMembers</color> <color=#f92672>=</color> <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getArbiterMembers</color><color=#f8f8f2>();</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>arbMembers</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
                <color=#e6db74>"An Arbiter node already exists in the "</color> <color=#f92672>+</color> <color=#e6db74>"replication group."</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

          <color=#75715e>/*</color>
<color=#75715e>           * It is possible that the thread that added the</color>
<color=#75715e>           * node to the group database has not added the</color>
<color=#75715e>           * member to the in memory representation. We retry</color>
<color=#75715e>           * several times to give the other thread a chance to</color>
<color=#75715e>           * update the in memory structure.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepGroupDB</color><color=#f8f8f2>().</color><color=#a6e22e>ensureMember</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>);</color>
          <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>GROUP_RETRY</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>node</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getMember</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>());</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>sleep</color><color=#f8f8f2>(</color><color=#f8f8f2>GROUP_RETRY_SLEEP_MS</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
                <color=#e6db74>"Node: "</color> <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" not found"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InsufficientReplicasException</color>
            <color=#f92672>|</color> <color=#f8f8f2>InsufficientAcksException</color>
            <color=#f92672>|</color> <color=#f8f8f2>LockTimeoutException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>NodeConflictException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>isRemoved</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Node: "</color>
                <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color>
                <color=#f92672>+</color> <color=#e6db74>" is no longer a member of the group."</color>
                <color=#f92672>+</color> <color=#e6db74>" It was explicitly removed."</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>doGroupChecks</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>group</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>doNodeChecks</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>node</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>maybeUpdateJEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>group</color><color=#f8f8f2>,</color> <color=#f8f8f2>node</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ExitException</color> <color=#f8f8f2>exception</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>info</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#f8f8f2>exception</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>exception</color><color=#f8f8f2>.</color><color=#a6e22e>failReplica</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#75715e>/*</color>
<color=#75715e>         * Explicit message to force replica to invalidate the</color>
<color=#75715e>         * environment.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>writeMessage</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>NodeGroupInfoReject</color><color=#f8f8f2>(</color><color=#f8f8f2>exception</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>()));</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>exception</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Id is now established for sure, update the pair. */</color>
    <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>setNameIdPair</color><color=#f8f8f2>(</color><color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>fine</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#e6db74>"Channel Mapping: "</color> <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color> <color=#f92672>+</color> <color=#e6db74>" is at "</color> <color=#f92672>+</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getChannel</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>writeMessage</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>NodeGroupInfoOK</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>(),</color> <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>));</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Verifies that the group related information is consistent.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws ExitException if the configuration in the group db differs from the supplied config</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>doGroupChecks</color><color=#f8f8f2>(</color><color=#f8f8f2>NodeGroupInfo</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>ExitException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>isDesignatedPrimary</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>().</color><color=#a6e22e>isDesignatedPrimary</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Conflicting Primary designations. Feeder node: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" and replica node: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" cannot simultaneously be designated primaries"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getGroupName</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"The feeder belongs to the group: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" but replica id"</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color>
              <color=#f92672>+</color> <color=#e6db74>" belongs to the group: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getGroupName</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>isUnknownUUID</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>())</color>
        <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"The environments have the same name: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" but represent different environment instances."</color>
              <color=#f92672>+</color> <color=#e6db74>" The environment at the master has UUID "</color>
              <color=#f92672>+</color> <color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>", while the replica "</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" has UUID: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getUUID</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Verifies that the old and new node configurations are the same.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws ExitException if the configuration in the group db differs from the supplied config</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>doNodeChecks</color><color=#f8f8f2>(</color><color=#f8f8f2>NodeGroupInfo</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>ExitException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Conflicting hostnames for replica id: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color>
              <color=#f92672>+</color> <color=#e6db74>" Feeder thinks it is: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" Replica is configured to use: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getHostName</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>port</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Conflicting ports for replica id: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color>
              <color=#f92672>+</color> <color=#e6db74>" Feeder thinks it uses: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getPort</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" Replica is configured to use: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>port</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>((</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>ELECTABLE</color> <color=#f92672>==</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>())</color>
        <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>SECONDARY</color> <color=#f92672>==</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>())</color>
        <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>EXTERNAL</color> <color=#f92672>==</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>())</color>
        <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>ARBITER</color> <color=#f92672>==</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>())</color>
        <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>MONITOR</color> <color=#f92672>==</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>())))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"The replica node: "</color> <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color> <color=#f92672>+</color> <color=#e6db74>" is of type: "</color> <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeType</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"Conflicting node types for: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color>
              <color=#f92672>+</color> <color=#e6db74>" Feeder thinks it uses: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color>
              <color=#f92672>+</color> <color=#e6db74>" Replica is configured as type: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeType</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>replicaNode</color> <color=#f92672>=</color> <color=#f8f8f2>node</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Update the node's JE version from the provided group info if storing the JE version is</color>
<color=#75715e>   * supported and the current version differs from the stored one. It's OK if the attempt does not</color>
<color=#75715e>   * fully succeed due to a lack of replicas or acknowledgments: we can try again the next time.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws ExitException if the attempt fails because the updated node's socket address conflicts</color>
<color=#75715e>   *     with another node</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>maybeUpdateJEVersion</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NodeGroupInfo</color> <color=#f8f8f2>nodeGroup</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>ExitException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>group</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>()</color> <color=#f92672>>=</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>FORMAT_VERSION_3</color><color=#f8f8f2>)</color>
        <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getJEVersion</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color>
        <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>.</color><color=#a6e22e>getJEVersion</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getJEVersion</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Try updating the JE version information, given that the group</color>
<color=#75715e>       * format supports this.  Don't require a quorum of acknowledgments</color>
<color=#75715e>       * since the fact that the handshake for this replica is underway</color>
<color=#75715e>       * may mean that a quorum is not available.  Saving the JE version</color>
<color=#75715e>       * is only an optimization, so it is OK if this attempt fails to be</color>
<color=#75715e>       * persistent.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepGroupDB</color><color=#f8f8f2>().</color><color=#a6e22e>updateMember</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>RepNodeImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeGroup</color><color=#f8f8f2>),</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InsufficientReplicasException</color> <color=#f92672>|</color> <color=#f8f8f2>InsufficientAcksException</color> <color=#f92672>|</color> <color=#f8f8f2>LockTimeoutException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Ignored */</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>NodeConflictException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Negotiates and returns the protocol that will be used in all subsequent interactions with the</color>
<color=#75715e>   * Replica, if the replica accepts to it.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the protocol instance to be used for subsequent interactions</color>
<color=#75715e>   * @throws IOException</color>
<color=#75715e>   * @throws ExitException</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>negotiateProtocol</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ExitException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Protocol</color> <color=#f8f8f2>defaultProtocol</color> <color=#f92672>=</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>(</color><color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>getCurrentProtocolVersion</color><color=#f8f8f2>());</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Wait to receive the replica's version, decide which protocol version</color>
<color=#75715e>     * to use ourselves, and then reply with our version.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>ReplicaProtocolVersion</color> <color=#f8f8f2>message</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicaProtocolVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>defaultProtocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>namedChannel</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>replicaNameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>message</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>Feeder</color> <color=#f8f8f2>dup</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>feederManager</color><color=#f8f8f2>().</color><color=#a6e22e>getFeeder</color><color=#f8f8f2>(</color><color=#f8f8f2>replicaNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>dup</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>message</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>().</color><color=#a6e22e>getName</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>feederNameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>())))</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* Reject the connection. */</color>
      <color=#f8f8f2>writeMessage</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>defaultProtocol</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>defaultProtocol</color>
          <color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#f8f8f2>DuplicateNodeReject</color><color=#f8f8f2>(</color>
              <color=#e6db74>"This node: "</color> <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color> <color=#f92672>+</color> <color=#e6db74>" is already in active use at the feeder "</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>SocketAddress</color> <color=#f8f8f2>dupAddress</color> <color=#f92672>=</color>
          <color=#f8f8f2>namedChannel</color><color=#f8f8f2>.</color><color=#a6e22e>getChannel</color><color=#f8f8f2>().</color><color=#a6e22e>getSocketChannel</color><color=#f8f8f2>().</color><color=#a6e22e>socket</color><color=#f8f8f2>().</color><color=#a6e22e>getRemoteSocketAddress</color><color=#f8f8f2>();</color>

      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ExitException</color><color=#f8f8f2>(</color>
          <color=#e6db74>"A replica with the id: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>replicaNameIdPair</color>
              <color=#f92672>+</color> <color=#e6db74>" is already active with this feeder. "</color>
              <color=#f92672>+</color> <color=#e6db74>" The duplicate replica resides at: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>dupAddress</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * If the Replica's version is acceptable, use it, otherwise return the</color>
<color=#75715e>     * default protocol at this node, in case the Replica can support it.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>replicaVersion</color> <color=#f92672>=</color> <color=#f8f8f2>message</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color> <color=#f92672>=</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>replicaVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>getCurrentProtocolVersion</color><color=#f8f8f2>());</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>protocol</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>protocol</color> <color=#f92672>=</color> <color=#f8f8f2>defaultProtocol</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>defaultProtocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>defaultProtocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>FeederProtocolVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>getVersion</color><color=#f8f8f2>()),</color> <color=#f8f8f2>namedChannel</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>