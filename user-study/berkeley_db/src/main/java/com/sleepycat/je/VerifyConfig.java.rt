<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.PropUtil</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.PrintStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>

<color=#75715e>/** Specifies the attributes of a verification operation. */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>VerifyConfig</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Cloneable</color> <color=#f8f8f2>{</color>

  <color=#75715e>/*</color>
<color=#75715e>   * For internal use, to allow null as a valid value for the config</color>
<color=#75715e>   * parameter.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>VerifyConfig</color> <color=#f8f8f2>DEFAULT</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>VerifyConfig</color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>propagateExceptions</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>aggressive</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>printInfo</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>PrintStream</color> <color=#f8f8f2>showProgressStream</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>showProgressInterval</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verifySecondaries</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verifyDataRecords</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verifyObsoleteRecords</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>batchSize</color> <color=#f92672>=</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>batchDelayMs</color> <color=#f92672>=</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * An instance created using the default constructor is initialized with the system's default</color>
<color=#75715e>   * settings.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>VerifyConfig</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   * Database.verify} to propagate exceptions found during verification.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default this is false and exception information is printed to System.out for notification</color>
<color=#75715e>   * but does not stop the verification activity, which continues on for as long as possible.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note: Currently this method has no effect.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param propagate If set to true, configure {@link Environment#verify Environment.verify} and</color>
<color=#75715e>   *     {@link Database#verify Database.verify} to propagate exceptions found during verification.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setPropagateExceptions</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>propagate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setPropagateExceptionsVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>propagate</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setPropagateExceptionsVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>propagate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>propagateExceptions</color> <color=#f92672>=</color> <color=#f8f8f2>propagate</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if the {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   * Database.verify} are configured to propagate exceptions found during verification.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method may be called at any time during the life of the application.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if the {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   *     Database.verify} are configured to propagate exceptions found during verification.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getPropagateExceptions</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>propagateExceptions</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   * Database.verify} to perform fine granularity consistency checking that includes verifying in</color>
<color=#75715e>   * memory constructs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This level of checking should only be performed while the database environment is quiescent.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default this is false.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note: Currently, enabling aggressive verification has no additional effect.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param aggressive If set to true, configure {@link Environment#verify Environment.verify} and</color>
<color=#75715e>   *     {@link Database#verify Database.verify} to perform fine granularity consistency checking</color>
<color=#75715e>   *     that includes verifying in memory constructs.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setAggressive</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>aggressive</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setAggressiveVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>aggressive</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAggressiveVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>aggressive</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>aggressive</color> <color=#f92672>=</color> <color=#f8f8f2>aggressive</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if the {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   * Database.verify} are configured to perform fine granularity consistency checking that includes</color>
<color=#75715e>   * verifying in memory constructs.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method may be called at any time during the life of the application.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if the {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   *     Database.verify} are configured to perform fine granularity consistency checking that</color>
<color=#75715e>   *     includes verifying in memory constructs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getAggressive</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>aggressive</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   * Database.verify} to print basic verification information.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Information is printed to the {@link #getShowProgressStream()} if it is non-null, and</color>
<color=#75715e>   * otherwise to System.err.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default this is false.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param printInfo If set to true, configure {@link Environment#verify Environment.verify} and</color>
<color=#75715e>   *     {@link Database#verify Database.verify} to print basic verification information.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setPrintInfo</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>printInfo</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setPrintInfoVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>printInfo</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setPrintInfoVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>printInfo</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>printInfo</color> <color=#f92672>=</color> <color=#f8f8f2>printInfo</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if the {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   * Database.verify} are configured to print basic verification information.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method may be called at any time during the life of the application.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if the {@link Environment#verify Environment.verify} and {@link Database#verify</color>
<color=#75715e>   *     Database.verify} are configured to print basic verification information.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getPrintInfo</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>printInfo</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures the verify operation to display progress to the PrintStream argument. The</color>
<color=#75715e>   * accumulated statistics will be displayed every N records, where N is the value of</color>
<color=#75715e>   * showProgressInterval.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setShowProgressStream</color><color=#f8f8f2>(</color><color=#f8f8f2>PrintStream</color> <color=#f8f8f2>showProgressStream</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setShowProgressStreamVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>showProgressStream</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setShowProgressStreamVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>PrintStream</color> <color=#f8f8f2>showProgressStream</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>showProgressStream</color> <color=#f92672>=</color> <color=#f8f8f2>showProgressStream</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the PrintStream on which the progress messages will be displayed during long running</color>
<color=#75715e>   * verify operations.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>PrintStream</color> <color=#a6e22e>getShowProgressStream</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>showProgressStream</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * When the verify operation is configured to display progress the showProgressInterval is the</color>
<color=#75715e>   * number of LNs between each progress report.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setShowProgressInterval</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>showProgressInterval</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setShowProgressIntervalVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>showProgressInterval</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setShowProgressIntervalVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>showProgressInterval</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>showProgressInterval</color> <color=#f92672>=</color> <color=#f8f8f2>showProgressInterval</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the showProgressInterval value, if set. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getShowProgressInterval</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>showProgressInterval</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures verification to verify secondary database integrity. This is equivalent to verifying</color>
<color=#75715e>   * secondaries in the background Btree verifier, when {@link EnvironmentConfig#VERIFY_SECONDARIES}</color>
<color=#75715e>   * is set to true.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default this is true.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setVerifySecondaries</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verifySecondaries</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setVerifySecondariesVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>verifySecondaries</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setVerifySecondariesVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verifySecondaries</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>verifySecondaries</color> <color=#f92672>=</color> <color=#f8f8f2>verifySecondaries</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the verifySecondaries value. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getVerifySecondaries</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>verifySecondaries</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures verification to read and verify the leaf node (LN) of a primary data record. This is</color>
<color=#75715e>   * equivalent to verifying data records in the background Btree verifier, when {@link</color>
<color=#75715e>   * EnvironmentConfig#VERIFY_DATA_RECORDS} is set to true.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default this is false.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setVerifyDataRecords</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verifyDataRecords</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setVerifyDataRecordsVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>verifyDataRecords</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setVerifyDataRecordsVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verifyDataRecords</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>verifyDataRecords</color> <color=#f92672>=</color> <color=#f8f8f2>verifyDataRecords</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the verifyDataRecords value. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getVerifyDataRecords</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>verifyDataRecords</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * @hidden Configures verification to verify the obsolete record metadata. This is equivalent to</color>
<color=#75715e>   *     verifying obsolete metadata in the background Btree verifier, when {@link</color>
<color=#75715e>   *     EnvironmentConfig#VERIFY_OBSOLETE_RECORDS} is set to true.</color>
<color=#75715e>   *     <p>By default this is false.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setVerifyObsoleteRecords</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verifyObsoleteRecords</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setVerifyObsoleteRecordsVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>verifyObsoleteRecords</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setVerifyObsoleteRecordsVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verifyObsoleteRecords</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>verifyObsoleteRecords</color> <color=#f92672>=</color> <color=#f8f8f2>verifyObsoleteRecords</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden Returns the verifyObsoleteRecords value. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getVerifyObsoleteRecords</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>verifyObsoleteRecords</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures the number of records verified per batch. In order to give database remove/truncate</color>
<color=#75715e>   * the opportunity to execute, records are verified in batches and there is a {@link</color>
<color=#75715e>   * #setBatchDelay delay} between batches.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default the batch size is 1000.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that when using the {@link EnvironmentConfig#ENV_RUN_VERIFIER background data</color>
<color=#75715e>   * verifier}, the batch size is {@link EnvironmentConfig#VERIFY_BTREE_BATCH_SIZE}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setBatchSize</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setBatchSizeVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>batchSize</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBatchSizeVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>batchSize</color> <color=#f92672>=</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns the batchSize value. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getBatchSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>batchSize</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures the delay between batches. In order to give database remove/truncate the opportunity</color>
<color=#75715e>   * to execute, records are verified in {@link #setBatchSize batches} and there is a delay between</color>
<color=#75715e>   * batches.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default the batch delay is 10 ms.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that when using the {@link EnvironmentConfig#ENV_RUN_VERIFIER background data</color>
<color=#75715e>   * verifier}, the batch delay is {@link EnvironmentConfig#VERIFY_BTREE_BATCH_DELAY}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param delay the delay between batches.</color>
<color=#75715e>   * @param unit the {@code TimeUnit} of the delay value. May be null only if delay is zero.</color>
<color=#75715e>   * @return this</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>setBatchDelay</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>delay</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setBatchDelayVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>delay</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBatchDelayVoid</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>delayDuration</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>batchDelayMs</color> <color=#f92672>=</color> <color=#f8f8f2>PropUtil</color><color=#f8f8f2>.</color><color=#a6e22e>durationToMillis</color><color=#f8f8f2>(</color><color=#f8f8f2>delayDuration</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the batch delay.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param unit the {@code TimeUnit} of the returned value. May not be null.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getBatchDelay</color><color=#f8f8f2>(</color><color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>PropUtil</color><color=#f8f8f2>.</color><color=#a6e22e>millisToDuration</color><color=#f8f8f2>(</color><color=#f8f8f2>batchDelayMs</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns a copy of this configuration object. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>VerifyConfig</color> <color=#a6e22e>clone</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>VerifyConfig</color><color=#f8f8f2>)</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>CloneNotSupportedException</color> <color=#f8f8f2>willNeverOccur</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the values for each configuration attribute.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the values for each configuration attribute.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#75715e>// TODO: add new properties here.</color>
    <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"propagateExceptions="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>propagateExceptions</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>