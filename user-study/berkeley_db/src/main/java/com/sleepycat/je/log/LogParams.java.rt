<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.log</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.cleaner.ExpirationTracker</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.cleaner.PackedObsoleteInfo</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.entry.LogEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.WriteLockInfo</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DbLsn</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Collection</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Parameters passed when an item is logged.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This class is used as a simple struct for passing multiple params, and does not need getters</color>
<color=#75715e> * and setters.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>LogParams</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Database of the node(s), or null if entry is not a node. Used for per- database utilization</color>
<color=#75715e>   * tracking.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>nodeDb</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Whether the log buffer(s) must be written to the file system. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>flushRequired</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Whether a new log file must be created for containing the logged item(s). */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forceNewLogFile</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Whether an fsync must be performed after writing the item(s) to the log. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>fsyncRequired</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Whether the write should be counted as background IO when throttling of background IO is</color>
<color=#75715e>   * configured.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>backgroundIO</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Set of obsolete LSNs which are counted when logging a commit entry. This information includes</color>
<color=#75715e>   * the DatabaseImpl for each LSN, and the nodeDb field does not apply.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>WriteLockInfo</color><color=#f92672>></color> <color=#f8f8f2>obsoleteWriteLockInfo</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sequence of packed obsolete info which is counted when logging a non-provisional IN. This</color>
<color=#75715e>   * information is for a single database, the nodeDb. The nodeDb is passed as a parameter to</color>
<color=#75715e>   * countObosoleteNode when adding this information to the global tracker.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>PackedObsoleteInfo</color> <color=#f8f8f2>packedObsoleteInfo</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Whether it is possible that the previous version of this log entry is already marked obsolete.</color>
<color=#75715e>   * In general, the latest version of any IN or LN is alive, so that logging a new version requires</color>
<color=#75715e>   * making the last version obsolete. Utilization tracking generally asserts that this last version</color>
<color=#75715e>   * is not already obsolete.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When partial rollbacks are used, some of the original intermediate versions may have been</color>
<color=#75715e>   * pruned away, leaving a current previous that was already marked obsolete. For example, a</color>
<color=#75715e>   * transaction might have done:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>LNA (version 1) LNA (version 2) -- now version 1 is obsolete -- if we do a partial rollback</color>
<color=#75715e>   * to version1, verison 2 is removed -- we start retransmitting LNA (version 2)</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>When we log this LNA/version2, this previous LNA (version1) is already obsolete.</color>
<color=#75715e>   * obsoleteDupsAllowed supports this case.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>obsoleteDupsAllowed</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Object to be marshaled and logged. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LogEntry</color> <color=#f8f8f2>entry</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The previous version of the node to be counted as obsolete, or NULL_LSN if the entry is not a</color>
<color=#75715e>   * node or has no old LSN.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#f8f8f2>oldLsn</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * For LNs, oldSize should be set along with oldLsn before logging. It should normally be obtained</color>
<color=#75715e>   * by calling BIN.getLastLoggedSize.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#f8f8f2>oldSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Another LSN to be counted as obsolete in the LogContext.nodeDb database, or NULL_LSN. Used for</color>
<color=#75715e>   * obsolete BIN-deltas.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#f8f8f2>auxOldLsn</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Whether the logged entry should be processed during recovery. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Provisional</color> <color=#f8f8f2>provisional</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/** Whether the logged entry should be replicated. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicationContext</color> <color=#f8f8f2>repContext</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Fields used internally by log method. */</color>
  <color=#66d9ef>boolean</color> <color=#f8f8f2>switchedLogBuffer</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>ExpirationTracker</color> <color=#f8f8f2>expirationTrackerToUse</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>ExpirationTracker</color> <color=#f8f8f2>expirationTrackerCompleted</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
<color=#f8f8f2>}</color>