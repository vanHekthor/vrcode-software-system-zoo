<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbConfigManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepGroupProtocol.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.RequestMessage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.TextProtocol.ResponseMessage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.RepNode</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.ServiceDispatcher</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.ServiceDispatcher.ExecutingRunnable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.ServiceDispatcher.ExecutingService</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.PrintWriter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.channels.Channels</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams.GROUP_NAME</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>GroupService</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ExecutingService</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* The replication node */</color>
  <color=#66d9ef>final</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>;</color>
  <color=#66d9ef>final</color> <color=#f8f8f2>RepGroupProtocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * List of channels for in-flight requests. The channel is in this collection while the request is</color>
<color=#75715e>   * being processed, and must be removed before sending any response.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @see #cancel</color>
<color=#75715e>   * @see #unregisterChannel</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>DataChannel</color><color=#f92672>></color> <color=#f8f8f2>activeChannels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>DataChannel</color><color=#f92672>></color><color=#f8f8f2>();</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>

  <color=#75715e>/* Identifies the Group Service. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>SERVICE_NAME</color> <color=#f92672>=</color> <color=#e6db74>"Group"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>GroupService</color><color=#f8f8f2>(</color><color=#f8f8f2>ServiceDispatcher</color> <color=#f8f8f2>dispatcher</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>SERVICE_NAME</color><color=#f8f8f2>,</color> <color=#f8f8f2>dispatcher</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>repNode</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>;</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DbConfigManager</color> <color=#f8f8f2>configManager</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>configManager</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>GROUP_NAME</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>protocol</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>RepGroupProtocol</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
            <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>().</color><color=#a6e22e>getChannelFactory</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>cancel</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Collection</color><color=#f92672><</color><color=#f8f8f2>DataChannel</color><color=#f92672>></color> <color=#f8f8f2>channels</color><color=#f8f8f2>;</color>
    <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>channels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>DataChannel</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>activeChannels</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>activeChannels</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>channels</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
          <color=#e6db74>"In-flight GroupService request(s) canceled: node shutdown"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>DataChannel</color> <color=#f8f8f2>channel</color> <color=#f8f8f2>:</color> <color=#f8f8f2>channels</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>PrintWriter</color> <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PrintWriter</color><color=#f8f8f2>(</color><color=#f8f8f2>Channels</color><color=#f8f8f2>.</color><color=#a6e22e>newOutputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>),</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ResponseMessage</color> <color=#f8f8f2>rm</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#e6db74>"shutting down"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>rm</color><color=#f8f8f2>.</color><color=#a6e22e>wireFormat</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>.</color><color=#a6e22e>isOpen</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>channel</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#e6db74>"IO error on channel close: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Dynamically invoked process methods */</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Wraps the replication group as currently cached on this node in a Response message and returns</color>
<color=#75715e>   * it.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>GroupRequest</color> <color=#f8f8f2>groupRequest</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>RepGroupImpl</color> <color=#f8f8f2>group</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>group</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>groupRequest</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#e6db74>"no group info yet"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>GroupResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>groupRequest</color><color=#f8f8f2>,</color> <color=#f8f8f2>group</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Ensures that the Monitor node, as described in the request, is a member of the group.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param ensureNode the request message describing the monitor node</color>
<color=#75715e>   * @return EnsureOK message if the monitor node is already part of the rep group, or was just made</color>
<color=#75715e>   *     a part of the replication group. It returns a Fail message if it could not be made part of</color>
<color=#75715e>   *     the group. The message associated with the response provides further details.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>EnsureNode</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>node</color> <color=#f92672>=</color> <color=#f8f8f2>ensureNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNode</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ensureMaster</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepGroupDB</color><color=#f8f8f2>().</color><color=#a6e22e>ensureMember</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>RepNodeImpl</color> <color=#f8f8f2>enode</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getMember</color><color=#f8f8f2>(</color><color=#f8f8f2>node</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>EnsureOK</color><color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>enode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicaStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_REPLICA</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>ensureNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes a current member from the group.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param removeMember the request identifying the member to be removed.</color>
<color=#75715e>   * @return OK message if the member was removed from the group.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>RemoveMember</color> <color=#f8f8f2>removeMember</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>removeMember</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ensureMaster</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>removeMember</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>OK</color><color=#f8f8f2>(</color><color=#f8f8f2>removeMember</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MemberNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>removeMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>MEMBER_NOT_FOUND</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MasterStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>removeMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_MASTER</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicaStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>removeMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_REPLICA</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>removeMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Deletes a current member from the group, which marks the node as removed and deletes its entry</color>
<color=#75715e>   * from the rep group DB.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param deleteMember the request identifying the member to be deleted</color>
<color=#75715e>   * @return OK message if the member was deleted from the group</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>DeleteMember</color> <color=#f8f8f2>deleteMember</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>deleteMember</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>();</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ensureMaster</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>removeMember</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>OK</color><color=#f8f8f2>(</color><color=#f8f8f2>deleteMember</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MemberNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>deleteMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>MEMBER_NOT_FOUND</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MasterStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>deleteMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_MASTER</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicaStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>deleteMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_REPLICA</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MemberActiveException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>deleteMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>MEMBER_ACTIVE</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>deleteMember</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Update the network address for a dead replica.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param updateAddress the request identifying the new network address for the node.</color>
<color=#75715e>   * @return OK message if the address is successfully updated.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>UpdateAddress</color> <color=#f8f8f2>updateAddress</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ensureMaster</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>updateAddress</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>updateAddress</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>updateAddress</color><color=#f8f8f2>.</color><color=#a6e22e>getNewHostName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>updateAddress</color><color=#f8f8f2>.</color><color=#a6e22e>getNewPort</color><color=#f8f8f2>());</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>OK</color><color=#f8f8f2>(</color><color=#f8f8f2>updateAddress</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MemberNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>updateAddress</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>MEMBER_NOT_FOUND</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MasterStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>updateAddress</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_MASTER</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicaStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>updateAddress</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_REPLICA</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>updateAddress</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Transfer the master role from the current master to one of the specified replicas.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param transferMaster the request identifying nodes to be considered for the role of new master</color>
<color=#75715e>   * @return null</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>TransferMaster</color> <color=#f8f8f2>transferMaster</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ensureMaster</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeList</color> <color=#f92672>=</color> <color=#f8f8f2>transferMaster</color><color=#f8f8f2>.</color><color=#a6e22e>getNodeNameList</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>replicas</color> <color=#f92672>=</color> <color=#f8f8f2>parseNodeList</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeList</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>timeout</color> <color=#f92672>=</color> <color=#f8f8f2>transferMaster</color><color=#f8f8f2>.</color><color=#a6e22e>getTimeout</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>force</color> <color=#f92672>=</color> <color=#f8f8f2>transferMaster</color><color=#f8f8f2>.</color><color=#a6e22e>getForceFlag</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>winner</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>transferMaster</color><color=#f8f8f2>(</color><color=#f8f8f2>replicas</color><color=#f8f8f2>,</color> <color=#f8f8f2>timeout</color><color=#f8f8f2>,</color> <color=#f8f8f2>force</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>TransferOK</color><color=#f8f8f2>(</color><color=#f8f8f2>transferMaster</color><color=#f8f8f2>,</color> <color=#f8f8f2>winner</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ReplicaStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>transferMaster</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>IS_REPLICA</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>MasterTransferFailureException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>transferMaster</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>TRANSFER_FAIL</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>transferMaster</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>transferMaster</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalStateException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Fail</color><color=#f8f8f2>(</color><color=#f8f8f2>transferMaster</color><color=#f8f8f2>,</color> <color=#f8f8f2>FailReason</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>parseNodeList</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>list</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>set</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#f8f8f2>StringTokenizer</color> <color=#f8f8f2>st</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringTokenizer</color><color=#f8f8f2>(</color><color=#f8f8f2>list</color><color=#f8f8f2>,</color> <color=#e6db74>","</color><color=#f8f8f2>);</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>st</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreTokens</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>st</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>set</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>ensureMaster</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>ReplicaStateException</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>isMaster</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReplicaStateException</color><color=#f8f8f2>(</color><color=#e6db74>"GroupService operation can only be performed at master"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>registerChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>DataChannel</color> <color=#f8f8f2>dc</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>activeChannels</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>dc</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Removes the given {@code DataChannel} from our list of active channels.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Before sending any response on the channel, this method must be invoked to claim ownership</color>
<color=#75715e>   * of it. This avoids a potential race between the request processing thread in the normal case,</color>
<color=#75715e>   * and a thread calling {@code cancel()} at env shutdown time.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true, if the channel is still active (usual case); false otherwise, presumably because</color>
<color=#75715e>   *     the service was shut down.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>boolean</color> <color=#a6e22e>unregisterChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>DataChannel</color> <color=#f8f8f2>dc</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>activeChannels</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>dc</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Runnable</color> <color=#a6e22e>getRunnable</color><color=#f8f8f2>(</color><color=#f8f8f2>DataChannel</color> <color=#f8f8f2>dataChannel</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>GroupServiceRunnable</color><color=#f8f8f2>(</color><color=#f8f8f2>dataChannel</color><color=#f8f8f2>,</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>class</color> <color=#a6e22e>GroupServiceRunnable</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ExecutingRunnable</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>GroupServiceRunnable</color><color=#f8f8f2>(</color><color=#f8f8f2>DataChannel</color> <color=#f8f8f2>dataChannel</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepGroupProtocol</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>dataChannel</color><color=#f8f8f2>,</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>registerChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>dataChannel</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>ResponseMessage</color> <color=#a6e22e>getResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>RequestMessage</color> <color=#f8f8f2>request</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>ResponseMessage</color> <color=#f8f8f2>rm</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>GroupService</color><color=#f8f8f2>.</color><color=#a6e22e>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>request</color><color=#f8f8f2>);</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If the channel has already been closed, before we got a chance to</color>
<color=#75715e>       * produce the response, then just discard the tardy response and</color>
<color=#75715e>       * return null.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>unregisterChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>rm</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>logMessage</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>message</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color> <color=#f8f8f2>message</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>