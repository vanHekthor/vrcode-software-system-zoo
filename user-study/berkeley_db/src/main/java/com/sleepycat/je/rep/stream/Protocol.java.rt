<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.stream</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.JEVersion</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.NodeType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepGroupImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.RepNode</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.RepUtils.Clock</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.UUID</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Defines the messages used to set up a feeder-replica replication stream.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note: this protocol is an extension of je.rep.stream.BaseProtocol, which defines a set of</color>
<color=#75715e> * basic message operation codes that are to be used by its subclasses.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>From Feeder to Replica</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Heartbeat -> HeartbeatResponse Commit -> Ack Commit+ -> GroupAck Entry ShutdownRequest -></color>
<color=#75715e> * ShutdownResponse</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note: in the future, we may want to support bulk entry messages</color>
<color=#75715e> *</color>
<color=#75715e> * <p>From Replica to Feeder</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The following subset of messages represents the handshake protocol that precedes the</color>
<color=#75715e> * transmission of replication log entries.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>ReplicaProtocolVersion -> FeederProtocolVersion | DuplicateNodeReject ReplicaJEVersions -></color>
<color=#75715e> * FeederJEVersions | JEVersionsReject NodeGroupInfo -> NodeGroupInfoOK | NodeGroupInfoReject</color>
<color=#75715e> * SNTPRequest -> SNTPResponse -> HeartbeatResponse</color>
<color=#75715e> *</color>
<color=#75715e> * <p>A HeartbeatResponse is not strictly a response message and may also be sent spontaneously if</color>
<color=#75715e> * there is no output activity in a heartbeat interval. This spontaneous generation of a</color>
<color=#75715e> * HeartbeatReponse ensures that a socket is not timed out if the feeder or the replica replay are</color>
<color=#75715e> * otherwise busy.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that there may be multiple SNTPRequest/SNTPResponse message pairs that are exchanged as</color>
<color=#75715e> * part of a single handshake. So a successful handshake requested sequence generated by the Replica</color>
<color=#75715e> * looks like:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>ReplicaProtocolVersion ReplicaJEVersions MembershipInfo [SNTPRequest]+</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The following messages constitute the syncup and the transmission of log entries.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>EntryRequest -> Entry | EntryNotFound | AlternateMatchpoint RestoreRequest -> RestoreResponse</color>
<color=#75715e> * StartStream</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The Protocol instance has local state in terms of buffers that are reused across multiple</color>
<color=#75715e> * messages. A Protocol instance is expected to be used in strictly serial fashion. Consequently,</color>
<color=#75715e> * there is an instance for each Replica to Feeder connection, and two instances per Feeder to</color>
<color=#75715e> * Replica connection: one for the InputThread and one for the OutputThread.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Protocol</color> <color=#66d9ef>extends</color> <color=#f8f8f2>BaseProtocol</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Normally the op code should fall in the range defined in BaseProtocol, however following op</color>
<color=#75715e>   * code inherit from original implementation of stream protocol thus we just copy them here for</color>
<color=#75715e>   * backward compatibility.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>REPLICA_PROTOCOL_VERSION</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicaProtocolVersion</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FEEDER_PROTOCOL_VERSION</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>FeederProtocolVersion</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>DUP_NODE_REJECT</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#f8f8f2>DuplicateNodeReject</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>REPLICA_JE_VERSIONS</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>4</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicaJEVersions</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>FEEDER_JE_VERSIONS</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>5</color><color=#f8f8f2>,</color> <color=#f8f8f2>FeederJEVersions</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>JE_VERSIONS_REJECT</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>6</color><color=#f8f8f2>,</color> <color=#f8f8f2>JEVersionsReject</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>MEMBERSHIP_INFO</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>7</color><color=#f8f8f2>,</color> <color=#f8f8f2>NodeGroupInfo</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>MEMBERSHIP_INFO_OK</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>8</color><color=#f8f8f2>,</color> <color=#f8f8f2>NodeGroupInfoOK</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>MEMBERSHIP_INFO_REJECT</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>9</color><color=#f8f8f2>,</color> <color=#f8f8f2>NodeGroupInfoReject</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>SNTP_REQUEST</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>10</color><color=#f8f8f2>,</color> <color=#f8f8f2>SNTPRequest</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>SNTP_RESPONSE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>11</color><color=#f8f8f2>,</color> <color=#f8f8f2>SNTPResponse</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>REAUTHENTICATE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>12</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReAuthenticate</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#75715e>/** All message ops needed by protocol */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color><color=#f92672>[]</color> <color=#f8f8f2>ALL_MESSAGE_OPS</color> <color=#f92672>=</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>REPLICA_PROTOCOL_VERSION</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>FEEDER_PROTOCOL_VERSION</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>DUP_NODE_REJECT</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>REPLICA_JE_VERSIONS</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>FEEDER_JE_VERSIONS</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>JE_VERSIONS_REJECT</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>MEMBERSHIP_INFO</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>MEMBERSHIP_INFO_OK</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>MEMBERSHIP_INFO_REJECT</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>SNTP_REQUEST</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>SNTP_RESPONSE</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>ENTRY</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>START_STREAM</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>HEARTBEAT</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>HEARTBEAT_RESPONSE</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>COMMIT</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>ACK</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>ENTRY_REQUEST</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>ENTRY_NOTFOUND</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>RESTORE_REQUEST</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>RESTORE_RESPONSE</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>ALT_MATCHPOINT</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>SHUTDOWN_REQUEST</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>SHUTDOWN_RESPONSE</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>GROUP_ACK</color><color=#f8f8f2>,</color>
    <color=#f8f8f2>REAUTHENTICATE</color>
  <color=#f8f8f2>};</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Clock</color> <color=#f8f8f2>clock</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a Protocol object configured that implements the specified (supported) protocol</color>
<color=#75715e>   * version.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param repImpl the node using the protocol</color>
<color=#75715e>   * @param nameIdPair name-id pair of the node using the protocol</color>
<color=#75715e>   * @param clock clock used by the node</color>
<color=#75715e>   * @param protocolVersion the version of the protocol that must be implemented by this object</color>
<color=#75715e>   * @param maxProtocolVersion the highest supported protocol version, which may be lower than the</color>
<color=#75715e>   *     code version, for testing purposes</color>
<color=#75715e>   * @param streamLogVersion the log version of the format used to write log entries</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#a6e22e>Protocol</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Clock</color> <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
      <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"unused"</color><color=#f8f8f2>)</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>ALL_MESSAGE_OPS</color><color=#f8f8f2>,</color>
        <color=#75715e>/* no validity check, from legacy protocol */</color>
        <color=#66d9ef>false</color><color=#f8f8f2>);</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>configuredVersion</color> <color=#f92672>=</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>clock</color> <color=#f92672>=</color> <color=#f8f8f2>clock</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a protocol object that supports the specific requested protocol version, which must not</color>
<color=#75715e>   * be higher than the specified maximum version, or null if no such version is supported.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getClock</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Clock</color> <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_VERSION</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a protocol object that supports the specified protocol, which must be less than the</color>
<color=#75715e>   * specified maximum version, and writes log entries in the specified log version format. Returns</color>
<color=#75715e>   * null if no such version is supported.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getClock</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Clock</color> <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * If the RepGroupImpl has been upgraded to version 3, then require</color>
<color=#75715e>     * protocol version 5, which is required to support that RepGroupImpl</color>
<color=#75715e>     * version.  This check prevents new facilities that depend on</color>
<color=#75715e>     * RepGroupImpl version 3 from being seen by non-upgraded replicas.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>minProtocolVersion</color> <color=#f92672>=</color> <color=#f8f8f2>MIN_VERSION</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>groupFormatVersion</color> <color=#f92672>>=</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>FORMAT_VERSION_3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>minProtocolVersion</color> <color=#f92672>=</color> <color=#f8f8f2>VERSION_5</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>minProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a protocol object using the specified minimum and maximum values, returning null if no</color>
<color=#75715e>   * supported version is found. Use this method for testing when the RepGroupImpl object is not</color>
<color=#75715e>   * available.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>minProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>formatVersion</color> <color=#f92672>=</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_FORMAT_VERSION</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>formatVersion</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>get</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getClock</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>minProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>formatVersion</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>get</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Clock</color> <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>minProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isSupportedVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>minProtocolVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Future code will do what is appropriate in support of the version</color>
<color=#75715e>     * depending on the nature of the incompatibility.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>streamLogVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Returns a protocol object using the specified protocol version. */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>getProtocol</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>formatVersion</color> <color=#f92672>=</color> <color=#f8f8f2>RepGroupImpl</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_FORMAT_VERSION</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>formatVersion</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getFormatVersion</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>getProtocol</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getRepImpl</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getNameIdPair</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getClock</color><color=#f8f8f2>(),</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>formatVersion</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>static</color> <color=#f8f8f2>Protocol</color> <color=#a6e22e>getProtocol</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Clock</color> <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>clock</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_VERSION</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>groupFormatVersion</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns true if the code can support the version.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param protocolVersion protocol version being queried</color>
<color=#75715e>   * @param minProtocolVersion minimum protocol version supported</color>
<color=#75715e>   * @param maxProtocolVersion maximum protocol version supported</color>
<color=#75715e>   * @return true if the protocol version is supported by this implementation of the protocol</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isSupportedVersion</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>minProtocolVersion</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>protocolVersion</color> <color=#f92672>==</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* For testing purposes. */</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Version compatibility check: for now, a simple range check.  We can</color>
<color=#75715e>     * make this fancier in the future if necessary.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>minProtocolVersion</color> <color=#f92672><=</color> <color=#f8f8f2>protocolVersion</color> <color=#f92672>&&</color> <color=#f8f8f2>protocolVersion</color> <color=#f92672><=</color> <color=#f8f8f2>maxProtocolVersion</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the JE version that corresponds to the specified protocol version, for use in creating</color>
<color=#75715e>   * error messages that explain protocol version errors in terms of JE versions. Returns null if</color>
<color=#75715e>   * the associated version is not known.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>getProtocolJEVersion</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>protocolVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>protocolVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>VERSION_7</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_7_JE_VERSION</color><color=#f8f8f2>;</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>VERSION_6</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_6_JE_VERSION</color><color=#f8f8f2>;</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>VERSION_5</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_5_JE_VERSION</color><color=#f8f8f2>;</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>VERSION_4</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_4_JE_VERSION</color><color=#f8f8f2>;</color>
      <color=#66d9ef>case</color> <color=#f8f8f2>VERSION_3</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_3_JE_VERSION</color><color=#f8f8f2>;</color>
      <color=#66d9ef>default</color><color=#f8f8f2>:</color>
        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Gets the protocol version that corresponds to the specified JE version, throwing an</color>
<color=#75715e>   * IllegalArgumentException if the version is not supported.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>getJEVersionProtocolVersion</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_7</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>VERSION_7_JE_VERSION</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_7</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>VERSION_6_JE_VERSION</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_6</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>VERSION_5_JE_VERSION</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_5</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>VERSION_4_JE_VERSION</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_4</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>VERSION_3_JE_VERSION</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>VERSION_3</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"JE version not supported: "</color> <color=#f92672>+</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The replica sends the feeder its protocol version.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>IMPORTANT: This message must not change.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReplicaProtocolVersion</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ProtocolVersion</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ReplicaProtocolVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>configuredVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ReplicaProtocolVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>REPLICA_PROTOCOL_VERSION</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The feeder sends the replica its proposed version.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>IMPORTANT: This message must not change.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FeederProtocolVersion</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ProtocolVersion</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FeederProtocolVersion</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>proposedVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>proposedVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FeederProtocolVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FEEDER_PROTOCOL_VERSION</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Reject response to a ReplicaProtocolVersion request */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>DuplicateNodeReject</color> <color=#66d9ef>extends</color> <color=#f8f8f2>RejectMessage</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>DuplicateNodeReject</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>errorMessage</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>errorMessage</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>DuplicateNodeReject</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>DUP_NODE_REJECT</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SNTPRequest</color> <color=#66d9ef>extends</color> <color=#f8f8f2>HandshakeMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>;</color>

    <color=#75715e>/* Set by the receiver at the time the message is recreated. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>receiveTimestamp</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Determines whether this is the last in a consecutive stream of</color>
<color=#75715e>     * requests to determine the skew.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>isLast</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>SNTPRequest</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>isLast</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>isLast</color> <color=#f92672>=</color> <color=#f8f8f2>isLast</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>originateTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>clock</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>,</color> <color=#f8f8f2>isLast</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>SNTPRequest</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>originateTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>isLast</color> <color=#f92672>=</color> <color=#f8f8f2>getBoolean</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>receiveTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>clock</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>SNTP_REQUEST</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getOriginateTimestamp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getReceiveTimestamp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>receiveTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isLast</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>isLast</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SNTPResponse</color> <color=#66d9ef>extends</color> <color=#f8f8f2>HandshakeMessage</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* These fields have the standard SNTP interpretation */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>;</color> <color=#75715e>// time request sent by client</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>receiveTimestamp</color><color=#f8f8f2>;</color> <color=#75715e>// time request received by server</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Initialized when the message is serialized to ensure it's as</color>
<color=#75715e>     * accurate as possible.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>transmitTimestamp</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#75715e>// time reply sent by server</color>

    <color=#75715e>/* Initialized at de-serialization for similar reasons. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>destinationTimestamp</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#75715e>// time reply received by client</color>

    <color=#66d9ef>public</color> <color=#a6e22e>SNTPResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>SNTPRequest</color> <color=#f8f8f2>request</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>originateTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>request</color><color=#f8f8f2>.</color><color=#a6e22e>originateTimestamp</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>receiveTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>request</color><color=#f8f8f2>.</color><color=#a6e22e>receiveTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>transmitTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>clock</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>,</color> <color=#f8f8f2>receiveTimestamp</color><color=#f8f8f2>,</color> <color=#f8f8f2>transmitTimestamp</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>SNTPResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>originateTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>receiveTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>transmitTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>destinationTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>clock</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>SNTP_RESPONSE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getOriginateTimestamp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getReceiveTimestamp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>receiveTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getTransmitTimestamp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>transmitTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getDestinationTimestamp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>destinationTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getDelay</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>destinationTimestamp</color> <color=#f92672>!=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>destinationTimestamp</color> <color=#f92672>-</color> <color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>)</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#f8f8f2>transmitTimestamp</color> <color=#f92672>-</color> <color=#f8f8f2>receiveTimestamp</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getDelta</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>destinationTimestamp</color> <color=#f92672>!=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>((</color><color=#f8f8f2>receiveTimestamp</color> <color=#f92672>-</color> <color=#f8f8f2>originateTimestamp</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>transmitTimestamp</color> <color=#f92672>-</color> <color=#f8f8f2>destinationTimestamp</color><color=#f8f8f2>))</color>
          <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReAuthenticate</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>tokenBytes</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ReAuthenticate</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>tokenBytes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>tokenBytes</color> <color=#f92672>=</color> <color=#f8f8f2>tokenBytes</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>tokenBytes</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ReAuthenticate</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>tokenBytes</color> <color=#f92672>=</color> <color=#f8f8f2>getByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getTokenBytes</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tokenBytes</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>return</color> <color=#f8f8f2>tokenBytes</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>REAUTHENTICATE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Abstract message used as the basis for the exchange of software versions between replicated</color>
<color=#75715e>   * nodes</color>
<color=#75715e>   */</color>
  <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>JEVersions</color> <color=#66d9ef>extends</color> <color=#f8f8f2>HandshakeMessage</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>version</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>JEVersions</color><color=#f8f8f2>(</color><color=#f8f8f2>JEVersion</color> <color=#f8f8f2>version</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>version</color> <color=#f92672>=</color> <color=#f8f8f2>version</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>logVersion</color> <color=#f92672>=</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>version</color><color=#f8f8f2>.</color><color=#a6e22e>getVersionString</color><color=#f8f8f2>(),</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>JEVersions</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>version</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>JEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>));</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>logVersion</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>getVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>version</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>byte</color> <color=#a6e22e>getLogVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReplicaJEVersions</color> <color=#66d9ef>extends</color> <color=#f8f8f2>JEVersions</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>ReplicaJEVersions</color><color=#f8f8f2>(</color><color=#f8f8f2>JEVersion</color> <color=#f8f8f2>version</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>version</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ReplicaJEVersions</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>REPLICA_JE_VERSIONS</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FeederJEVersions</color> <color=#66d9ef>extends</color> <color=#f8f8f2>JEVersions</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Is null if protocol version < VERSION_7. */</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>minJEVersion</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>FeederJEVersions</color><color=#f8f8f2>(</color><color=#f8f8f2>JEVersion</color> <color=#f8f8f2>version</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>minJEVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>version</color><color=#f8f8f2>,</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>minJEVersion</color> <color=#f92672>=</color> <color=#f8f8f2>minJEVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>configuredVersion</color> <color=#f92672><</color> <color=#f8f8f2>VERSION_7</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>wireFormat</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>getVersion</color><color=#f8f8f2>().</color><color=#a6e22e>getVersionString</color><color=#f8f8f2>(),</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>getLogVersion</color><color=#f8f8f2>(),</color> <color=#f8f8f2>minJEVersion</color><color=#f8f8f2>.</color><color=#a6e22e>getVersionString</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FeederJEVersions</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>configuredVersion</color> <color=#f92672><</color> <color=#f8f8f2>VERSION_7</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>minJEVersion</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>JEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>FEEDER_JE_VERSIONS</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the minJEVersion of the group, or null if unknown (in protocol versions < VERSION_7).</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>getMinJEVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>minJEVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Reject response to a ReplicaJEVersions request */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>JEVersionsReject</color> <color=#66d9ef>extends</color> <color=#f8f8f2>RejectMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>JEVersionsReject</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>errorMessage</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>errorMessage</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>JEVersionsReject</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>JE_VERSIONS_REJECT</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>NodeGroupInfo</color> <color=#66d9ef>extends</color> <color=#f8f8f2>HandshakeMessage</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>UUID</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>;</color>

    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"hiding"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>hostName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>port</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>NodeType</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>designatedPrimary</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A string version of the JE version running on this node, or the empty string if not known.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>NodeGroupInfo</color><color=#f8f8f2>(</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>UUID</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>hostName</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>port</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>NodeType</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>designatedPrimary</color><color=#f8f8f2>,</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>uuid</color> <color=#f92672>=</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>hostName</color> <color=#f92672>=</color> <color=#f8f8f2>hostName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>port</color> <color=#f92672>=</color> <color=#f8f8f2>port</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeType</color> <color=#f92672>=</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>designatedPrimary</color> <color=#f92672>=</color> <color=#f8f8f2>designatedPrimary</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>jeVersion</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>getNumericVersionString</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#e6db74>""</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>MEMBERSHIP_INFO</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>repGroupV3</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>getVersion</color><color=#f8f8f2>()</color> <color=#f92672>>=</color> <color=#f8f8f2>VERSION_5</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>repGroupV3</color> <color=#f92672>&&</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>ELECTABLE</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Node type not supported before group version 3: "</color> <color=#f92672>+</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>Object</color><color=#f92672>[]</color> <color=#f8f8f2>args</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Object</color><color=#f92672>[</color><color=#f8f8f2>repGroupV3</color> <color=#f92672>?</color> <color=#ae81ff>9</color> <color=#f8f8f2>:</color> <color=#ae81ff>8</color><color=#f92672>]</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>.</color><color=#a6e22e>getMostSignificantBits</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>.</color><color=#a6e22e>getLeastSignificantBits</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>3</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>4</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>hostName</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>5</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>port</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>6</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>7</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>designatedPrimary</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>repGroupV3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>args</color><color=#f92672>[</color><color=#ae81ff>8</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeGroupInfo</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>uuid</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>UUID</color><color=#f8f8f2>(</color><color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>),</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>));</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>getNameIdPair</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>hostName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>port</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeType</color> <color=#f92672>=</color> <color=#f8f8f2>getEnum</color><color=#f8f8f2>(</color><color=#f8f8f2>NodeType</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>designatedPrimary</color> <color=#f92672>=</color> <color=#f8f8f2>getBoolean</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>jeVersion</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>getVersion</color><color=#f8f8f2>()</color> <color=#f92672>>=</color> <color=#f8f8f2>VERSION_5</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#e6db74>""</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getGroupName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>UUID</color> <color=#a6e22e>getUUID</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getNodeId</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getHostName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>hostName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>NameIdPair</color> <color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>port</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>port</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>NodeType</color> <color=#a6e22e>getNodeType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isDesignatedPrimary</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>designatedPrimary</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the JE version most recently noted running on the associated node, or null if not</color>
<color=#75715e>     * known.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>getJEVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f92672>!</color><color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#66d9ef>new</color> <color=#f8f8f2>JEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>jeVersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Response to a NodeGroupInfo request that was successful. The object contains the group's UUID</color>
<color=#75715e>   * and the replica's NameIdPair. The group UUID is used to update the replica's notion of the</color>
<color=#75715e>   * group UUID on first joining. The NameIdPair is used to update the replica's node ID for a</color>
<color=#75715e>   * secondary node, which is not available in the RepGroupDB.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>NodeGroupInfoOK</color> <color=#66d9ef>extends</color> <color=#f8f8f2>HandshakeMessage</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>UUID</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>;</color>

    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"hiding"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeGroupInfoOK</color><color=#f8f8f2>(</color><color=#f8f8f2>UUID</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>,</color> <color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>uuid</color> <color=#f92672>=</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeGroupInfoOK</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>uuid</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>UUID</color><color=#f8f8f2>(</color><color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>),</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>nameIdPair</color> <color=#f92672>=</color> <color=#f8f8f2>getNameIdPair</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>uuid</color><color=#f8f8f2>.</color><color=#a6e22e>getMostSignificantBits</color><color=#f8f8f2>(),</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>.</color><color=#a6e22e>getLeastSignificantBits</color><color=#f8f8f2>(),</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>MEMBERSHIP_INFO_OK</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>NameIdPair</color> <color=#a6e22e>getNameIdPair</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>UUID</color> <color=#a6e22e>getUUID</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>uuid</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>NodeGroupInfoReject</color> <color=#66d9ef>extends</color> <color=#f8f8f2>RejectMessage</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>NodeGroupInfoReject</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>errorMessage</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>errorMessage</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>MEMBERSHIP_INFO_REJECT</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>errorMessage</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>NodeGroupInfoReject</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>