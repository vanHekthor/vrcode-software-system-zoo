<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.vlsn</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.LongBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleBinding</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleInput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.bind.tuple.TupleOutput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DatabaseImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogEntryType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.txn.Txn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN.NULL_VLSN</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>VLSNRange</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* On-disk version. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>VERSION</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>RANGE_KEY</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1L</color><color=#f8f8f2>;</color>
  <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSNRange</color> <color=#f8f8f2>EMPTY</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>);</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Information about the range of contiguous VLSN entries on this node.</color>
<color=#75715e>   * All the range values must be viewed together, to ensure a consistent set</color>
<color=#75715e>   * of values.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>first</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>commitType</color> <color=#f92672>=</color> <color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_TXN_COMMIT</color><color=#f8f8f2>.</color><color=#a6e22e>getTypeNum</color><color=#f8f8f2>();</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>abortType</color> <color=#f92672>=</color> <color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_TXN_ABORT</color><color=#f8f8f2>.</color><color=#a6e22e>getTypeNum</color><color=#f8f8f2>();</color>

  <color=#75715e>/*</color>
<color=#75715e>   * VLSN of the last log entry in our VLSN range that can serve as a sync</color>
<color=#75715e>   * matchpoint.</color>
<color=#75715e>   *</color>
<color=#75715e>   * Currently lastSync and lastTxnEnd are the same value because a</color>
<color=#75715e>   * sync point is defined as a commit or abort; however, in the future the</color>
<color=#75715e>   * Matchpoint log entry may also be used for sync points and and then</color>
<color=#75715e>   * lastSync may be ahead of lastTxnEnd.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>lastSync</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#a6e22e>VLSNRange</color><color=#f8f8f2>(</color><color=#f8f8f2>VLSN</color> <color=#f8f8f2>first</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>last</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>lastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>first</color> <color=#f92672>=</color> <color=#f8f8f2>first</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>last</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lastSync</color> <color=#f92672>=</color> <color=#f8f8f2>lastSync</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lastTxnEnd</color> <color=#f92672>=</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * When the range is written out by the VLSNTracker, we must always be sure to update the</color>
<color=#75715e>   * tracker's lastVSLNOnDisk field. Return the last VLSN in the range as part of this method, to</color>
<color=#75715e>   * help ensure that update.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param envImpl</color>
<color=#75715e>   * @param dbImpl</color>
<color=#75715e>   * @param txn</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>VLSN</color> <color=#a6e22e>writeToDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>Txn</color> <color=#f8f8f2>txn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>VLSNRangeBinding</color> <color=#f8f8f2>binding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRangeBinding</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>

    <color=#f8f8f2>LongBinding</color><color=#f8f8f2>.</color><color=#a6e22e>longToEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>RANGE_KEY</color><color=#f8f8f2>,</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>binding</color><color=#f8f8f2>.</color><color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>makeCursor</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>txn</color><color=#f8f8f2>,</color> <color=#f8f8f2>CursorConfig</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getCursorImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>).</color><color=#a6e22e>setAllowEviction</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>OperationStatus</color> <color=#f8f8f2>status</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>status</color> <color=#f92672>!=</color> <color=#f8f8f2>OperationStatus</color><color=#f8f8f2>.</color><color=#a6e22e>SUCCESS</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Unable to write VLSNRange, status = "</color> <color=#f92672>+</color> <color=#f8f8f2>status</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>c</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>VLSNRange</color> <color=#a6e22e>readFromDatabase</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>VLSNRangeBinding</color> <color=#f8f8f2>binding</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRangeBinding</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>VLSNRange</color> <color=#f8f8f2>range</color> <color=#f92672>=</color> <color=#f8f8f2>binding</color><color=#f8f8f2>.</color><color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>range</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getFirst</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>first</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getLast</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getLastSync</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>lastSync</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getLastTxnEnd</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Return the VLSN that should come after the lastVLSN. */</color>
  <color=#f8f8f2>VLSN</color> <color=#a6e22e>getUpcomingVLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @return true if this VLSN is within the range described by this class. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>vlsn</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

      <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>)</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>vlsn</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** A new VLSN->LSN mapping has been registered in a bucket. Update the range accordingly. */</color>
  <color=#f8f8f2>VLSNRange</color> <color=#a6e22e>getUpdateForNewMapping</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newValue</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>entryTypeNum</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newFirst</color> <color=#f92672>=</color> <color=#f8f8f2>first</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLast</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLastSync</color> <color=#f92672>=</color> <color=#f8f8f2>lastSync</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLastTxnEnd</color> <color=#f92672>=</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>newValue</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>newFirst</color> <color=#f92672>=</color> <color=#f8f8f2>newValue</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>newValue</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>newLast</color> <color=#f92672>=</color> <color=#f8f8f2>newValue</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>LogEntryType</color><color=#f8f8f2>.</color><color=#a6e22e>isSyncPoint</color><color=#f8f8f2>(</color><color=#f8f8f2>entryTypeNum</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>newValue</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>newLastSync</color> <color=#f92672>=</color> <color=#f8f8f2>newValue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>entryTypeNum</color> <color=#f92672>==</color> <color=#f8f8f2>commitType</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>entryTypeNum</color> <color=#f92672>==</color> <color=#f8f8f2>abortType</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>newValue</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>newLastTxnEnd</color> <color=#f92672>=</color> <color=#f8f8f2>newValue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color><color=#f8f8f2>newFirst</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLast</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLastTxnEnd</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Incorporate the information in "other" in this range. */</color>
  <color=#f8f8f2>VLSNRange</color> <color=#a6e22e>getUpdate</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSNRange</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newFirst</color> <color=#f92672>=</color> <color=#f8f8f2>getComparison</color><color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>first</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>first</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLast</color> <color=#f92672>=</color> <color=#f8f8f2>getComparison</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>last</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>last</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLastSync</color> <color=#f92672>=</color>
        <color=#f8f8f2>getComparison</color><color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>lastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>lastSync</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLastTxnEnd</color> <color=#f92672>=</color>
        <color=#f8f8f2>getComparison</color><color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>lastTxnEnd</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>lastTxnEnd</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color><color=#f8f8f2>newFirst</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLast</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLastTxnEnd</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** The "other" range is going to be appended to this range. */</color>
  <color=#f8f8f2>VLSNRange</color> <color=#a6e22e>merge</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSNRange</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLast</color> <color=#f92672>=</color> <color=#f8f8f2>getComparison</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>last</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLastSync</color> <color=#f92672>=</color> <color=#f8f8f2>getComparison</color><color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>lastSync</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLastTxnEnd</color> <color=#f92672>=</color> <color=#f8f8f2>getComparison</color><color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>lastTxnEnd</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLast</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLastTxnEnd</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * We can assume that deleteStart.getPrev() is either NULL_VLSN or is</color>
<color=#75715e>   * on a sync-able boundary. We can also assume that lastTxnEnd has not</color>
<color=#75715e>   * been changed. And lastly, we can assume that this range is not empty,</color>
<color=#75715e>   * since that was checked earlier on.</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>VLSNRange</color> <color=#a6e22e>shortenFromEnd</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>deleteStart</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLast</color> <color=#f92672>=</color> <color=#f8f8f2>deleteStart</color><color=#f8f8f2>.</color><color=#a6e22e>getPrev</color><color=#f8f8f2>();</color>

    <color=#66d9ef>assert</color> <color=#f8f8f2>newLast</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color>
        <color=#f8f8f2>:</color> <color=#e6db74>"Can't truncate at "</color> <color=#f92672>+</color> <color=#f8f8f2>newLast</color> <color=#f92672>+</color> <color=#e6db74>" because it overwrites a commit at "</color> <color=#f92672>+</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>newLast</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>,</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLast</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLast</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * @return an new VLSNRange which starts at deleteEnd.getNext()</color>
<color=#75715e>   */</color>
  <color=#f8f8f2>VLSNRange</color> <color=#a6e22e>shortenFromHead</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>deleteEnd</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newFirst</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newLast</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>deleteEnd</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>newFirst</color> <color=#f92672>=</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>newLast</color> <color=#f92672>=</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>newFirst</color> <color=#f92672>=</color> <color=#f8f8f2>deleteEnd</color><color=#f8f8f2>.</color><color=#a6e22e>getNext</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* We shouldn't be truncating the last sync */</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>lastSync</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>newFirst</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color>
        <color=#f8f8f2>:</color> <color=#e6db74>"Can't truncate lastSync= "</color> <color=#f92672>+</color> <color=#f8f8f2>lastSync</color> <color=#f92672>+</color> <color=#e6db74>" deleteEnd="</color> <color=#f92672>+</color> <color=#f8f8f2>deleteEnd</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>VLSN</color> <color=#f8f8f2>newTxnEnd</color> <color=#f92672>=</color> <color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>newFirst</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color> <color=#f92672>?</color> <color=#f8f8f2>lastTxnEnd</color> <color=#f8f8f2>:</color> <color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>;</color>

    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color><color=#f8f8f2>newFirst</color><color=#f8f8f2>,</color> <color=#f8f8f2>newLast</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>newTxnEnd</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Compare two VLSNs, normalizing for NULL_VLSN. If one of them is NULL_VLSN, return the other</color>
<color=#75715e>   * one. If neither are NULL_VLSN, use the result of the comparison, expressed as the value of</color>
<color=#75715e>   * "better" to decide which one to return. If "better" is true, return "otherVLSN".</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getComparison</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>thisVLSN</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>otherVLSN</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>better</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>otherVLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>otherVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>thisVLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>better</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>otherVLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>thisVLSN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>boolean</color> <color=#a6e22e>isEmpty</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"first="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" last="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" sync="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" txnEnd="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Marshals a VLSNRange to a byte buffer to store in the database. */</color>
  <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>VLSNRangeBinding</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TupleBinding</color><color=#f92672><</color><color=#f8f8f2>VLSNRange</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>VLSNRange</color> <color=#a6e22e>entryToObject</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>TupleInput</color> <color=#f8f8f2>ti</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>onDiskVersion</color> <color=#f92672>=</color> <color=#f8f8f2>ti</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedInt</color><color=#f8f8f2>();</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>onDiskVersion</color> <color=#f92672>!=</color> <color=#f8f8f2>VERSION</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
            <color=#e6db74>"Don't expect version diff "</color> <color=#f92672>+</color> <color=#e6db74>"on_disk="</color> <color=#f92672>+</color> <color=#f8f8f2>onDiskVersion</color> <color=#f92672>+</color> <color=#e6db74>" source="</color> <color=#f92672>+</color> <color=#f8f8f2>VERSION</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>VLSNRange</color> <color=#f8f8f2>range</color> <color=#f92672>=</color>
          <color=#66d9ef>new</color> <color=#f8f8f2>VLSNRange</color><color=#f8f8f2>(</color>
              <color=#66d9ef>new</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>ti</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedLong</color><color=#f8f8f2>()),</color> <color=#75715e>// first</color>
              <color=#66d9ef>new</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>ti</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedLong</color><color=#f8f8f2>()),</color> <color=#75715e>// last</color>
              <color=#66d9ef>new</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>ti</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedLong</color><color=#f8f8f2>()),</color> <color=#75715e>// lastSync</color>
              <color=#66d9ef>new</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>(</color><color=#f8f8f2>ti</color><color=#f8f8f2>.</color><color=#a6e22e>readPackedLong</color><color=#f8f8f2>()));</color> <color=#75715e>// lastTxnEnd</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>range</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>objectToEntry</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>VLSNRange</color> <color=#f8f8f2>range</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>TupleOutput</color> <color=#f8f8f2>to</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* No need to store the file number -- that's the key */</color>
      <color=#f8f8f2>to</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedInt</color><color=#f8f8f2>(</color><color=#f8f8f2>VERSION</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>to</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedLong</color><color=#f8f8f2>(</color><color=#f8f8f2>range</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>().</color><color=#a6e22e>getSequence</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>to</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedLong</color><color=#f8f8f2>(</color><color=#f8f8f2>range</color><color=#f8f8f2>.</color><color=#a6e22e>getLast</color><color=#f8f8f2>().</color><color=#a6e22e>getSequence</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>to</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedLong</color><color=#f8f8f2>(</color><color=#f8f8f2>range</color><color=#f8f8f2>.</color><color=#a6e22e>getLastSync</color><color=#f8f8f2>().</color><color=#a6e22e>getSequence</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>to</color><color=#f8f8f2>.</color><color=#a6e22e>writePackedLong</color><color=#f8f8f2>(</color><color=#f8f8f2>range</color><color=#f8f8f2>.</color><color=#a6e22e>getLastTxnEnd</color><color=#f8f8f2>().</color><color=#a6e22e>getSequence</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>boolean</color> <color=#a6e22e>verify</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>)</color>
          <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color>
          <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Range: All need to be NULL_VLSN "</color> <color=#f92672>+</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Range: first > last "</color> <color=#f92672>+</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastSync</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Range: lastSync > last "</color> <color=#f92672>+</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastTxnEnd</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Range: lastTxnEnd > last "</color> <color=#f92672>+</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @return true if subsetRange is a subset of this range. */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>verifySubset</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>VLSNRange</color> <color=#f8f8f2>subsetRange</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>subsetRange</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>subsetRange</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color>
        <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>subsetRange</color><color=#f8f8f2>.</color><color=#a6e22e>getLast</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color>
        <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>subsetRange</color><color=#f8f8f2>.</color><color=#a6e22e>getLastSync</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color>
        <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>subsetRange</color><color=#f8f8f2>.</color><color=#a6e22e>getLastTxnEnd</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>)))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>subsetRange</color><color=#f8f8f2>.</color><color=#a6e22e>getFirst</color><color=#f8f8f2>())</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Range: subset must be LTE: this="</color> <color=#f92672>+</color> <color=#66d9ef>this</color> <color=#f92672>+</color> <color=#e6db74>" subset="</color> <color=#f92672>+</color> <color=#f8f8f2>subsetRange</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>first</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>NULL_VLSN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>subsetRange</color><color=#f8f8f2>.</color><color=#a6e22e>getLast</color><color=#f8f8f2>())</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Range: last must be GTE: this="</color> <color=#f92672>+</color> <color=#66d9ef>this</color> <color=#f92672>+</color> <color=#e6db74>" subsetRange="</color> <color=#f92672>+</color> <color=#f8f8f2>subsetRange</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>