<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.subscription</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.ReplicationSecurityException</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Object represents an interface of subscriber authenticator, used by subscriber to track token</color>
<color=#75715e> * expiration and refresh token proactively.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>SubscriptionAuthHandler</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns if subscriber has new token to update during subscription. Subscriber need to update an</color>
<color=#75715e>   * existing token when 1) token will expire soon and need to to be renewed, or 2) token is unable</color>
<color=#75715e>   * to be renewed further and re-authenticate is needed to get a new token. Implementation of the</color>
<color=#75715e>   * interface shall check the two conditions above and refresh token if necessary.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws ReplicationSecurityException if implementation of the interface fails to renew or</color>
<color=#75715e>   *     re-authenticate to get a new token</color>
<color=#75715e>   * @return true if the subscriber has a new token to update, false otherwise.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>hasNewToken</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>ReplicationSecurityException</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the login token in bytes. It returns null if no identity information is available.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return login token as byte array, null if token is not available at the time of calling.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getToken</color><color=#f8f8f2>();</color>
<color=#f8f8f2>}</color>