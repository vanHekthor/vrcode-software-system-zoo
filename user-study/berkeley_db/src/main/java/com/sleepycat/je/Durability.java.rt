<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.StringTokenizer</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Durability defines the overall durability characteristics associated with a transaction. When</color>
<color=#75715e> * operating on a local environment the durability of a transaction is completely determined by the</color>
<color=#75715e> * local {@link SyncPolicy} that is in effect. When using replication, the overall durability is a</color>
<color=#75715e> * function of the local {@link SyncPolicy} plus the {@link ReplicaAckPolicy} used by the master and</color>
<color=#75715e> * the {@link SyncPolicy} in effect at each Replica.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Durability</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A convenience constant that defines a durability policy with COMMIT_SYNC for local commit</color>
<color=#75715e>   * synchronization.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The replicated environment policies default to COMMIT_NO_SYNC for commits of replicated</color>
<color=#75715e>   * transactions that need acknowledgment and SIMPLE_MAJORITY for the acknowledgment policy.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>COMMIT_SYNC</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// localSync</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// replicaSync</color>
          <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SIMPLE_MAJORITY</color><color=#f8f8f2>);</color> <color=#75715e>// replicaAck</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A convenience constant that defines a durability policy with COMMIT_NO_SYNC for local commit</color>
<color=#75715e>   * synchronization.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The replicated environment policies default to COMMIT_NO_SYNC for commits of replicated</color>
<color=#75715e>   * transactions that need acknowledgment and SIMPLE_MAJORITY for the acknowledgment policy.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>COMMIT_NO_SYNC</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// localSync</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// replicaSync</color>
          <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SIMPLE_MAJORITY</color><color=#f8f8f2>);</color> <color=#75715e>// replicaAck</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A convenience constant that defines a durability policy with COMMIT_WRITE_NO_SYNC for local</color>
<color=#75715e>   * commit synchronization.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The replicated environment policies default to COMMIT_NO_SYNC for commits of replicated</color>
<color=#75715e>   * transactions that need acknowledgment and SIMPLE_MAJORITY for the acknowledgment policy.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>COMMIT_WRITE_NO_SYNC</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>WRITE_NO_SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// localSync</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// replicaSync</color>
          <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SIMPLE_MAJORITY</color><color=#f8f8f2>);</color> <color=#75715e>// replicaAck</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A convenience constant that defines a durability policy, with <code>ReplicaAckPolicy.NONE</color>
<color=#75715e>   * </code> for use with a read only transaction. A read only transaction on a Master, using this</color>
<color=#75715e>   * Durability, will thus not be held up, or throw <code>InsufficientReplicasException</code>, if</color>
<color=#75715e>   * the Master is not in contact with a sufficient number of Replicas at the time the transaction</color>
<color=#75715e>   * was initiated. It's worth noting that since the transaction is read only, the sync policies,</color>
<color=#75715e>   * although specified as <code>NO_SYNC</code>, do not really matter.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @deprecated use {@link TransactionConfig#setReadOnly} instead.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Durability</color> <color=#f8f8f2>READ_ONLY_TXN</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// localSync</color>
          <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>,</color> <color=#75715e>// replicaSync</color>
          <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NONE</color><color=#f8f8f2>);</color> <color=#75715e>// replicaAck</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Defines the synchronization policy to be used when committing a transaction. High levels of</color>
<color=#75715e>   * synchronization offer a greater guarantee that the transaction is persistent to disk, but trade</color>
<color=#75715e>   * that off for lower performance.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>SyncPolicy</color> <color=#f8f8f2>{</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Write and synchronously flush the log on transaction commit. Transactions exhibit all the</color>
<color=#75715e>     * ACID (atomicity, consistency, isolation, and durability) properties.</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>This is the default.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>SYNC</color><color=#f8f8f2>,</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Do not write or synchronously flush the log on transaction commit. Transactions exhibit the</color>
<color=#75715e>     * ACI (atomicity, consistency, and isolation) properties, but not D (durability); that is,</color>
<color=#75715e>     * database integrity will be maintained, but if the application or system fails, it is possible</color>
<color=#75715e>     * some number of the most recently committed transactions may be undone during recovery. The</color>
<color=#75715e>     * number of transactions at risk is governed by how many log updates can fit into the log</color>
<color=#75715e>     * buffer, how often the operating system flushes dirty buffers to disk, and how often the log</color>
<color=#75715e>     * is checkpointed.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>NO_SYNC</color><color=#f8f8f2>,</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Write but do not synchronously flush the log on transaction commit. Transactions exhibit the</color>
<color=#75715e>     * ACI (atomicity, consistency, and isolation) properties, but not D (durability); that is,</color>
<color=#75715e>     * database integrity will be maintained, but if the operating system fails, it is possible some</color>
<color=#75715e>     * number of the most recently committed transactions may be undone during recovery. The number</color>
<color=#75715e>     * of transactions at risk is governed by how often the operating system flushes dirty buffers</color>
<color=#75715e>     * to disk, and how often the log is checkpointed.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>WRITE_NO_SYNC</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A replicated environment makes it possible to increase an application's transaction commit</color>
<color=#75715e>   * guarantees by committing changes to its replicas on the network. ReplicaAckPolicy defines the</color>
<color=#75715e>   * policy for how such network commits are handled.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The choice of a ReplicaAckPolicy must be consistent across all the replicas in a replication</color>
<color=#75715e>   * group, to ensure that the policy is consistently enforced in the event of an election.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that SECONDARY nodes are not included in the set of replicas that must acknowledge</color>
<color=#75715e>   * transaction commits.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>ReplicaAckPolicy</color> <color=#f8f8f2>{</color>

    <color=#75715e>/**</color>
<color=#75715e>     * All ELECTABLE replicas must acknowledge that they have committed the transaction. This policy</color>
<color=#75715e>     * should be selected only if your replication group has a small number of ELECTABLE replicas,</color>
<color=#75715e>     * and those replicas are on extremely reliable networks and servers.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>ALL</color><color=#f8f8f2>,</color>

    <color=#75715e>/**</color>
<color=#75715e>     * No transaction commit acknowledgments are required and the master will never wait for replica</color>
<color=#75715e>     * acknowledgments. In this case, transaction durability is determined entirely by the type of</color>
<color=#75715e>     * commit that is being performed on the master.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>NONE</color><color=#f8f8f2>,</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A simple majority of ELECTABLE replicas must acknowledge that they have committed the</color>
<color=#75715e>     * transaction. This acknowledgment policy, in conjunction with an election policy which</color>
<color=#75715e>     * requires at least a simple majority, ensures that the changes made by the transaction remains</color>
<color=#75715e>     * durable if a new election is held.</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>This is the default.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>SIMPLE_MAJORITY</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the minimum number of ELECTABLE replicas required to implement the ReplicaAckPolicy</color>
<color=#75715e>     * for a given replication group size.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param groupSize the number of ELECTABLE replicas in the replication group</color>
<color=#75715e>     * @return the number of ELECTABLE replicas needed</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>minAckNodes</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>groupSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>ALL</color><color=#f8f8f2>:</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>groupSize</color><color=#f8f8f2>;</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>NONE</color><color=#f8f8f2>:</color>
          <color=#66d9ef>return</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>case</color> <color=#f8f8f2>SIMPLE_MAJORITY</color><color=#f8f8f2>:</color>
          <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>groupSize</color> <color=#f92672>/</color> <color=#ae81ff>2</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#66d9ef>default</color><color=#f8f8f2>:</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#e6db74>"Unknown ack policy: "</color> <color=#f92672>+</color> <color=#66d9ef>this</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* The sync policy in effect on the local node. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>SyncPolicy</color> <color=#f8f8f2>localSync</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The sync policy in effect on a replica. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>SyncPolicy</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The replica acknowledgment policy to be used. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ReplicaAckPolicy</color> <color=#f8f8f2>replicaAck</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates an instance of a Durability specification.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param localSync the SyncPolicy to be used when committing the transaction locally.</color>
<color=#75715e>   * @param replicaSync the SyncPolicy to be used remotely, as part of a transaction acknowledgment,</color>
<color=#75715e>   *     at a Replica node.</color>
<color=#75715e>   * @param replicaAck the acknowledgment policy used when obtaining transaction acknowledgments</color>
<color=#75715e>   *     from Replicas.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>Durability</color><color=#f8f8f2>(</color><color=#f8f8f2>SyncPolicy</color> <color=#f8f8f2>localSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>SyncPolicy</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>ReplicaAckPolicy</color> <color=#f8f8f2>replicaAck</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>localSync</color> <color=#f92672>=</color> <color=#f8f8f2>localSync</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>replicaSync</color> <color=#f92672>=</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>replicaAck</color> <color=#f92672>=</color> <color=#f8f8f2>replicaAck</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Parses the string and returns the durability it represents. The string must have the following</color>
<color=#75715e>   * format:</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p><code></color>
<color=#75715e>   * <i>SyncPolicy</i>[,<i>SyncPolicy</i>[,<i>ReplicaAckPolicy</i>]]</color>
<color=#75715e>   * </code></color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The first SyncPolicy in the above format applies to the Master, and the optional second</color>
<color=#75715e>   * SyncPolicy to the replica. Specific SyncPolicy or ReplicaAckPolicy values are denoted by the</color>
<color=#75715e>   * name of the enumeration value.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>For example, the string:<i>sync,sync,quorum</i> describes a durability policy where the</color>
<color=#75715e>   * master and replica both use {@link SyncPolicy#SYNC} to commit transactions and {@link</color>
<color=#75715e>   * ReplicaAckPolicy#SIMPLE_MAJORITY} to acknowledge a transaction commit.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link SyncPolicy#NO_SYNC}, is the default value for a node's SyncPolicy.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>{@link ReplicaAckPolicy#SIMPLE_MAJORITY} is the default for the ReplicaAckPolicy.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param durabilityString the durability string in the above format</color>
<color=#75715e>   * @return the Durability resulting from the parse, or null if the <code>durabilityString</code></color>
<color=#75715e>   *     argument was itself null.</color>
<color=#75715e>   * @throws IllegalArgumentException if the durabilityString is invalid.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Durability</color> <color=#a6e22e>parse</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>durabilityString</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>durabilityString</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>StringTokenizer</color> <color=#f8f8f2>tokenizer</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringTokenizer</color><color=#f8f8f2>(</color><color=#f8f8f2>durabilityString</color><color=#f8f8f2>.</color><color=#a6e22e>toUpperCase</color><color=#f8f8f2>(),</color> <color=#e6db74>","</color><color=#f8f8f2>);</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>tokenizer</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreTokens</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Bad string format: "</color> <color=#f92672>+</color> <color=#e6db74>'"'</color> <color=#f92672>+</color> <color=#f8f8f2>durabilityString</color> <color=#f92672>+</color> <color=#e6db74>'"'</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>SyncPolicy</color> <color=#f8f8f2>localSync</color> <color=#f92672>=</color> <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>tokenizer</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>SyncPolicy</color> <color=#f8f8f2>replicaSync</color> <color=#f92672>=</color>
        <color=#f8f8f2>tokenizer</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreTokens</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>tokenizer</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>())</color> <color=#f8f8f2>:</color> <color=#f8f8f2>SyncPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>NO_SYNC</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>ReplicaAckPolicy</color> <color=#f8f8f2>replicaAck</color> <color=#f92672>=</color>
        <color=#f8f8f2>tokenizer</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreTokens</color><color=#f8f8f2>()</color>
            <color=#f92672>?</color> <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>tokenizer</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>())</color>
            <color=#f8f8f2>:</color> <color=#f8f8f2>ReplicaAckPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SIMPLE_MAJORITY</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>(</color><color=#f8f8f2>localSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>,</color> <color=#f8f8f2>replicaAck</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the string representation of durability in the format defined by string form of the</color>
<color=#75715e>   * Durability constructor.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @see #parse(String)</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>localSync</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>","</color> <color=#f92672>+</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>","</color> <color=#f92672>+</color> <color=#f8f8f2>replicaAck</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the transaction synchronization policy to be used locally when committing a</color>
<color=#75715e>   * transaction.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>SyncPolicy</color> <color=#a6e22e>getLocalSync</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>localSync</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the transaction synchronization policy to be used by the replica as it replays a</color>
<color=#75715e>   * transaction that needs an acknowledgment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>SyncPolicy</color> <color=#a6e22e>getReplicaSync</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the replica acknowledgment policy used by the master when committing changes to a</color>
<color=#75715e>   * replicated environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>ReplicaAckPolicy</color> <color=#a6e22e>getReplicaAck</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>replicaAck</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>prime</color> <color=#f92672>=</color> <color=#ae81ff>31</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>prime</color> <color=#f92672>*</color> <color=#f8f8f2>result</color> <color=#f92672>+</color> <color=#f8f8f2>((</color><color=#f8f8f2>localSync</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#ae81ff>0</color> <color=#f8f8f2>:</color> <color=#f8f8f2>localSync</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>prime</color> <color=#f92672>*</color> <color=#f8f8f2>result</color> <color=#f92672>+</color> <color=#f8f8f2>((</color><color=#f8f8f2>replicaAck</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#ae81ff>0</color> <color=#f8f8f2>:</color> <color=#f8f8f2>replicaAck</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>prime</color> <color=#f92672>*</color> <color=#f8f8f2>result</color> <color=#f92672>+</color> <color=#f8f8f2>((</color><color=#f8f8f2>replicaSync</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#ae81ff>0</color> <color=#f8f8f2>:</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>());</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>obj</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color> <color=#f92672>==</color> <color=#f8f8f2>obj</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>obj</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>obj</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Durability</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>Durability</color> <color=#f8f8f2>other</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Durability</color><color=#f8f8f2>)</color> <color=#f8f8f2>obj</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>localSync</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>localSync</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>localSync</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>localSync</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>replicaAck</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>replicaAck</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>replicaAck</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>replicaAck</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>replicaSync</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>replicaSync</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>return</color> <color=#f8f8f2>replicaSync</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>replicaSync</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>