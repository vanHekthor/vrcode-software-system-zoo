<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.txn</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.DatabaseException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentFailureException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.WholeEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.entry.LNLogEntry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.tree.Key</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DbLsn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.VLSN</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.FileNotFoundException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * TxnChain supports "txn rollback", which undoes the write operations for a given txn to an</color>
<color=#75715e> * arbitrary point. Txn rollback (and TxnChain construction) is done in 2 occasions: 1. During</color>
<color=#75715e> * normal processing, when an ongoing txn must be rolled-back due to a syncup operation (see</color>
<color=#75715e> * rep/txn/ReplayTxn.java). 2. During recovery, to process a "rollback period" (see</color>
<color=#75715e> * RollbackTracker.java)</color>
<color=#75715e> *</color>
<color=#75715e> * <p>In the JE log, the logrecs that make up a txn are chained, but each logrec contains undo info</color>
<color=#75715e> * that refers to the pre-txn version of the associated record, which may not be the immediately</color>
<color=#75715e> * previous version, if the txn writes the same record multiple times. For example, a log looks like</color>
<color=#75715e> * this:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>lsn key data abortlsn 100 A 10 null_lsn (first instance of record A) 150 B 100 null_lsn (first</color>
<color=#75715e> * instance of record B) ..... txn begins ..... 200 A 20 100 300 A deleted 100 400 B 200 150 500 A</color>
<color=#75715e> * 30 100 600 C 10 null_lsn</color>
<color=#75715e> *</color>
<color=#75715e> * <p>When reading the log, we can find all the records in the transaction. This chain exists:</color>
<color=#75715e> * 500->400->300->200->null_lsn</color>
<color=#75715e> *</color>
<color=#75715e> * <p>To rollback to an arbitrary entry in the transaction, we need a chain of all the records that</color>
<color=#75715e> * occupied a given BIN slot during the transaction. chain. The key, data, and comparators are used</color>
<color=#75715e> * to determine which records hash to the same slot, mimicking the btree itself.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>300 400 500 600 | | | | \ / \ / \ / \ /</color>
<color=#75715e> *</color>
<color=#75715e> * <p>200 150 300 null_lsn revertToLsn true revertKD</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>TxnChain</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Null if we are in recovery. Otherwise, it points to the same map as the</color>
<color=#75715e>   * undoDatabases field of the ReplayTxn.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color><color=#f92672>></color> <color=#f8f8f2>undoDatabases</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Set of LSNs that will not be undone (i.e. the preserved portion of the</color>
<color=#75715e>   * txn's log chain).</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>remainingLockedNodes</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * For each logrec that will be undone, revertList contains a RevertInfo</color>
<color=#75715e>   * obj, which refers to the record version to revert to. The list is</color>
<color=#75715e>   * ordered in reverse LSN order.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>LinkedList</color><color=#f92672><</color><color=#f8f8f2>RevertInfo</color><color=#f92672>></color> <color=#f8f8f2>revertList</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The last applied VLSN in this txn, after rollback has occurred. */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>VLSN</color> <color=#f8f8f2>lastValidVLSN</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Find the previous version for all entries in this transaction. Used by</color>
<color=#75715e>   * recovery. This differs from the constructor used by syncup rollback</color>
<color=#75715e>   * which is instigated by the txn. In this case, there is no cache of</color>
<color=#75715e>   * DatabaseImpls.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>TxnChain</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>lastLoggedLsn</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>matchpoint</color><color=#f8f8f2>,</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>lastLoggedLsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>,</color> <color=#f8f8f2>matchpoint</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Find the previous version for all entries in this transaction.</color>
<color=#75715e>   * DatabaseImpls used during txn chain creation are taken from the</color>
<color=#75715e>   * transaction's undoDatabases cache.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>TxnChain</color><color=#f8f8f2>(</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>lastLoggedLsn</color><color=#f8f8f2>,</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>,</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>matchpoint</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>DatabaseId</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseImpl</color><color=#f92672>></color> <color=#f8f8f2>undoDatabases</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>LogManager</color> <color=#f8f8f2>logManager</color> <color=#f92672>=</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getLogManager</color><color=#f8f8f2>();</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>envImpl</color> <color=#f92672>=</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>undoDatabases</color> <color=#f92672>=</color> <color=#f8f8f2>undoDatabases</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>remainingLockedNodes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * A map that stores for each record R the revert info for the</color>
<color=#75715e>     * latest R-logrec seen during the backwards traversal of the</color>
<color=#75715e>     * txn chain done below.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>TreeMap</color><color=#f92672><</color><color=#f8f8f2>CompareSlot</color><color=#f8f8f2>,</color> <color=#f8f8f2>RevertInfo</color><color=#f92672>></color> <color=#f8f8f2>recordsMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><</color><color=#f8f8f2>CompareSlot</color><color=#f8f8f2>,</color> <color=#f8f8f2>RevertInfo</color><color=#f92672>></color><color=#f8f8f2>();</color>

    <color=#f8f8f2>revertList</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LinkedList</color><color=#f92672><</color><color=#f8f8f2>RevertInfo</color><color=#f92672>></color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Traverse this txn's entire logrec chain and record revert info</color>
<color=#75715e>     * for each logrec in the chain. Start the traversal with the last</color>
<color=#75715e>     * logrec generated by this txn and move backwards.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>currLsn</color> <color=#f92672>=</color> <color=#f8f8f2>lastLoggedLsn</color><color=#f8f8f2>;</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>lastValidVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN</color><color=#f8f8f2>;</color>

      <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>currLsn</color> <color=#f92672>!=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>WholeEntry</color> <color=#f8f8f2>wholeEntry</color> <color=#f92672>=</color> <color=#f8f8f2>logManager</color><color=#f8f8f2>.</color><color=#a6e22e>getLogEntryAllowInvisible</color><color=#f8f8f2>(</color><color=#f8f8f2>currLsn</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>LNLogEntry</color><color=#f92672><?></color> <color=#f8f8f2>currLogrec</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>LNLogEntry</color><color=#f92672><?></color><color=#f8f8f2>)</color> <color=#f8f8f2>wholeEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getEntry</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>getDatabaseImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getDbId</color><color=#f8f8f2>());</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>undoDatabases</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#75715e>// fatal error, this is a corruption</color>
                <color=#e6db74>"DB missing during non-recovery rollback, dbId="</color>
                    <color=#f92672>+</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getDbId</color><color=#f8f8f2>()</color>
                    <color=#f92672>+</color> <color=#e6db74>" txnId="</color>
                    <color=#f92672>+</color> <color=#f8f8f2>txnId</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * For recovery rollback, simply skip this entry when the</color>
<color=#75715e>           * DB has been deleted.  This has no impact on the chain</color>
<color=#75715e>           * for other LNs.  This LN will not be processed by</color>
<color=#75715e>           * recovery rollback, since RollbackTracker.rollback</color>
<color=#75715e>           * ignores LNs in deleted DBs.  [#22071] [#22052]</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>currLsn</color> <color=#f92672>=</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getUserTxn</color><color=#f8f8f2>().</color><color=#a6e22e>getLastLsn</color><color=#f8f8f2>();</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>postFetchInit</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>

        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#75715e>/*</color>
<color=#75715e>           * Let L be the current logrec, and let R and T be the</color>
<color=#75715e>           * record and txn associated with L. If T wrote R again</color>
<color=#75715e>           * after L, let Ln be the 1st R-logrec by T after L.</color>
<color=#75715e>           */</color>
          <color=#f8f8f2>CompareSlot</color> <color=#f8f8f2>recId</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>CompareSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>);</color>

          <color=#f8f8f2>RevertInfo</color> <color=#f8f8f2>ri</color> <color=#f92672>=</color> <color=#f8f8f2>recordsMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>recId</color><color=#f8f8f2>);</color>

          <color=#75715e>/*</color>
<color=#75715e>           * If Ln exists, update the RevertInfo created earlier for</color>
<color=#75715e>           * Ln so that it now refers to the L version of R.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ri</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertLsn</color> <color=#f92672>=</color> <color=#f8f8f2>currLsn</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertKD</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertPD</color> <color=#f92672>=</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>isDeleted</color><color=#f8f8f2>();</color>

            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertKey</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>allowsKeyUpdates</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertData</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>isEmbeddedLN</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertVLSN</color> <color=#f92672>=</color>
                <color=#f8f8f2>(</color><color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>isEmbeddedLN</color><color=#f8f8f2>()</color>
                    <color=#f92672>?</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getLN</color><color=#f8f8f2>().</color><color=#a6e22e>getVLSNSequence</color><color=#f8f8f2>()</color>
                    <color=#f8f8f2>:</color> <color=#f8f8f2>VLSN</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_VLSN_SEQUENCE</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getExpiration</color><color=#f8f8f2>();</color>

            <color=#f8f8f2>ri</color><color=#f8f8f2>.</color><color=#a6e22e>revertExpirationInHours</color> <color=#f92672>=</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>isExpirationInHours</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/*</color>
<color=#75715e>           * If L will be rolled back, assume that it is the 1st</color>
<color=#75715e>           * R-logrec by T and thus set its revert info to refer</color>
<color=#75715e>           * to the pre-T version of R.</color>
<color=#75715e>           */</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>currLsn</color><color=#f8f8f2>,</color> <color=#f8f8f2>matchpoint</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

            <color=#f8f8f2>ri</color> <color=#f92672>=</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>RevertInfo</color><color=#f8f8f2>(</color>
                    <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getAbortLsn</color><color=#f8f8f2>(),</color>
                    <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getAbortKnownDeleted</color><color=#f8f8f2>(),</color>
                    <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getAbortKey</color><color=#f8f8f2>(),</color>
                    <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getAbortData</color><color=#f8f8f2>(),</color>
                    <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getAbortVLSN</color><color=#f8f8f2>(),</color>
                    <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getAbortExpiration</color><color=#f8f8f2>(),</color>
                    <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>isAbortExpirationInHours</color><color=#f8f8f2>());</color>

            <color=#f8f8f2>revertList</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>ri</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>recordsMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>recId</color><color=#f8f8f2>,</color> <color=#f8f8f2>ri</color><color=#f8f8f2>);</color>

          <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>

            <color=#75715e>/*</color>
<color=#75715e>             * We are done with record R, so remove it from the</color>
<color=#75715e>             * map, if it is still there.</color>
<color=#75715e>             */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ri</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#f8f8f2>recordsMap</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>recId</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>remainingLockedNodes</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>currLsn</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastValidVLSN</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
                <color=#f92672>&&</color> <color=#f8f8f2>lastValidVLSN</color><color=#f8f8f2>.</color><color=#a6e22e>isNull</color><color=#f8f8f2>()</color>
                <color=#f92672>&&</color> <color=#f8f8f2>wholeEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getHeader</color><color=#f8f8f2>().</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color>
                <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>wholeEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getHeader</color><color=#f8f8f2>().</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>().</color><color=#a6e22e>isNull</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

              <color=#f8f8f2>lastValidVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>wholeEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getHeader</color><color=#f8f8f2>().</color><color=#a6e22e>getVLSN</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>

          <color=#75715e>/* Move on to the previous logrec for this txn. */</color>
          <color=#f8f8f2>currLsn</color> <color=#f92672>=</color> <color=#f8f8f2>currLogrec</color><color=#f8f8f2>.</color><color=#a6e22e>getUserTxn</color><color=#f8f8f2>().</color><color=#a6e22e>getLastLsn</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>releaseDatabaseImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>FileNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>promote</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>EnvironmentFailureReason</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_INTEGRITY</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Problem finding intermediates for txn "</color>
              <color=#f92672>+</color> <color=#f8f8f2>txnId</color>
              <color=#f92672>+</color> <color=#e6db74>" at lsn "</color>
              <color=#f92672>+</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>currLsn</color><color=#f8f8f2>),</color>
          <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Hide the details of whether we are getting a databaseImpl from the txn's cache, or whether</color>
<color=#75715e>   * we're fetching it from the dbMapTree at recovery or during master->replica transition.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseImpl</color> <color=#a6e22e>getDatabaseImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseId</color> <color=#f8f8f2>dbId</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>undoDatabases</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>undoDatabases</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>dbId</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>().</color><color=#a6e22e>getDb</color><color=#f8f8f2>(</color><color=#f8f8f2>dbId</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Only needed if we are in recovery, and fetched the DatabaseImpl. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>releaseDatabaseImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>undoDatabases</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getDbTree</color><color=#f8f8f2>().</color><color=#a6e22e>releaseDb</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns LSNs for all nodes that should remain locked by the txn. Note that when multiple</color>
<color=#75715e>   * versions of a record were locked by the txn, the LSNs of all versions are returned. Only the</color>
<color=#75715e>   * latest version will actually be locked.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#a6e22e>getRemainingLockedNodes</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>remainingLockedNodes</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return information about the next item on the transaction chain and remove it from the chain.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>RevertInfo</color> <color=#a6e22e>pop</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>revertList</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>VLSN</color> <color=#a6e22e>getLastValidVLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>lastValidVLSN</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>revertList</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>RevertInfo</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#f8f8f2>revertLsn</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>revertKD</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>revertPD</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>revertKey</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>revertData</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#f8f8f2>revertVLSN</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#f8f8f2>revertExpiration</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>revertExpirationInHours</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>RevertInfo</color><color=#f8f8f2>(</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>revertLsn</color><color=#f8f8f2>,</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>revertKD</color><color=#f8f8f2>,</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>revertKey</color><color=#f8f8f2>,</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>revertData</color><color=#f8f8f2>,</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>revertVLSN</color><color=#f8f8f2>,</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>revertExpiration</color><color=#f8f8f2>,</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>revertExpirationInHours</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertLsn</color> <color=#f92672>=</color> <color=#f8f8f2>revertLsn</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertKD</color> <color=#f92672>=</color> <color=#f8f8f2>revertKD</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertPD</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertKey</color> <color=#f92672>=</color> <color=#f8f8f2>revertKey</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertData</color> <color=#f92672>=</color> <color=#f8f8f2>revertData</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>revertVLSN</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>revertExpiration</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>revertExpirationInHours</color> <color=#f92672>=</color> <color=#f8f8f2>revertExpirationInHours</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"revertLsn="</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>revertLsn</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" revertKD="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>revertKD</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" revertPD="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>revertPD</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>revertKey</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" revertKey="</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>revertKey</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>revertData</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" revertData="</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>getNoFormatString</color><color=#f8f8f2>(</color><color=#f8f8f2>revertData</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" revertVLSN="</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>revertVLSN</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" revertExpires="</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>TTL</color><color=#f8f8f2>.</color><color=#a6e22e>formatExpiration</color><color=#f8f8f2>(</color><color=#f8f8f2>revertExpiration</color><color=#f8f8f2>,</color> <color=#f8f8f2>revertExpirationInHours</color><color=#f8f8f2>));</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>sb</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Compare two keys using the appropriate comparator. Keys from different databases should never</color>
<color=#75715e>   * be equal.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>CompareSlot</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Comparable</color><color=#f92672><</color><color=#f8f8f2>CompareSlot</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>key</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>CompareSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>LNLogEntry</color><color=#f92672><?></color> <color=#f8f8f2>undoEntry</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>undoEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#a6e22e>CompareSlot</color><color=#f8f8f2>(</color><color=#f8f8f2>DatabaseImpl</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>,</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color> <color=#f92672>=</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>key</color> <color=#f92672>=</color> <color=#f8f8f2>key</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>CompareSlot</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>int</color> <color=#f8f8f2>dbCompare</color> <color=#f92672>=</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>().</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getId</color><color=#f8f8f2>());</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbCompare</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* LNs are from different databases. */</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>dbCompare</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Compare keys. */</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>Key</color><color=#f8f8f2>.</color><color=#a6e22e>compareKeys</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getKeyComparator</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>CompareSlot</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>compareTo</color><color=#f8f8f2>((</color><color=#f8f8f2>CompareSlot</color><color=#f8f8f2>)</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Disallow use of HashSet/HashMap/etc.  TreeSet/TreeMap/etc should</color>
<color=#75715e>       * be used instead when a CompareSlot is used as a key.</color>
<color=#75715e>       *</color>
<color=#75715e>       * Because a comparator may be configured that compares only a part</color>
<color=#75715e>       * of the key, a hash code cannot take into account the key or</color>
<color=#75715e>       * data, because hashCode() must return the same value for two</color>
<color=#75715e>       * objects whenever equals() returns true.  We could hash the DB ID</color>
<color=#75715e>       * alone, but that would not produce an efficient hash table.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedState</color><color=#f8f8f2>(</color><color=#e6db74>"Hashing not supported"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>