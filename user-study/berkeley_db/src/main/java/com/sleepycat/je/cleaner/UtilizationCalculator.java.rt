<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.cleaner</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.EnvironmentMutableConfig</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.config.EnvironmentParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.DbConfigManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvConfigObserver</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.TTL</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.DbLsn</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.Pair</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Set</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.SortedMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Contains methods for calculating utilization and for selecting files to clean.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note that we do clean files that are protected from deletion by HA/DataSync. If we did not</color>
<color=#75715e> * clean them and a large number of files were to become unprotected at once, a large amount of log</color>
<color=#75715e> * cleaning may suddenly be necessary. Cleaning the files avoids this. Better still would be to</color>
<color=#75715e> * delete the metadata, but that would require writing a log entry to indicate the file is ready to</color>
<color=#75715e> * be deleted, to avoid cleaning from scratch after a crash. [#16643] [#19221]</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Historical note: Prior to JE 6.0, LN utilization adjustments were needed because the LN last</color>
<color=#75715e> * logged size was not stored in the BIN [#18633]. Originally in JE 5, the corrected average LN size</color>
<color=#75715e> * was used to adjust utilization. This was changed later in JE 5 to a correction factor since</color>
<color=#75715e> * different log files may have different average LN sizes [#21106]. Then in JE 6.0 the last logged</color>
<color=#75715e> * size was added to the BIN, the default for {@link</color>
<color=#75715e> * com.sleepycat.je.EnvironmentConfig#CLEANER_ADJUST_UTILIZATION} was changed to false and a warning</color>
<color=#75715e> * was added that the feature will be removed in the future [#22275]. Finally in JE 6.3 the LN</color>
<color=#75715e> * adjustment code and data in CheckpointEnd were removed and the parameter was deprecated [#24090].</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Unlike with LNs, we do not store the last logged size of INs, so their obsolete size is</color>
<color=#75715e> * computed as an average and this has the potential to cause over/under-cleaning. This problem is</color>
<color=#75715e> * not known to occur, but if there are over/under-cleaning problems we should examine the</color>
<color=#75715e> * recalculated info that is output as part of the CleanerRun INFO message.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>=== Expired Data and Utilization ===</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Per-file histograms are calculated by the {@link ExpirationTracker} and stored in an internal</color>
<color=#75715e> * database and cache by the {@link ExpirationProfile}. The histograms are used to calculate the</color>
<color=#75715e> * expired bytes for a file at a particular time. Since obsolete (not expired) data can overlap with</color>
<color=#75715e> * expired data, upper and lower bounds for overall utilization are determined. When the lower bound</color>
<color=#75715e> * is below minUtilization, cleaning occurs.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The file that has the lowest average utilization (midway between its upper and lower bounds)</color>
<color=#75715e> * is selected for cleaning. If the file's upper and lower bounds are not close together (or the</color>
<color=#75715e> * same), and the upper bound is above a threshold, then two-pass cleaning is performed. See {@link</color>
<color=#75715e> * EnvironmentParams#CLEANER_TWO_PASS_GAP} and {@link EnvironmentParams#CLEANER_TWO_PASS_THRESHOLD}.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The first pass of two-pass cleaning reads the file but doesn't do any real cleaning (no side</color>
<color=#75715e> * effects). If this pass finds that the true utilization of the file is above the threshold (the</color>
<color=#75715e> * same threshold as above), then cleaning does not take place and instead the histogram is updated.</color>
<color=#75715e> * In this case the obsolete and expired data (in the old histogram) overlap, and it is the overlap</color>
<color=#75715e> * that caused utilization to be estimated incorrectly. The new/updated histogram is calculated such</color>
<color=#75715e> * that there is no overlap, improving utilization accuracy. If the first pass finds that true</color>
<color=#75715e> * utilization is below the threshold, then normal cleaning (pass two) occurs. Two-pass cleaning</color>
<color=#75715e> * protects against "over cleaning".</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The use of the overall utilization lower bound to drive cleaning is considered sufficient to</color>
<color=#75715e> * protect against "under cleaning". Therefore, a disk space threshold is unnecessary.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Gradual expiration is used to prevent cleaning spikes on day or hour boundaries. For purposes</color>
<color=#75715e> * of driving cleaning, the utilization lower bound is calculated by distributing the bytes that</color>
<color=#75715e> * expired in the current day/hour period evenly over that day/hour.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>UtilizationCalculator</color> <color=#66d9ef>implements</color> <color=#f8f8f2>EnvConfigObserver</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Cleaner</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>FilesToMigrate</color> <color=#f8f8f2>filesToMigrate</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>currentMinUtilization</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>currentMaxUtilization</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>predictedMinUtilization</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>predictedMaxUtilization</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#f8f8f2>UtilizationCalculator</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>Cleaner</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>env</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cleaner</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>filesToMigrate</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FilesToMigrate</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>addConfigObserver</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>int</color> <color=#a6e22e>getCurrentMinUtilization</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>currentMinUtilization</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>int</color> <color=#a6e22e>getCurrentMaxUtilization</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>currentMaxUtilization</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>int</color> <color=#a6e22e>getPredictedMinUtilization</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>predictedMinUtilization</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>int</color> <color=#a6e22e>getPredictedMaxUtilization</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>predictedMaxUtilization</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the best file that qualifies for cleaning or probing, or null if no file qualifies.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method is called by FileSelector and synchronization order is: 1-FileSelector,</color>
<color=#75715e>   * 2-UtilizationCalculator, 3-ExpirationProfile.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param fileSummaryMap the map containing file summary info.</color>
<color=#75715e>   * @param forceCleaning is true to always select a file, even if its utilization is above the</color>
<color=#75715e>   *     minimum utilization threshold.</color>
<color=#75715e>   * @return {file number, required utilization for 2-pass cleaning}, or null if no file qualifies</color>
<color=#75715e>   *     for cleaning.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>synchronized</color> <color=#f8f8f2>Pair</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f92672>></color> <color=#a6e22e>getBestFile</color><color=#f8f8f2>(</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>SortedMap</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileSummary</color><color=#f92672>></color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>forceCleaning</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Paranoia.  There should always be 1 file. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>SEVERE</color><color=#f8f8f2>,</color> <color=#e6db74>"Can't clean, map is empty."</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>FileSelector</color> <color=#f8f8f2>fileSelector</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>getFileSelector</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>inProgressFiles</color> <color=#f92672>=</color> <color=#f8f8f2>fileSelector</color><color=#f8f8f2>.</color><color=#a6e22e>getInProgressFiles</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Refresh expiration info so it reflects the current time. */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>ExpirationProfile</color> <color=#f8f8f2>expProfile</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>getExpirationProfile</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>currentTime</color> <color=#f92672>=</color> <color=#f8f8f2>TTL</color><color=#f8f8f2>.</color><color=#a6e22e>currentSystemTime</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>expProfile</color><color=#f8f8f2>.</color><color=#a6e22e>refresh</color><color=#f8f8f2>(</color><color=#f8f8f2>currentTime</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Use local variables for mutable properties.  Using values that are</color>
<color=#75715e>     * changing during a single file selection pass would not produce a</color>
<color=#75715e>     * well defined result.</color>
<color=#75715e>     *</color>
<color=#75715e>     * Note that age is a distance between files not a number of files,</color>
<color=#75715e>     * that is, deleted files are counted in the age.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>totalThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>minUtilization</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>fileThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>minFileUtilization</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>twoPassThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>twoPassThreshold</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>twoPassGap</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>twoPassGap</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>minAge</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>minAge</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>gradualExpiration</color> <color=#f92672>=</color> <color=#f8f8f2>cleaner</color><color=#f8f8f2>.</color><color=#a6e22e>gradualExpiration</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>expirationEnabled</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>isExpirationEnabled</color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Cleaning must refrain from rearranging the portion of log processed</color>
<color=#75715e>     * as recovery time. Do not clean a file greater or equal to the first</color>
<color=#75715e>     * active file used in recovery, which is either the last log file or</color>
<color=#75715e>     * the file of the first active LSN in an active transaction, whichever</color>
<color=#75715e>     * is earlier.</color>
<color=#75715e>     *</color>
<color=#75715e>     * TxnManager.getFirstActiveLsn() (firstActiveTxnLsn below) is</color>
<color=#75715e>     * guaranteed to be earlier or equal to the first active LSN of the</color>
<color=#75715e>     * checkpoint that will be performed before deleting the selected log</color>
<color=#75715e>     * file. By selecting a file prior to this point we ensure that will</color>
<color=#75715e>     * not clean any entry that may be replayed by recovery.</color>
<color=#75715e>     *</color>
<color=#75715e>     * For example:</color>
<color=#75715e>     * 200 ckptA start, determines that ckpt's firstActiveLsn = 100</color>
<color=#75715e>     * 400 ckptA end</color>
<color=#75715e>     * 600 ckptB start, determines that ckpt's firstActiveLsn = 300</color>
<color=#75715e>     * 800 ckptB end</color>
<color=#75715e>     *</color>
<color=#75715e>     * Any cleaning that executes before ckpt A start will be constrained</color>
<color=#75715e>     * to files <= lsn 100, because it will have checked the TxnManager.</color>
<color=#75715e>     * If cleaning executes after ckptA start, it may indeed clean after</color>
<color=#75715e>     * ckptA's firstActiveLsn, but the cleaning run will wait to ckptB end</color>
<color=#75715e>     * to delete files.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>firstActiveFile</color> <color=#f92672>=</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>lastKey</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>firstActiveTxnLsn</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getTxnManager</color><color=#f8f8f2>().</color><color=#a6e22e>getFirstActiveLsn</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstActiveTxnLsn</color> <color=#f92672>!=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>NULL_LSN</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>long</color> <color=#f8f8f2>firstActiveTxnFile</color> <color=#f92672>=</color> <color=#f8f8f2>DbLsn</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>firstActiveTxnLsn</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>firstActiveFile</color> <color=#f92672>></color> <color=#f8f8f2>firstActiveTxnFile</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>firstActiveFile</color> <color=#f92672>=</color> <color=#f8f8f2>firstActiveTxnFile</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Note that minAge is at least one and may be configured to a higher</color>
<color=#75715e>     * value to prevent cleaning recently active files.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>lastFileToClean</color> <color=#f92672>=</color> <color=#f8f8f2>firstActiveFile</color> <color=#f92672>-</color> <color=#f8f8f2>minAge</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Given the total, obsolete and expired bytes:</color>
<color=#75715e>     *</color>
<color=#75715e>     * min utilization: 100 * ((obsolete + expired) / total)</color>
<color=#75715e>     * max utilization: 100 * (max(obsolete, expired) / total)</color>
<color=#75715e>     * avg utilization: (max - min) / 2</color>
<color=#75715e>     *</color>
<color=#75715e>     * Calculate min/max utilization in several categories:</color>
<color=#75715e>     *</color>
<color=#75715e>     * + Current total utilization, not counting the results of cleaning</color>
<color=#75715e>     *   that has not yet occurred, and using the current expired sizes.</color>
<color=#75715e>     *</color>
<color=#75715e>     * + Predicted total utilization, estimating the results of cleaning</color>
<color=#75715e>     *   yet to occur, and using a gradual expired size to prevent cleaning</color>
<color=#75715e>     *   spikes after hour/day boundaries.</color>
<color=#75715e>     *</color>
<color=#75715e>     * + Utilization for the "best" file to use when cleaning normally. The</color>
<color=#75715e>     *  file with the lowest avg utilization is selected.</color>
<color=#75715e>     *</color>
<color=#75715e>     * + Also determine the "best gradual" file with the lowest gradual</color>
<color=#75715e>     *   max utilization. Note that when a file is selected due to the</color>
<color=#75715e>     *   minFileUtilization threshold, gradual utilization must be used.</color>
<color=#75715e>     *   Otherwise, cleaning due to this threshold would defeat gradual</color>
<color=#75715e>     *   expiration in general.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Long</color> <color=#f8f8f2>bestFile</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>bestFileAvgUtil</color> <color=#f92672>=</color> <color=#ae81ff>101</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>bestFileMinUtil</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>bestFileMaxUtil</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Long</color> <color=#f8f8f2>bestGradualFile</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>bestGradualFileMaxUtil</color> <color=#f92672>=</color> <color=#ae81ff>101</color><color=#f8f8f2>;</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>currentTotalSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>currentMinObsoleteSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>currentMaxObsoleteSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>predictedTotalSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>predictedMinObsoleteSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>predictedMaxObsoleteSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>FileSummary</color><color=#f92672>></color> <color=#f8f8f2>entry</color> <color=#f8f8f2>:</color> <color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>file</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>fileNum</color> <color=#f92672>=</color> <color=#f8f8f2>file</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getFileProtector</color><color=#f8f8f2>().</color><color=#a6e22e>isActiveOrNewFile</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>FileSummary</color> <color=#f8f8f2>summary</color> <color=#f92672>=</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>();</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>expiredSize</color><color=#f8f8f2>;</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>expiredGradualSize</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>expirationEnabled</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>Pair</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>Integer</color><color=#f92672>></color> <color=#f8f8f2>expiredSizes</color> <color=#f92672>=</color>
            <color=#f8f8f2>expProfile</color><color=#f8f8f2>.</color><color=#a6e22e>getExpiredBytes</color><color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color><color=#f8f8f2>,</color> <color=#f8f8f2>currentTime</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>expiredSize</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>expiredSizes</color><color=#f8f8f2>.</color><color=#a6e22e>first</color><color=#f8f8f2>(),</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>expiredGradualSize</color> <color=#f92672>=</color>
            <color=#f8f8f2>gradualExpiration</color> <color=#f92672>?</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>expiredSizes</color><color=#f8f8f2>.</color><color=#a6e22e>second</color><color=#f8f8f2>(),</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>expiredSize</color><color=#f8f8f2>;</color>

      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>expiredSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>expiredGradualSize</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If the file is safe-to-delete, it is entirely obsolete by</color>
<color=#75715e>       * definition. This is more accurate than using getObsoleteSize.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>obsoleteSize</color> <color=#f92672>=</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>getObsoleteSize</color><color=#f8f8f2>();</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>minObsoleteSize</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>obsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>expiredSize</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxObsoleteSize</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>obsoleteSize</color> <color=#f92672>+</color> <color=#f8f8f2>expiredSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>minGradualObsoleteSize</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>obsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>expiredGradualSize</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxGradualObsoleteSize</color> <color=#f92672>=</color>
          <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>obsoleteSize</color> <color=#f92672>+</color> <color=#f8f8f2>expiredGradualSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>currentTotalSize</color> <color=#f92672>+=</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>currentMinObsoleteSize</color> <color=#f92672>+=</color> <color=#f8f8f2>minObsoleteSize</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>currentMaxObsoleteSize</color> <color=#f92672>+=</color> <color=#f8f8f2>maxObsoleteSize</color><color=#f8f8f2>;</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If the file has been clean or is being cleaned, assume the</color>
<color=#75715e>       * file's data will occupy only its currently utilized bytes, after</color>
<color=#75715e>       * cleaning and deletion, based on the min obsolete size. This is</color>
<color=#75715e>       * an intentionally overly optimistic prediction of the results of</color>
<color=#75715e>       * cleaning, and is used to prevent over-cleaning, especially one</color>
<color=#75715e>       * due to a backlog created using inaccurate predictions.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inProgressFiles</color><color=#f8f8f2>.</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>utilizedSize</color> <color=#f92672>=</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color> <color=#f92672>-</color> <color=#f8f8f2>minObsoleteSize</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>predictedTotalSize</color> <color=#f92672>+=</color> <color=#f8f8f2>utilizedSize</color><color=#f8f8f2>;</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>predictedTotalSize</color> <color=#f92672>+=</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>predictedMinObsoleteSize</color> <color=#f92672>+=</color> <color=#f8f8f2>minGradualObsoleteSize</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>predictedMaxObsoleteSize</color> <color=#f92672>+=</color> <color=#f8f8f2>maxGradualObsoleteSize</color><color=#f8f8f2>;</color>

      <color=#75715e>/* Skip files that are too young to be cleaned. */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileNum</color> <color=#f92672>></color> <color=#f8f8f2>lastFileToClean</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Pick the "best" file -- the one having the lowest avg</color>
<color=#75715e>       * utilization so far.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>thisMinUtil</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummary</color><color=#f8f8f2>.</color><color=#a6e22e>utilization</color><color=#f8f8f2>(</color><color=#f8f8f2>maxObsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>thisMaxUtil</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummary</color><color=#f8f8f2>.</color><color=#a6e22e>utilization</color><color=#f8f8f2>(</color><color=#f8f8f2>minObsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>);</color>

      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>thisAvgUtil</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisMinUtil</color> <color=#f92672>+</color> <color=#f8f8f2>thisMaxUtil</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bestFile</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>thisAvgUtil</color> <color=#f92672><</color> <color=#f8f8f2>bestFileAvgUtil</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>bestFile</color> <color=#f92672>=</color> <color=#f8f8f2>file</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bestFileAvgUtil</color> <color=#f92672>=</color> <color=#f8f8f2>thisAvgUtil</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bestFileMinUtil</color> <color=#f92672>=</color> <color=#f8f8f2>thisMinUtil</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bestFileMaxUtil</color> <color=#f92672>=</color> <color=#f8f8f2>thisMaxUtil</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Pick the "best gradual" file -- the one having the lowest max</color>
<color=#75715e>       * gradual utilization so far.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>thisGradualMaxUtil</color> <color=#f92672>=</color>
          <color=#f8f8f2>FileSummary</color><color=#f8f8f2>.</color><color=#a6e22e>utilization</color><color=#f8f8f2>(</color><color=#f8f8f2>minGradualObsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>summary</color><color=#f8f8f2>.</color><color=#a6e22e>totalSize</color><color=#f8f8f2>);</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bestGradualFile</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>thisGradualMaxUtil</color> <color=#f92672><</color> <color=#f8f8f2>bestGradualFileMaxUtil</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>bestGradualFile</color> <color=#f92672>=</color> <color=#f8f8f2>file</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bestGradualFileMaxUtil</color> <color=#f92672>=</color> <color=#f8f8f2>thisGradualMaxUtil</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>currentMinUtil</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummary</color><color=#f8f8f2>.</color><color=#a6e22e>utilization</color><color=#f8f8f2>(</color><color=#f8f8f2>currentMaxObsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>currentTotalSize</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>currentMaxUtil</color> <color=#f92672>=</color> <color=#f8f8f2>FileSummary</color><color=#f8f8f2>.</color><color=#a6e22e>utilization</color><color=#f8f8f2>(</color><color=#f8f8f2>currentMinObsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>currentTotalSize</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>predictedMinUtil</color> <color=#f92672>=</color>
        <color=#f8f8f2>FileSummary</color><color=#f8f8f2>.</color><color=#a6e22e>utilization</color><color=#f8f8f2>(</color><color=#f8f8f2>predictedMaxObsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>predictedTotalSize</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>predictedMaxUtil</color> <color=#f92672>=</color>
        <color=#f8f8f2>FileSummary</color><color=#f8f8f2>.</color><color=#a6e22e>utilization</color><color=#f8f8f2>(</color><color=#f8f8f2>predictedMinObsoleteSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>predictedTotalSize</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>currentMinUtilization</color> <color=#f92672>=</color> <color=#f8f8f2>currentMinUtil</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>currentMaxUtilization</color> <color=#f92672>=</color> <color=#f8f8f2>currentMaxUtil</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>predictedMinUtilization</color> <color=#f92672>=</color> <color=#f8f8f2>predictedMinUtil</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>predictedMaxUtilization</color> <color=#f92672>=</color> <color=#f8f8f2>predictedMaxUtil</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * 1. If total min utilization is below the threshold, clean the</color>
<color=#75715e>     *    "best" file, which is the one with the lowest avg utilization.</color>
<color=#75715e>     *</color>
<color=#75715e>     * 2. Else if the "best gradual" file has a max gradual utilization</color>
<color=#75715e>     *    that is below the threshold for a single file, clean it.</color>
<color=#75715e>     *</color>
<color=#75715e>     * 3. Else if there are more files to migrate, clean the next file to</color>
<color=#75715e>     *    be migrated.</color>
<color=#75715e>     *</color>
<color=#75715e>     * 4. Else if cleaning is forced for unit testing, clean the best file.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Long</color> <color=#f8f8f2>fileChosen</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>reason</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>predictedMinUtil</color> <color=#f92672><</color> <color=#f8f8f2>totalThreshold</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>fileChosen</color> <color=#f92672>=</color> <color=#f8f8f2>bestFile</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>reason</color> <color=#f92672>=</color> <color=#e6db74>"predicted min util is below minUtilization"</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bestGradualFileMaxUtil</color> <color=#f92672><</color> <color=#f8f8f2>fileThreshold</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>fileChosen</color> <color=#f92672>=</color> <color=#f8f8f2>bestGradualFile</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>reason</color> <color=#f92672>=</color> <color=#e6db74>"file has avg util below minFileUtilization"</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>filesToMigrate</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>,</color> <color=#f8f8f2>inProgressFiles</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>fileChosen</color> <color=#f92672>=</color> <color=#f8f8f2>filesToMigrate</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>(</color><color=#f8f8f2>fileSummaryMap</color><color=#f8f8f2>,</color> <color=#f8f8f2>inProgressFiles</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>reason</color> <color=#f92672>=</color> <color=#e6db74>"there are more forceCleanFiles"</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>forceCleaning</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>fileChosen</color> <color=#f92672>=</color> <color=#f8f8f2>bestFile</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>reason</color> <color=#f92672>=</color> <color=#e6db74>"forced for testing"</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>fileChosen</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>reason</color> <color=#f92672>=</color> <color=#e6db74>"no file selected"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>String</color> <color=#f8f8f2>bestFileMsg</color> <color=#f92672>=</color> <color=#e6db74>""</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>twoPassMsg</color> <color=#f92672>=</color> <color=#e6db74>""</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>pass1RequiredUtil</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileChosen</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>fileChosen</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>bestFile</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>bestFileMsg</color> <color=#f92672>=</color>
          <color=#e6db74>", chose file with util min: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>bestFileMinUtil</color>
              <color=#f92672>+</color> <color=#e6db74>" max: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>bestFileMaxUtil</color>
              <color=#f92672>+</color> <color=#e6db74>" avg: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>bestFileAvgUtil</color><color=#f8f8f2>;</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If the difference between the file's min and max utilization is</color>
<color=#75715e>       * more than twoPassGap, and its max utilization is more then</color>
<color=#75715e>       * twoPassThreshold, use two pass cleaning. When using two-pass</color>
<color=#75715e>       * cleaning, skip the second pass if its recalculated utilization</color>
<color=#75715e>       * is higher than twoPassThreshold. In other words, if the benefit</color>
<color=#75715e>       * of cleaning is low, don't actually clean it.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bestFileMaxUtil</color> <color=#f92672>></color> <color=#f8f8f2>twoPassThreshold</color> <color=#f92672>&&</color> <color=#f8f8f2>bestFileMaxUtil</color> <color=#f92672>-</color> <color=#f8f8f2>bestFileMinUtil</color> <color=#f92672>>=</color> <color=#f8f8f2>twoPassGap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>pass1RequiredUtil</color> <color=#f92672>=</color> <color=#f8f8f2>twoPassThreshold</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>twoPassMsg</color> <color=#f92672>=</color> <color=#e6db74>", 2-pass cleaning"</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Level</color> <color=#f8f8f2>logLevel</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileChosen</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>INFO</color> <color=#f8f8f2>:</color> <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>;</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>.</color><color=#a6e22e>isLoggable</color><color=#f8f8f2>(</color><color=#f8f8f2>logLevel</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>logMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>env</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>logLevel</color><color=#f8f8f2>,</color>
          <color=#e6db74>"Clean file "</color>
              <color=#f92672>+</color> <color=#f8f8f2>((</color><color=#f8f8f2>fileChosen</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>(</color><color=#e6db74>"0x"</color> <color=#f92672>+</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>toHexString</color><color=#f8f8f2>(</color><color=#f8f8f2>fileChosen</color><color=#f8f8f2>))</color> <color=#f8f8f2>:</color> <color=#e6db74>"none"</color><color=#f8f8f2>)</color>
              <color=#f92672>+</color> <color=#e6db74>": "</color>
              <color=#f92672>+</color> <color=#f8f8f2>reason</color>
              <color=#f92672>+</color> <color=#f8f8f2>twoPassMsg</color>
              <color=#f92672>+</color> <color=#e6db74>", current util min: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>currentMinUtil</color>
              <color=#f92672>+</color> <color=#e6db74>" max: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>currentMaxUtil</color>
              <color=#f92672>+</color> <color=#e6db74>", predicted util min: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>predictedMinUtil</color>
              <color=#f92672>+</color> <color=#e6db74>" max: "</color>
              <color=#f92672>+</color> <color=#f8f8f2>predictedMaxUtil</color>
              <color=#f92672>+</color> <color=#f8f8f2>bestFileMsg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>fileChosen</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#66d9ef>new</color> <color=#f8f8f2>Pair</color><color=#f92672><></color><color=#f8f8f2>(</color><color=#f8f8f2>fileChosen</color><color=#f8f8f2>,</color> <color=#f8f8f2>pass1RequiredUtil</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Process notifications of mutable property changes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws IllegalArgumentException via FilesToMigrate ctor and parseForceCleanFiles.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>envConfigUpdate</color><color=#f8f8f2>(</color><color=#f8f8f2>DbConfigManager</color> <color=#f8f8f2>cm</color><color=#f8f8f2>,</color> <color=#f8f8f2>EnvironmentMutableConfig</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>filesToMigrate</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FilesToMigrate</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>