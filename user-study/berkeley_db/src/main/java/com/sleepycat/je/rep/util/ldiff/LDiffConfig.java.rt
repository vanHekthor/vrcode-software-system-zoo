<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.util.ldiff</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>LDiffConfig</color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>DEFAULT_BLOCK_SIZE</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672><<</color> <color=#ae81ff>13</color><color=#f8f8f2>;</color> <color=#75715e>// 8k</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>DEFAULT_MAX_ERRORS</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxErrors</color> <color=#f92672>=</color> <color=#f8f8f2>DEFAULT_MAX_ERRORS</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>diffAnalysis</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>blockSize</color> <color=#f92672>=</color> <color=#f8f8f2>DEFAULT_BLOCK_SIZE</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>waitIfBusy</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxConnectionAttempts</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>reconnectDelay</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>verbose</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the maximum number of errors to analyze before ending the LDiff operation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the maximum number of errors to analyze before throwing MismatchException.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getMaxErrors</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>maxErrors</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configure the maximum number of errors to be analyzed before ending the LDiff operation. A</color>
<color=#75715e>   * value of zero forces the algorithm to run to completion. The default value is 0.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param max the maximum number of errors to be analyzed before ending the LDiff operation.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LDiffConfig</color> <color=#a6e22e>setMaxErrors</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>max</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setMaxErrorsVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>max</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMaxErrorsVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>max</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>maxErrors</color> <color=#f92672>=</color> <color=#f8f8f2>max</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return whether an LDiff object will provide detailed analysis about diff failures.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if an LDiff object will provide detailed analysis about diff failures.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getDiffAnalysis</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>diffAnalysis</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configure an LDiff object to provide detailed analysis about diff failures. The default value</color>
<color=#75715e>   * is false.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param analysis if true, provides detailed analysis about the reason why the diff failed. The</color>
<color=#75715e>   *     detailed analysis can be time consuming.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LDiffConfig</color> <color=#a6e22e>setDiffAnalysis</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>analysis</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setDiffAnalysisVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>analysis</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDiffAnalysisVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>analysis</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>diffAnalysis</color> <color=#f92672>=</color> <color=#f8f8f2>analysis</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the number of records to include in each block analyzed by the LDiff operation.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the number of records to include in each block analyzed by the LDiff operation.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getBlockSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>blockSize</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configure the number of records to include in each block analyzed by the LDiff operation. The</color>
<color=#75715e>   * default is 10240.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param size the number of records to include in each block analyzed by the LDiff operation.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LDiffConfig</color> <color=#a6e22e>setBlockSize</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setBlockSizeVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>size</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBlockSizeVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>blockSize</color> <color=#f92672>=</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return whether or not the operation will wait for the remote service to become available if the</color>
<color=#75715e>   * remote service is busy.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if the LDiff operation will block until the remote service becomes available</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getWaitIfBusy</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>waitIfBusy</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the maximum number of times the operation will attempt to connect to the remote service</color>
<color=#75715e>   * before aborting. A value of -1 means the operation will never abort.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the maximum number of times the operation will attempt to connect to the remote service</color>
<color=#75715e>   *     before aborting.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getMaxConnectionAttempts</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>maxConnectionAttempts</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the delay, in milliseconds, between reconnect attempts.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return the amount of time, in milliseconds, between reconnection attempts</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getReconnectDelay</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>reconnectDelay</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configure whether or not the operation should wait for the remote service to become available,</color>
<color=#75715e>   * if the remote service is busy.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param wait if true, the LDiff operation will block until the remote node is available</color>
<color=#75715e>   * @param maxAttempts the number of times to attempt connecting to the service before aborting.</color>
<color=#75715e>   *     Pass -1 to never abort.</color>
<color=#75715e>   * @param delay the number of milliseconds to wait between connection attempts.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LDiffConfig</color> <color=#a6e22e>setWaitIfBusy</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>wait</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>maxAttempts</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>delay</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>waitIfBusy</color> <color=#f92672>=</color> <color=#f8f8f2>wait</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>maxConnectionAttempts</color> <color=#f92672>=</color> <color=#f8f8f2>maxAttempts</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>reconnectDelay</color> <color=#f92672>=</color> <color=#f8f8f2>delay</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setWaitIfBusyVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>wait</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>waitIfBusy</color> <color=#f92672>=</color> <color=#f8f8f2>wait</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For the completement of setter methods. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LDiffConfig</color> <color=#a6e22e>setMaxConnectionAttempts</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>maxAttempts</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setMaxConnectionAttemptsVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>maxAttempts</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMaxConnectionAttemptsVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>maxAttempts</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>maxConnectionAttempts</color> <color=#f92672>=</color> <color=#f8f8f2>maxAttempts</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For the completement of setter methods. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LDiffConfig</color> <color=#a6e22e>setReconnectDelay</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>delay</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>setReconnectDelayVoid</color><color=#f8f8f2>(</color><color=#f8f8f2>delay</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setReconnectDelayVoid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>delay</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>reconnectDelay</color> <color=#f92672>=</color> <color=#f8f8f2>delay</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return whether or not the operation will output information on its success or failure.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if the operation will output information</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getVerbose</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configure whether or not the operation will output information on its success or failure.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param verbose if true, the LDiff operation will output information as it compares databases</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LDiffConfig</color> <color=#a6e22e>setVerbose</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>verbose</color> <color=#f92672>=</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden The void return setter for use by Bean editors. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setVerboseVoid</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>verbose</color> <color=#f92672>=</color> <color=#f8f8f2>verbose</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>