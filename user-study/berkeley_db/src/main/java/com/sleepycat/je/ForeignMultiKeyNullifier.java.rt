<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * The interface implemented for setting multi-valued foreign keys to null.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>A key nullifier is used with a secondary database that is configured to have a foreign key</color>
<color=#75715e> * integrity constraint and a delete action of {@link ForeignKeyDeleteAction#NULLIFY}. The key</color>
<color=#75715e> * nullifier is specified by calling {@link SecondaryConfig#setForeignMultiKeyNullifier}.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>When a referenced record in the foreign key database is deleted and the foreign key delete</color>
<color=#75715e> * action is <code>NULLIFY</code>, the {@link ForeignMultiKeyNullifier#nullifyForeignKey} method is</color>
<color=#75715e> * called. This method sets the foreign key reference to null in the datum of the primary database.</color>
<color=#75715e> * The primary database is then updated to contain the modified datum. The result is that the</color>
<color=#75715e> * secondary key is deleted. This interface may be used along with {@link SecondaryKeyCreator} or</color>
<color=#75715e> * {@link SecondaryMultiKeyCreator} for many-to-many, one-to-many, many-to-one and one-to-one</color>
<color=#75715e> * relationships.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>ForeignMultiKeyNullifier</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Sets the foreign key reference to null in the datum of the primary database.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param secondary the database in which the foreign key integrity constraint is defined. This</color>
<color=#75715e>   *     parameter is passed for informational purposes but is not commonly used.</color>
<color=#75715e>   * @param key the existing primary key. This parameter is passed for informational purposes but is</color>
<color=#75715e>   *     not commonly used.</color>
<color=#75715e>   * @param data the existing primary datum in which the foreign key reference should be set to</color>
<color=#75715e>   *     null. This parameter should be updated by this method if it returns true.</color>
<color=#75715e>   * @param secKey the secondary key to be nullified. This parameter is needed for knowing which key</color>
<color=#75715e>   *     to nullify when multiple keys are present, as when {@link SecondaryMultiKeyCreator} is</color>
<color=#75715e>   *     used.</color>
<color=#75715e>   * @return true if the datum was modified, or false to indicate that the key is not present.</color>
<color=#75715e>   * @throws DatabaseException if an error occurs attempting to clear the key reference.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>nullifyForeignKey</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>SecondaryDatabase</color> <color=#f8f8f2>secondary</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>secKey</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>DatabaseException</color><color=#f8f8f2>;</color>
<color=#f8f8f2>}</color>