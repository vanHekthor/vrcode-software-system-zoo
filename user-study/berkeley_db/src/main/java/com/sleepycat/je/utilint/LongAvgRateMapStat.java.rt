<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.utilint</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.StatDefinition.StatType</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Iterator</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map.Entry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A JE stat that maintains a map of individual {@link LongAvgRate} values which can be looked up</color>
<color=#75715e> * with a String key, and that returns results as a formatted string.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>LongAvgRateMapStat</color> <color=#66d9ef>extends</color> <color=#f8f8f2>MapStat</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>LongAvgRate</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>1L</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The averaging period in milliseconds. */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>periodMillis</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The time unit for reporting rates. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>reportTimeUnit</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The time the last stat was removed. This value is used to determine which entries should be</color>
<color=#75715e>   * included when calling computeInterval. Synchronize on this instance when accessing this field.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>removeStatTimestamp</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates an instance of this class. The definition type must be INCREMENTAL.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param group the owning group</color>
<color=#75715e>   * @param definition the associated definition</color>
<color=#75715e>   * @param periodMillis the sampling period in milliseconds</color>
<color=#75715e>   * @param reportTimeUnit the time unit for reporting rates</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>LongAvgRateMapStat</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>StatGroup</color> <color=#f8f8f2>group</color><color=#f8f8f2>,</color> <color=#f8f8f2>StatDefinition</color> <color=#f8f8f2>definition</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>periodMillis</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>reportTimeUnit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>,</color> <color=#f8f8f2>definition</color><color=#f8f8f2>);</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>definition</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>StatType</color><color=#f8f8f2>.</color><color=#a6e22e>INCREMENTAL</color><color=#f8f8f2>;</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>periodMillis</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>reportTimeUnit</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>periodMillis</color> <color=#f92672>=</color> <color=#f8f8f2>periodMillis</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>reportTimeUnit</color> <color=#f92672>=</color> <color=#f8f8f2>reportTimeUnit</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#a6e22e>LongAvgRateMapStat</color><color=#f8f8f2>(</color><color=#f8f8f2>LongAvgRateMapStat</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>periodMillis</color> <color=#f92672>=</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>periodMillis</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>reportTimeUnit</color> <color=#f92672>=</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>reportTimeUnit</color><color=#f8f8f2>;</color>
    <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>removeStatTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>removeStatTimestamp</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates, stores, and returns a new stat for the specified key.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param key the key</color>
<color=#75715e>   * @return the new stat</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>LongAvgRate</color> <color=#a6e22e>createStat</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>key</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LongAvgRate</color> <color=#f8f8f2>stat</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>LongAvgRate</color><color=#f8f8f2>(</color><color=#f8f8f2>definition</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>":"</color> <color=#f92672>+</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>periodMillis</color><color=#f8f8f2>,</color> <color=#f8f8f2>reportTimeUnit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>stat</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>stat</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Note the removal time, so that computeInterval can tell if an empty map is newer than a</color>
<color=#75715e>   * non-empty one.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>removeStat</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>removeStat</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Remove a stat and specify the time of the removal -- for testing. */</color>
  <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>removeStat</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>removeStatTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>removeStat</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LongAvgRateMapStat</color> <color=#a6e22e>copy</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>LongAvgRateMapStat</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a new map that contains entries for all keys that appear in whichever of this map or</color>
<color=#75715e>   * the argument is newer, with those entries updated with any values from both maps. Treats this</color>
<color=#75715e>   * map as newest if both have the same timestamp. This method does not compute negative intervals,</color>
<color=#75715e>   * since negation does not work properly for this non-additive stat. The base argument must be a</color>
<color=#75715e>   * LongAvgRateMapStat.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LongAvgRateMapStat</color> <color=#a6e22e>computeInterval</color><color=#f8f8f2>(</color><color=#f8f8f2>Stat</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>base</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>base</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>LongAvgRateMapStat</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LongAvgRateMapStat</color> <color=#f8f8f2>copy</color> <color=#f92672>=</color> <color=#f8f8f2>copy</color><color=#f8f8f2>();</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LongAvgRateMapStat</color> <color=#f8f8f2>baseCopy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>LongAvgRateMapStat</color><color=#f8f8f2>)</color> <color=#f8f8f2>base</color><color=#f8f8f2>.</color><color=#a6e22e>copy</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>copy</color><color=#f8f8f2>.</color><color=#a6e22e>getLatestTime</color><color=#f8f8f2>()</color> <color=#f92672><</color> <color=#f8f8f2>baseCopy</color><color=#f8f8f2>.</color><color=#a6e22e>getLatestTime</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>copy</color><color=#f8f8f2>.</color><color=#a6e22e>updateLatest</color><color=#f8f8f2>(</color><color=#f8f8f2>baseCopy</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>baseCopy</color><color=#f8f8f2>.</color><color=#a6e22e>updateLatest</color><color=#f8f8f2>(</color><color=#f8f8f2>copy</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Update this map to reflect changes from the argument, including merging latest changes,</color>
<color=#75715e>   * removing entries not in the argument, and adding ones not in this instance.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>LongAvgRateMapStat</color> <color=#a6e22e>updateLatest</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>LongAvgRateMapStat</color> <color=#f8f8f2>latest</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>latest</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>Entry</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>LongAvgRate</color><color=#f92672>>></color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>().</color><color=#a6e22e>iterator</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>i</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>();</color> <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>Entry</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>LongAvgRate</color><color=#f92672>></color> <color=#f8f8f2>e</color> <color=#f92672>=</color> <color=#f8f8f2>i</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>LongAvgRate</color> <color=#f8f8f2>latestStat</color> <color=#f92672>=</color> <color=#f8f8f2>latest</color><color=#f8f8f2>.</color><color=#a6e22e>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>());</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>latestStat</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>().</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>latestStat</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>i</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Entry</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>LongAvgRate</color><color=#f92672>></color> <color=#f8f8f2>e</color> <color=#f8f8f2>:</color> <color=#f8f8f2>latest</color><color=#f8f8f2>.</color><color=#a6e22e>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the most recent time any component stat was modified, including the time of the latest</color>
<color=#75715e>   * stat removal.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>long</color> <color=#a6e22e>getLatestTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>latestTime</color> <color=#f92672>=</color> <color=#f8f8f2>removeStatTimestamp</color><color=#f8f8f2>;</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>LongAvgRate</color> <color=#f8f8f2>stat</color> <color=#f8f8f2>:</color> <color=#f8f8f2>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>latestTime</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>latestTime</color><color=#f8f8f2>,</color> <color=#f8f8f2>stat</color><color=#f8f8f2>.</color><color=#a6e22e>getPrevTime</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>latestTime</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Do nothing for this non-additive stat. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>negate</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>
<color=#f8f8f2>}</color>