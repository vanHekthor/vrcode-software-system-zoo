<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.util.ldiff</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Arrays</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Formatter</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Block</color> <color=#66d9ef>implements</color> <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>io</color><color=#f8f8f2>.</color><color=#a6e22e>Serializable</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>111858779935447845L</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The block ID. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>blockId</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The actual records that the block holds. */</color>
  <color=#66d9ef>int</color> <color=#f8f8f2>numRecords</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * For debugging support and to minimize the actual data that is</color>
<color=#75715e>   * transferred over the network, I store the beginKey and endKey as the</color>
<color=#75715e>   * index to each of the block.</color>
<color=#75715e>   *</color>
<color=#75715e>   * TODO to optimize: replace the {beginKey, endKey} by something like LSN.</color>
<color=#75715e>   */</color>

  <color=#75715e>/* The database key that the current block starts with. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>beginKey</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The database key that the current block ends with. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>beginData</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The rolling checksum computed from the sequence of Adler32 checksums. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>rollingChksum</color><color=#f8f8f2>;</color>

  <color=#75715e>/* An md5 hash is also computed for each block. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>md5Hash</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>Block</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>blockId</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>blockId</color> <color=#f92672>=</color> <color=#f8f8f2>blockId</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>int</color> <color=#a6e22e>getBlockId</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>blockId</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>int</color> <color=#a6e22e>getNumRecords</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>numRecords</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setNumRecords</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>numRecords</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>numRecords</color> <color=#f92672>=</color> <color=#f8f8f2>numRecords</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getBeginKey</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>beginKey</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBeginKey</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>beginKey</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>beginKey</color> <color=#f92672>=</color> <color=#f8f8f2>beginKey</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getBeginData</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>beginData</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBeginData</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>beginData</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>beginData</color> <color=#f92672>=</color> <color=#f8f8f2>beginData</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>long</color> <color=#a6e22e>getRollingChksum</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>rollingChksum</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setRollingChksum</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>rollingChksum</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>rollingChksum</color> <color=#f92672>=</color> <color=#f8f8f2>rollingChksum</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getMd5Hash</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>md5Hash</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMd5Hash</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>md5Hash</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>md5Hash</color> <color=#f92672>=</color> <color=#f8f8f2>md5Hash</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>o</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>o</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Block</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Block</color> <color=#f8f8f2>other</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Block</color><color=#f8f8f2>)</color> <color=#f8f8f2>o</color><color=#f8f8f2>;</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>blockId</color> <color=#f92672>==</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>blockId</color><color=#f8f8f2>)</color>
        <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>numRecords</color> <color=#f92672>==</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>numRecords</color><color=#f8f8f2>)</color>
        <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>beginKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>beginKey</color><color=#f8f8f2>)</color>
        <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>beginData</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>beginData</color><color=#f8f8f2>)</color>
        <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>rollingChksum</color> <color=#f92672>==</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>rollingChksum</color><color=#f8f8f2>)</color>
        <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>md5Hash</color><color=#f8f8f2>,</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>md5Hash</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>Formatter</color> <color=#f8f8f2>fmt</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Formatter</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>fmt</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color>
        <color=#e6db74>"Block %d: rollingChksum=%x md5Hash=%s numRecords=%d"</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>blockId</color><color=#f8f8f2>,</color> <color=#f8f8f2>rollingChksum</color><color=#f8f8f2>,</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>(</color><color=#f8f8f2>md5Hash</color><color=#f8f8f2>),</color> <color=#f8f8f2>numRecords</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>fmt</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>