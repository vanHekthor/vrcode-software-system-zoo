<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.JEVersion</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.LogUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.NodeState</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.ReplicatedEnvironment.State</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocol</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Defines the protocol used in support of node state querying.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Because this protocol has to transfer byte array between two nodes, so instead of using the</color>
<color=#75715e> * former NodeStateProtocol, we introduce this new protocol which inherits from BinaryProtocol.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>Note: once we support active version update, we can use one protocol only.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The message request sequence: NODE_STATE_REQ -> NODE_STATE_RESP</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>BinaryNodeStateProtocol</color> <color=#66d9ef>extends</color> <color=#f8f8f2>BinaryProtocol</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>VERSION</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#75715e>/* The messages defined by this class. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>BIN_NODE_STATE_REQ</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>BinaryNodeStateRequest</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>MessageOp</color> <color=#f8f8f2>BIN_NODE_STATE_RESP</color> <color=#f92672>=</color>
      <color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f8f8f2>((</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>BinaryNodeStateResponse</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

  <color=#66d9ef>public</color> <color=#a6e22e>BinaryNodeStateProtocol</color><color=#f8f8f2>(</color><color=#f8f8f2>NameIdPair</color> <color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>nameIdPair</color><color=#f8f8f2>,</color> <color=#f8f8f2>VERSION</color><color=#f8f8f2>,</color> <color=#f8f8f2>VERSION</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>);</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>initializeMessageOps</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>MessageOp</color><color=#f92672>[]</color> <color=#f8f8f2>{</color><color=#f8f8f2>BIN_NODE_STATE_REQ</color><color=#f8f8f2>,</color> <color=#f8f8f2>BIN_NODE_STATE_RESP</color><color=#f8f8f2>});</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Message request the state of the specified node. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>BinaryNodeStateRequest</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* The name of the node whose status is requested. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The name of the group the node belongs to. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>BinaryNodeStateRequest</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>BinaryNodeStateRequest</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getGroupName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>BIN_NODE_STATE_REQ</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* Message return state of specified node. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>BinaryNodeStateResponse</color> <color=#66d9ef>extends</color> <color=#f8f8f2>SimpleMessage</color> <color=#f8f8f2>{</color>
    <color=#75715e>/* The name of the node which requests the status. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The name of the group which this node joins. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The name of the current master in the group. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The JEVersion that this node runs. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>;</color>
    <color=#75715e>/* Time when this node joins the group. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The current state of this node. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>State</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The last commit VLSN on this node. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The last master commit VLSN known by this node. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>masterCommitVLSN</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The number of running feeders on this node. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The log version of this node. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>;</color>
    <color=#75715e>/* The state of the JE application, specified by users themselves. */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>appState</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * The system load of the node, it is serialized and deserialized in</color>
<color=#75715e>     * String format.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>systemLoad</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>BinaryNodeStateResponse</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>JEVersion</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>,</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>State</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>,</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>,</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>masterCommitVLSN</color><color=#f8f8f2>,</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>,</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>appState</color><color=#f8f8f2>,</color>
        <color=#66d9ef>double</color> <color=#f8f8f2>systemLoad</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
      <color=#75715e>/*</color>
<color=#75715e>       * Master could be unknown, but must be non-null for</color>
<color=#75715e>       * serialization.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>masterName</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>masterName</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#e6db74>""</color> <color=#f8f8f2>:</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>jeVersion</color> <color=#f92672>=</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>joinTime</color> <color=#f92672>=</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>nodeState</color> <color=#f92672>=</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>commitVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>masterCommitVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>masterCommitVLSN</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>activeFeeders</color> <color=#f92672>=</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>logVersion</color> <color=#f92672>=</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>appState</color> <color=#f92672>=</color> <color=#f8f8f2>appState</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>systemLoad</color> <color=#f92672>=</color> <color=#f8f8f2>systemLoad</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>BinaryNodeStateResponse</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>nodeName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>groupName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>masterName</color> <color=#f92672>=</color> <color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>jeVersion</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>JEVersion</color><color=#f8f8f2>(</color><color=#f8f8f2>getString</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>));</color>
      <color=#f8f8f2>joinTime</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>nodeState</color> <color=#f92672>=</color> <color=#f8f8f2>getEnum</color><color=#f8f8f2>(</color><color=#f8f8f2>State</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>commitVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>masterCommitVLSN</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>activeFeeders</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>logVersion</color> <color=#f92672>=</color> <color=#f8f8f2>LogUtils</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>appState</color> <color=#f92672>=</color> <color=#f8f8f2>getByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>systemLoad</color> <color=#f92672>=</color> <color=#f8f8f2>getDouble</color><color=#f8f8f2>(</color><color=#f8f8f2>buffer</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getNodeName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nodeName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getGroupName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>groupName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getMasterName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>masterName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>JEVersion</color> <color=#a6e22e>getJEVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>jeVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getJoinTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>joinTime</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>State</color> <color=#a6e22e>getNodeState</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>nodeState</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getCommitVLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>getKnownMasterCommitVLSN</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>masterCommitVLSN</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getActiveFeeders</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getLogVersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>logVersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getAppState</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>appState</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>return</color> <color=#f8f8f2>appState</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>double</color> <color=#a6e22e>getSystemLoad</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>systemLoad</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>MessageOp</color> <color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>BIN_NODE_STATE_RESP</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ByteBuffer</color> <color=#a6e22e>wireFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * If the appState is null, make a new zero byte array, since</color>
<color=#75715e>       * writing null byte array would cause a NPE, and a meaningful</color>
<color=#75715e>       * application state shouldn't be a zero length byte array.</color>
<color=#75715e>       */</color>
      <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>realAppState</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>appState</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f8f8f2>:</color> <color=#f8f8f2>appState</color><color=#f8f8f2>);</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>wireFormat</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>masterName</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>jeVersion</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>joinTime</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>nodeState</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>masterCommitVLSN</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>realAppState</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>systemLoad</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Convert the response to the NodeState. */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>NodeState</color> <color=#a6e22e>convertToNodeState</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>NodeState</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>nodeName</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>groupName</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>nodeState</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>masterName</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>jeVersion</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>joinTime</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>commitVLSN</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>masterCommitVLSN</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>activeFeeders</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>logVersion</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>getAppState</color><color=#f8f8f2>(),</color>
          <color=#f8f8f2>systemLoad</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>