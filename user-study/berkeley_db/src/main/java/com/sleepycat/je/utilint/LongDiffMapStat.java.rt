<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.utilint</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.StatDefinition.StatType</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A JE stat that maintains a map of individual {@link LongDiffStat} values which can be looked up</color>
<color=#75715e> * with a String key, and that returns results as a formatted string. Only supports CUMULATIVE</color>
<color=#75715e> * stats.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>LongDiffMapStat</color> <color=#66d9ef>extends</color> <color=#f8f8f2>MapStat</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f8f8f2>,</color> <color=#f8f8f2>LongDiffStat</color><color=#f92672>></color> <color=#f8f8f2>{</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>serialVersionUID</color> <color=#f92672>=</color> <color=#ae81ff>1L</color><color=#f8f8f2>;</color>

  <color=#75715e>/** The maximum time, in milliseconds, that a computed difference is valid. */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>validityMillis</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates an instance of this class. The definition type must be CUMULATIVE.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param group the owning group</color>
<color=#75715e>   * @param definition the associated definition</color>
<color=#75715e>   * @param validityMillis the amount of time, in milliseconds, which a computed difference remains</color>
<color=#75715e>   *     valid</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>LongDiffMapStat</color><color=#f8f8f2>(</color><color=#f8f8f2>StatGroup</color> <color=#f8f8f2>group</color><color=#f8f8f2>,</color> <color=#f8f8f2>StatDefinition</color> <color=#f8f8f2>definition</color><color=#f8f8f2>,</color> <color=#66d9ef>long</color> <color=#f8f8f2>validityMillis</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>group</color><color=#f8f8f2>,</color> <color=#f8f8f2>definition</color><color=#f8f8f2>);</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>definition</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>StatType</color><color=#f8f8f2>.</color><color=#a6e22e>CUMULATIVE</color><color=#f8f8f2>;</color>
    <color=#66d9ef>assert</color> <color=#f8f8f2>validityMillis</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>validityMillis</color> <color=#f92672>=</color> <color=#f8f8f2>validityMillis</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#a6e22e>LongDiffMapStat</color><color=#f8f8f2>(</color><color=#f8f8f2>LongDiffMapStat</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>validityMillis</color> <color=#f92672>=</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>validityMillis</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates, stores, and returns a new stat for the specified key and base stat.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param key the new key</color>
<color=#75715e>   * @param base the base stat</color>
<color=#75715e>   * @return the new stat</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#f8f8f2>LongDiffStat</color> <color=#a6e22e>createStat</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>Stat</color><color=#f92672><</color><color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>base</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#f8f8f2>LongDiffStat</color> <color=#f8f8f2>stat</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LongDiffStat</color><color=#f8f8f2>(</color><color=#f8f8f2>base</color><color=#f8f8f2>,</color> <color=#f8f8f2>validityMillis</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>statMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>stat</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>stat</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LongDiffMapStat</color> <color=#a6e22e>copy</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>LongDiffMapStat</color><color=#f8f8f2>(</color><color=#66d9ef>this</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Ignores base for a non-additive stat. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>LongDiffMapStat</color> <color=#a6e22e>computeInterval</color><color=#f8f8f2>(</color><color=#f8f8f2>Stat</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>base</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>copy</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Does nothing for a non-additive stat. */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>negate</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>
<color=#f8f8f2>}</color>