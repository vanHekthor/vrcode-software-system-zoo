<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>
<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An asynchronous mechanism for tracking the {@link ReplicatedEnvironment.State State} of the</color>
<color=#75715e> * replicated environment and choosing how to route database operations. {@code State} determines</color>
<color=#75715e> * which operations are currently permitted on the node. For example, only the {@link</color>
<color=#75715e> * ReplicatedEnvironment.State#MASTER MASTER} node can execute write operations.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The Listener is registered with the replicated environment using {@link</color>
<color=#75715e> * ReplicatedEnvironment#setStateChangeListener(StateChangeListener)}. There is at most one Listener</color>
<color=#75715e> * associated with the actual environment (not an {@link com.sleepycat.je.Environment} handle) at</color>
<color=#75715e> * any given instance in time.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>{@literal See} the {@link <a href="{@docRoot}/../examples/je/rep/quote/package-summary.html"></color>
<color=#75715e> * examples</a>} for information on different approaches toward routing database operations and an</color>
<color=#75715e> * example of using the StateChangeListener.</color>
<color=#75715e> *</color>
<color=#75715e> * @see <a href="{@docRoot}/../ReplicationGuide/replicawrites.html">Managing Write Requests at a</color>
<color=#75715e> *     Replica</a></color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>StateChangeListener</color> <color=#f8f8f2>{</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The notification method. It is initially invoked when the {@code StateChangeListener} is first</color>
<color=#75715e>   * associated with the {@code ReplicatedEnvironment} via the {@link</color>
<color=#75715e>   * ReplicatedEnvironment#setStateChangeListener(StateChangeListener)} method and subsequently each</color>
<color=#75715e>   * time there is a state change.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>This method should do the minimal amount of work, queuing any resource intensive operations</color>
<color=#75715e>   * for processing by another thread before returning to the caller, so that it does not unduly</color>
<color=#75715e>   * delay the other housekeeping operations performed by the internal thread which invokes this</color>
<color=#75715e>   * method.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p></color>
<color=#75715e>   *</color>
<color=#75715e>   * @param stateChangeEvent the new state change event</color>
<color=#75715e>   * @throws RuntimeException Any uncaught exceptions will result in the shutdown of the</color>
<color=#75715e>   *     ReplicatedEnvironment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>void</color> <color=#a6e22e>stateChange</color><color=#f8f8f2>(</color><color=#f8f8f2>StateChangeEvent</color> <color=#f8f8f2>stateChangeEvent</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>RuntimeException</color><color=#f8f8f2>;</color>
<color=#f8f8f2>}</color>