<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.config.ConfigParam</color><color=#f8f8f2>;</color>

<color=#75715e>/** A JE configuration parameter with an enumerated value */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>EnumConfigParam</color><color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Enum</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>ConfigParam</color> <color=#f8f8f2>{</color>

  <color=#75715e>/* The class denoting the enum type */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>enumClass</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>EnumConfigParam</color><color=#f8f8f2>(</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>configName</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Enum</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>defaultValue</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>mutable</color><color=#f8f8f2>,</color>
      <color=#66d9ef>boolean</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>,</color>
      <color=#f8f8f2>Class</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>enumClass</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>configName</color><color=#f8f8f2>,</color> <color=#f8f8f2>defaultValue</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>(),</color> <color=#f8f8f2>mutable</color><color=#f8f8f2>,</color> <color=#f8f8f2>forReplication</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>enumClass</color> <color=#f92672>=</color> <color=#f8f8f2>enumClass</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns the enumerator associated with the name</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param enumName the string naming the enumerator</color>
<color=#75715e>   * @return the enumerator</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>T</color> <color=#a6e22e>getEnumerator</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>enumName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>Enum</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>enumClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>enumName</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>validateValue</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IllegalArgumentException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/*</color>
<color=#75715e>     * If validateValue() is called by through the ConfigParam</color>
<color=#75715e>     * constructor, enumVal is not assigned yet, so we guard against</color>
<color=#75715e>     * that happening.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>enumClass</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Enum</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>enumClass</color><color=#f8f8f2>,</color> <color=#f8f8f2>value</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>