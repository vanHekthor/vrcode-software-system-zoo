<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.util.ldiff</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node.NameIdPair</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannelFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannelFactory.ConnectOptions</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.BinaryProtocol.ProtocolException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.ServiceDispatcher</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.ServiceDispatcher.ServiceConnectFailedException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.net.SimpleChannelFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.CmdUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.InetSocketAddress</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Arrays</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Iterator</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.NoSuchElementException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * LDiff provides a mechanism for efficiently comparing two quiescent databases, typically residing</color>
<color=#75715e> * on different machines connected by a network. The comparison is done at the logical level rather</color>
<color=#75715e> * than the physical level, so that we can compare the contents of replicated databases where the</color>
<color=#75715e> * logical contents may be identical, but the physical logs may be very different. If the databases</color>
<color=#75715e> * are found to be different, it provides information that would help identify the specific nature</color>
<color=#75715e> * of the differences.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This class provides the external API used to initiate a comparison.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>For details, please review the document at:</color>
<color=#75715e> *</color>
<color=#75715e> * @see <a href="https://sleepycat.oracle.com/trac/wiki/JEDatabaseLogicalDiff">LDiff </a></color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>LDiff</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#f8f8f2>LDiffConfig</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>home1</color><color=#f8f8f2>,</color> <color=#f8f8f2>home2</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>file1</color><color=#f8f8f2>,</color> <color=#f8f8f2>file2</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DiffTracker</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>usageString</color> <color=#f92672>=</color>
      <color=#e6db74>"usage: "</color>
          <color=#f92672>+</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getJavaCommand</color><color=#f8f8f2>(</color><color=#f8f8f2>LDiff</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>)</color>
          <color=#f92672>+</color> <color=#e6db74>"\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  -h <dir>[,<dir2>]   # environment home directory\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  [-a]                # analyze diff\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  [-b <blockSize>]    # number of records to put in each block\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  [-m <maxErrors>]    # abort diff after a number of errors\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  [-s <databaseName>,<databaseName>] # database(s) to compare\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"  [-q]                # be quiet, do not print to stdout"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>SOCKET_TIMEOUT_MS</color> <color=#f92672>=</color> <color=#ae81ff>10000</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The main used by the LDiff utility.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param args The arguments accepted by the LDiff utility.</color>
<color=#75715e>   *     <pre></color>
<color=#75715e>   * usage: java com.sleepycat.je.rep.util.ldiff.LDiff</color>
<color=#75715e>   *             [-s database1,database2] -h dbEnvHome1[,dbEnvHome2]</color>
<color=#75715e>   *             [-a] [-b blockSize] [-m maxErrors] [-q]</color>
<color=#75715e>   * </pre></color>
<color=#75715e>   *     <p>-a - generate an analysis of the differences<br></color>
<color=#75715e>   *     -b blockSize - the number of records to compare at one time<br></color>
<color=#75715e>   *     -h dbEnvHome - the directory or directories containing environment(s) in which to perform</color>
<color=#75715e>   *     the ldiff<br></color>
<color=#75715e>   *     -m maxErrors - the maximum number of errors to detect before declaring the databases</color>
<color=#75715e>   *     different and ending the operation.<br></color>
<color=#75715e>   *     -s database1,database2 - the databases to ldiff.<br></color>
<color=#75715e>   *     -q - be quiet, do not write to stdout</color>
<color=#75715e>   *     <p>If ldiff-ing a specific database, two database names must be specified. If no database</color>
<color=#75715e>   *     names are given, two environments must be specified. If two database names and two</color>
<color=#75715e>   *     environments are specified, the first database is opened in the first environment and the</color>
<color=#75715e>   *     second database is opened in the second environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>LDiff</color> <color=#f8f8f2>differ</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LDiff</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>differ</color><color=#f8f8f2>.</color><color=#a6e22e>parseArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>);</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>differ</color><color=#f8f8f2>.</color><color=#a6e22e>diff</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>parseArgs</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>argv</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>cfg</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LDiffConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>setVerbose</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>argc</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nArgs</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>String</color> <color=#f8f8f2>thisArg</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-a"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>setDiffAnalysis</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-b"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>setBlockSize</color><color=#f8f8f2>(</color><color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>parseInt</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>));</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>NumberFormatException</color> <color=#f8f8f2>nfe</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-b requires an integer argument"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-b requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-h"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>envDirs</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>.</color><color=#a6e22e>split</color><color=#f8f8f2>(</color><color=#e6db74>","</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>envDirs</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"Only 2 environments supported"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>

          <color=#f8f8f2>home1</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>envDirs</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>envDirs</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>==</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>home2</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>envDirs</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-h requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-m"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>setMaxErrors</color><color=#f8f8f2>(</color><color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>parseInt</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>));</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>NumberFormatException</color> <color=#f8f8f2>nfe</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-m requires an integer argument"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-m requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-s"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argc</color> <color=#f92672><</color> <color=#f8f8f2>nArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>dbNames</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>argc</color><color=#f92672>++]</color><color=#f8f8f2>.</color><color=#a6e22e>split</color><color=#f8f8f2>(</color><color=#e6db74>","</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dbNames</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>!=</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-s requires two database names"</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>file1</color> <color=#f92672>=</color> <color=#f8f8f2>dbNames</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>file2</color> <color=#f92672>=</color> <color=#f8f8f2>dbNames</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-s requires an argument"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-q"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>setVerbose</color><color=#f8f8f2>(</color><color=#66d9ef>false</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#f8f8f2>thisArg</color> <color=#f92672>+</color> <color=#e6db74>" is not a valid option."</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>home1</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"-h is a required argument"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>home2</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>file1</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>printUsage</color><color=#f8f8f2>(</color><color=#e6db74>"2 databases must be specified with 1 environment"</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>printUsage</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>usageString</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#a6e22e>LDiff</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configure a new object with which to compare two databases.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param cfg the configuration parameters for the new object.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>LDiff</color><color=#f8f8f2>(</color><color=#f8f8f2>LDiffConfig</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>super</color><color=#f8f8f2>();</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cfg</color> <color=#f92672>=</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Run an LDiff called from the command line.  What actually gets diffed</color>
<color=#75715e>   * depends upon the args passed in, either 2 environments, databases in two</color>
<color=#75715e>   * separate environments or databases in the same environment.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>EnvironmentConfig</color> <color=#f8f8f2>envConfiguration</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>EnvironmentConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>envConfiguration</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>envConfiguration</color><color=#f8f8f2>.</color><color=#a6e22e>setCachePercent</color><color=#f8f8f2>(</color><color=#ae81ff>40</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>Environment</color> <color=#f8f8f2>env1</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Environment</color><color=#f8f8f2>(</color><color=#f8f8f2>home1</color><color=#f8f8f2>,</color> <color=#f8f8f2>envConfiguration</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>setUseExistingConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>Database</color> <color=#f8f8f2>db2</color><color=#f8f8f2>;</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>home2</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>Environment</color> <color=#f8f8f2>env2</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Environment</color><color=#f8f8f2>(</color><color=#f8f8f2>home2</color><color=#f8f8f2>,</color> <color=#f8f8f2>envConfiguration</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>file1</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* No dbs given, ldiff the environments. */</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>env1</color><color=#f8f8f2>,</color> <color=#f8f8f2>env2</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>env1</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>env2</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>db2</color> <color=#f92672>=</color> <color=#f8f8f2>env2</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>file2</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>db2</color> <color=#f92672>=</color> <color=#f8f8f2>env1</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>file2</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>Database</color> <color=#f8f8f2>db1</color> <color=#f92672>=</color> <color=#f8f8f2>env1</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>file1</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>

    <color=#66d9ef>boolean</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>db1</color><color=#f8f8f2>,</color> <color=#f8f8f2>db2</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>db1</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>db2</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>env1</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A mechanism for efficiently comparing all databases in two quiescent environments.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param env1 a valid, open Environment handle</color>
<color=#75715e>   * @param env2 a valid, open Environment handle</color>
<color=#75715e>   * @return true if all databases in env1 and env2 are identical</color>
<color=#75715e>   * @throws Exception</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env1</color><color=#f8f8f2>,</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env2</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>env1names</color> <color=#f92672>=</color> <color=#f8f8f2>env1</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseNames</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>env2names</color> <color=#f92672>=</color> <color=#f8f8f2>env2</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseNames</color><color=#f8f8f2>();</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>env1names</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>env2names</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>());</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>ret</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"Environments have different number of databases."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color> <color=#f8f8f2>:</color> <color=#f8f8f2>env1names</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>setUseExistingConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>db1</color><color=#f8f8f2>,</color> <color=#f8f8f2>db2</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>db1</color> <color=#f92672>=</color> <color=#f8f8f2>env1</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Should never happen, ExclusiveCreate is false. */</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>db2</color> <color=#f92672>=</color> <color=#f8f8f2>env2</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* There's a database in env1 that's not in env2. */</color>
        <color=#f8f8f2>db1</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#f8f8f2>dbName</color> <color=#f92672>+</color> <color=#e6db74>" does not exist in "</color> <color=#f92672>+</color> <color=#f8f8f2>env2</color><color=#f8f8f2>.</color><color=#a6e22e>getHome</color><color=#f8f8f2>().</color><color=#a6e22e>getName</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>db1</color><color=#f8f8f2>,</color> <color=#f8f8f2>db2</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>db1</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>db2</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ret</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"No differences exist between the two environments."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"Differences exist between the two environments."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A mechanism for efficiently comparing two quiescent databases.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param db1 a valid, open Database handle</color>
<color=#75715e>   * @param db2 a valid, open Database handle</color>
<color=#75715e>   * @return true if the db1 and db2 are identical</color>
<color=#75715e>   * @throws Exception</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db1</color><color=#f8f8f2>,</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>db2</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>BlockBag</color> <color=#f8f8f2>bag</color> <color=#f92672>=</color> <color=#f8f8f2>createBlockBag</color><color=#f8f8f2>(</color><color=#f8f8f2>db2</color><color=#f8f8f2>);</color>
    <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>db1</color><color=#f8f8f2>,</color> <color=#f8f8f2>bag</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getVerbose</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>db1Name</color> <color=#f92672>=</color> <color=#f8f8f2>db1</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseName</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>db2Name</color> <color=#f92672>=</color> <color=#f8f8f2>db2</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseName</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>namesMatch</color> <color=#f92672>=</color> <color=#f8f8f2>db1Name</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>db2Name</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ret</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>namesMatch</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"No differences in "</color> <color=#f92672>+</color> <color=#f8f8f2>db1Name</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#f8f8f2>db1Name</color> <color=#f92672>+</color> <color=#e6db74>" matches "</color> <color=#f92672>+</color> <color=#f8f8f2>db2Name</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>namesMatch</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"Differences in "</color> <color=#f92672>+</color> <color=#f8f8f2>db1Name</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#f8f8f2>db1Name</color> <color=#f92672>+</color> <color=#e6db74>" does not match "</color> <color=#f92672>+</color> <color=#f8f8f2>db2Name</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Do the analysis for these two databases. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getDiffAnalysis</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getDiffRegions</color><color=#f8f8f2>().</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DiffRecordAnalyzer</color><color=#f8f8f2>.</color><color=#a6e22e>doAnalysis</color><color=#f8f8f2>(</color><color=#f8f8f2>db1</color><color=#f8f8f2>,</color> <color=#f8f8f2>db2</color><color=#f8f8f2>,</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>,</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getVerbose</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A mechanism for efficiently comparing two quiescent environments, one local and one on a remote</color>
<color=#75715e>   * machine. This method assumes that only basic, unauthenticated communication is in use.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param env a valid, open Environment handle</color>
<color=#75715e>   * @param addr the address of the remote machine</color>
<color=#75715e>   * @return true if all the databases in both environments are the same</color>
<color=#75715e>   * @throws IOException if a network error occurs</color>
<color=#75715e>   * @throws ProtocolException if an unexpected message is received</color>
<color=#75715e>   * @throws ServiceConnectFailedException if the remote service was busy</color>
<color=#75715e>   * @throws Exception</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>addr</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ProtocolException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ServiceConnectFailedException</color><color=#f8f8f2>,</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>SimpleChannelFactory</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A mechanism for efficiently comparing two quiescent environments, one local and one on a remote</color>
<color=#75715e>   * machine.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param env a valid, open Environment handle</color>
<color=#75715e>   * @param addr the address of the remote machine</color>
<color=#75715e>   * @param dcFactory the channel factory for connection creation</color>
<color=#75715e>   * @return true if all the databases in both environments are the same</color>
<color=#75715e>   * @throws IOException if a network error occurs</color>
<color=#75715e>   * @throws ProtocolException if an unexpected message is received</color>
<color=#75715e>   * @throws ServiceConnectFailedException if the remote service was busy</color>
<color=#75715e>   * @throws Exception</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataChannelFactory</color> <color=#f8f8f2>dcFactory</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ProtocolException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ServiceConnectFailedException</color><color=#f8f8f2>,</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>envNames</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseNames</color><color=#f8f8f2>();</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>channel</color> <color=#f92672>=</color> <color=#f8f8f2>connect</color><color=#f8f8f2>(</color><color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#f8f8f2>dcFactory</color><color=#f8f8f2>);</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>NameIdPair</color><color=#f8f8f2>(</color><color=#e6db74>"Ldiff"</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>),</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>EnvDiff</color><color=#f8f8f2>(),</color> <color=#f8f8f2>channel</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Check that the number of local databases matches the number of</color>
<color=#75715e>     * remote databases.  This is how we detect a remote db that doesn't</color>
<color=#75715e>     * exist locally.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>EnvInfo</color> <color=#f8f8f2>msg</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>,</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>EnvInfo</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>envNames</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>msg</color><color=#f8f8f2>.</color><color=#a6e22e>getNumberOfDBs</color><color=#f8f8f2>());</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>ret</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"Number of databases in local and remote environments "</color> <color=#f92672>+</color> <color=#e6db74>"does not match."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>channel</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>

    <color=#75715e>/*</color>
<color=#75715e>     * Run LDiff for every database in the local environment.  If they all</color>
<color=#75715e>     * succeed, the environments match.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>dbName</color> <color=#f8f8f2>:</color> <color=#f8f8f2>envNames</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>channel</color> <color=#f92672>=</color> <color=#f8f8f2>connect</color><color=#f8f8f2>(</color><color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#f8f8f2>dcFactory</color><color=#f8f8f2>);</color>

      <color=#f8f8f2>DatabaseConfig</color> <color=#f8f8f2>dbConfig</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseConfig</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>dbConfig</color><color=#f8f8f2>.</color><color=#a6e22e>setReadOnly</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>setUseExistingConfig</color><color=#f8f8f2>(</color><color=#f8f8f2>dbConfig</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>db</color> <color=#f92672>=</color> <color=#f8f8f2>env</color><color=#f8f8f2>.</color><color=#a6e22e>openDatabase</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbName</color><color=#f8f8f2>,</color> <color=#f8f8f2>dbConfig</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>DatabaseNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/* Should never happen, ExclusiveCreate is false. */</color>
        <color=#66d9ef>throw</color> <color=#f8f8f2>EnvironmentFailureException</color><color=#f8f8f2>.</color><color=#a6e22e>unexpectedException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>channel</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ProtocolException</color> <color=#f8f8f2>pe</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#f8f8f2>dbName</color> <color=#f92672>+</color> <color=#e6db74>" does not exist in remote environment."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>.</color><color=#a6e22e>isOpen</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>channel</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ret</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"Local environment matches remote."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#e6db74>"Local environment does not match remote."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A mechanism for efficiently comparing two quiescent databases, one of which resides on a remote</color>
<color=#75715e>   * machine.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param db a valid, open Database handle</color>
<color=#75715e>   * @param addr the address of the remote host</color>
<color=#75715e>   * @param dcFactory the channel factory for connection creation</color>
<color=#75715e>   * @return true if the local Database and the remote Database are identical</color>
<color=#75715e>   * @throws IOException if a network error occurs</color>
<color=#75715e>   * @throws ProtocolException if the remote database does not exist</color>
<color=#75715e>   * @throws ServiceConnectFailedException if the remote service is busy</color>
<color=#75715e>   * @throws Exception</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataChannelFactory</color> <color=#f8f8f2>dcFactory</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ProtocolException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ServiceConnectFailedException</color><color=#f8f8f2>,</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>channel</color> <color=#f92672>=</color> <color=#f8f8f2>connect</color><color=#f8f8f2>(</color><color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#f8f8f2>dcFactory</color><color=#f8f8f2>);</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>channel</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>channel</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>channel</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>final</color> <color=#f8f8f2>Protocol</color> <color=#f8f8f2>protocol</color> <color=#f92672>=</color>
        <color=#66d9ef>new</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>NameIdPair</color><color=#f8f8f2>(</color><color=#e6db74>"Ldiff"</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>),</color> <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironment</color><color=#f8f8f2>()));</color>
    <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>DbBlocks</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseName</color><color=#f8f8f2>(),</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getBlockSize</color><color=#f8f8f2>()),</color> <color=#f8f8f2>channel</color><color=#f8f8f2>);</color>

    <color=#75715e>/*</color>
<color=#75715e>     * A protocol exception will be thrown here if the remote env does not</color>
<color=#75715e>     * have a database of the same name.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>,</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>BlockListStart</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>BlockBag</color> <color=#f8f8f2>bag</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>BlockBag</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>BlockInfo</color> <color=#f8f8f2>blockMsg</color><color=#f8f8f2>;</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>blockMsg</color> <color=#f92672>=</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>channel</color><color=#f8f8f2>,</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>BlockInfo</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>bag</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>blockMsg</color><color=#f8f8f2>.</color><color=#a6e22e>getBlock</color><color=#f8f8f2>());</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ProtocolException</color> <color=#f8f8f2>pe</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pe</color><color=#f8f8f2>.</color><color=#a6e22e>getUnexpectedMessage</color><color=#f8f8f2>().</color><color=#a6e22e>getOp</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>Protocol</color><color=#f8f8f2>.</color><color=#a6e22e>BLOCK_LIST_END</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>pe</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>boolean</color> <color=#f8f8f2>match</color> <color=#f92672>=</color> <color=#f8f8f2>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>bag</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>match</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>" matches remote database."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>output</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getDatabaseName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>"does not match remote database."</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getDiffAnalysis</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getDiffRegions</color><color=#f8f8f2>().</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>DiffRecordAnalyzer</color><color=#f8f8f2>.</color><color=#a6e22e>doAnalysis</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>protocol</color><color=#f8f8f2>,</color> <color=#f8f8f2>channel</color><color=#f8f8f2>,</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>,</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getVerbose</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>protocol</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>Done</color><color=#f8f8f2>(),</color> <color=#f8f8f2>channel</color><color=#f8f8f2>);</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>match</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * A mechanism for efficiently comparing two quiescent databases, typically residing on different</color>
<color=#75715e>   * machines connected by a network.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param db a valid, open Database handle</color>
<color=#75715e>   * @param blkBag a bag of blocks to diff against db.</color>
<color=#75715e>   * @return true if the two comparing databases are identical.</color>
<color=#75715e>   * @throws Exception</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>diff</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>,</color> <color=#f8f8f2>BlockBag</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Suppose the two comparing databases are identical, by default. */</color>
    <color=#66d9ef>boolean</color> <color=#f8f8f2>identical</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#75715e>/*</color>
<color=#75715e>     * window represents a BlockSize window into db. Initialize it to</color>
<color=#75715e>     * represent the block starting at the first key in db.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#66d9ef>long</color> <color=#f8f8f2>pos</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>numKeys</color> <color=#f92672>=</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getBlockSize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Window</color> <color=#f8f8f2>window</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Window</color><color=#f8f8f2>(</color><color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>numKeys</color><color=#f8f8f2>);</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>errors</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>maxerrors</color> <color=#f92672>=</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getMaxErrors</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>tracker</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DiffTracker</color><color=#f8f8f2>(</color><color=#f8f8f2>numKeys</color><color=#f8f8f2>);</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>getChecksum</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * Find the block in the bag whose checksum and md5 match the</color>
<color=#75715e>       * current window. This block, if it exists, is match.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>Block</color> <color=#f8f8f2>match</color> <color=#f92672>=</color> <color=#f8f8f2>findMatch</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironment</color><color=#f8f8f2>(),</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>,</color> <color=#f8f8f2>window</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>match</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>setBlockDiffBegin</color><color=#f8f8f2>(</color><color=#f8f8f2>blkBag</color><color=#f8f8f2>.</color><color=#a6e22e>getBlock</color><color=#f8f8f2>(),</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>.</color><color=#a6e22e>getBlockIndex</color><color=#f8f8f2>());</color>
        <color=#75715e>/* Remove match and any earlier blocks from the bag. */</color>
        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Block</color><color=#f92672>></color> <color=#f8f8f2>removed</color> <color=#f92672>=</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>.</color><color=#a6e22e>remove</color><color=#f8f8f2>(</color><color=#f8f8f2>match</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>removed</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>identical</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>errors</color> <color=#f92672>+=</color> <color=#f8f8f2>removed</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>calBlockDiffSize</color><color=#f8f8f2>(</color><color=#f8f8f2>blkBag</color><color=#f8f8f2>.</color><color=#a6e22e>getBlockIndex</color><color=#f8f8f2>());</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>maxerrors</color> <color=#f92672>></color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>errors</color> <color=#f92672>>=</color> <color=#f8f8f2>maxerrors</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>addDiffRegion</color><color=#f8f8f2>(</color><color=#f8f8f2>window</color><color=#f8f8f2>);</color>

        <color=#75715e>/* Advance the window beyond the just matched block. */</color>
        <color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>nextWindow</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>pos</color> <color=#f92672>+=</color> <color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>

        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#f8f8f2>identical</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>envLogMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironment</color><color=#f8f8f2>()),</color>
          <color=#e6db74>"Unmatched block at position "</color> <color=#f92672>+</color> <color=#f8f8f2>pos</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>errors</color><color=#f92672>++</color><color=#f8f8f2>;</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>maxerrors</color> <color=#f92672>></color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>errors</color> <color=#f92672>>=</color> <color=#f8f8f2>maxerrors</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/* Roll the window forward by one key. */</color>
      <color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>rollWindow</color><color=#f8f8f2>();</color>

      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>getChecksum</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>pos</color><color=#f92672>++</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>getChecksum</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#75715e>/*</color>
<color=#75715e>       * We ran out of blocks in blkBag before we got to the end of db.</color>
<color=#75715e>       * Update the unmatched key range.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>envLogMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironment</color><color=#f8f8f2>()),</color>
          <color=#e6db74>"Local Db has addtional records starting at "</color> <color=#f92672>+</color> <color=#f8f8f2>pos</color> <color=#f92672>+</color> <color=#e6db74>"."</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>identical</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>addWindowAdditionalDiffs</color><color=#f8f8f2>(</color><color=#f8f8f2>window</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>blkBag</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#75715e>/* All remaining blocks in the bag are unmatched. */</color>
      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Block</color> <color=#f8f8f2>b</color> <color=#f8f8f2>:</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>envLogMsg</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironment</color><color=#f8f8f2>()),</color>
            <color=#e6db74>"Unmatched remote block: "</color> <color=#f92672>+</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>identical</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>addBlockBagAdditionalDiffs</color><color=#f8f8f2>(</color><color=#f8f8f2>window</color><color=#f8f8f2>,</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>identical</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/* For unit test only. */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>MismatchedRegion</color><color=#f92672>></color> <color=#a6e22e>getDiffRegions</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tracker</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>tracker</color><color=#f8f8f2>.</color><color=#a6e22e>getDiffRegions</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Find the block in the bag whose rolling checksum and md5 match the given window. The md5 for</color>
<color=#75715e>   * the window is computed lazily, since it's more expensive to compute. There is a slight chance</color>
<color=#75715e>   * that multiple blocks in the bag will match the checksum and the md5 hash, return the first such</color>
<color=#75715e>   * block added to the bag in that case.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param blkBag a bag of blocks to search for a match</color>
<color=#75715e>   * @param window the block sized window of the db we're diffing</color>
<color=#75715e>   * @return A block which matches the window's checksum and the window's md5 hash, or null if no</color>
<color=#75715e>   *     block matches.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>Block</color> <color=#a6e22e>findMatch</color><color=#f8f8f2>(</color><color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#f8f8f2>BlockBag</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>,</color> <color=#f8f8f2>Window</color> <color=#f8f8f2>window</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Block</color><color=#f92672>></color> <color=#f8f8f2>matches</color> <color=#f92672>=</color> <color=#f8f8f2>blkBag</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>getChecksum</color><color=#f8f8f2>());</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>matches</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/* Delay the computation of the hash until we know we need it. */</color>
    <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>md5</color> <color=#f92672>=</color> <color=#f8f8f2>window</color><color=#f8f8f2>.</color><color=#a6e22e>getMd5Hash</color><color=#f8f8f2>();</color>
    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Block</color> <color=#f8f8f2>b</color> <color=#f8f8f2>:</color> <color=#f8f8f2>matches</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color><color=#f8f8f2>.</color><color=#a6e22e>getMd5Hash</color><color=#f8f8f2>(),</color> <color=#f8f8f2>md5</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>envLogMsg</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>),</color>
          <color=#e6db74>"Found a remote block whose rolling checksum "</color> <color=#f92672>+</color> <color=#e6db74>"matches LB but md5 hash doesn't:"</color> <color=#f92672>+</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#75715e>/* No matches. */</color>
    <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Create a bag of blocks from the records in a given database, using the configuration parameters</color>
<color=#75715e>   * specified when the LDiff object was created.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param db the database from which to create the bag of blocks</color>
<color=#75715e>   * @return a bag of blocks built from the records in db</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>BlockBag</color> <color=#a6e22e>createBlockBag</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>BlockBag</color> <color=#f8f8f2>bag</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>BlockBag</color><color=#f8f8f2>();</color>

    <color=#75715e>/* Retrieve the key/data pairs and fill into blocks. */</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>Block</color><color=#f92672>></color> <color=#f8f8f2>iter</color> <color=#f92672>=</color> <color=#f8f8f2>iterator</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>iter</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>bag</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>iter</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>end</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>envLogMsg</color><color=#f8f8f2>(</color>
        <color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>FINE</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironment</color><color=#f8f8f2>()),</color>
        <color=#e6db74>"Block bag created in : "</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>end</color> <color=#f92672>-</color> <color=#f8f8f2>start</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#e6db74>" ms."</color><color=#f8f8f2>);</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>bag</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>Block</color><color=#f92672>></color> <color=#a6e22e>iterator</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>LDiffIterator</color><color=#f8f8f2>(</color><color=#f8f8f2>db</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Connect to addr and perform a service handshake. Retry as specified by the config object.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param addr the remote address to connect to</color>
<color=#75715e>   * @param dcFactory the channel factory for connection creation</color>
<color=#75715e>   * @return an open DataChannel</color>
<color=#75715e>   * @throws IOException if an exception occurs with the DataChannel</color>
<color=#75715e>   * @throws ServiceConnectFailedException if the remote service is busy</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>DataChannel</color> <color=#a6e22e>connect</color><color=#f8f8f2>(</color><color=#f8f8f2>InetSocketAddress</color> <color=#f8f8f2>addr</color><color=#f8f8f2>,</color> <color=#f8f8f2>DataChannelFactory</color> <color=#f8f8f2>dcFactory</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>,</color> <color=#f8f8f2>ServiceConnectFailedException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>triesLeft</color> <color=#f92672>=</color> <color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getMaxConnectionAttempts</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ret</color> <color=#f92672>=</color>
            <color=#f8f8f2>dcFactory</color><color=#f8f8f2>.</color><color=#a6e22e>connect</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>addr</color><color=#f8f8f2>,</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>ConnectOptions</color><color=#f8f8f2>()</color>
                    <color=#f8f8f2>.</color><color=#a6e22e>setBlocking</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color>
                    <color=#f8f8f2>.</color><color=#a6e22e>setTcpNoDelay</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color>
                    <color=#f8f8f2>.</color><color=#a6e22e>setOpenTimeout</color><color=#f8f8f2>(</color><color=#f8f8f2>SOCKET_TIMEOUT_MS</color><color=#f8f8f2>)</color>
                    <color=#f8f8f2>.</color><color=#a6e22e>setReadTimeout</color><color=#f8f8f2>(</color><color=#f8f8f2>SOCKET_TIMEOUT_MS</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>ServiceDispatcher</color><color=#f8f8f2>.</color><color=#a6e22e>doServiceHandshake</color><color=#f8f8f2>(</color><color=#f8f8f2>ret</color><color=#f8f8f2>,</color> <color=#f8f8f2>LDiffService</color><color=#f8f8f2>.</color><color=#a6e22e>NAME</color><color=#f8f8f2>);</color>
        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ServiceConnectFailedException</color> <color=#f8f8f2>scfe</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>ret</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>ret</color><color=#f8f8f2>.</color><color=#a6e22e>isOpen</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>ret</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Unable to connect because the remote service is busy.  If</color>
<color=#75715e>         * the user requested it, keep re-trying.  triesLeft == -1</color>
<color=#75715e>         * means never abort.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>triesLeft</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>triesLeft</color><color=#f92672>--</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getWaitIfBusy</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>triesLeft</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>scfe</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>output</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getVerbose</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * The exception that is thrown when a database diff detects differences.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>TODO: we start simple, by just using it as a boolean indicator and perhaps a block id for</color>
<color=#75715e>   * unit test purposes? As as the local processing gains in sophistication will provide block and</color>
<color=#75715e>   * key (insert, update, delete) granularity identification of differences.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"serial"</color><color=#f8f8f2>)</color>
  <color=#66d9ef>class</color> <color=#a6e22e>MismatchException</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>MismatchException</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>message</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>message</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>LDiffIterator</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>Block</color><color=#f92672>></color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Block</color> <color=#f8f8f2>cached</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Cursor</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>DatabaseEntry</color> <color=#f8f8f2>lastKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastData</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>more</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>numKeys</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>LDiffIterator</color><color=#f8f8f2>(</color><color=#f8f8f2>Database</color> <color=#f8f8f2>db</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>numKeys</color> <color=#f92672>=</color> <color=#f8f8f2>LDiff</color><color=#f8f8f2>.</color><color=#a6e22e>this</color><color=#f8f8f2>.</color><color=#a6e22e>cfg</color><color=#f8f8f2>.</color><color=#a6e22e>getBlockSize</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>cached</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>more</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
      <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>db</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>;</color>

      <color=#75715e>/* Prime the pump, get the first block in cached and set more. */</color>
      <color=#f8f8f2>next</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>hasNext</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>more</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>remove</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Block</color> <color=#a6e22e>next</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>more</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NoSuchElementException</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>

      <color=#75715e>/*</color>
<color=#75715e>       * We don't want to return a block with 0 keys, but we can't know</color>
<color=#75715e>       * ahead of time whether the block will have any keys and the user</color>
<color=#75715e>       * likely called hasNext() already.  So when asked for block i, we</color>
<color=#75715e>       * cache block i+1, check whether it's empty and return the</color>
<color=#75715e>       * previously cached block i.  If block i+1 is empty, the next call</color>
<color=#75715e>       * to hasNext() will return false and the empty block won't be</color>
<color=#75715e>       * returned.</color>
<color=#75715e>       */</color>
      <color=#f8f8f2>cursor</color> <color=#f92672>=</color> <color=#f8f8f2>db</color><color=#f8f8f2>.</color><color=#a6e22e>openCursor</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>lastKey</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>lastKey</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>lastData</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DatabaseEntry</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getSearchBoth</color><color=#f8f8f2>(</color><color=#f8f8f2>lastKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastData</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>Block</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>cached</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>cached</color> <color=#f92672>=</color> <color=#f8f8f2>LDiffUtil</color><color=#f8f8f2>.</color><color=#a6e22e>readBlock</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>,</color> <color=#f8f8f2>cursor</color><color=#f8f8f2>,</color> <color=#f8f8f2>numKeys</color><color=#f8f8f2>);</color>
      <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cached</color><color=#f8f8f2>.</color><color=#a6e22e>numRecords</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>more</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>getCurrent</color><color=#f8f8f2>(</color><color=#f8f8f2>lastKey</color><color=#f8f8f2>,</color> <color=#f8f8f2>lastData</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>}</color>
      <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>finalize</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>Throwable</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>cursor</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>finalize</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>