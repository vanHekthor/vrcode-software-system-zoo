<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.utilint</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * TestHook is used to induce testing behavior that can't be provoked externally. For example, unit</color>
<color=#75715e> * tests may use hooks to throw IOExceptions, or to cause waiting behavior.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>To use this, a unit test should implement TestHook with a class that overrides the desired</color>
<color=#75715e> * method. The desired code will have a method that allows the unit test to specify a hook, and will</color>
<color=#75715e> * execute the hook if it is non-null. This should be done within an assert like so:</color>
<color=#75715e> *</color>
<color=#75715e> * <p>assert TestHookExecute(myTestHook);</color>
<color=#75715e> *</color>
<color=#75715e> * <p>See Tree.java for examples.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>TestHook</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>{</color>

  <color=#66d9ef>void</color> <color=#a6e22e>hookSetup</color><color=#f8f8f2>();</color>

  <color=#66d9ef>void</color> <color=#a6e22e>doIOHook</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>;</color>

  <color=#66d9ef>void</color> <color=#a6e22e>doHook</color><color=#f8f8f2>();</color>

  <color=#66d9ef>void</color> <color=#a6e22e>doHook</color><color=#f8f8f2>(</color><color=#f8f8f2>T</color> <color=#f8f8f2>obj</color><color=#f8f8f2>);</color>

  <color=#f8f8f2>T</color> <color=#a6e22e>getHookValue</color><color=#f8f8f2>();</color>
<color=#f8f8f2>}</color>