<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.utilint.net</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.net.DataChannel</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.nio.channels.SocketChannel</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An abstract class that utilizes a delegate socketChannel for network I/O, but which provides an</color>
<color=#75715e> * abstract ByteChannel interface for callers. This allows more interesting communication mechanisms</color>
<color=#75715e> * to be introduced.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>AbstractDataChannel</color> <color=#66d9ef>implements</color> <color=#f8f8f2>DataChannel</color> <color=#f8f8f2>{</color>

  <color=#75715e>/** The underlying socket channel */</color>
  <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>SocketChannel</color> <color=#f8f8f2>socketChannel</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Constructor for sub-classes.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param socketChannel The underlying SocketChannel over which data will be sent. This should be</color>
<color=#75715e>   *     the lowest-level socket so that select operations can be performed on it.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>protected</color> <color=#a6e22e>AbstractDataChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>SocketChannel</color> <color=#f8f8f2>socketChannel</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>socketChannel</color> <color=#f92672>=</color> <color=#f8f8f2>socketChannel</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Accessor for the underlying SocketChannel Callers may used the returned SocketChannel in order</color>
<color=#75715e>   * to query/modify connections attributes, but may not directly close, read from or write to the</color>
<color=#75715e>   * SocketChannel.</color>
<color=#75715e>   */</color>
  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>SocketChannel</color> <color=#a6e22e>getSocketChannel</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>socketChannel</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>