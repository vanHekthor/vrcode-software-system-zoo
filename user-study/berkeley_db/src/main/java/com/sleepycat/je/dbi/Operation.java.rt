<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.dbi</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An enumeration of different api call sources for replication, currently for debugging. This is</color>
<color=#75715e> * also intended to support the future possibility of providing application level visibility into</color>
<color=#75715e> * the replication operation stream.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Operation</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Operation</color> <color=#f8f8f2>PUT</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Operation</color><color=#f8f8f2>((</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#e6db74>"PUT"</color><color=#f8f8f2>);</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Operation</color> <color=#f8f8f2>NO_OVERWRITE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Operation</color><color=#f8f8f2>((</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#e6db74>"NO_OVERWRITE"</color><color=#f8f8f2>);</color>
  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Operation</color> <color=#f8f8f2>PLACEHOLDER</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Operation</color><color=#f8f8f2>((</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#e6db74>"PLACEHOLDER"</color><color=#f8f8f2>);</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Operation</color><color=#f92672>[]</color> <color=#f8f8f2>ALL_OPS</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#f8f8f2>PUT</color><color=#f8f8f2>,</color> <color=#f8f8f2>NO_OVERWRITE</color><color=#f8f8f2>,</color> <color=#f8f8f2>PLACEHOLDER</color><color=#f8f8f2>};</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>MAX_OP</color> <color=#f92672>=</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color> <color=#f8f8f2>MIN_OP</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>byte</color> <color=#f8f8f2>op</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>Operation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{}</color>

  <color=#66d9ef>private</color> <color=#a6e22e>Operation</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color> <color=#f8f8f2>op</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>op</color> <color=#f92672>=</color> <color=#f8f8f2>op</color><color=#f8f8f2>;</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>name</color> <color=#f92672>=</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getContentSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Serialize this object into the buffer.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param buffer is the destination buffer</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>writeToBuffer</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>buffer</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>op</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Operation</color> <color=#a6e22e>readFromBuffer</color><color=#f8f8f2>(</color><color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>byte</color> <color=#f8f8f2>opNum</color> <color=#f92672>=</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>opNum</color> <color=#f92672>>=</color> <color=#f8f8f2>MIN_OP</color> <color=#f92672>&&</color> <color=#f8f8f2>opNum</color> <color=#f92672><=</color> <color=#f8f8f2>MAX_OP</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>ALL_OPS</color><color=#f92672>[</color><color=#f8f8f2>opNum</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Operation</color><color=#f8f8f2>(</color><color=#f8f8f2>opNum</color><color=#f8f8f2>,</color> <color=#e6db74>"UNKNOWN "</color> <color=#f92672>+</color> <color=#f8f8f2>opNum</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#a6e22e>@Override</color>
  <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>