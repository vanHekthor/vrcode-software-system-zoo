<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.util</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.config.EnvironmentParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentFailureReason</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.dbi.EnvironmentImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.FileManager</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.log.entry.RestoreRequired</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.util.verify.VerifierUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.CmdUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.PropUtil</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.FileInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.FileNotFoundException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.ByteBuffer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.channels.FileChannel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Level</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Verifies the checksums in one or more log files.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>This class may be instantiated and used programmatically, or used as a command line utility as</color>
<color=#75715e> * described below.</color>
<color=#75715e> *</color>
<color=#75715e> * <pre></color>
<color=#75715e> * usage: java { com.sleepycat.je.util.DbVerifyLog |</color>
<color=#75715e> *               -jar je-&lt;version&gt;.jar DbVerifyLog }</color>
<color=#75715e> *  [-h &lt;dir&gt;]      # environment home directory</color>
<color=#75715e> *  [-s &lt;file&gt;]     # starting (minimum) file number</color>
<color=#75715e> *  [-e &lt;file&gt;]     # ending (one past the maximum) file number</color>
<color=#75715e> *  [-d &lt;millis&gt;]   # delay in ms between reads (default is zero)</color>
<color=#75715e> *  [-V]                  # print JE version number"</color>
<color=#75715e> * </pre></color>
<color=#75715e> *</color>
<color=#75715e> * <p>All arguments are optional. The current directory is used if {@code -h} is not specified. File</color>
<color=#75715e> * numbers may be specified in hex (preceded by {@code 0x}) or decimal format. For convenience when</color>
<color=#75715e> * copy/pasting from other output, LSN format (&lt;file&gt;/&lt;offset&gt;) is also allowed.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>DbVerifyLog</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>USAGE</color> <color=#f92672>=</color>
      <color=#e6db74>"usage: "</color>
          <color=#f92672>+</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getJavaCommand</color><color=#f8f8f2>(</color><color=#f8f8f2>DbVerifyLog</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>)</color>
          <color=#f92672>+</color> <color=#e6db74>"\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"   [-h <dir>]       # environment home directory\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"   [-s <file>]      # starting (minimum) file number\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"   [-e <file>]      # ending (one past the maximum) file number\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"   [-d <millis>]    # delay in ms between reads (default is zero)\n"</color>
          <color=#f92672>+</color> <color=#e6db74>"   [-V]             # print JE version number"</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>readBufferSize</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>stopVerify</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

  <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>delayMs</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a utility object for verifying the checksums in log files.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>The read buffer size is {@link EnvironmentConfig#LOG_ITERATOR_READ_SIZE}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param env the {@code Environment} associated with the log.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>DbVerifyLog</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Creates a utility object for verifying log files.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param env the {@code Environment} associated with the log.</color>
<color=#75715e>   * @param readBufferSize is the buffer size to use. If a value less than or equal to zero is</color>
<color=#75715e>   *     specified, {@link EnvironmentConfig#LOG_ITERATOR_READ_SIZE} is used.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>DbVerifyLog</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Environment</color> <color=#f8f8f2>env</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>readBufferSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>DbInternal</color><color=#f8f8f2>.</color><color=#a6e22e>getNonNullEnvImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>env</color><color=#f8f8f2>),</color> <color=#f8f8f2>readBufferSize</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>DbVerifyLog</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>readBufferSize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>readBufferSize</color> <color=#f92672>=</color>
        <color=#f8f8f2>(</color><color=#f8f8f2>readBufferSize</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color>
            <color=#f92672>?</color> <color=#f8f8f2>readBufferSize</color>
            <color=#f8f8f2>:</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#f8f8f2>EnvironmentParams</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_ITERATOR_READ_SIZE</color><color=#f8f8f2>);</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>envImpl</color> <color=#f92672>=</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Verifies all log files in the environment.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @throws LogVerificationException if a checksum cannot be verified or a log entry is determined</color>
<color=#75715e>   *     to be invalid by examining its contents.</color>
<color=#75715e>   * @throws IOException if an IOException occurs while reading a log file.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>verifyAll</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>LogVerificationException</color><color=#f8f8f2>,</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* The same reason with BtreeVerifier.verifyAll. */</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>stopVerify</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>envLogMsg</color><color=#f8f8f2>(</color><color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>INFO</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Start verify of data files"</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>verify</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>envLogMsg</color><color=#f8f8f2>(</color><color=#f8f8f2>Level</color><color=#f8f8f2>.</color><color=#a6e22e>INFO</color><color=#f8f8f2>,</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"End verify of data files"</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Verifies the given range of log files in the environment.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param startFile is the lowest numbered log file to be verified.</color>
<color=#75715e>   * @param endFile is one greater than the highest numbered log file to be verified.</color>
<color=#75715e>   * @throws LogVerificationException if a checksum cannot be verified or a log entry is determined</color>
<color=#75715e>   *     to be invalid by examining its contents.</color>
<color=#75715e>   * @throws IOException if an IOException occurs while reading a log file.</color>
<color=#75715e>   * @throws EnvironmentFailureException if an unexpected, internal or environment-wide failure</color>
<color=#75715e>   *     occurs.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>verify</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>startFile</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>endFile</color><color=#f8f8f2>)</color>
      <color=#66d9ef>throws</color> <color=#f8f8f2>LogVerificationException</color><color=#f8f8f2>,</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>FileManager</color> <color=#f8f8f2>fileManager</color> <color=#f92672>=</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getFileManager</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>File</color> <color=#f8f8f2>homeDir</color> <color=#f92672>=</color> <color=#f8f8f2>envImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getEnvironmentHome</color><color=#f8f8f2>();</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>fileNames</color> <color=#f92672>=</color> <color=#f8f8f2>fileManager</color><color=#f8f8f2>.</color><color=#a6e22e>listFileNames</color><color=#f8f8f2>(</color><color=#f8f8f2>startFile</color><color=#f8f8f2>,</color> <color=#f8f8f2>endFile</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>ByteBuffer</color> <color=#f8f8f2>buf</color> <color=#f92672>=</color> <color=#f8f8f2>ByteBuffer</color><color=#f8f8f2>.</color><color=#a6e22e>allocateDirect</color><color=#f8f8f2>(</color><color=#f8f8f2>readBufferSize</color><color=#f8f8f2>);</color>

      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>fileName</color> <color=#f8f8f2>:</color> <color=#f8f8f2>fileNames</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>/*</color>
<color=#75715e>         * When env is closed, the current executing dataVerifier task</color>
<color=#75715e>         * should be canceled asap. So when env is closed,</color>
<color=#75715e>         * setStopVerifyFlag() is called in DataVerifier.shutdown().</color>
<color=#75715e>         * Here stopVerify is checked to determine whether dataVerifier</color>
<color=#75715e>         * task continues.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>stopVerify</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>return</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>File</color> <color=#f8f8f2>file</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>homeDir</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>);</color>
        <color=#75715e>/*</color>
<color=#75715e>         * If JE enables Cleaner, then it is possible that Cleaner</color>
<color=#75715e>         * deletes one or more files, whose fileNum is between</color>
<color=#75715e>         * startFile and endFile, during the for-loop. So for each</color>
<color=#75715e>         * loop, the current 'file' may be deleted by the Cleaner, then</color>
<color=#75715e>         * 'new FileInputStream' will throw FileNotFoundException.</color>
<color=#75715e>         *</color>
<color=#75715e>         * In addition, now JE has a daemon thread to detect the</color>
<color=#75715e>         * unexpected log file deletion. So if FileNotFoundException is</color>
<color=#75715e>         * caused by unexpected log deletion, then that daemon thread</color>
<color=#75715e>         * will catch this abnormal situation. Here, we just ignore</color>
<color=#75715e>         * this exception.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>FileInputStream</color> <color=#f8f8f2>fis</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>fis</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FileInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>file</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>FileNotFoundException</color> <color=#f8f8f2>fne</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>final</color> <color=#f8f8f2>FileChannel</color> <color=#f8f8f2>fic</color> <color=#f92672>=</color> <color=#f8f8f2>fis</color><color=#f8f8f2>.</color><color=#a6e22e>getChannel</color><color=#f8f8f2>();</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>LogVerificationReadableByteChannel</color> <color=#f8f8f2>vic</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>LogVerificationReadableByteChannel</color><color=#f8f8f2>(</color><color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>fic</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileName</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>IOException</color> <color=#f8f8f2>ioe</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
          <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>vic</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>buf</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>clear</color><color=#f8f8f2>();</color>

            <color=#75715e>/* Return as soon as possible if shutdown. */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>stopVerify</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>return</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>delayMs</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Thread</color><color=#f8f8f2>.</color><color=#a6e22e>sleep</color><color=#f8f8f2>(</color><color=#f8f8f2>delayMs</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InterruptedException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThreadInterruptedException</color><color=#f8f8f2>(</color><color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
              <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>ioe</color> <color=#f92672>=</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
          <color=#66d9ef>throw</color> <color=#f8f8f2>ioe</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>

          <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#75715e>/*</color>
<color=#75715e>             * vic.close aims to close associated channel fic, but</color>
<color=#75715e>             * it may be redundant because fis.close also closes fic.</color>
<color=#75715e>             */</color>
            <color=#f8f8f2>fis</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>vic</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
          <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ioe</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
              <color=#66d9ef>throw</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
          <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>LogVerificationException</color> <color=#f8f8f2>lve</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>VerifierUtils</color><color=#f8f8f2>.</color><color=#a6e22e>createMarkerFileFromException</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>RestoreRequired</color><color=#f8f8f2>.</color><color=#a6e22e>FailureType</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_CHECKSUM</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>lve</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color>
          <color=#f8f8f2>EnvironmentFailureReason</color><color=#f8f8f2>.</color><color=#a6e22e>LOG_CHECKSUM</color><color=#f8f8f2>);</color>

      <color=#66d9ef>throw</color> <color=#f8f8f2>lve</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>argv</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>try</color> <color=#f8f8f2>{</color>

      <color=#f8f8f2>File</color> <color=#f8f8f2>envHome</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#e6db74>"."</color><color=#f8f8f2>);</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>startFile</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>endFile</color> <color=#f92672>=</color> <color=#f8f8f2>Long</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>;</color>
      <color=#66d9ef>long</color> <color=#f8f8f2>delayMs</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

      <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>whichArg</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>whichArg</color> <color=#f92672><</color> <color=#f8f8f2>argv</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>whichArg</color> <color=#f92672>+=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>nextArg</color> <color=#f92672>=</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#f8f8f2>whichArg</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-h"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>whichArg</color><color=#f92672>++</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>envHome</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getArg</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f8f8f2>,</color> <color=#f8f8f2>whichArg</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-s"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>whichArg</color><color=#f92672>++</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>String</color> <color=#f8f8f2>arg</color> <color=#f92672>=</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getArg</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f8f8f2>,</color> <color=#f8f8f2>whichArg</color><color=#f8f8f2>);</color>
          <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>slashOff</color> <color=#f92672>=</color> <color=#f8f8f2>arg</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>"/"</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>slashOff</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>arg</color> <color=#f92672>=</color> <color=#f8f8f2>arg</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>slashOff</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>startFile</color> <color=#f92672>=</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>readLongNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>arg</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-e"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>whichArg</color><color=#f92672>++</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>String</color> <color=#f8f8f2>arg</color> <color=#f92672>=</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getArg</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f8f8f2>,</color> <color=#f8f8f2>whichArg</color><color=#f8f8f2>);</color>
          <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>slashOff</color> <color=#f92672>=</color> <color=#f8f8f2>arg</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>"/"</color><color=#f8f8f2>);</color>
          <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>slashOff</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>arg</color> <color=#f92672>=</color> <color=#f8f8f2>arg</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>slashOff</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>}</color>
          <color=#f8f8f2>endFile</color> <color=#f92672>=</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>readLongNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>arg</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-d"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>whichArg</color><color=#f92672>++</color><color=#f8f8f2>;</color>
          <color=#f8f8f2>delayMs</color> <color=#f92672>=</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>readLongNumber</color><color=#f8f8f2>(</color><color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getArg</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f8f8f2>,</color> <color=#f8f8f2>whichArg</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nextArg</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"-V"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>JEVersion</color><color=#f8f8f2>.</color><color=#a6e22e>CURRENT_VERSION</color><color=#f8f8f2>);</color>
          <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
          <color=#f8f8f2>printUsageAndExit</color><color=#f8f8f2>(</color><color=#e6db74>"Unknown argument: "</color> <color=#f92672>+</color> <color=#f8f8f2>nextArg</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
      <color=#f8f8f2>}</color>

      <color=#66d9ef>final</color> <color=#f8f8f2>EnvironmentImpl</color> <color=#f8f8f2>envImpl</color> <color=#f92672>=</color> <color=#f8f8f2>CmdUtil</color><color=#f8f8f2>.</color><color=#a6e22e>makeUtilityEnvironment</color><color=#f8f8f2>(</color><color=#f8f8f2>envHome</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color> <color=#75715e>/*readOnly*/</color><color=#f8f8f2>);</color>
      <color=#66d9ef>final</color> <color=#f8f8f2>DbVerifyLog</color> <color=#f8f8f2>verifier</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DbVerifyLog</color><color=#f8f8f2>(</color><color=#f8f8f2>envImpl</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
      <color=#75715e>/* Set the delay time specified by -d flag. */</color>
      <color=#f8f8f2>verifier</color><color=#f8f8f2>.</color><color=#a6e22e>setReadDelay</color><color=#f8f8f2>(</color><color=#f8f8f2>delayMs</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>MILLISECONDS</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>verifier</color><color=#f8f8f2>.</color><color=#a6e22e>verify</color><color=#f8f8f2>(</color><color=#f8f8f2>startFile</color><color=#f8f8f2>,</color> <color=#f8f8f2>endFile</color><color=#f8f8f2>);</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Throwable</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
      <color=#f8f8f2>printUsageAndExit</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>printUsageAndExit</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>msg</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>msg</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>msg</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>USAGE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>exit</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Configures the delay between file reads during verification. A delay between reads is needed to</color>
<color=#75715e>   * allow other JE components, such as HA, to make timely progress.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>By default there is no read delay (it is zero).</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Note that when using the {@link EnvironmentConfig#ENV_RUN_VERIFIER background data</color>
<color=#75715e>   * verifier}, the delay between reads is {@link EnvironmentConfig#VERIFY_LOG_READ_DELAY}.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param delay the delay between reads or zero for no delay.</color>
<color=#75715e>   * @param unit the {@code TimeUnit} of the delay value. May be null only if delay is zero.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setReadDelay</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>delay</color><color=#f8f8f2>,</color> <color=#f8f8f2>TimeUnit</color> <color=#f8f8f2>unit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>delayMs</color> <color=#f92672>=</color> <color=#f8f8f2>PropUtil</color><color=#f8f8f2>.</color><color=#a6e22e>durationToMillis</color><color=#f8f8f2>(</color><color=#f8f8f2>delay</color><color=#f8f8f2>,</color> <color=#f8f8f2>unit</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** @hidden For internal use only. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setStopVerifyFlag</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>val</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>stopVerify</color> <color=#f92672>=</color> <color=#f8f8f2>val</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>