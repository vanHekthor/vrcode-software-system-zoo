<color=#75715e>/*-</color>
<color=#75715e> * Copyright (C) 2002, 2017, Oracle and/or its affiliates. All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * This file was distributed by Oracle as part of a version of Oracle Berkeley</color>
<color=#75715e> * DB Java Edition made available at:</color>
<color=#75715e> *</color>
<color=#75715e> * http://www.oracle.com/technetwork/database/database-technologies/berkeleydb/downloads/index.html</color>
<color=#75715e> *</color>
<color=#75715e> * Please see the LICENSE file included in the top-level directory of the</color>
<color=#75715e> * appropriate version of Oracle Berkeley DB Java Edition for a copy of the</color>
<color=#75715e> * license and additional information.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.node</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.NodeType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.QuorumPolicy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.arbitration.Arbiter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepImpl</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.impl.RepParams</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.rep.stream.MasterStatus</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.sleepycat.je.utilint.LoggerUtils</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.logging.Logger</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * ElectionQuorum centralizes decision making about what constitutes a successful election quorum</color>
<color=#75715e> * and the definition of an authoritative master.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ElectionQuorum</color> <color=#f8f8f2>{</color>

  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>
  <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Logger</color> <color=#f8f8f2>logger</color><color=#f8f8f2>;</color>

  <color=#75715e>/*</color>
<color=#75715e>   * If non-zero use this value to override the normal group size</color>
<color=#75715e>   * calculations.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>volatile</color> <color=#66d9ef>int</color> <color=#f8f8f2>electableGroupSizeOverride</color><color=#f8f8f2>;</color>

  <color=#66d9ef>public</color> <color=#a6e22e>ElectionQuorum</color><color=#f8f8f2>(</color><color=#f8f8f2>RepImpl</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>repImpl</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getLogger</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>());</color>

    <color=#f8f8f2>electableGroupSizeOverride</color> <color=#f92672>=</color>
        <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getConfigManager</color><color=#f8f8f2>().</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#f8f8f2>RepParams</color><color=#f8f8f2>.</color><color=#a6e22e>ELECTABLE_GROUP_SIZE_OVERRIDE</color><color=#f8f8f2>);</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>electableGroupSizeOverride</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color>
          <color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Electable group size override set to:"</color> <color=#f92672>+</color> <color=#f8f8f2>electableGroupSizeOverride</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** For unit testing */</color>
  <color=#66d9ef>public</color> <color=#a6e22e>ElectionQuorum</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>repImpl</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>logger</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>   * Sets the override value for the Electable Group size.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setElectableGroupSizeOverride</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>override</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>electableGroupSizeOverride</color> <color=#f92672>!=</color> <color=#f8f8f2>override</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#f8f8f2>LoggerUtils</color><color=#f8f8f2>.</color><color=#a6e22e>warning</color><color=#f8f8f2>(</color><color=#f8f8f2>logger</color><color=#f8f8f2>,</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>,</color> <color=#e6db74>"Electable group size override changed to:"</color> <color=#f92672>+</color> <color=#f8f8f2>override</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>electableGroupSizeOverride</color> <color=#f92672>=</color> <color=#f8f8f2>override</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getElectableGroupSizeOverride</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>electableGroupSizeOverride</color><color=#f8f8f2>;</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/** Predicate to determine whether we have a quorum based upon the quorum policy. */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>haveQuorum</color><color=#f8f8f2>(</color><color=#f8f8f2>QuorumPolicy</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>votes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>votes</color> <color=#f92672>>=</color> <color=#f8f8f2>getElectionQuorumSize</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Returns a definitive answer to whether this node is currently the master by checking both its</color>
<color=#75715e>   * status as a master and that a sufficient number of nodes agree that it's the master based on</color>
<color=#75715e>   * the number of feeder connections to it. Currently, the sufficient number is just a simple</color>
<color=#75715e>   * majority. Such an authoritative answer is needed in a network partition situation to detect a</color>
<color=#75715e>   * master that may be isolated on the minority side of a network partition.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @return true if the node is definitely the master. False if it's not or we cannot be sure.</color>
<color=#75715e>   */</color>
  <color=#66d9ef>boolean</color> <color=#a6e22e>isAuthoritativeMaster</color><color=#f8f8f2>(</color><color=#f8f8f2>MasterStatus</color> <color=#f8f8f2>masterStatus</color><color=#f8f8f2>,</color> <color=#f8f8f2>FeederManager</color> <color=#f8f8f2>feederManager</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>masterStatus</color><color=#f8f8f2>.</color><color=#a6e22e>isGroupMaster</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>feederManager</color><color=#f8f8f2>.</color><color=#a6e22e>activeReplicaCount</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color>
        <color=#f92672>>=</color> <color=#f8f8f2>getElectionQuorumSize</color><color=#f8f8f2>(</color><color=#f8f8f2>QuorumPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>SIMPLE_MAJORITY</color><color=#f8f8f2>);</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return the number of nodes that are required to achieve consensus on the election. Over time,</color>
<color=#75715e>   * this may evolve to be a more detailed description than simply the size of the quorum. Instead,</color>
<color=#75715e>   * it may return the set of possible voters.</color>
<color=#75715e>   *</color>
<color=#75715e>   * <p>Special situations, like an active designated primary or an election group override will</color>
<color=#75715e>   * change the default quorum size.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param quorumPolicy</color>
<color=#75715e>   * @return the number of nodes required for a quorum</color>
<color=#75715e>   */</color>
  <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>getElectionQuorumSize</color><color=#f8f8f2>(</color><color=#f8f8f2>QuorumPolicy</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>electableGroupSizeOverride</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>quorumSize</color><color=#f8f8f2>(</color><color=#f8f8f2>electableGroupSizeOverride</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/*</color>
<color=#75715e>     * If arbitration is active, check whether arbitration determines the</color>
<color=#75715e>     * election group size.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>RepNode</color> <color=#f8f8f2>repNode</color> <color=#f92672>=</color> <color=#f8f8f2>repImpl</color><color=#f8f8f2>.</color><color=#a6e22e>getRepNode</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>Arbiter</color> <color=#f8f8f2>arbiter</color> <color=#f92672>=</color> <color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getArbiter</color><color=#f8f8f2>();</color>
    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>arbiter</color><color=#f8f8f2>.</color><color=#a6e22e>isApplicable</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
      <color=#66d9ef>return</color> <color=#f8f8f2>arbiter</color><color=#f8f8f2>.</color><color=#a6e22e>getElectionQuorumSize</color><color=#f8f8f2>(</color><color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>return</color> <color=#f8f8f2>quorumPolicy</color><color=#f8f8f2>.</color><color=#a6e22e>quorumSize</color><color=#f8f8f2>(</color><color=#f8f8f2>repNode</color><color=#f8f8f2>.</color><color=#a6e22e>getGroup</color><color=#f8f8f2>().</color><color=#a6e22e>getElectableGroupSize</color><color=#f8f8f2>());</color>
  <color=#f8f8f2>}</color>

  <color=#75715e>/**</color>
<color=#75715e>   * Return whether nodes of the specified type should participate in elections.</color>
<color=#75715e>   *</color>
<color=#75715e>   * @param nodeType the node type</color>
<color=#75715e>   * @return whether nodes of that type should participate in elections</color>
<color=#75715e>   */</color>
  <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>nodeTypeParticipates</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>NodeType</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

    <color=#75715e>/* Only electable nodes participate in elections */</color>
    <color=#66d9ef>return</color> <color=#f8f8f2>nodeType</color><color=#f8f8f2>.</color><color=#a6e22e>isElectable</color><color=#f8f8f2>();</color>
  <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>