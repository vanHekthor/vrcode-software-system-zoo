<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.math</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Perlin Noise functions</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Noise</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Function1D</color><color=#f8f8f2>,</color> <color=#f8f8f2>Function2D</color><color=#f8f8f2>,</color> <color=#f8f8f2>Function3D</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Random</color> <color=#f8f8f2>randomGenerator</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>();</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>noise1</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>noise2</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>z</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>noise3</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>z</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Compute turbulence using Perlin noise.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x       the x value</color>
<color=#75715e>     * @param y       the y value</color>
<color=#75715e>     * @param octaves number of octaves of turbulence</color>
<color=#75715e>     * @return turbulence value at (x,y)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>turbulence2</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color> <color=#f8f8f2>f</color> <color=#f92672><=</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color> <color=#f8f8f2>f</color> <color=#f92672>*=</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>noise2</color><color=#f8f8f2>(</color><color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>y</color><color=#f8f8f2>))</color> <color=#f92672>/</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Compute turbulence using Perlin noise.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x       the x value</color>
<color=#75715e>     * @param y       the y value</color>
<color=#75715e>     * @param octaves number of octaves of turbulence</color>
<color=#75715e>     * @return turbulence value at (x,y)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>turbulence3</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>z</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color> <color=#f8f8f2>f</color> <color=#f92672><=</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color> <color=#f8f8f2>f</color> <color=#f92672>*=</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>noise3</color><color=#f8f8f2>(</color><color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>z</color><color=#f8f8f2>))</color> <color=#f92672>/</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>B</color> <color=#f92672>=</color> <color=#ae81ff>0x100</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>BM</color> <color=#f92672>=</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>N</color> <color=#f92672>=</color> <color=#ae81ff>0x1000</color><color=#f8f8f2>;</color>

    <color=#66d9ef>static</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>float</color><color=#f92672>[][]</color> <color=#f8f8f2>g3</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>][</color><color=#ae81ff>3</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>float</color><color=#f92672>[][]</color> <color=#f8f8f2>g2</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>][</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>g1</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>sCurve</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>t</color> <color=#f92672>*</color> <color=#f8f8f2>t</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#ae81ff>3.0f</color> <color=#f92672>-</color> <color=#ae81ff>2.0f</color> <color=#f92672>*</color> <color=#f8f8f2>t</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Compute 1-dimensional Perlin noise.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x the x value</color>
<color=#75715e>     * @return noise value at x in the range -1..1</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>noise1</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>bx0</color><color=#f8f8f2>,</color> <color=#f8f8f2>bx1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>rx0</color><color=#f8f8f2>,</color> <color=#f8f8f2>rx1</color><color=#f8f8f2>,</color> <color=#f8f8f2>sx</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>start</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>init</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>N</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bx0</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bx1</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>bx0</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rx0</color> <color=#f92672>=</color> <color=#f8f8f2>t</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rx1</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>-</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>sx</color> <color=#f92672>=</color> <color=#f8f8f2>sCurve</color><color=#f8f8f2>(</color><color=#f8f8f2>rx0</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>*</color> <color=#f8f8f2>g1</color><color=#f92672>[</color><color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>bx0</color><color=#f92672>]]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>rx1</color> <color=#f92672>*</color> <color=#f8f8f2>g1</color><color=#f92672>[</color><color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>bx1</color><color=#f92672>]]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#ae81ff>2.3f</color> <color=#f92672>*</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>sx</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Compute 2-dimensional Perlin noise.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x the x coordinate</color>
<color=#75715e>     * @param y the y coordinate</color>
<color=#75715e>     * @return noise value at (x,y)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>noise2</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>bx0</color><color=#f8f8f2>,</color> <color=#f8f8f2>bx1</color><color=#f8f8f2>,</color> <color=#f8f8f2>by0</color><color=#f8f8f2>,</color> <color=#f8f8f2>by1</color><color=#f8f8f2>,</color> <color=#f8f8f2>b00</color><color=#f8f8f2>,</color> <color=#f8f8f2>b10</color><color=#f8f8f2>,</color> <color=#f8f8f2>b01</color><color=#f8f8f2>,</color> <color=#f8f8f2>b11</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>rx0</color><color=#f8f8f2>,</color> <color=#f8f8f2>rx1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ry0</color><color=#f8f8f2>,</color> <color=#f8f8f2>ry1</color><color=#f8f8f2>,</color> <color=#f8f8f2>q</color><color=#f92672>[]</color><color=#f8f8f2>,</color> <color=#f8f8f2>sx</color><color=#f8f8f2>,</color> <color=#f8f8f2>sy</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>j</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>start</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>init</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>N</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bx0</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bx1</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>bx0</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rx0</color> <color=#f92672>=</color> <color=#f8f8f2>t</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rx1</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>-</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>N</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>by0</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>by1</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>by0</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ry0</color> <color=#f92672>=</color> <color=#f8f8f2>t</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ry1</color> <color=#f92672>=</color> <color=#f8f8f2>ry0</color> <color=#f92672>-</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>bx0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>bx1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>b00</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#f8f8f2>by0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b10</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#f8f8f2>by0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b01</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#f8f8f2>by1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b11</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#f8f8f2>by1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>sx</color> <color=#f92672>=</color> <color=#f8f8f2>sCurve</color><color=#f8f8f2>(</color><color=#f8f8f2>rx0</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sy</color> <color=#f92672>=</color> <color=#f8f8f2>sCurve</color><color=#f8f8f2>(</color><color=#f8f8f2>ry0</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>b00</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>b10</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>rx1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>sx</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>b01</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>b11</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>rx1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>sx</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#ae81ff>1.5f</color> <color=#f92672>*</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>sy</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Compute 3-dimensional Perlin noise.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x the x coordinate</color>
<color=#75715e>     * @param y the y coordinate</color>
<color=#75715e>     * @param y the y coordinate</color>
<color=#75715e>     * @return noise value at (x,y,z)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>noise3</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>z</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>bx0</color><color=#f8f8f2>,</color> <color=#f8f8f2>bx1</color><color=#f8f8f2>,</color> <color=#f8f8f2>by0</color><color=#f8f8f2>,</color> <color=#f8f8f2>by1</color><color=#f8f8f2>,</color> <color=#f8f8f2>bz0</color><color=#f8f8f2>,</color> <color=#f8f8f2>bz1</color><color=#f8f8f2>,</color> <color=#f8f8f2>b00</color><color=#f8f8f2>,</color> <color=#f8f8f2>b10</color><color=#f8f8f2>,</color> <color=#f8f8f2>b01</color><color=#f8f8f2>,</color> <color=#f8f8f2>b11</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>rx0</color><color=#f8f8f2>,</color> <color=#f8f8f2>rx1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ry0</color><color=#f8f8f2>,</color> <color=#f8f8f2>ry1</color><color=#f8f8f2>,</color> <color=#f8f8f2>rz0</color><color=#f8f8f2>,</color> <color=#f8f8f2>rz1</color><color=#f8f8f2>,</color> <color=#f8f8f2>q</color><color=#f92672>[]</color><color=#f8f8f2>,</color> <color=#f8f8f2>sy</color><color=#f8f8f2>,</color> <color=#f8f8f2>sz</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>,</color> <color=#f8f8f2>d</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>j</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>start</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>init</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>N</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bx0</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bx1</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>bx0</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rx0</color> <color=#f92672>=</color> <color=#f8f8f2>t</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rx1</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>-</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>N</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>by0</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>by1</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>by0</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ry0</color> <color=#f92672>=</color> <color=#f8f8f2>t</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ry1</color> <color=#f92672>=</color> <color=#f8f8f2>ry0</color> <color=#f92672>-</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>z</color> <color=#f92672>+</color> <color=#f8f8f2>N</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bz0</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bz1</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>bz0</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#f8f8f2>BM</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rz0</color> <color=#f92672>=</color> <color=#f8f8f2>t</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rz1</color> <color=#f92672>=</color> <color=#f8f8f2>rz0</color> <color=#f92672>-</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>bx0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>bx1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>b00</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#f8f8f2>by0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b10</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#f8f8f2>by0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b01</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#f8f8f2>by1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b11</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#f8f8f2>by1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>sCurve</color><color=#f8f8f2>(</color><color=#f8f8f2>rx0</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sy</color> <color=#f92672>=</color> <color=#f8f8f2>sCurve</color><color=#f8f8f2>(</color><color=#f8f8f2>ry0</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>sz</color> <color=#f92672>=</color> <color=#f8f8f2>sCurve</color><color=#f8f8f2>(</color><color=#f8f8f2>rz0</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b00</color> <color=#f92672>+</color> <color=#f8f8f2>bz0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b10</color> <color=#f92672>+</color> <color=#f8f8f2>bz0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>rx1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b01</color> <color=#f92672>+</color> <color=#f8f8f2>bz0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b11</color> <color=#f92672>+</color> <color=#f8f8f2>bz0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>rx1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>sy</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b00</color> <color=#f92672>+</color> <color=#f8f8f2>bz1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b10</color> <color=#f92672>+</color> <color=#f8f8f2>bz1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>rx1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b01</color> <color=#f92672>+</color> <color=#f8f8f2>bz1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#f8f8f2>rx0</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>q</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>b11</color> <color=#f92672>+</color> <color=#f8f8f2>bz1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>rx1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>ry1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>rz1</color> <color=#f92672>*</color> <color=#f8f8f2>q</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>sy</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#ae81ff>1.5f</color> <color=#f92672>*</color> <color=#f8f8f2>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>sz</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>,</color> <color=#f8f8f2>d</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>lerp</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>b</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>a</color> <color=#f92672>+</color> <color=#f8f8f2>t</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>-</color> <color=#f8f8f2>a</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>normalize2</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f92672>[]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sqrt</color><color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>*</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>*</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>/</color> <color=#f8f8f2>s</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>/</color> <color=#f8f8f2>s</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>normalize3</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f92672>[]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sqrt</color><color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>*</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>*</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>*</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>/</color> <color=#f8f8f2>s</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>/</color> <color=#f8f8f2>s</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>/</color> <color=#f8f8f2>s</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>random</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>init</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>j</color><color=#f8f8f2>,</color> <color=#f8f8f2>k</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>B</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>g1</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>random</color><color=#f8f8f2>()</color> <color=#f92672>%</color> <color=#f8f8f2>(</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>B</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#f8f8f2>B</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>B</color><color=#f8f8f2>;</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>random</color><color=#f8f8f2>()</color> <color=#f92672>%</color> <color=#f8f8f2>(</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>B</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#f8f8f2>B</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>B</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>normalize2</color><color=#f8f8f2>(</color><color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>random</color><color=#f8f8f2>()</color> <color=#f92672>%</color> <color=#f8f8f2>(</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>B</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#f8f8f2>B</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>B</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>normalize3</color><color=#f8f8f2>(</color><color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>B</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>--</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>random</color><color=#f8f8f2>()</color> <color=#f92672>%</color> <color=#f8f8f2>B</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>k</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>g1</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>g1</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>g2</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>B</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>g3</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the minimum and maximum of a number of random values of the given function. This is</color>
<color=#75715e>     * useful for making some stab at normalising the function.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#a6e22e>findRange</color><color=#f8f8f2>(</color><color=#f8f8f2>Function1D</color> <color=#f8f8f2>f</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>minmax</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>minmax</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>minmax</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>max</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#75715e>// Some random numbers here...</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#ae81ff>1.27139</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>n</color> <color=#f92672>=</color> <color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>min</color><color=#f8f8f2>,</color> <color=#f8f8f2>n</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>max</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>max</color><color=#f8f8f2>,</color> <color=#f8f8f2>n</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>minmax</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>min</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>minmax</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>max</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>minmax</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the minimum and maximum of a number of random values of the given function. This is</color>
<color=#75715e>     * useful for making some stab at normalising the function.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#a6e22e>findRange</color><color=#f8f8f2>(</color><color=#f8f8f2>Function2D</color> <color=#f8f8f2>f</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>minmax</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>minmax</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>minmax</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>max</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#75715e>// Some random numbers here...</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672>+=</color> <color=#ae81ff>10.35173</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#ae81ff>10.77139</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>float</color> <color=#f8f8f2>n</color> <color=#f92672>=</color> <color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>min</color><color=#f8f8f2>,</color> <color=#f8f8f2>n</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>max</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>max</color><color=#f8f8f2>,</color> <color=#f8f8f2>n</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>minmax</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>min</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>minmax</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>max</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>minmax</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>