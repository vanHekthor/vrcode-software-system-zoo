<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.math</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FBM</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Function2D</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>exponents</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>H</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>Function2D</color> <color=#f8f8f2>basis</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FBM</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>H</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>H</color><color=#f8f8f2>,</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>,</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#a6e22e>FBM</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>H</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>,</color> <color=#f8f8f2>Function2D</color> <color=#f8f8f2>basis</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>H</color> <color=#f92672>=</color> <color=#f8f8f2>H</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lacunarity</color> <color=#f92672>=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>octaves</color> <color=#f92672>=</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>basis</color> <color=#f92672>=</color> <color=#f8f8f2>basis</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>exponents</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>frequency</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>exponents</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>frequency</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#f8f8f2>H</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>frequency</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBasis</color><color=#f8f8f2>(</color><color=#f8f8f2>Function2D</color> <color=#f8f8f2>basis</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>basis</color> <color=#f92672>=</color> <color=#f8f8f2>basis</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>Function2D</color> <color=#a6e22e>getBasisType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>basis</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>remainder</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>

        <color=#75715e>// to prevent "cascading" effects</color>
        <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#ae81ff>371</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>y</color> <color=#f92672>+=</color> <color=#ae81ff>529</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>value</color> <color=#f92672>+=</color> <color=#f8f8f2>basis</color><color=#f8f8f2>.</color><color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>exponents</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>x</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>y</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>remainder</color> <color=#f92672>=</color> <color=#f8f8f2>octaves</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>remainder</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>value</color> <color=#f92672>+=</color> <color=#f8f8f2>remainder</color> <color=#f92672>*</color> <color=#f8f8f2>basis</color><color=#f8f8f2>.</color><color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>exponents</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>