<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.math</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>CellularFunction2D</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Function2D</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>distancePower</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>cells</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>angular</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>coefficients</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>};</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Random</color> <color=#f8f8f2>random</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Point</color><color=#f92672>[]</color> <color=#f8f8f2>results</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>CellularFunction2D</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>results</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Point</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Point</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCoefficient</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>c</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#f8f8f2>c</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getCoefficient</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>c</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#f8f8f2>c</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>class</color> <color=#a6e22e>Point</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>distance</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#a6e22e>checkCube</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>cubeX</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>cubeY</color><color=#f8f8f2>,</color> <color=#f8f8f2>Point</color><color=#f92672>[]</color> <color=#f8f8f2>results</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>setSeed</color><color=#f8f8f2>(</color><color=#ae81ff>571</color> <color=#f92672>*</color> <color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#ae81ff>23</color> <color=#f92672>*</color> <color=#f8f8f2>cubeY</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>numPoints</color> <color=#f92672>=</color> <color=#ae81ff>3</color> <color=#f92672>+</color> <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>%</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>numPoints</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>numPoints</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>();</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>();</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>px</color><color=#f8f8f2>);</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>dy</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>py</color><color=#f8f8f2>);</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>d</color><color=#f8f8f2>;</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>distancePower</color> <color=#f92672>==</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>dx</color> <color=#f92672>+</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
            <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>distancePower</color> <color=#f92672>==</color> <color=#ae81ff>2.0f</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sqrt</color><color=#f8f8f2>(</color><color=#f8f8f2>dx</color> <color=#f92672>*</color> <color=#f8f8f2>dx</color> <color=#f92672>+</color> <color=#f8f8f2>dy</color> <color=#f92672>*</color> <color=#f8f8f2>dy</color><color=#f8f8f2>);</color>
            <color=#66d9ef>else</color>
                <color=#f8f8f2>d</color> <color=#f92672>=</color>
                        <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color>
                                <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color>
                                        <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>dx</color><color=#f8f8f2>,</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>dy</color><color=#f8f8f2>,</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>),</color> <color=#ae81ff>1</color> <color=#f92672>/</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>);</color>

            <color=#75715e>// Insertion sort</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>==</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>POSITIVE_INFINITY</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>Point</color> <color=#f8f8f2>last</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>d</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>x</color> <color=#f92672>=</color> <color=#f8f8f2>px</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>y</color> <color=#f92672>=</color> <color=#f8f8f2>py</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>Point</color> <color=#f8f8f2>last</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>k</color> <color=#f92672>></color> <color=#f8f8f2>j</color><color=#f8f8f2>;</color> <color=#f8f8f2>k</color><color=#f92672>--</color><color=#f8f8f2>)</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>d</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>x</color> <color=#f92672>=</color> <color=#f8f8f2>px</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>last</color><color=#f8f8f2>.</color><color=#a6e22e>y</color> <color=#f92672>=</color> <color=#f8f8f2>py</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>last</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>Float</color><color=#f8f8f2>.</color><color=#a6e22e>POSITIVE_INFINITY</color><color=#f8f8f2>;</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>ix</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>iy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>fx</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>ix</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>fy</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>iy</color><color=#f8f8f2>;</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fx</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fx</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>*</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>angular</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>atan2</color><color=#f8f8f2>(</color><color=#f8f8f2>fy</color> <color=#f92672>-</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>x</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>PI</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>0.5</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>