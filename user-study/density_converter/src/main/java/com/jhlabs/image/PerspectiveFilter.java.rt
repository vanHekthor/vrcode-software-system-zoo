<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.geom.Point2D</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.geom.Rectangle2D</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A filter which performs a perspective distortion on an image. Coordinates are treated as if the</color>
<color=#75715e> * image was a unit square, i.e. the bottom-right corner of the image is at (1, 1). The filter maps</color>
<color=#75715e> * the unit square onto an arbitrary convex quadrilateral or vice versa.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>PerspectiveFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TransformFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#f8f8f2>y3</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>dx1</color><color=#f8f8f2>,</color> <color=#f8f8f2>dy1</color><color=#f8f8f2>,</color> <color=#f8f8f2>dx2</color><color=#f8f8f2>,</color> <color=#f8f8f2>dy2</color><color=#f8f8f2>,</color> <color=#f8f8f2>dx3</color><color=#f8f8f2>,</color> <color=#f8f8f2>dy3</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>A</color><color=#f8f8f2>,</color> <color=#f8f8f2>B</color><color=#f8f8f2>,</color> <color=#f8f8f2>C</color><color=#f8f8f2>,</color> <color=#f8f8f2>D</color><color=#f8f8f2>,</color> <color=#f8f8f2>E</color><color=#f8f8f2>,</color> <color=#f8f8f2>F</color><color=#f8f8f2>,</color> <color=#f8f8f2>G</color><color=#f8f8f2>,</color> <color=#f8f8f2>H</color><color=#f8f8f2>,</color> <color=#f8f8f2>I</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>a11</color><color=#f8f8f2>,</color> <color=#f8f8f2>a12</color><color=#f8f8f2>,</color> <color=#f8f8f2>a13</color><color=#f8f8f2>,</color> <color=#f8f8f2>a21</color><color=#f8f8f2>,</color> <color=#f8f8f2>a22</color><color=#f8f8f2>,</color> <color=#f8f8f2>a23</color><color=#f8f8f2>,</color> <color=#f8f8f2>a31</color><color=#f8f8f2>,</color> <color=#f8f8f2>a32</color><color=#f8f8f2>,</color> <color=#f8f8f2>a33</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>scaled</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>clip</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct a PerspectiveFilter.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>PerspectiveFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct a PerspectiveFilter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x0 the new position of the top left corner</color>
<color=#75715e>     * @param y0 the new position of the top left corner</color>
<color=#75715e>     * @param x1 the new position of the top right corner</color>
<color=#75715e>     * @param y1 the new position of the top right corner</color>
<color=#75715e>     * @param x2 the new position of the bottom right corner</color>
<color=#75715e>     * @param y2 the new position of the bottom right corner</color>
<color=#75715e>     * @param x3 the new position of the bottom left corner</color>
<color=#75715e>     * @param y3 the new position of the bottom left corner</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>PerspectiveFilter</color><color=#f8f8f2>(</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>unitSquareToQuad</color><color=#f8f8f2>(</color><color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#f8f8f2>y3</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setClip</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>clip</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>clip</color> <color=#f92672>=</color> <color=#f8f8f2>clip</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getClip</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>clip</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the new positions of the image corners. This is the same as unitSquareToQuad, but the</color>
<color=#75715e>     * coordinates are in image pixels, not relative to the unit square. This method is provided as a</color>
<color=#75715e>     * convenience.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x0 the new position of the top left corner</color>
<color=#75715e>     * @param y0 the new position of the top left corner</color>
<color=#75715e>     * @param x1 the new position of the top right corner</color>
<color=#75715e>     * @param y1 the new position of the top right corner</color>
<color=#75715e>     * @param x2 the new position of the bottom right corner</color>
<color=#75715e>     * @param y2 the new position of the bottom right corner</color>
<color=#75715e>     * @param x3 the new position of the bottom left corner</color>
<color=#75715e>     * @param y3 the new position of the bottom left corner</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCorners</color><color=#f8f8f2>(</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>unitSquareToQuad</color><color=#f8f8f2>(</color><color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#f8f8f2>y3</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>scaled</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the transform to map the unit square onto a quadrilateral. When filtering, all coordinates</color>
<color=#75715e>     * will be scaled by the size of the image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x0 the new position of the top left corner</color>
<color=#75715e>     * @param y0 the new position of the top left corner</color>
<color=#75715e>     * @param x1 the new position of the top right corner</color>
<color=#75715e>     * @param y1 the new position of the top right corner</color>
<color=#75715e>     * @param x2 the new position of the bottom right corner</color>
<color=#75715e>     * @param y2 the new position of the bottom right corner</color>
<color=#75715e>     * @param x3 the new position of the bottom left corner</color>
<color=#75715e>     * @param y3 the new position of the bottom left corner</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>unitSquareToQuad</color><color=#f8f8f2>(</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>x0</color> <color=#f92672>=</color> <color=#f8f8f2>x0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>y0</color> <color=#f92672>=</color> <color=#f8f8f2>y0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>x1</color> <color=#f92672>=</color> <color=#f8f8f2>x1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>y1</color> <color=#f92672>=</color> <color=#f8f8f2>y1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>x2</color> <color=#f92672>=</color> <color=#f8f8f2>x2</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>y2</color> <color=#f92672>=</color> <color=#f8f8f2>y2</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>x3</color> <color=#f92672>=</color> <color=#f8f8f2>x3</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>y3</color> <color=#f92672>=</color> <color=#f8f8f2>y3</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>dx1</color> <color=#f92672>=</color> <color=#f8f8f2>x1</color> <color=#f92672>-</color> <color=#f8f8f2>x2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>dy1</color> <color=#f92672>=</color> <color=#f8f8f2>y1</color> <color=#f92672>-</color> <color=#f8f8f2>y2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>dx2</color> <color=#f92672>=</color> <color=#f8f8f2>x3</color> <color=#f92672>-</color> <color=#f8f8f2>x2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>dy2</color> <color=#f92672>=</color> <color=#f8f8f2>y3</color> <color=#f92672>-</color> <color=#f8f8f2>y2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>dx3</color> <color=#f92672>=</color> <color=#f8f8f2>x0</color> <color=#f92672>-</color> <color=#f8f8f2>x1</color> <color=#f92672>+</color> <color=#f8f8f2>x2</color> <color=#f92672>-</color> <color=#f8f8f2>x3</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>dy3</color> <color=#f92672>=</color> <color=#f8f8f2>y0</color> <color=#f92672>-</color> <color=#f8f8f2>y1</color> <color=#f92672>+</color> <color=#f8f8f2>y2</color> <color=#f92672>-</color> <color=#f8f8f2>y3</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dx3</color> <color=#f92672>==</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>dy3</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>a11</color> <color=#f92672>=</color> <color=#f8f8f2>x1</color> <color=#f92672>-</color> <color=#f8f8f2>x0</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a21</color> <color=#f92672>=</color> <color=#f8f8f2>x2</color> <color=#f92672>-</color> <color=#f8f8f2>x1</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a31</color> <color=#f92672>=</color> <color=#f8f8f2>x0</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a12</color> <color=#f92672>=</color> <color=#f8f8f2>y1</color> <color=#f92672>-</color> <color=#f8f8f2>y0</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a22</color> <color=#f92672>=</color> <color=#f8f8f2>y2</color> <color=#f92672>-</color> <color=#f8f8f2>y1</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a32</color> <color=#f92672>=</color> <color=#f8f8f2>y0</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a13</color> <color=#f92672>=</color> <color=#f8f8f2>a23</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>a13</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>dx3</color> <color=#f92672>*</color> <color=#f8f8f2>dy2</color> <color=#f92672>-</color> <color=#f8f8f2>dx2</color> <color=#f92672>*</color> <color=#f8f8f2>dy3</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>dx1</color> <color=#f92672>*</color> <color=#f8f8f2>dy2</color> <color=#f92672>-</color> <color=#f8f8f2>dy1</color> <color=#f92672>*</color> <color=#f8f8f2>dx2</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>a23</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>dx1</color> <color=#f92672>*</color> <color=#f8f8f2>dy3</color> <color=#f92672>-</color> <color=#f8f8f2>dy1</color> <color=#f92672>*</color> <color=#f8f8f2>dx3</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>dx1</color> <color=#f92672>*</color> <color=#f8f8f2>dy2</color> <color=#f92672>-</color> <color=#f8f8f2>dy1</color> <color=#f92672>*</color> <color=#f8f8f2>dx2</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>a11</color> <color=#f92672>=</color> <color=#f8f8f2>x1</color> <color=#f92672>-</color> <color=#f8f8f2>x0</color> <color=#f92672>+</color> <color=#f8f8f2>a13</color> <color=#f92672>*</color> <color=#f8f8f2>x1</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a21</color> <color=#f92672>=</color> <color=#f8f8f2>x3</color> <color=#f92672>-</color> <color=#f8f8f2>x0</color> <color=#f92672>+</color> <color=#f8f8f2>a23</color> <color=#f92672>*</color> <color=#f8f8f2>x3</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a31</color> <color=#f92672>=</color> <color=#f8f8f2>x0</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a12</color> <color=#f92672>=</color> <color=#f8f8f2>y1</color> <color=#f92672>-</color> <color=#f8f8f2>y0</color> <color=#f92672>+</color> <color=#f8f8f2>a13</color> <color=#f92672>*</color> <color=#f8f8f2>y1</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a22</color> <color=#f92672>=</color> <color=#f8f8f2>y3</color> <color=#f92672>-</color> <color=#f8f8f2>y0</color> <color=#f92672>+</color> <color=#f8f8f2>a23</color> <color=#f92672>*</color> <color=#f8f8f2>y3</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>a32</color> <color=#f92672>=</color> <color=#f8f8f2>y0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>a33</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>scaled</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the transform to map a quadrilateral onto the unit square. When filtering, all coordinates</color>
<color=#75715e>     * will be scaled by the size of the image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param x0 the old position of the top left corner</color>
<color=#75715e>     * @param y0 the old position of the top left corner</color>
<color=#75715e>     * @param x1 the old position of the top right corner</color>
<color=#75715e>     * @param y1 the old position of the top right corner</color>
<color=#75715e>     * @param x2 the old position of the bottom right corner</color>
<color=#75715e>     * @param y2 the old position of the bottom right corner</color>
<color=#75715e>     * @param x3 the old position of the bottom left corner</color>
<color=#75715e>     * @param y3 the old position of the bottom left corner</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>quadToUnitSquare</color><color=#f8f8f2>(</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>unitSquareToQuad</color><color=#f8f8f2>(</color><color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>x3</color><color=#f8f8f2>,</color> <color=#f8f8f2>y3</color><color=#f8f8f2>);</color>

        <color=#75715e>// Invert the transformation</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta11</color> <color=#f92672>=</color> <color=#f8f8f2>a22</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color> <color=#f92672>-</color> <color=#f8f8f2>a32</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta21</color> <color=#f92672>=</color> <color=#f8f8f2>a32</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color> <color=#f92672>-</color> <color=#f8f8f2>a12</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta31</color> <color=#f92672>=</color> <color=#f8f8f2>a12</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color> <color=#f92672>-</color> <color=#f8f8f2>a22</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta12</color> <color=#f92672>=</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color> <color=#f92672>-</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta22</color> <color=#f92672>=</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color> <color=#f92672>-</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta32</color> <color=#f92672>=</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color> <color=#f92672>-</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta13</color> <color=#f92672>=</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a32</color> <color=#f92672>-</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a22</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta23</color> <color=#f92672>=</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a12</color> <color=#f92672>-</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a32</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ta33</color> <color=#f92672>=</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a22</color> <color=#f92672>-</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a12</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color> <color=#f92672>/</color> <color=#f8f8f2>ta33</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>a11</color> <color=#f92672>=</color> <color=#f8f8f2>ta11</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a21</color> <color=#f92672>=</color> <color=#f8f8f2>ta12</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a31</color> <color=#f92672>=</color> <color=#f8f8f2>ta13</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a12</color> <color=#f92672>=</color> <color=#f8f8f2>ta21</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a22</color> <color=#f92672>=</color> <color=#f8f8f2>ta22</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a32</color> <color=#f92672>=</color> <color=#f8f8f2>ta23</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a13</color> <color=#f92672>=</color> <color=#f8f8f2>ta31</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a23</color> <color=#f92672>=</color> <color=#f8f8f2>ta32</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>a33</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>dst</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>A</color> <color=#f92672>=</color> <color=#f8f8f2>a22</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color> <color=#f92672>-</color> <color=#f8f8f2>a32</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>B</color> <color=#f92672>=</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color> <color=#f92672>-</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>C</color> <color=#f92672>=</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a32</color> <color=#f92672>-</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a22</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>D</color> <color=#f92672>=</color> <color=#f8f8f2>a32</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color> <color=#f92672>-</color> <color=#f8f8f2>a12</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>E</color> <color=#f92672>=</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a33</color> <color=#f92672>-</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>F</color> <color=#f92672>=</color> <color=#f8f8f2>a31</color> <color=#f92672>*</color> <color=#f8f8f2>a12</color> <color=#f92672>-</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a32</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>G</color> <color=#f92672>=</color> <color=#f8f8f2>a12</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color> <color=#f92672>-</color> <color=#f8f8f2>a22</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>H</color> <color=#f92672>=</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color> <color=#f92672>-</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>I</color> <color=#f92672>=</color> <color=#f8f8f2>a11</color> <color=#f92672>*</color> <color=#f8f8f2>a22</color> <color=#f92672>-</color> <color=#f8f8f2>a21</color> <color=#f92672>*</color> <color=#f8f8f2>a12</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>scaled</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>invWidth</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color> <color=#f92672>/</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>invHeight</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color> <color=#f92672>/</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>A</color> <color=#f92672>*=</color> <color=#f8f8f2>invWidth</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>D</color> <color=#f92672>*=</color> <color=#f8f8f2>invWidth</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>G</color> <color=#f92672>*=</color> <color=#f8f8f2>invWidth</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>B</color> <color=#f92672>*=</color> <color=#f8f8f2>invHeight</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>E</color> <color=#f92672>*=</color> <color=#f8f8f2>invHeight</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>H</color> <color=#f92672>*=</color> <color=#f8f8f2>invHeight</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#f8f8f2>dst</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>transformSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>Rectangle</color> <color=#f8f8f2>rect</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>scaled</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>x</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>),</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>x3</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>y</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>),</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y3</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>),</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>x3</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>x</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>),</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y3</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>y</color><color=#f8f8f2>;</color>
            <color=#66d9ef>return</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>clip</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>w</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(),</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Rectangle</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>h</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#f8f8f2>h</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>rect</color><color=#f8f8f2>.</color><color=#a6e22e>setRect</color><color=#f8f8f2>(</color><color=#f8f8f2>r</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the origin of the output image. Use this for working out where to draw your new image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the X origin.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getOriginX</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>x0</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>),</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>x3</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the origin of the output image. Use this for working out where to draw your new image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the Y origin.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getOriginY</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>y0</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>y0</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>),</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y3</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>Rectangle2D</color> <color=#a6e22e>getBounds2D</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>src</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>clip</color><color=#f8f8f2>)</color> <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Rectangle</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(),</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>());</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>w</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(),</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>Rectangle2D</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Rectangle2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>h</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>getPoint2D</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>(</color><color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#f8f8f2>h</color><color=#f8f8f2>),</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>r</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>Point2D</color> <color=#a6e22e>getPoint2D</color><color=#f8f8f2>(</color><color=#f8f8f2>Point2D</color> <color=#f8f8f2>srcPt</color><color=#f8f8f2>,</color> <color=#f8f8f2>Point2D</color> <color=#f8f8f2>dstPt</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dstPt</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>dstPt</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Point2D</color><color=#f8f8f2>.</color><color=#a6e22e>Float</color><color=#f8f8f2>();</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcPt</color><color=#f8f8f2>.</color><color=#a6e22e>getX</color><color=#f8f8f2>();</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcPt</color><color=#f8f8f2>.</color><color=#a6e22e>getY</color><color=#f8f8f2>();</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f8f8f2>a13</color> <color=#f92672>+</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>a23</color> <color=#f92672>+</color> <color=#f8f8f2>a33</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>dstPt</color><color=#f8f8f2>.</color><color=#a6e22e>setLocation</color><color=#f8f8f2>((</color><color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f8f8f2>a11</color> <color=#f92672>+</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>a21</color> <color=#f92672>+</color> <color=#f8f8f2>a31</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f8f8f2>a12</color> <color=#f92672>+</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>a22</color> <color=#f92672>+</color> <color=#f8f8f2>a32</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>f</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>dstPt</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>transformInverse</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>out</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>out</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>originalSpace</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>A</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>B</color> <color=#f92672>*</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>C</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>G</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>H</color> <color=#f92672>*</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>I</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>out</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>originalSpace</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>D</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>E</color> <color=#f92672>*</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>F</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>G</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>H</color> <color=#f92672>*</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>I</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Distort/Perspective..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>