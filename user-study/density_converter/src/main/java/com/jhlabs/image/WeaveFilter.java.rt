<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>WeaveFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>PointFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>xWidth</color> <color=#f92672>=</color> <color=#ae81ff>16</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>yWidth</color> <color=#f92672>=</color> <color=#ae81ff>16</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>xGap</color> <color=#f92672>=</color> <color=#ae81ff>6</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>yGap</color> <color=#f92672>=</color> <color=#ae81ff>6</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>rows</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>cols</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>rgbX</color> <color=#f92672>=</color> <color=#ae81ff>0xffff8080</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>rgbY</color> <color=#f92672>=</color> <color=#ae81ff>0xff8080ff</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>useImageColors</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>roundThreads</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>shadeCrossings</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color><color=#f92672>[][]</color> <color=#f8f8f2>matrix</color> <color=#f92672>=</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>},</color>
            <color=#f8f8f2>{</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>},</color>
            <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>},</color>
            <color=#f8f8f2>{</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>},</color>
    <color=#f8f8f2>};</color>

    <color=#66d9ef>public</color> <color=#a6e22e>WeaveFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setXGap</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>xGap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>xGap</color> <color=#f92672>=</color> <color=#f8f8f2>xGap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setXWidth</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>xWidth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>xWidth</color> <color=#f92672>=</color> <color=#f8f8f2>xWidth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getXWidth</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>xWidth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setYWidth</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>yWidth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>yWidth</color> <color=#f92672>=</color> <color=#f8f8f2>yWidth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getYWidth</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>yWidth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getXGap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>xGap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setYGap</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>yGap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>yGap</color> <color=#f92672>=</color> <color=#f8f8f2>yGap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getYGap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>yGap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCrossings</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f92672>[][]</color> <color=#f8f8f2>matrix</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>matrix</color> <color=#f92672>=</color> <color=#f8f8f2>matrix</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color><color=#f92672>[][]</color> <color=#a6e22e>getCrossings</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>matrix</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setUseImageColors</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>useImageColors</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>useImageColors</color> <color=#f92672>=</color> <color=#f8f8f2>useImageColors</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getUseImageColors</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>useImageColors</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setRoundThreads</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>roundThreads</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>roundThreads</color> <color=#f92672>=</color> <color=#f8f8f2>roundThreads</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getRoundThreads</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>roundThreads</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setShadeCrossings</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>shadeCrossings</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>shadeCrossings</color> <color=#f92672>=</color> <color=#f8f8f2>shadeCrossings</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getShadeCrossings</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>shadeCrossings</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>filterRGB</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#f8f8f2>xWidth</color> <color=#f92672>+</color> <color=#f8f8f2>xGap</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>y</color> <color=#f92672>+=</color> <color=#f8f8f2>yWidth</color> <color=#f92672>+</color> <color=#f8f8f2>yGap</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>nx</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mod</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>xWidth</color> <color=#f92672>+</color> <color=#f8f8f2>xGap</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ny</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mod</color><color=#f8f8f2>(</color><color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>yWidth</color> <color=#f92672>+</color> <color=#f8f8f2>yGap</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>ix</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>xWidth</color> <color=#f92672>+</color> <color=#f8f8f2>xGap</color><color=#f8f8f2>));</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>iy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>yWidth</color> <color=#f92672>+</color> <color=#f8f8f2>yGap</color><color=#f8f8f2>));</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>inX</color> <color=#f92672>=</color> <color=#f8f8f2>nx</color> <color=#f92672><</color> <color=#f8f8f2>xWidth</color><color=#f8f8f2>;</color>
        <color=#66d9ef>boolean</color> <color=#f8f8f2>inY</color> <color=#f92672>=</color> <color=#f8f8f2>ny</color> <color=#f92672><</color> <color=#f8f8f2>yWidth</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>dX</color><color=#f8f8f2>,</color> <color=#f8f8f2>dY</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>cX</color><color=#f8f8f2>,</color> <color=#f8f8f2>cY</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>lrgbX</color><color=#f8f8f2>,</color> <color=#f8f8f2>lrgbY</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>roundThreads</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>dX</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>xWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color> <color=#f92672>-</color> <color=#f8f8f2>nx</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>xWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>dY</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>yWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color> <color=#f92672>-</color> <color=#f8f8f2>ny</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>yWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>dX</color> <color=#f92672>=</color> <color=#f8f8f2>dY</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>shadeCrossings</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>cX</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>smoothStep</color><color=#f8f8f2>(</color><color=#f8f8f2>xWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>xWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color> <color=#f92672>+</color> <color=#f8f8f2>xGap</color><color=#f8f8f2>,</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>xWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color> <color=#f92672>-</color> <color=#f8f8f2>nx</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>cY</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>smoothStep</color><color=#f8f8f2>(</color><color=#f8f8f2>yWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>yWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color> <color=#f92672>+</color> <color=#f8f8f2>yGap</color><color=#f8f8f2>,</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>yWidth</color> <color=#f92672>/</color> <color=#ae81ff>2</color> <color=#f92672>-</color> <color=#f8f8f2>ny</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>cX</color> <color=#f92672>=</color> <color=#f8f8f2>cY</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>useImageColors</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>lrgbX</color> <color=#f92672>=</color> <color=#f8f8f2>lrgbY</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>lrgbX</color> <color=#f92672>=</color> <color=#f8f8f2>rgbX</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>lrgbY</color> <color=#f92672>=</color> <color=#f8f8f2>rgbY</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>ixc</color> <color=#f92672>=</color> <color=#f8f8f2>ix</color> <color=#f92672>%</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>iyr</color> <color=#f92672>=</color> <color=#f8f8f2>iy</color> <color=#f92672>%</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>m</color> <color=#f92672>=</color> <color=#f8f8f2>matrix</color><color=#f92672>[</color><color=#f8f8f2>iyr</color><color=#f92672>][</color><color=#f8f8f2>ixc</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inX</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inY</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>m</color> <color=#f92672>==</color> <color=#ae81ff>1</color> <color=#f92672>?</color> <color=#f8f8f2>lrgbX</color> <color=#f8f8f2>:</color> <color=#f8f8f2>lrgbY</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>m</color> <color=#f92672>==</color> <color=#ae81ff>1</color> <color=#f92672>?</color> <color=#f8f8f2>dX</color> <color=#f8f8f2>:</color> <color=#f8f8f2>dY</color><color=#f8f8f2>),</color> <color=#f8f8f2>v</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>shadeCrossings</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>m</color> <color=#f92672>!=</color> <color=#f8f8f2>matrix</color><color=#f92672>[</color><color=#f8f8f2>(</color><color=#f8f8f2>iy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>rows</color><color=#f92672>][</color><color=#f8f8f2>ixc</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>m</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>cY</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>cY</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>cY</color> <color=#f92672>*=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>lrgbX</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>cY</color><color=#f8f8f2>,</color> <color=#f8f8f2>lrgbX</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>m</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>lrgbX</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#ae81ff>0.5f</color><color=#f8f8f2>,</color> <color=#f8f8f2>lrgbX</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
                <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>dX</color><color=#f8f8f2>,</color> <color=#f8f8f2>lrgbX</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inY</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>shadeCrossings</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>m</color> <color=#f92672>!=</color> <color=#f8f8f2>matrix</color><color=#f92672>[</color><color=#f8f8f2>iyr</color><color=#f92672>][</color><color=#f8f8f2>(</color><color=#f8f8f2>ix</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>cols</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>m</color> <color=#f92672>==</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>cX</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>cX</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>cX</color> <color=#f92672>*=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>lrgbY</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>cX</color><color=#f8f8f2>,</color> <color=#f8f8f2>lrgbY</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>m</color> <color=#f92672>==</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>lrgbY</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#ae81ff>0.5f</color><color=#f8f8f2>,</color> <color=#f8f8f2>lrgbY</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
            <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>dY</color><color=#f8f8f2>,</color> <color=#f8f8f2>lrgbY</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>0x00000000</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Texture/Weave..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>