<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.Raster</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.WritableRaster</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A filter which uses the alpha channel of a "mask" image to interpolate between a source and</color>
<color=#75715e> * destination image.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ApplyMaskFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>AbstractBufferedImageOp</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>destination</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>maskImage</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct an ApplyMaskFIlter.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ApplyMaskFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct an ApplyMaskFIlter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param maskImage   the mask image</color>
<color=#75715e>     * @param destination the destination image</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ApplyMaskFilter</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>maskImage</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>destination</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>maskImage</color> <color=#f92672>=</color> <color=#f8f8f2>maskImage</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>destination</color> <color=#f92672>=</color> <color=#f8f8f2>destination</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the destination image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param destination the destination image</color>
<color=#75715e>     * @see #getDestination</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDestination</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>destination</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>destination</color> <color=#f92672>=</color> <color=#f8f8f2>destination</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the destination image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the destination image</color>
<color=#75715e>     * @see #setDestination</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>getDestination</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>destination</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the mask image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param maskImage the mask image</color>
<color=#75715e>     * @see #getMaskImage</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMaskImage</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>maskImage</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>maskImage</color> <color=#f92672>=</color> <color=#f8f8f2>maskImage</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the mask image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the mask image</color>
<color=#75715e>     * @see #setMaskImage</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>getMaskImage</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>maskImage</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Interpolates between two rasters according to the alpha level of a mask raster.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param src the source raster</color>
<color=#75715e>     * @param dst the destination raster</color>
<color=#75715e>     * @param sel the mask raster</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>composeThroughMask</color><color=#f8f8f2>(</color><color=#f8f8f2>Raster</color> <color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#f8f8f2>WritableRaster</color> <color=#f8f8f2>dst</color><color=#f8f8f2>,</color> <color=#f8f8f2>Raster</color> <color=#f8f8f2>sel</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getMinX</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getMinY</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>w</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>srcRGB</color><color=#f92672>[]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>selRGB</color><color=#f92672>[]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>dstRGB</color><color=#f92672>[]</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>h</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>srcRGB</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getPixels</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>srcRGB</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>selRGB</color> <color=#f92672>=</color> <color=#f8f8f2>sel</color><color=#f8f8f2>.</color><color=#a6e22e>getPixels</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>selRGB</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>dstRGB</color> <color=#f92672>=</color> <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>getPixels</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>dstRGB</color><color=#f8f8f2>);</color>

            <color=#66d9ef>int</color> <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>w</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>sr</color> <color=#f92672>=</color> <color=#f8f8f2>srcRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>dir</color> <color=#f92672>=</color> <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>sg</color> <color=#f92672>=</color> <color=#f8f8f2>srcRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>dig</color> <color=#f92672>=</color> <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>sb</color> <color=#f92672>=</color> <color=#f8f8f2>srcRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>dib</color> <color=#f92672>=</color> <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>sa</color> <color=#f92672>=</color> <color=#f8f8f2>srcRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>3</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>dia</color> <color=#f92672>=</color> <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>3</color><color=#f92672>]</color><color=#f8f8f2>;</color>

                <color=#66d9ef>float</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#f8f8f2>selRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>3</color><color=#f92672>]</color> <color=#f92672>/</color> <color=#ae81ff>255</color><color=#f8f8f2>f</color><color=#f8f8f2>;</color>
                <color=#66d9ef>float</color> <color=#f8f8f2>ac</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>a</color><color=#f8f8f2>;</color>

                <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>a</color> <color=#f92672>*</color> <color=#f8f8f2>sr</color> <color=#f92672>+</color> <color=#f8f8f2>ac</color> <color=#f92672>*</color> <color=#f8f8f2>dir</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>a</color> <color=#f92672>*</color> <color=#f8f8f2>sg</color> <color=#f92672>+</color> <color=#f8f8f2>ac</color> <color=#f92672>*</color> <color=#f8f8f2>dig</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>a</color> <color=#f92672>*</color> <color=#f8f8f2>sb</color> <color=#f92672>+</color> <color=#f8f8f2>ac</color> <color=#f92672>*</color> <color=#f8f8f2>dib</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>dstRGB</color><color=#f92672>[</color><color=#f8f8f2>k</color> <color=#f92672>+</color> <color=#ae81ff>3</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>a</color> <color=#f92672>*</color> <color=#f8f8f2>sa</color> <color=#f92672>+</color> <color=#f8f8f2>ac</color> <color=#f92672>*</color> <color=#f8f8f2>dia</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>k</color> <color=#f92672>+=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>setPixels</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>dstRGB</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>dst</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>WritableRaster</color> <color=#f8f8f2>srcRaster</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getRaster</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dst</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>dst</color> <color=#f92672>=</color> <color=#f8f8f2>createCompatibleDestImage</color><color=#f8f8f2>(</color><color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>WritableRaster</color> <color=#f8f8f2>dstRaster</color> <color=#f92672>=</color> <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>getRaster</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>destination</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>maskImage</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color>
            <color=#f8f8f2>composeThroughMask</color><color=#f8f8f2>(</color><color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getRaster</color><color=#f8f8f2>(),</color> <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>getRaster</color><color=#f8f8f2>(),</color> <color=#f8f8f2>maskImage</color><color=#f8f8f2>.</color><color=#a6e22e>getRaster</color><color=#f8f8f2>());</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>dst</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Keying/Key..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>