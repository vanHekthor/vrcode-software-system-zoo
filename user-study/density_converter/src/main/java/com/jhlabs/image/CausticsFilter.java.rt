<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.jhlabs.math.Noise</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A filter which simulates underwater caustics. This can be animated to get a</color>
<color=#75715e> * bottom-of-the-swimming-pool effect.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>CausticsFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>WholeImageFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>scale</color> <color=#f92672>=</color> <color=#ae81ff>32</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>angle</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>brightness</color> <color=#f92672>=</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>amount</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>turbulence</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>dispersion</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>samples</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>bgColor</color> <color=#f92672>=</color> <color=#ae81ff>0xff799fff</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>s</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>CausticsFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the scale of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param scale the scale of the texture.</color>
<color=#75715e>     * @min-value 1</color>
<color=#75715e>     * @max-value 300+</color>
<color=#75715e>     * @see #getScale</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setScale</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>scale</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color> <color=#f92672>=</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the scale of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the scale of the texture.</color>
<color=#75715e>     * @see #setScale</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getScale</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the brightness.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param brightness the brightness.</color>
<color=#75715e>     * @min-value 0</color>
<color=#75715e>     * @max-value 1</color>
<color=#75715e>     * @see #getBrightness</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBrightness</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>brightness</color> <color=#f92672>=</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the brightness.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the brightness.</color>
<color=#75715e>     * @see #setBrightness</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getBrightness</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the turbulence of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param turbulence the turbulence of the texture.</color>
<color=#75715e>     * @min-value 0</color>
<color=#75715e>     * @max-value 1</color>
<color=#75715e>     * @see #getTurbulence</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setTurbulence</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>turbulence</color> <color=#f92672>=</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the turbulence of the effect.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the turbulence of the effect.</color>
<color=#75715e>     * @see #setTurbulence</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getTurbulence</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the amount of effect.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param amount the amount</color>
<color=#75715e>     * @min-value 0</color>
<color=#75715e>     * @max-value 1</color>
<color=#75715e>     * @see #getAmount</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAmount</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>amount</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>amount</color> <color=#f92672>=</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the amount of effect.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the amount</color>
<color=#75715e>     * @see #setAmount</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAmount</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the dispersion.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param dispersion the dispersion</color>
<color=#75715e>     * @min-value 0</color>
<color=#75715e>     * @max-value 1</color>
<color=#75715e>     * @see #getDispersion</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDispersion</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>dispersion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>dispersion</color> <color=#f92672>=</color> <color=#f8f8f2>dispersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the dispersion.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the dispersion</color>
<color=#75715e>     * @see #setDispersion</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getDispersion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>dispersion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the time. Use this to animate the effect.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param time the time</color>
<color=#75715e>     * @see #getTime</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setTime</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>time</color> <color=#f92672>=</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the time.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the time</color>
<color=#75715e>     * @see #setTime</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the number of samples per pixel. More samples means better quality, but slower rendering.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param samples the number of samples</color>
<color=#75715e>     * @see #getSamples</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setSamples</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>samples</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>samples</color> <color=#f92672>=</color> <color=#f8f8f2>samples</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the number of samples per pixel.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the number of samples</color>
<color=#75715e>     * @see #setSamples</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getSamples</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>samples</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the background color.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param c the color</color>
<color=#75715e>     * @see #getBgColor</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBgColor</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>c</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>bgColor</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the background color.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the color</color>
<color=#75715e>     * @see #setBgColor</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getBgColor</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>bgColor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#a6e22e>filterPixels</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Random</color> <color=#f8f8f2>random</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sin</color><color=#f8f8f2>(</color><color=#ae81ff>0.1</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>cos</color><color=#f8f8f2>(</color><color=#ae81ff>0.1</color><color=#f8f8f2>);</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>srcWidth</color> <color=#f92672>=</color> <color=#f8f8f2>originalSpace</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>srcHeight</color> <color=#f92672>=</color> <color=#f8f8f2>originalSpace</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>outWidth</color> <color=#f92672>=</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>outHeight</color> <color=#f92672>=</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>pixels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>outWidth</color> <color=#f92672>*</color> <color=#f8f8f2>outHeight</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>outHeight</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>outWidth</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>pixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>++]</color> <color=#f92672>=</color> <color=#f8f8f2>bgColor</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>brightness</color> <color=#f92672>/</color> <color=#f8f8f2>samples</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>rs</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color> <color=#f92672>/</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#ae81ff>0.95f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>outHeight</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>outWidth</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>s</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>s</color> <color=#f92672><</color> <color=#f8f8f2>samples</color><color=#f8f8f2>;</color> <color=#f8f8f2>s</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>float</color> <color=#f8f8f2>sx</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>();</color>
                    <color=#66d9ef>float</color> <color=#f8f8f2>sy</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>();</color>
                    <color=#66d9ef>float</color> <color=#f8f8f2>nx</color> <color=#f92672>=</color> <color=#f8f8f2>sx</color> <color=#f92672>*</color> <color=#f8f8f2>rs</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>float</color> <color=#f8f8f2>ny</color> <color=#f92672>=</color> <color=#f8f8f2>sy</color> <color=#f92672>*</color> <color=#f8f8f2>rs</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>float</color> <color=#f8f8f2>xDisplacement</color><color=#f8f8f2>,</color> <color=#f8f8f2>yDisplacement</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>float</color> <color=#f8f8f2>focus</color> <color=#f92672>=</color> <color=#ae81ff>0.1f</color> <color=#f92672>+</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>xDisplacement</color> <color=#f92672>=</color> <color=#f8f8f2>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>nx</color> <color=#f92672>-</color> <color=#f8f8f2>d</color><color=#f8f8f2>,</color> <color=#f8f8f2>ny</color><color=#f8f8f2>)</color> <color=#f92672>-</color> <color=#f8f8f2>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>nx</color> <color=#f92672>+</color> <color=#f8f8f2>d</color><color=#f8f8f2>,</color> <color=#f8f8f2>ny</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>yDisplacement</color> <color=#f92672>=</color> <color=#f8f8f2>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>nx</color><color=#f8f8f2>,</color> <color=#f8f8f2>ny</color> <color=#f92672>+</color> <color=#f8f8f2>d</color><color=#f8f8f2>)</color> <color=#f92672>-</color> <color=#f8f8f2>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>nx</color><color=#f8f8f2>,</color> <color=#f8f8f2>ny</color> <color=#f92672>-</color> <color=#f8f8f2>d</color><color=#f8f8f2>);</color>

                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dispersion</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>c</color> <color=#f92672><</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color> <color=#f8f8f2>c</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>float</color> <color=#f8f8f2>ca</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#ae81ff>1</color> <color=#f92672>+</color> <color=#f8f8f2>c</color> <color=#f92672>*</color> <color=#f8f8f2>dispersion</color><color=#f8f8f2>);</color>
                            <color=#66d9ef>float</color> <color=#f8f8f2>srcX</color> <color=#f92672>=</color> <color=#f8f8f2>sx</color> <color=#f92672>+</color> <color=#f8f8f2>scale</color> <color=#f92672>*</color> <color=#f8f8f2>focus</color> <color=#f92672>*</color> <color=#f8f8f2>xDisplacement</color> <color=#f92672>*</color> <color=#f8f8f2>ca</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>float</color> <color=#f8f8f2>srcY</color> <color=#f92672>=</color> <color=#f8f8f2>sy</color> <color=#f92672>+</color> <color=#f8f8f2>scale</color> <color=#f92672>*</color> <color=#f8f8f2>focus</color> <color=#f92672>*</color> <color=#f8f8f2>yDisplacement</color> <color=#f92672>*</color> <color=#f8f8f2>ca</color><color=#f8f8f2>;</color>

                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>srcX</color> <color=#f92672><</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>srcX</color> <color=#f92672>>=</color> <color=#f8f8f2>outWidth</color> <color=#f92672>-</color> <color=#ae81ff>1</color> <color=#f92672>||</color> <color=#f8f8f2>srcY</color> <color=#f92672><</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>srcY</color> <color=#f92672>>=</color> <color=#f8f8f2>outHeight</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcY</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>outWidth</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcX</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color> <color=#f92672>=</color> <color=#f8f8f2>pixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>c</color> <color=#f92672>==</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>r</color> <color=#f92672>+=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>c</color> <color=#f92672>==</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color> <color=#f92672>+=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>else</color> <color=#f8f8f2>b</color> <color=#f92672>+=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
                                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>pixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>}</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>float</color> <color=#f8f8f2>srcX</color> <color=#f92672>=</color> <color=#f8f8f2>sx</color> <color=#f92672>+</color> <color=#f8f8f2>scale</color> <color=#f92672>*</color> <color=#f8f8f2>focus</color> <color=#f92672>*</color> <color=#f8f8f2>xDisplacement</color><color=#f8f8f2>;</color>
                        <color=#66d9ef>float</color> <color=#f8f8f2>srcY</color> <color=#f92672>=</color> <color=#f8f8f2>sy</color> <color=#f92672>+</color> <color=#f8f8f2>scale</color> <color=#f92672>*</color> <color=#f8f8f2>focus</color> <color=#f92672>*</color> <color=#f8f8f2>yDisplacement</color><color=#f8f8f2>;</color>

                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>srcX</color> <color=#f92672><</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>srcX</color> <color=#f92672>>=</color> <color=#f8f8f2>outWidth</color> <color=#f92672>-</color> <color=#ae81ff>1</color> <color=#f92672>||</color> <color=#f8f8f2>srcY</color> <color=#f92672><</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>srcY</color> <color=#f92672>>=</color> <color=#f8f8f2>outHeight</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcY</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>outWidth</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcX</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color> <color=#f92672>=</color> <color=#f8f8f2>pixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>r</color> <color=#f92672>+=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>g</color> <color=#f92672>+=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>b</color> <color=#f92672>+=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>pixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>r</color> <color=#f92672>+=</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color> <color=#f92672>+=</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b</color> <color=#f92672>+=</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>c</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>c</color> <color=#f92672>==</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>r</color> <color=#f92672>+=</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
        <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>c</color> <color=#f92672>==</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color> <color=#f92672>+=</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
        <color=#66d9ef>else</color> <color=#f8f8f2>b</color> <color=#f92672>+=</color> <color=#f8f8f2>brightness</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#ae81ff>255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>turbulence2</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>time</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>remainder</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>lacunarity</color> <color=#f92672>=</color> <color=#ae81ff>2.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>

        <color=#75715e>// to prevent "cascading" effects</color>
        <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#ae81ff>371</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>y</color> <color=#f92672>+=</color> <color=#ae81ff>529</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>value</color> <color=#f92672>+=</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise3</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>x</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>y</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>f</color> <color=#f92672>*=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>remainder</color> <color=#f92672>=</color> <color=#f8f8f2>octaves</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>remainder</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>value</color> <color=#f92672>+=</color> <color=#f8f8f2>remainder</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise3</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>xt</color> <color=#f92672>=</color> <color=#f8f8f2>s</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>c</color> <color=#f92672>*</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>tt</color> <color=#f92672>=</color> <color=#f8f8f2>c</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>c</color> <color=#f92672>*</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>turbulence</color> <color=#f92672>==</color> <color=#ae81ff>0.0</color> <color=#f92672>?</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise3</color><color=#f8f8f2>(</color><color=#f8f8f2>xt</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>tt</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>turbulence2</color><color=#f8f8f2>(</color><color=#f8f8f2>xt</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>tt</color><color=#f8f8f2>,</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Texture/Caustics..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>