<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A filter which performs reduces noise by looking at each pixel's 8 neighbours, and if it's a</color>
<color=#75715e> * minimum or maximum, replacing it by the next minimum or maximum of the neighbours.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ReduceNoiseFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>WholeImageFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ReduceNoiseFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>smooth</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>minindex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>maxindex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MAX_VALUE</color><color=#f8f8f2>,</color> <color=#f8f8f2>max</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>MIN_VALUE</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#ae81ff>9</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>!=</color> <color=#ae81ff>4</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672><</color> <color=#f8f8f2>min</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>minindex</color> <color=#f92672>=</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>></color> <color=#f8f8f2>max</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>max</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>maxindex</color> <color=#f92672>=</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>4</color><color=#f92672>]</color> <color=#f92672><</color> <color=#f8f8f2>min</color><color=#f8f8f2>)</color> <color=#66d9ef>return</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>minindex</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>4</color><color=#f92672>]</color> <color=#f92672>></color> <color=#f8f8f2>max</color><color=#f8f8f2>)</color> <color=#66d9ef>return</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>maxindex</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>v</color><color=#f92672>[</color><color=#ae81ff>4</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#a6e22e>filterPixels</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#ae81ff>9</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#ae81ff>9</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#ae81ff>9</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>outPixels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>irgb</color> <color=#f92672>=</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>ir</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>irgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>ig</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>irgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>ib</color> <color=#f92672>=</color> <color=#f8f8f2>irgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>dy</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>dy</color> <color=#f92672><=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>dy</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>iy</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#ae81ff>0</color> <color=#f92672><=</color> <color=#f8f8f2>iy</color> <color=#f92672>&&</color> <color=#f8f8f2>iy</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>int</color> <color=#f8f8f2>ioffset</color> <color=#f92672>=</color> <color=#f8f8f2>iy</color> <color=#f92672>*</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
                        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>dx</color> <color=#f92672><=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>dx</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>ix</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#ae81ff>0</color> <color=#f92672><=</color> <color=#f8f8f2>ix</color> <color=#f92672>&&</color> <color=#f8f8f2>ix</color> <color=#f92672><</color> <color=#f8f8f2>width</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color> <color=#f92672>=</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>ioffset</color> <color=#f92672>+</color> <color=#f8f8f2>ix</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>r</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>g</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>b</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                                <color=#f8f8f2>r</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ir</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>g</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ig</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>b</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ib</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>}</color>
                            <color=#f8f8f2>k</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>dx</color> <color=#f92672><=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>dx</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>r</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ir</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>g</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ig</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>b</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ib</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>k</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>
                <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>=</color>
                        <color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>&</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>smooth</color><color=#f8f8f2>(</color><color=#f8f8f2>r</color><color=#f8f8f2>)</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>smooth</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color><color=#f8f8f2>)</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>smooth</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>index</color><color=#f92672>++</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Blur/Smooth"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>