<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A class to emboss an image.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>EmbossFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>WholeImageFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>pixelScale</color> <color=#f92672>=</color> <color=#ae81ff>255.9f</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>azimuth</color> <color=#f92672>=</color> <color=#ae81ff>135.0f</color> <color=#f92672>*</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>PI</color> <color=#f92672>/</color> <color=#ae81ff>180.0f</color><color=#f8f8f2>,</color> <color=#f8f8f2>elevation</color> <color=#f92672>=</color> <color=#ae81ff>30.0f</color> <color=#f92672>*</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>PI</color> <color=#f92672>/</color> <color=#ae81ff>180</color><color=#f8f8f2>f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>emboss</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>width45</color> <color=#f92672>=</color> <color=#ae81ff>3.0f</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>EmbossFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAzimuth</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>azimuth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>azimuth</color> <color=#f92672>=</color> <color=#f8f8f2>azimuth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAzimuth</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>azimuth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setElevation</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>elevation</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>elevation</color> <color=#f92672>=</color> <color=#f8f8f2>elevation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getElevation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>elevation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBumpHeight</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>bumpHeight</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>width45</color> <color=#f92672>=</color> <color=#ae81ff>3</color> <color=#f92672>*</color> <color=#f8f8f2>bumpHeight</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getBumpHeight</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>width45</color> <color=#f92672>/</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setEmboss</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>emboss</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>emboss</color> <color=#f92672>=</color> <color=#f8f8f2>emboss</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getEmboss</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>emboss</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#a6e22e>filterPixels</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>outPixels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>bumpPixels</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>bumpMapWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>bumpMapHeight</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>bumpMapWidth</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bumpMapHeight</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>bumpPixels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>bumpMapWidth</color> <color=#f92672>*</color> <color=#f8f8f2>bumpMapHeight</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>brightness</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>Nx</color><color=#f8f8f2>,</color> <color=#f8f8f2>Ny</color><color=#f8f8f2>,</color> <color=#f8f8f2>Nz</color><color=#f8f8f2>,</color> <color=#f8f8f2>Lx</color><color=#f8f8f2>,</color> <color=#f8f8f2>Ly</color><color=#f8f8f2>,</color> <color=#f8f8f2>Lz</color><color=#f8f8f2>,</color> <color=#f8f8f2>Nz2</color><color=#f8f8f2>,</color> <color=#f8f8f2>NzLz</color><color=#f8f8f2>,</color> <color=#f8f8f2>NdotL</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>shade</color><color=#f8f8f2>,</color> <color=#f8f8f2>background</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>Lx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>cos</color><color=#f8f8f2>(</color><color=#f8f8f2>azimuth</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>cos</color><color=#f8f8f2>(</color><color=#f8f8f2>elevation</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>pixelScale</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Ly</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sin</color><color=#f8f8f2>(</color><color=#f8f8f2>azimuth</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>cos</color><color=#f8f8f2>(</color><color=#f8f8f2>elevation</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>pixelScale</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Lz</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sin</color><color=#f8f8f2>(</color><color=#f8f8f2>elevation</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>pixelScale</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>Nz</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>6</color> <color=#f92672>*</color> <color=#ae81ff>255</color> <color=#f92672>/</color> <color=#f8f8f2>width45</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Nz2</color> <color=#f92672>=</color> <color=#f8f8f2>Nz</color> <color=#f92672>*</color> <color=#f8f8f2>Nz</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>NzLz</color> <color=#f92672>=</color> <color=#f8f8f2>Nz</color> <color=#f92672>*</color> <color=#f8f8f2>Lz</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>background</color> <color=#f92672>=</color> <color=#f8f8f2>Lz</color><color=#f8f8f2>;</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>bumpIndex</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>,</color> <color=#f8f8f2>bumpIndex</color> <color=#f92672>+=</color> <color=#f8f8f2>bumpMapWidth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>s1</color> <color=#f92672>=</color> <color=#f8f8f2>bumpIndex</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>s2</color> <color=#f92672>=</color> <color=#f8f8f2>s1</color> <color=#f92672>+</color> <color=#f8f8f2>bumpMapWidth</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>s3</color> <color=#f92672>=</color> <color=#f8f8f2>s2</color> <color=#f92672>+</color> <color=#f8f8f2>bumpMapWidth</color><color=#f8f8f2>;</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>,</color> <color=#f8f8f2>s1</color><color=#f92672>++</color><color=#f8f8f2>,</color> <color=#f8f8f2>s2</color><color=#f92672>++</color><color=#f8f8f2>,</color> <color=#f8f8f2>s3</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>!=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color> <color=#f92672>-</color> <color=#ae81ff>2</color> <color=#f92672>&&</color> <color=#f8f8f2>x</color> <color=#f92672>!=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>Nx</color> <color=#f92672>=</color>
                            <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s1</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>+</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s2</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>+</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s3</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>-</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s1</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>-</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s2</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>-</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s3</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>Ny</color> <color=#f92672>=</color>
                            <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s3</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>+</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s3</color><color=#f92672>]</color>
                                    <color=#f92672>+</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s3</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>-</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s1</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color>
                                    <color=#f92672>-</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s1</color><color=#f92672>]</color>
                                    <color=#f92672>-</color> <color=#f8f8f2>bumpPixels</color><color=#f92672>[</color><color=#f8f8f2>s1</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Nx</color> <color=#f92672>==</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>Ny</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>shade</color> <color=#f92672>=</color> <color=#f8f8f2>background</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>NdotL</color> <color=#f92672>=</color> <color=#f8f8f2>Nx</color> <color=#f92672>*</color> <color=#f8f8f2>Lx</color> <color=#f92672>+</color> <color=#f8f8f2>Ny</color> <color=#f92672>*</color> <color=#f8f8f2>Ly</color> <color=#f92672>+</color> <color=#f8f8f2>NzLz</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>shade</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>else</color> <color=#f8f8f2>shade</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>NdotL</color> <color=#f92672>/</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sqrt</color><color=#f8f8f2>(</color><color=#f8f8f2>Nx</color> <color=#f92672>*</color> <color=#f8f8f2>Nx</color> <color=#f92672>+</color> <color=#f8f8f2>Ny</color> <color=#f92672>*</color> <color=#f8f8f2>Ny</color> <color=#f92672>+</color> <color=#f8f8f2>Nz2</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>shade</color> <color=#f92672>=</color> <color=#f8f8f2>background</color><color=#f8f8f2>;</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>emboss</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color> <color=#f92672>=</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>*</color> <color=#f8f8f2>shade</color><color=#f8f8f2>)</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>*</color> <color=#f8f8f2>shade</color><color=#f8f8f2>)</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>*</color> <color=#f8f8f2>shade</color><color=#f8f8f2>)</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>++]</color> <color=#f92672>=</color> <color=#f8f8f2>a</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>++]</color> <color=#f92672>=</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>shade</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>shade</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>shade</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Stylize/Emboss..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>