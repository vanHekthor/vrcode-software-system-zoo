<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.geom.AffineTransform</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A filter which renders text onto an image.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>RenderTextFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>AbstractBufferedImageOp</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>text</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Font</color> <color=#f8f8f2>font</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Paint</color> <color=#f8f8f2>paint</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Composite</color> <color=#f8f8f2>composite</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>AffineTransform</color> <color=#f8f8f2>transform</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct a RenderTextFilter.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>RenderTextFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct a RenderTextFilter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param text      the text</color>
<color=#75715e>     * @param font      the font to use (may be null)</color>
<color=#75715e>     * @param paint     the paint (may be null)</color>
<color=#75715e>     * @param composite the composite (may be null)</color>
<color=#75715e>     * @param transform the transform (may be null)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>RenderTextFilter</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>text</color><color=#f8f8f2>,</color> <color=#f8f8f2>Font</color> <color=#f8f8f2>font</color><color=#f8f8f2>,</color> <color=#f8f8f2>Paint</color> <color=#f8f8f2>paint</color><color=#f8f8f2>,</color> <color=#f8f8f2>Composite</color> <color=#f8f8f2>composite</color><color=#f8f8f2>,</color> <color=#f8f8f2>AffineTransform</color> <color=#f8f8f2>transform</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>text</color> <color=#f92672>=</color> <color=#f8f8f2>text</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>font</color> <color=#f92672>=</color> <color=#f8f8f2>font</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>composite</color> <color=#f92672>=</color> <color=#f8f8f2>composite</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>paint</color> <color=#f92672>=</color> <color=#f8f8f2>paint</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>transform</color> <color=#f92672>=</color> <color=#f8f8f2>transform</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the text to paint.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param text the text</color>
<color=#75715e>     * @see #getText</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setText</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>text</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>text</color> <color=#f92672>=</color> <color=#f8f8f2>text</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the text to paint.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the text</color>
<color=#75715e>     * @see #setText</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getText</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>text</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the composite with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param composite the composite</color>
<color=#75715e>     * @see #getComposite</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setComposite</color><color=#f8f8f2>(</color><color=#f8f8f2>Composite</color> <color=#f8f8f2>composite</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>composite</color> <color=#f92672>=</color> <color=#f8f8f2>composite</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the composite with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the composite</color>
<color=#75715e>     * @see #setComposite</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Composite</color> <color=#a6e22e>getComposite</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>composite</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the paint with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param paint the paint</color>
<color=#75715e>     * @see #getPaint</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setPaint</color><color=#f8f8f2>(</color><color=#f8f8f2>Paint</color> <color=#f8f8f2>paint</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>paint</color> <color=#f92672>=</color> <color=#f8f8f2>paint</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the paint with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the paint</color>
<color=#75715e>     * @see #setPaint</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Paint</color> <color=#a6e22e>getPaint</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>paint</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the font with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param font the font</color>
<color=#75715e>     * @see #getFont</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setFont</color><color=#f8f8f2>(</color><color=#f8f8f2>Font</color> <color=#f8f8f2>font</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>font</color> <color=#f92672>=</color> <color=#f8f8f2>font</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the font with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the font</color>
<color=#75715e>     * @see #setFont</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Font</color> <color=#a6e22e>getFont</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>font</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the transform with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param transform the transform</color>
<color=#75715e>     * @see #getTransform</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setTransform</color><color=#f8f8f2>(</color><color=#f8f8f2>AffineTransform</color> <color=#f8f8f2>transform</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>transform</color> <color=#f92672>=</color> <color=#f8f8f2>transform</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the transform with which to paint the text.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the transform</color>
<color=#75715e>     * @see #setTransform</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>AffineTransform</color> <color=#a6e22e>getTransform</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>transform</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>dst</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dst</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>dst</color> <color=#f92672>=</color> <color=#f8f8f2>createCompatibleDestImage</color><color=#f8f8f2>(</color><color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>Graphics2D</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>createGraphics</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setRenderingHint</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>KEY_TEXT_ANTIALIASING</color><color=#f8f8f2>,</color> <color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_TEXT_ANTIALIAS_ON</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>font</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setFont</color><color=#f8f8f2>(</color><color=#f8f8f2>font</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>transform</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setTransform</color><color=#f8f8f2>(</color><color=#f8f8f2>transform</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>composite</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setComposite</color><color=#f8f8f2>(</color><color=#f8f8f2>composite</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>paint</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setPaint</color><color=#f8f8f2>(</color><color=#f8f8f2>paint</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>text</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>drawString</color><color=#f8f8f2>(</color><color=#f8f8f2>text</color><color=#f8f8f2>,</color> <color=#ae81ff>10</color><color=#f8f8f2>,</color> <color=#ae81ff>100</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>dispose</color><color=#f8f8f2>();</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>dst</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>