<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Date</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>PlasmaFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>WholeImageFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>turbulence</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>scaling</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Colormap</color> <color=#f8f8f2>colormap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LinearColormap</color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Random</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>seed</color> <color=#f92672>=</color> <color=#ae81ff>567</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>useColormap</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>useImageColors</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>PlasmaFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>randomGenerator</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the turbulence of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param turbulence the turbulence of the texture.</color>
<color=#75715e>     * @min-value 0</color>
<color=#75715e>     * @max-value 10</color>
<color=#75715e>     * @see #getTurbulence</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setTurbulence</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>turbulence</color> <color=#f92672>=</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the turbulence of the effect.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the turbulence of the effect.</color>
<color=#75715e>     * @see #setTurbulence</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getTurbulence</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setScaling</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>scaling</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>scaling</color> <color=#f92672>=</color> <color=#f8f8f2>scaling</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getScaling</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>scaling</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the colormap to be used for the filter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param colormap the colormap</color>
<color=#75715e>     * @see #getColormap</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setColormap</color><color=#f8f8f2>(</color><color=#f8f8f2>Colormap</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>colormap</color> <color=#f92672>=</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the colormap to be used for the filter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the colormap</color>
<color=#75715e>     * @see #setColormap</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Colormap</color> <color=#a6e22e>getColormap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setUseColormap</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>useColormap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>useColormap</color> <color=#f92672>=</color> <color=#f8f8f2>useColormap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getUseColormap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>useColormap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setUseImageColors</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>useImageColors</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>useImageColors</color> <color=#f92672>=</color> <color=#f8f8f2>useImageColors</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getUseImageColors</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>useImageColors</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setSeed</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>seed</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>seed</color> <color=#f92672>=</color> <color=#f8f8f2>seed</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getSeed</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>seed</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>randomize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>seed</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Date</color><color=#f8f8f2>().</color><color=#a6e22e>getTime</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>randomRGB</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>useImageColors</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>originalSpace</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>255</color> <color=#f92672>*</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>());</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>255</color> <color=#f92672>*</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>());</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>255</color> <color=#f92672>*</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>());</color>
            <color=#66d9ef>return</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>displace</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>amount</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>clamp</color><color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>amount</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>0.5</color><color=#f8f8f2>)));</color>
        <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>clamp</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>amount</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>0.5</color><color=#f8f8f2>)));</color>
        <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>clamp</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>amount</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>0.5</color><color=#f8f8f2>)));</color>
        <color=#66d9ef>return</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>average</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>rgb1</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>combinePixels</color><color=#f8f8f2>(</color><color=#f8f8f2>rgb1</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>,</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>AVERAGE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#a6e22e>getPixel</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>stride</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>pixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>stride</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>putPixel</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>stride</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>pixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>stride</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#a6e22e>doPixel</color><color=#f8f8f2>(</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>stride</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>depth</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>scale</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>depth</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>ml</color><color=#f8f8f2>,</color> <color=#f8f8f2>mr</color><color=#f8f8f2>,</color> <color=#f8f8f2>mt</color><color=#f8f8f2>,</color> <color=#f8f8f2>mb</color><color=#f8f8f2>,</color> <color=#f8f8f2>mm</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>

            <color=#66d9ef>int</color> <color=#f8f8f2>tl</color> <color=#f92672>=</color> <color=#f8f8f2>getPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>bl</color> <color=#f92672>=</color> <color=#f8f8f2>getPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>tr</color> <color=#f92672>=</color> <color=#f8f8f2>getPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>br</color> <color=#f92672>=</color> <color=#f8f8f2>getPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>

            <color=#66d9ef>float</color> <color=#f8f8f2>amount</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#ae81ff>256.0f</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#ae81ff>2.0f</color> <color=#f92672>*</color> <color=#f8f8f2>scale</color><color=#f8f8f2>))</color> <color=#f92672>*</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>mx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>x1</color> <color=#f92672>+</color> <color=#f8f8f2>x2</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>my</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>y1</color> <color=#f92672>+</color> <color=#f8f8f2>y2</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>mx</color> <color=#f92672>==</color> <color=#f8f8f2>x1</color> <color=#f92672>&&</color> <color=#f8f8f2>mx</color> <color=#f92672>==</color> <color=#f8f8f2>x2</color> <color=#f92672>&&</color> <color=#f8f8f2>my</color> <color=#f92672>==</color> <color=#f8f8f2>y1</color> <color=#f92672>&&</color> <color=#f8f8f2>my</color> <color=#f92672>==</color> <color=#f8f8f2>y2</color><color=#f8f8f2>)</color> <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>mx</color> <color=#f92672>!=</color> <color=#f8f8f2>x1</color> <color=#f92672>||</color> <color=#f8f8f2>mx</color> <color=#f92672>!=</color> <color=#f8f8f2>x2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>ml</color> <color=#f92672>=</color> <color=#f8f8f2>average</color><color=#f8f8f2>(</color><color=#f8f8f2>tl</color><color=#f8f8f2>,</color> <color=#f8f8f2>bl</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>ml</color> <color=#f92672>=</color> <color=#f8f8f2>displace</color><color=#f8f8f2>(</color><color=#f8f8f2>ml</color><color=#f8f8f2>,</color> <color=#f8f8f2>amount</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>,</color> <color=#f8f8f2>ml</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x1</color> <color=#f92672>!=</color> <color=#f8f8f2>x2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>mr</color> <color=#f92672>=</color> <color=#f8f8f2>average</color><color=#f8f8f2>(</color><color=#f8f8f2>tr</color><color=#f8f8f2>,</color> <color=#f8f8f2>br</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>mr</color> <color=#f92672>=</color> <color=#f8f8f2>displace</color><color=#f8f8f2>(</color><color=#f8f8f2>mr</color><color=#f8f8f2>,</color> <color=#f8f8f2>amount</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>,</color> <color=#f8f8f2>mr</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>my</color> <color=#f92672>!=</color> <color=#f8f8f2>y1</color> <color=#f92672>||</color> <color=#f8f8f2>my</color> <color=#f92672>!=</color> <color=#f8f8f2>y2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x1</color> <color=#f92672>!=</color> <color=#f8f8f2>mx</color> <color=#f92672>||</color> <color=#f8f8f2>my</color> <color=#f92672>!=</color> <color=#f8f8f2>y2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>mb</color> <color=#f92672>=</color> <color=#f8f8f2>average</color><color=#f8f8f2>(</color><color=#f8f8f2>bl</color><color=#f8f8f2>,</color> <color=#f8f8f2>br</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>mb</color> <color=#f92672>=</color> <color=#f8f8f2>displace</color><color=#f8f8f2>(</color><color=#f8f8f2>mb</color><color=#f8f8f2>,</color> <color=#f8f8f2>amount</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>mb</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>y1</color> <color=#f92672>!=</color> <color=#f8f8f2>y2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>mt</color> <color=#f92672>=</color> <color=#f8f8f2>average</color><color=#f8f8f2>(</color><color=#f8f8f2>tl</color><color=#f8f8f2>,</color> <color=#f8f8f2>tr</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>mt</color> <color=#f92672>=</color> <color=#f8f8f2>displace</color><color=#f8f8f2>(</color><color=#f8f8f2>mt</color><color=#f8f8f2>,</color> <color=#f8f8f2>amount</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>mt</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>y1</color> <color=#f92672>!=</color> <color=#f8f8f2>y2</color> <color=#f92672>||</color> <color=#f8f8f2>x1</color> <color=#f92672>!=</color> <color=#f8f8f2>x2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>mm</color> <color=#f92672>=</color> <color=#f8f8f2>average</color><color=#f8f8f2>(</color><color=#f8f8f2>tl</color><color=#f8f8f2>,</color> <color=#f8f8f2>br</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>average</color><color=#f8f8f2>(</color><color=#f8f8f2>bl</color><color=#f8f8f2>,</color> <color=#f8f8f2>tr</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>mm</color> <color=#f92672>=</color> <color=#f8f8f2>average</color><color=#f8f8f2>(</color><color=#f8f8f2>mm</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>mm</color> <color=#f92672>=</color> <color=#f8f8f2>displace</color><color=#f8f8f2>(</color><color=#f8f8f2>mm</color><color=#f8f8f2>,</color> <color=#f8f8f2>amount</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>,</color> <color=#f8f8f2>mm</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x2</color> <color=#f92672>-</color> <color=#f8f8f2>x1</color> <color=#f92672><</color> <color=#ae81ff>3</color> <color=#f92672>&&</color> <color=#f8f8f2>y2</color> <color=#f92672>-</color> <color=#f8f8f2>y1</color> <color=#f92672><</color> <color=#ae81ff>3</color><color=#f8f8f2>)</color> <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>mx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>x1</color> <color=#f92672>+</color> <color=#f8f8f2>x2</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>my</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>y1</color> <color=#f92672>+</color> <color=#f8f8f2>y2</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>doPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>,</color> <color=#f8f8f2>depth</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>doPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x1</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>,</color> <color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>,</color> <color=#f8f8f2>depth</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>doPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>y1</color><color=#f8f8f2>,</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>,</color> <color=#f8f8f2>depth</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>doPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>my</color><color=#f8f8f2>,</color> <color=#f8f8f2>x2</color><color=#f8f8f2>,</color> <color=#f8f8f2>y2</color><color=#f8f8f2>,</color> <color=#f8f8f2>pixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>stride</color><color=#f8f8f2>,</color> <color=#f8f8f2>depth</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#a6e22e>filterPixels</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>outPixels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>setSeed</color><color=#f8f8f2>(</color><color=#f8f8f2>seed</color><color=#f8f8f2>);</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>w1</color> <color=#f92672>=</color> <color=#f8f8f2>width</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>h1</color> <color=#f92672>=</color> <color=#f8f8f2>height</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>w1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>w1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>w1</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>w1</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>w1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>w1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>w1</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>w1</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>w1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>w1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>putPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>w1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color><color=#f8f8f2>,</color> <color=#f8f8f2>randomRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>w1</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>h1</color><color=#f8f8f2>),</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>);</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>depth</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>doPixel</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>depth</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>))</color> <color=#f8f8f2>depth</color><color=#f92672>++</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>useColormap</color> <color=#f92672>&&</color> <color=#f8f8f2>colormap</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>.</color><color=#a6e22e>getColor</color><color=#f8f8f2>((</color><color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>255.0f</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>index</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Texture/Plasma..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>