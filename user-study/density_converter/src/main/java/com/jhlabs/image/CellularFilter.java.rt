<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.jhlabs.math.Function2D</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.jhlabs.math.Noise</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A filter which produces an image with a cellular texture.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>CellularFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>WholeImageFilter</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Function2D</color><color=#f8f8f2>,</color> <color=#f8f8f2>Cloneable</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>scale</color> <color=#f92672>=</color> <color=#ae81ff>32</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>stretch</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>angle</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>amount</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>turbulence</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>gain</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>bias</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>distancePower</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>useColor</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>Colormap</color> <color=#f8f8f2>colormap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Gradient</color><color=#f8f8f2>();</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>coefficients</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>};</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>angleCoefficient</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>Random</color> <color=#f8f8f2>random</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>();</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>m00</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>m01</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>m10</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>m11</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>Point</color><color=#f92672>[]</color> <color=#f8f8f2>results</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>float</color> <color=#f8f8f2>randomness</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>int</color> <color=#f8f8f2>gridType</color> <color=#f92672>=</color> <color=#f8f8f2>HEXAGONAL</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>min</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>max</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>probabilities</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>gradientCoefficient</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>RANDOM</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>SQUARE</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>HEXAGONAL</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>OCTAGONAL</color> <color=#f92672>=</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>TRIANGULAR</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>CellularFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>results</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Point</color><color=#f92672>[</color><color=#ae81ff>3</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Point</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>probabilities</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>probabilities</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>8192</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>factorial</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>total</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>mean</color> <color=#f92672>=</color> <color=#ae81ff>2.5f</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>factorial</color> <color=#f92672>*=</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
                <color=#66d9ef>float</color> <color=#f8f8f2>probability</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>mean</color><color=#f8f8f2>,</color> <color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>exp</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>mean</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>factorial</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>total</color> <color=#f92672>*</color> <color=#ae81ff>8192</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>total</color> <color=#f92672>+=</color> <color=#f8f8f2>probability</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>end</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>total</color> <color=#f92672>*</color> <color=#ae81ff>8192</color><color=#f8f8f2>);</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>start</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>end</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>probabilities</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the scale of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param scale the scale of the texture.</color>
<color=#75715e>     * @min-value 1</color>
<color=#75715e>     * @max-value 300+</color>
<color=#75715e>     * @see #getScale</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setScale</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>scale</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color> <color=#f92672>=</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the scale of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the scale of the texture.</color>
<color=#75715e>     * @see #setScale</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getScale</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the stretch factor of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param stretch the stretch factor of the texture.</color>
<color=#75715e>     * @min-value 1</color>
<color=#75715e>     * @max-value 50+</color>
<color=#75715e>     * @see #getStretch</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setStretch</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>stretch</color> <color=#f92672>=</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the stretch factor of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the stretch factor of the texture.</color>
<color=#75715e>     * @see #setStretch</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getStretch</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the angle of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param angle the angle of the texture.</color>
<color=#75715e>     * @angle</color>
<color=#75715e>     * @see #getAngle</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAngle</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>angle</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>angle</color> <color=#f92672>=</color> <color=#f8f8f2>angle</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>cos</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>cos</color><color=#f8f8f2>(</color><color=#f8f8f2>angle</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>sin</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sin</color><color=#f8f8f2>(</color><color=#f8f8f2>angle</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>m00</color> <color=#f92672>=</color> <color=#f8f8f2>cos</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>m01</color> <color=#f92672>=</color> <color=#f8f8f2>sin</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>m10</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#f8f8f2>sin</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>m11</color> <color=#f92672>=</color> <color=#f8f8f2>cos</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the angle of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the angle of the texture.</color>
<color=#75715e>     * @see #setAngle</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAngle</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>angle</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCoefficient</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getCoefficient</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAngleCoefficient</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>angleCoefficient</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>angleCoefficient</color> <color=#f92672>=</color> <color=#f8f8f2>angleCoefficient</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAngleCoefficient</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>angleCoefficient</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setGradientCoefficient</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>gradientCoefficient</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>gradientCoefficient</color> <color=#f92672>=</color> <color=#f8f8f2>gradientCoefficient</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getGradientCoefficient</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>gradientCoefficient</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setF1</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getF1</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setF2</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getF2</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setF3</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getF3</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setF4</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>v</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>3</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getF4</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>3</color><color=#f92672>]</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the colormap to be used for the filter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param colormap the colormap</color>
<color=#75715e>     * @see #getColormap</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setColormap</color><color=#f8f8f2>(</color><color=#f8f8f2>Colormap</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>colormap</color> <color=#f92672>=</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the colormap to be used for the filter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the colormap</color>
<color=#75715e>     * @see #setColormap</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Colormap</color> <color=#a6e22e>getColormap</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setRandomness</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>randomness</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>randomness</color> <color=#f92672>=</color> <color=#f8f8f2>randomness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getRandomness</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>randomness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setGridType</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>gridType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>gridType</color> <color=#f92672>=</color> <color=#f8f8f2>gridType</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getGridType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>gridType</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDistancePower</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>distancePower</color> <color=#f92672>=</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getDistancePower</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the turbulence of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param turbulence the turbulence of the texture.</color>
<color=#75715e>     * @min-value 0</color>
<color=#75715e>     * @max-value 1</color>
<color=#75715e>     * @see #getTurbulence</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setTurbulence</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>turbulence</color> <color=#f92672>=</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the turbulence of the effect.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the turbulence of the effect.</color>
<color=#75715e>     * @see #setTurbulence</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getTurbulence</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the amount of effect.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param amount the amount</color>
<color=#75715e>     * @min-value 0</color>
<color=#75715e>     * @max-value 1</color>
<color=#75715e>     * @see #getAmount</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAmount</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>amount</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>amount</color> <color=#f92672>=</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the amount of texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the amount</color>
<color=#75715e>     * @see #setAmount</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAmount</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Point</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#f8f8f2>index</color><color=#f8f8f2>;</color>
        <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>dx</color><color=#f8f8f2>,</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
        <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>cubeX</color><color=#f8f8f2>,</color> <color=#f8f8f2>cubeY</color><color=#f8f8f2>;</color>
        <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#f8f8f2>distance</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#a6e22e>checkCube</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>cubeX</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>cubeY</color><color=#f8f8f2>,</color> <color=#f8f8f2>Point</color><color=#f92672>[]</color> <color=#f8f8f2>results</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>numPoints</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>setSeed</color><color=#f8f8f2>(</color><color=#ae81ff>571</color> <color=#f92672>*</color> <color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#ae81ff>23</color> <color=#f92672>*</color> <color=#f8f8f2>cubeY</color><color=#f8f8f2>);</color>
        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>gridType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>RANDOM</color><color=#f8f8f2>:</color>
            <color=#66d9ef>default</color><color=#f8f8f2>:</color>
                <color=#f8f8f2>numPoints</color> <color=#f92672>=</color> <color=#f8f8f2>probabilities</color><color=#f92672>[</color><color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x1fff</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>SQUARE</color><color=#f8f8f2>:</color>
                <color=#f8f8f2>numPoints</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>HEXAGONAL</color><color=#f8f8f2>:</color>
                <color=#f8f8f2>numPoints</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>OCTAGONAL</color><color=#f8f8f2>:</color>
                <color=#f8f8f2>numPoints</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>TRIANGULAR</color><color=#f8f8f2>:</color>
                <color=#f8f8f2>numPoints</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>numPoints</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>weight</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
            <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>gridType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>case</color> <color=#f8f8f2>RANDOM</color><color=#f8f8f2>:</color>
                    <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>();</color>
                    <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>();</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#66d9ef>case</color> <color=#f8f8f2>SQUARE</color><color=#f8f8f2>:</color>
                    <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomness</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>px</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>0.5</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>py</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>random</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>0.5</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#66d9ef>case</color> <color=#f8f8f2>HEXAGONAL</color><color=#f8f8f2>:</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>cubeX</color> <color=#f92672>&</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.75f</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.75f</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomness</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>px</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise2</color><color=#f8f8f2>(</color><color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>),</color> <color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>));</color>
                        <color=#f8f8f2>py</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise2</color><color=#f8f8f2>(</color><color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>89</color><color=#f8f8f2>,</color> <color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>137</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#66d9ef>case</color> <color=#f8f8f2>OCTAGONAL</color><color=#f8f8f2>:</color>
                    <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>case</color> <color=#ae81ff>0</color><color=#f8f8f2>:</color>
                            <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.207f</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.207f</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                        <color=#66d9ef>case</color> <color=#ae81ff>1</color><color=#f8f8f2>:</color>
                            <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.707f</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.707f</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>weight</color> <color=#f92672>=</color> <color=#ae81ff>1.6f</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomness</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>px</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise2</color><color=#f8f8f2>(</color><color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>),</color> <color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>));</color>
                        <color=#f8f8f2>py</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise2</color><color=#f8f8f2>(</color><color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>89</color><color=#f8f8f2>,</color> <color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>137</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#66d9ef>case</color> <color=#f8f8f2>TRIANGULAR</color><color=#f8f8f2>:</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>cubeY</color> <color=#f92672>&</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.25f</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.35f</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.75f</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.65f</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.75f</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.35f</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>px</color> <color=#f92672>=</color> <color=#ae81ff>0.25f</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>py</color> <color=#f92672>=</color> <color=#ae81ff>0.65f</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomness</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>px</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise2</color><color=#f8f8f2>(</color><color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>),</color> <color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>));</color>
                        <color=#f8f8f2>py</color> <color=#f92672>+=</color> <color=#f8f8f2>randomness</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise2</color><color=#f8f8f2>(</color><color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>89</color><color=#f8f8f2>,</color> <color=#ae81ff>271</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#ae81ff>137</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>px</color><color=#f8f8f2>);</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>dy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>py</color><color=#f8f8f2>);</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>d</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>dx</color> <color=#f92672>*=</color> <color=#f8f8f2>weight</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>dy</color> <color=#f92672>*=</color> <color=#f8f8f2>weight</color><color=#f8f8f2>;</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>distancePower</color> <color=#f92672>==</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>dx</color> <color=#f92672>+</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
            <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>distancePower</color> <color=#f92672>==</color> <color=#ae81ff>2.0f</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sqrt</color><color=#f8f8f2>(</color><color=#f8f8f2>dx</color> <color=#f92672>*</color> <color=#f8f8f2>dx</color> <color=#f92672>+</color> <color=#f8f8f2>dy</color> <color=#f92672>*</color> <color=#f8f8f2>dy</color><color=#f8f8f2>);</color>
            <color=#66d9ef>else</color>
                <color=#f8f8f2>d</color> <color=#f92672>=</color>
                        <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color>
                                <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color>
                                        <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>dx</color><color=#f8f8f2>,</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>dy</color><color=#f8f8f2>,</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>),</color>
                                        <color=#ae81ff>1</color> <color=#f92672>/</color> <color=#f8f8f2>distancePower</color><color=#f8f8f2>);</color>

            <color=#75715e>// Insertion sort the long way round to speed it up a bit</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Point</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>d</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>dx</color> <color=#f92672>=</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>dy</color> <color=#f92672>=</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>x</color> <color=#f92672>=</color> <color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>y</color> <color=#f92672>=</color> <color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Point</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>d</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>dx</color> <color=#f92672>=</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>dy</color> <color=#f92672>=</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>x</color> <color=#f92672>=</color> <color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>y</color> <color=#f92672>=</color> <color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Point</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>d</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>dx</color> <color=#f92672>=</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>dy</color> <color=#f92672>=</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>x</color> <color=#f92672>=</color> <color=#f8f8f2>cubeX</color> <color=#f92672>+</color> <color=#f8f8f2>px</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>y</color> <color=#f92672>=</color> <color=#f8f8f2>cubeY</color> <color=#f92672>+</color> <color=#f8f8f2>py</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>Float</color><color=#f8f8f2>.</color><color=#a6e22e>POSITIVE_INFINITY</color><color=#f8f8f2>;</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>ix</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>iy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>fx</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>ix</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>fy</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>iy</color><color=#f8f8f2>;</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fx</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fx</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672>></color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>fy</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>checkCube</color><color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>fy</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>ix</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>iy</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>results</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>*</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>angleCoefficient</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>angle</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>atan2</color><color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>x</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>angle</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>angle</color> <color=#f92672>+=</color> <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>PI</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>angle</color> <color=#f92672>/=</color> <color=#ae81ff>4</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>PI</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>angleCoefficient</color> <color=#f92672>*</color> <color=#f8f8f2>angle</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>gradientCoefficient</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>dy</color> <color=#f92672>+</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>dx</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>gradientCoefficient</color> <color=#f92672>*</color> <color=#f8f8f2>a</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>turbulence2</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>freq</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color> <color=#f8f8f2>f</color> <color=#f92672><=</color> <color=#f8f8f2>freq</color><color=#f8f8f2>;</color> <color=#f8f8f2>f</color> <color=#f92672>*=</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>t</color> <color=#f92672>+=</color> <color=#f8f8f2>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getPixel</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>nx</color> <color=#f92672>=</color> <color=#f8f8f2>m00</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>m01</color> <color=#f92672>*</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ny</color> <color=#f92672>=</color> <color=#f8f8f2>m10</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>m11</color> <color=#f92672>*</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>nx</color> <color=#f92672>/=</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ny</color> <color=#f92672>/=</color> <color=#f8f8f2>scale</color> <color=#f92672>*</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>nx</color> <color=#f92672>+=</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ny</color> <color=#f92672>+=</color> <color=#ae81ff>1000</color><color=#f8f8f2>;</color> <color=#75715e>// Reduce artifacts around 0,0</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>turbulence</color> <color=#f92672>==</color> <color=#ae81ff>1.0f</color> <color=#f92672>?</color> <color=#f8f8f2>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>nx</color><color=#f8f8f2>,</color> <color=#f8f8f2>ny</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>turbulence2</color><color=#f8f8f2>(</color><color=#f8f8f2>nx</color><color=#f8f8f2>,</color> <color=#f8f8f2>ny</color><color=#f8f8f2>,</color> <color=#f8f8f2>turbulence</color><color=#f8f8f2>);</color>
        <color=#75715e>// Normalize to 0..1</color>
        <color=#75715e>//		f = (f-min)/(max-min);</color>
        <color=#f8f8f2>f</color> <color=#f92672>*=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>f</color> <color=#f92672>*=</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>colormap</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>colormap</color><color=#f8f8f2>.</color><color=#a6e22e>getColor</color><color=#f8f8f2>(</color><color=#f8f8f2>f</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>useColor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>srcx</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>clamp</color><color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>x</color> <color=#f92672>-</color> <color=#ae81ff>1000</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>scale</color><color=#f8f8f2>),</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>srcy</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>clamp</color><color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>y</color> <color=#f92672>-</color> <color=#ae81ff>1000</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>scale</color><color=#f8f8f2>),</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>srcy</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>srcx</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>f</color> <color=#f92672>=</color>
                        <color=#f8f8f2>(</color><color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>-</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>)</color>
                                <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>+</color> <color=#f8f8f2>results</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>smoothStep</color><color=#f8f8f2>(</color><color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>coefficients</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>f</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>f</color><color=#f8f8f2>,</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>clamp</color><color=#f8f8f2>((</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#ae81ff>255</color><color=#f8f8f2>));</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>v</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>v</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>a</color> <color=#f92672>|</color> <color=#f8f8f2>r</color> <color=#f92672>|</color> <color=#f8f8f2>g</color> <color=#f92672>|</color> <color=#f8f8f2>b</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#a6e22e>filterPixels</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>//		float[] minmax = Noise.findRange(this, null);</color>
        <color=#75715e>//		min = minmax[0];</color>
        <color=#75715e>//		max = minmax[1];</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>outPixels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>++]</color> <color=#f92672>=</color> <color=#f8f8f2>getPixel</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>Object</color> <color=#a6e22e>clone</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>CellularFilter</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>CellularFilter</color><color=#f8f8f2>)</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>coefficients</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f92672>[]</color><color=#f8f8f2>)</color> <color=#f8f8f2>coefficients</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>results</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Point</color><color=#f92672>[]</color><color=#f8f8f2>)</color> <color=#f8f8f2>results</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>f</color><color=#f8f8f2>.</color><color=#a6e22e>random</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>();</color>
        <color=#75715e>//		if (colormap != null)</color>
        <color=#75715e>//			f.colormap = (Colormap)colormap.clone();</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Texture/Cellular..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>