<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ShearFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TransformFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>xangle</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>yangle</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>shx</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>shy</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>xoffset</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>yoffset</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>resize</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ShearFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setResize</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>resize</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>resize</color> <color=#f92672>=</color> <color=#f8f8f2>resize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isResize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>resize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setXAngle</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>xangle</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>xangle</color> <color=#f92672>=</color> <color=#f8f8f2>xangle</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>initialize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getXAngle</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>xangle</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setYAngle</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>yangle</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>yangle</color> <color=#f92672>=</color> <color=#f8f8f2>yangle</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>initialize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getYAngle</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>yangle</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>initialize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>shx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sin</color><color=#f8f8f2>(</color><color=#f8f8f2>xangle</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>shy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sin</color><color=#f8f8f2>(</color><color=#f8f8f2>yangle</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>transformSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>Rectangle</color> <color=#f8f8f2>r</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>tangent</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>tan</color><color=#f8f8f2>(</color><color=#f8f8f2>xangle</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>xoffset</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>*</color> <color=#f8f8f2>tangent</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tangent</color> <color=#f92672><</color> <color=#ae81ff>0.0</color><color=#f8f8f2>)</color> <color=#f8f8f2>tangent</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#f8f8f2>tangent</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>*</color> <color=#f8f8f2>tangent</color> <color=#f92672>+</color> <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>+</color> <color=#ae81ff>0.999999f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>tangent</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>tan</color><color=#f8f8f2>(</color><color=#f8f8f2>yangle</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>yoffset</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>*</color> <color=#f8f8f2>tangent</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tangent</color> <color=#f92672><</color> <color=#ae81ff>0.0</color><color=#f8f8f2>)</color> <color=#f8f8f2>tangent</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#f8f8f2>tangent</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>*</color> <color=#f8f8f2>tangent</color> <color=#f92672>+</color> <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>+</color> <color=#ae81ff>0.999999f</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>  	public void imageComplete(int status) {</color>
<color=#75715e>  try {</color>
<color=#75715e>  		if (status == IMAGEERROR || status == IMAGEABORTED) {</color>
<color=#75715e>  			consumer.imageComplete(status);</color>
<color=#75715e>  			return;</color>
<color=#75715e>  		}</color>

<color=#75715e>  		int width = originalSpace.width;</color>
<color=#75715e>  		int height = originalSpace.height;</color>

<color=#75715e>  		float tangent = Math.tan(angle);</color>
<color=#75715e>  		if (tangent < 0.0)</color>
<color=#75715e>  			tangent = -tangent;</color>
<color=#75715e>  		int newWidth = (int)(height * tangent + width + 0.999999);</color>
<color=#75715e>  		int[] outPixels = new int[height*newWidth];</color>
<color=#75715e>  		int inIndex = 0;</color>
<color=#75715e>  		int yOffset = 0;</color>
<color=#75715e>  		for (int y = 0; y < height; y++) {</color>
<color=#75715e>  			float newCol;</color>
<color=#75715e>  			if (angle >= 0.0)</color>
<color=#75715e>  				newCol = y * tangent;</color>
<color=#75715e>  			else</color>
<color=#75715e>  				newCol = (height-y) * tangent;</color>
<color=#75715e>  			int iNewCol = (int)newCol;</color>
<color=#75715e>  			float f = newCol - iNewCol;</color>
<color=#75715e>  			f = 1.0 - f;</color>

<color=#75715e>  			int outIndex = yOffset+iNewCol;</color>
<color=#75715e>  			int lastRGB = inPixels[inIndex];</color>
<color=#75715e>  			for (int x = 0; x < width; x++) {</color>
<color=#75715e>  				int rgb = inPixels[inIndex];</color>
<color=#75715e>  				outPixels[outIndex] = ImageMath.mixColors(f, lastRGB, rgb);</color>
<color=#75715e>  				lastRGB = rgb;</color>
<color=#75715e>  				inIndex++;</color>
<color=#75715e>  				outIndex++;</color>
<color=#75715e>  			}</color>
<color=#75715e>  			outPixels[outIndex] = ImageMath.mixColors(f, lastRGB, 0);</color>
<color=#75715e>  			yOffset += newWidth;</color>
<color=#75715e>  		}</color>
<color=#75715e>  		consumer.setPixels(0, 0, newWidth, height, defaultRGBModel, outPixels, 0, newWidth);</color>
<color=#75715e>  		consumer.imageComplete(status);</color>
<color=#75715e>  		inPixels = null;</color>
<color=#75715e>  }</color>
<color=#75715e>  catch (Exception e) {</color>
<color=#75715e>  	e.printStackTrace();</color>
<color=#75715e>  }</color>
<color=#75715e>  	}</color>
<color=#75715e>  */</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>transformInverse</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>out</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>out</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>xoffset</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>shx</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>out</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>yoffset</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f8f8f2>shy</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Distort/Shear..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>