<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A warp grid. From "A simplified approach to Image Processing" by Randy Crane</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>WarpGrid</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>xGrid</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>yGrid</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#f8f8f2>rows</color><color=#f8f8f2>,</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>WarpGrid</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>rows</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>cols</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>h</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>rows</color> <color=#f92672>=</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cols</color> <color=#f92672>=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>xGrid</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>rows</color> <color=#f92672>*</color> <color=#f8f8f2>cols</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>yGrid</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>rows</color> <color=#f92672>*</color> <color=#f8f8f2>cols</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>row</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>col</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color> <color=#f92672><</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>col</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>w</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>cols</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>row</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>h</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>rows</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>index</color><color=#f92672>++</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Add a new row to the grid. "before" must be in the range 1..rows-1. i.e. you can only add rows</color>
<color=#75715e>     * inside the grid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>addRow</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>before</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rows</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>rows</color><color=#f92672>++</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>row</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>col</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color> <color=#f92672><</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#f8f8f2>col</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>l</color> <color=#f92672>=</color> <color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#f8f8f2>col</color><color=#f8f8f2>;</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>row</color> <color=#f92672>==</color> <color=#f8f8f2>before</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>x</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>l</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>y</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>l</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>x</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>l</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>y</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>l</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>row</color> <color=#f92672>!=</color> <color=#f8f8f2>before</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>j</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>xGrid</color> <color=#f92672>=</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>yGrid</color> <color=#f92672>=</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Add a new column to the grid. "before" must be in the range 1..cols-1. i.e. you can only add</color>
<color=#75715e>     * columns inside the grid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>addCol</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>before</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#f8f8f2>rows</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cols</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>cols</color><color=#f92672>++</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>row</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>//			int i = row*(cols-1);</color>
            <color=#75715e>//			int j = row*cols;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>col</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color> <color=#f92672><</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>col</color> <color=#f92672>==</color> <color=#f8f8f2>before</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>x</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>y</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>x</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>y</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
                <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>xGrid</color> <color=#f92672>=</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>yGrid</color> <color=#f92672>=</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Remove a row from the grid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>removeRow</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>r</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>rows</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>rows</color><color=#f92672>--</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>row</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>col</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color> <color=#f92672><</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#f8f8f2>col</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>l</color> <color=#f92672>=</color> <color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#f8f8f2>col</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>x</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>l</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>y</color><color=#f92672>[</color><color=#f8f8f2>k</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>l</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>row</color> <color=#f92672>==</color> <color=#f8f8f2>r</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>j</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>xGrid</color> <color=#f92672>=</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>yGrid</color> <color=#f92672>=</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Remove a column from the grid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>removeCol</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>r</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#f8f8f2>rows</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cols</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>cols</color><color=#f92672>--</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>row</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>row</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>cols</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>row</color> <color=#f92672>*</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>col</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color> <color=#f92672><</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>x</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>y</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>col</color> <color=#f92672>==</color> <color=#f8f8f2>r</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>xGrid</color> <color=#f92672>=</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>yGrid</color> <color=#f92672>=</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>lerp</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>WarpGrid</color> <color=#f8f8f2>destination</color><color=#f8f8f2>,</color> <color=#f8f8f2>WarpGrid</color> <color=#f8f8f2>intermediate</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>rows</color> <color=#f92672>!=</color> <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>rows</color> <color=#f92672>||</color> <color=#f8f8f2>cols</color> <color=#f92672>!=</color> <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>cols</color><color=#f8f8f2>)</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"source and destination are different sizes"</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>rows</color> <color=#f92672>!=</color> <color=#f8f8f2>intermediate</color><color=#f8f8f2>.</color><color=#a6e22e>rows</color> <color=#f92672>||</color> <color=#f8f8f2>cols</color> <color=#f92672>!=</color> <color=#f8f8f2>intermediate</color><color=#f8f8f2>.</color><color=#a6e22e>cols</color><color=#f8f8f2>)</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"source and intermediate are different sizes"</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>row</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>row</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>col</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color> <color=#f92672><</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color> <color=#f8f8f2>col</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>intermediate</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>=</color>
                        <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>xGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>intermediate</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color> <color=#f92672>=</color>
                        <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>lerp</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#f8f8f2>yGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>index</color><color=#f92672>++</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>warp</color><color=#f8f8f2>(</color>
            <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>cols</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>rows</color><color=#f8f8f2>,</color> <color=#f8f8f2>WarpGrid</color> <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>WarpGrid</color> <color=#f8f8f2>destGrid</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>u</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>intermediate</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>WarpGrid</color> <color=#f8f8f2>splines</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>rows</color> <color=#f92672>!=</color> <color=#f8f8f2>destGrid</color><color=#f8f8f2>.</color><color=#a6e22e>rows</color> <color=#f92672>||</color> <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>cols</color> <color=#f92672>!=</color> <color=#f8f8f2>destGrid</color><color=#f8f8f2>.</color><color=#a6e22e>cols</color><color=#f8f8f2>)</color>
                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"source and destination grids are different sizes"</color><color=#f8f8f2>);</color>

            <color=#66d9ef>int</color> <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>cols</color><color=#f8f8f2>,</color> <color=#f8f8f2>rows</color><color=#f8f8f2>);</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>xrow</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>yrow</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>scale</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>interpolated</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>size</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

            <color=#66d9ef>int</color> <color=#f8f8f2>gridCols</color> <color=#f92672>=</color> <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>cols</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>gridRows</color> <color=#f92672>=</color> <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>rows</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>splines</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WarpGrid</color><color=#f8f8f2>(</color><color=#f8f8f2>rows</color><color=#f8f8f2>,</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>u</color> <color=#f92672><</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color> <color=#f8f8f2>u</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>u</color><color=#f8f8f2>;</color>

                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color> <color=#f92672><</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>xrow</color><color=#f92672>[</color><color=#f8f8f2>v</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>yrow</color><color=#f92672>[</color><color=#f8f8f2>v</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>interpolateSpline</color><color=#f8f8f2>(</color><color=#f8f8f2>yrow</color><color=#f8f8f2>,</color> <color=#f8f8f2>xrow</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>,</color> <color=#f8f8f2>interpolated</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>rows</color><color=#f8f8f2>);</color>

                <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>u</color><color=#f8f8f2>;</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>interpolated</color><color=#f92672>[</color><color=#f8f8f2>y</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>u</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>u</color> <color=#f92672><</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color> <color=#f8f8f2>u</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>u</color><color=#f8f8f2>;</color>

                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color> <color=#f92672><</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>xrow</color><color=#f92672>[</color><color=#f8f8f2>v</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>destGrid</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>yrow</color><color=#f92672>[</color><color=#f8f8f2>v</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>destGrid</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>interpolateSpline</color><color=#f8f8f2>(</color><color=#f8f8f2>yrow</color><color=#f8f8f2>,</color> <color=#f8f8f2>xrow</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>,</color> <color=#f8f8f2>interpolated</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>rows</color><color=#f8f8f2>);</color>

                <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>u</color><color=#f8f8f2>;</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>interpolated</color><color=#f92672>[</color><color=#f8f8f2>y</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>/* first pass: warp x using splines */</color>
            <color=#f8f8f2>intermediate</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>rows</color> <color=#f92672>*</color> <color=#f8f8f2>cols</color><color=#f92672>]</color><color=#f8f8f2>;</color>

            <color=#66d9ef>int</color> <color=#f8f8f2>offset</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#75715e>/* fit spline to x-intercepts;resample over all cols */</color>
                <color=#f8f8f2>interpolateSpline</color><color=#f8f8f2>(</color><color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>cols</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>scale</color><color=#f92672>[</color><color=#f8f8f2>cols</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>resample</color><color=#f8f8f2>(</color><color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>intermediate</color><color=#f8f8f2>,</color> <color=#f8f8f2>cols</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>cols</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>offset</color> <color=#f92672>+=</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
            <color=#75715e>/* create table of y-intercepts for intermediate mesh's hor splines */</color>

            <color=#f8f8f2>splines</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WarpGrid</color><color=#f8f8f2>(</color><color=#f8f8f2>gridRows</color><color=#f8f8f2>,</color> <color=#f8f8f2>cols</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>offset</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>offset2</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color> <color=#f92672><</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>interpolateSpline</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>sourceGrid</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>,</color> <color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset2</color><color=#f8f8f2>,</color> <color=#f8f8f2>cols</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>offset</color> <color=#f92672>+=</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>offset2</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>offset</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>offset2</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color> <color=#f92672><</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>interpolateSpline</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>destGrid</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>destGrid</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>,</color> <color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset2</color><color=#f8f8f2>,</color> <color=#f8f8f2>cols</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>offset</color> <color=#f92672>+=</color> <color=#f8f8f2>gridCols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>offset2</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>/* second pass: warp y */</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>

                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color> <color=#f92672><</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>;</color> <color=#f8f8f2>v</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>xrow</color><color=#f92672>[</color><color=#f8f8f2>v</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>xGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>;</color>
                    <color=#f8f8f2>yrow</color><color=#f92672>[</color><color=#f8f8f2>v</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>splines</color><color=#f8f8f2>.</color><color=#a6e22e>yGrid</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>;</color>
                    <color=#f8f8f2>i</color> <color=#f92672>+=</color> <color=#f8f8f2>cols</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>interpolateSpline</color><color=#f8f8f2>(</color><color=#f8f8f2>xrow</color><color=#f8f8f2>,</color> <color=#f8f8f2>yrow</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>gridRows</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>rows</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>scale</color><color=#f92672>[</color><color=#f8f8f2>rows</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>rows</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>resample</color><color=#f8f8f2>(</color><color=#f8f8f2>intermediate</color><color=#f8f8f2>,</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>rows</color><color=#f8f8f2>,</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>cols</color><color=#f8f8f2>,</color> <color=#f8f8f2>scale</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m00</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m01</color> <color=#f92672>=</color> <color=#ae81ff>1.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m02</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m03</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m10</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m11</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>2.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m12</color> <color=#f92672>=</color> <color=#ae81ff>2.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m13</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m20</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m22</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>m31</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>interpolateSpline</color><color=#f8f8f2>(</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>xKnots</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>yKnots</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>length</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>splineY</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>splineOffset</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>splineLength</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#f8f8f2>offset</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>end</color> <color=#f92672>=</color> <color=#f8f8f2>offset</color> <color=#f92672>+</color> <color=#f8f8f2>length</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>x0</color><color=#f8f8f2>,</color> <color=#f8f8f2>x1</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>k0</color><color=#f8f8f2>,</color> <color=#f8f8f2>k1</color><color=#f8f8f2>,</color> <color=#f8f8f2>k2</color><color=#f8f8f2>,</color> <color=#f8f8f2>k3</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>c0</color><color=#f8f8f2>,</color> <color=#f8f8f2>c1</color><color=#f8f8f2>,</color> <color=#f8f8f2>c2</color><color=#f8f8f2>,</color> <color=#f8f8f2>c3</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>x0</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>k0</color> <color=#f92672>=</color> <color=#f8f8f2>k1</color> <color=#f92672>=</color> <color=#f8f8f2>k2</color> <color=#f92672>=</color> <color=#f8f8f2>yKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>x1</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>k3</color> <color=#f92672>=</color> <color=#f8f8f2>yKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>splineLength</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>index</color> <color=#f92672><=</color> <color=#f8f8f2>end</color> <color=#f92672>&&</color> <color=#f8f8f2>i</color> <color=#f92672>></color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>k0</color> <color=#f92672>=</color> <color=#f8f8f2>k1</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>k1</color> <color=#f92672>=</color> <color=#f8f8f2>k2</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>k2</color> <color=#f92672>=</color> <color=#f8f8f2>k3</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>x0</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>index</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>index</color> <color=#f92672><=</color> <color=#f8f8f2>end</color><color=#f8f8f2>)</color> <color=#f8f8f2>x1</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>index</color> <color=#f92672><</color> <color=#f8f8f2>end</color><color=#f8f8f2>)</color> <color=#f8f8f2>k3</color> <color=#f92672>=</color> <color=#f8f8f2>yKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#66d9ef>else</color> <color=#f8f8f2>k3</color> <color=#f92672>=</color> <color=#f8f8f2>k2</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>-</color> <color=#f8f8f2>x0</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>x1</color> <color=#f92672>-</color> <color=#f8f8f2>x0</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>c3</color> <color=#f92672>=</color> <color=#f8f8f2>m00</color> <color=#f92672>*</color> <color=#f8f8f2>k0</color> <color=#f92672>+</color> <color=#f8f8f2>m01</color> <color=#f92672>*</color> <color=#f8f8f2>k1</color> <color=#f92672>+</color> <color=#f8f8f2>m02</color> <color=#f92672>*</color> <color=#f8f8f2>k2</color> <color=#f92672>+</color> <color=#f8f8f2>m03</color> <color=#f92672>*</color> <color=#f8f8f2>k3</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>c2</color> <color=#f92672>=</color> <color=#f8f8f2>m10</color> <color=#f92672>*</color> <color=#f8f8f2>k0</color> <color=#f92672>+</color> <color=#f8f8f2>m11</color> <color=#f92672>*</color> <color=#f8f8f2>k1</color> <color=#f92672>+</color> <color=#f8f8f2>m12</color> <color=#f92672>*</color> <color=#f8f8f2>k2</color> <color=#f92672>+</color> <color=#f8f8f2>m13</color> <color=#f92672>*</color> <color=#f8f8f2>k3</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>c1</color> <color=#f92672>=</color> <color=#f8f8f2>m20</color> <color=#f92672>*</color> <color=#f8f8f2>k0</color> <color=#f92672>+</color> <color=#f8f8f2>m22</color> <color=#f92672>*</color> <color=#f8f8f2>k2</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>c0</color> <color=#f92672>=</color> <color=#f8f8f2>m31</color> <color=#f92672>*</color> <color=#f8f8f2>k1</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>splineY</color><color=#f92672>[</color><color=#f8f8f2>splineOffset</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>c3</color> <color=#f92672>*</color> <color=#f8f8f2>t</color> <color=#f92672>+</color> <color=#f8f8f2>c2</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>t</color> <color=#f92672>+</color> <color=#f8f8f2>c1</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>t</color> <color=#f92672>+</color> <color=#f8f8f2>c0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>interpolateSpline2</color><color=#f8f8f2>(</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>xKnots</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>yKnots</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>splineY</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>splineOffset</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>splineLength</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#f8f8f2>offset</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>leftX</color><color=#f8f8f2>,</color> <color=#f8f8f2>rightX</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>leftY</color><color=#f8f8f2>,</color> <color=#f8f8f2>rightY</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>leftX</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>leftY</color> <color=#f92672>=</color> <color=#f8f8f2>yKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rightX</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>rightY</color> <color=#f92672>=</color> <color=#f8f8f2>yKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>splineLength</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>></color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>leftX</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>leftY</color> <color=#f92672>=</color> <color=#f8f8f2>yKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>index</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>rightX</color> <color=#f92672>=</color> <color=#f8f8f2>xKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>rightY</color> <color=#f92672>=</color> <color=#f8f8f2>yKnots</color><color=#f92672>[</color><color=#f8f8f2>index</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>-</color> <color=#f8f8f2>leftX</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>rightX</color> <color=#f92672>-</color> <color=#f8f8f2>leftX</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>splineY</color><color=#f92672>[</color><color=#f8f8f2>splineOffset</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>leftY</color> <color=#f92672>+</color> <color=#f8f8f2>f</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>rightY</color> <color=#f92672>-</color> <color=#f8f8f2>leftY</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>