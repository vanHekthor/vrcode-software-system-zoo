<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A filter which performs a threshold operation on an image.</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ThresholdFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>PointFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>lowerThreshold</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>upperThreshold</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>white</color> <color=#f92672>=</color> <color=#ae81ff>0xffffff</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>black</color> <color=#f92672>=</color> <color=#ae81ff>0x000000</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct a ThresholdFilter.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThresholdFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#ae81ff>127</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Construct a ThresholdFilter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param t the threshold value</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThresholdFilter</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>setLowerThreshold</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>setUpperThreshold</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the lower threshold value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param lowerThreshold the threshold value</color>
<color=#75715e>     * @see #getLowerThreshold</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setLowerThreshold</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>lowerThreshold</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lowerThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>lowerThreshold</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the lower threshold value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the threshold value</color>
<color=#75715e>     * @see #setLowerThreshold</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getLowerThreshold</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>lowerThreshold</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the upper threshold value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param upperThreshold the threshold value</color>
<color=#75715e>     * @see #getUpperThreshold</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setUpperThreshold</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>upperThreshold</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>upperThreshold</color> <color=#f92672>=</color> <color=#f8f8f2>upperThreshold</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the upper threshold value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the threshold value</color>
<color=#75715e>     * @see #setUpperThreshold</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getUpperThreshold</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>upperThreshold</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the color to be used for pixels above the upper threshold.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param white the color</color>
<color=#75715e>     * @see #getWhite</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setWhite</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>white</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>white</color> <color=#f92672>=</color> <color=#f8f8f2>white</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Get the color to be used for pixels above the upper threshold.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the color</color>
<color=#75715e>     * @see #setWhite</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getWhite</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>white</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the color to be used for pixels below the lower threshold.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param black the color</color>
<color=#75715e>     * @see #getBlack</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBlack</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>black</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>black</color> <color=#f92672>=</color> <color=#f8f8f2>black</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Set the color to be used for pixels below the lower threshold.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the color</color>
<color=#75715e>     * @see #setBlack</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getBlack</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>black</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>filterRGB</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>PixelUtils</color><color=#f8f8f2>.</color><color=#a6e22e>brightness</color><color=#f8f8f2>(</color><color=#f8f8f2>rgb</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>smoothStep</color><color=#f8f8f2>(</color><color=#f8f8f2>lowerThreshold</color><color=#f8f8f2>,</color> <color=#f8f8f2>upperThreshold</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>f</color><color=#f8f8f2>,</color> <color=#f8f8f2>black</color><color=#f8f8f2>,</color> <color=#f8f8f2>white</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xffffff</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Stylize/Threshold..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>