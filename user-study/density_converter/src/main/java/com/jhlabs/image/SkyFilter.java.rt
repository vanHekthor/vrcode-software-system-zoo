<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.jhlabs.math.FBM</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.jhlabs.math.Function2D</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.jhlabs.math.Noise</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SkyFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>PointFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>scale</color> <color=#f92672>=</color> <color=#ae81ff>0.1f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>stretch</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>angle</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>amount</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>H</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>octaves</color> <color=#f92672>=</color> <color=#ae81ff>8.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>lacunarity</color> <color=#f92672>=</color> <color=#ae81ff>2.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>gain</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>bias</color> <color=#f92672>=</color> <color=#ae81ff>0.6f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>operation</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>min</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>max</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>ridged</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>FBM</color> <color=#f8f8f2>fBm</color><color=#f8f8f2>;</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>Random</color> <color=#f8f8f2>random</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Function2D</color> <color=#f8f8f2>basis</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>cloudCover</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>cloudSharpness</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#ae81ff>0.3f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>glow</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>glowFalloff</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>haziness</color> <color=#f92672>=</color> <color=#ae81ff>0.96f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>sunRadius</color> <color=#f92672>=</color> <color=#ae81ff>10</color><color=#f8f8f2>f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>sunColor</color> <color=#f92672>=</color> <color=#ae81ff>0xffffffff</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>sunR</color><color=#f8f8f2>,</color> <color=#f8f8f2>sunG</color><color=#f8f8f2>,</color> <color=#f8f8f2>sunB</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>sunAzimuth</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>sunElevation</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>windSpeed</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>cameraAzimuth</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>cameraElevation</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>fov</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>exponents</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>tan</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>skyColors</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>skyPixels</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>r255</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color> <color=#f92672>/</color> <color=#ae81ff>255.0f</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>SkyFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>skyColors</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>skyColors</color> <color=#f92672>=</color>
                    <color=#f8f8f2>ImageUtils</color><color=#f8f8f2>.</color><color=#a6e22e>createImage</color><color=#f8f8f2>(</color>
                            <color=#f8f8f2>Toolkit</color><color=#f8f8f2>.</color><color=#a6e22e>getDefaultToolkit</color><color=#f8f8f2>()</color>
                                    <color=#f8f8f2>.</color><color=#a6e22e>getImage</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>().</color><color=#a6e22e>getResource</color><color=#f8f8f2>(</color><color=#e6db74>"SkyColors.png"</color><color=#f8f8f2>))</color>
                                    <color=#f8f8f2>.</color><color=#a6e22e>getSource</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAmount</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>amount</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>amount</color> <color=#f92672>=</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAmount</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setOperation</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>operation</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>operation</color> <color=#f92672>=</color> <color=#f8f8f2>operation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getOperation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>operation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setScale</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>scale</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color> <color=#f92672>=</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getScale</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setStretch</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>stretch</color> <color=#f92672>=</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getStretch</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setT</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>t</color> <color=#f92672>=</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getT</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setFOV</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>fov</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fov</color> <color=#f92672>=</color> <color=#f8f8f2>fov</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getFOV</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>fov</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCloudCover</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>cloudCover</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cloudCover</color> <color=#f92672>=</color> <color=#f8f8f2>cloudCover</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getCloudCover</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>cloudCover</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCloudSharpness</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>cloudSharpness</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cloudSharpness</color> <color=#f92672>=</color> <color=#f8f8f2>cloudSharpness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getCloudSharpness</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>cloudSharpness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setTime</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>time</color> <color=#f92672>=</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getTime</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setGlow</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>glow</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>glow</color> <color=#f92672>=</color> <color=#f8f8f2>glow</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getGlow</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>glow</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setGlowFalloff</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>glowFalloff</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>glowFalloff</color> <color=#f92672>=</color> <color=#f8f8f2>glowFalloff</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getGlowFalloff</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>glowFalloff</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAngle</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>angle</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>angle</color> <color=#f92672>=</color> <color=#f8f8f2>angle</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAngle</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>angle</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setOctaves</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>octaves</color> <color=#f92672>=</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getOctaves</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setH</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>H</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>H</color> <color=#f92672>=</color> <color=#f8f8f2>H</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getH</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>H</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setLacunarity</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>lacunarity</color> <color=#f92672>=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getLacunarity</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setGain</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>gain</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>gain</color> <color=#f92672>=</color> <color=#f8f8f2>gain</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getGain</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>gain</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBias</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>bias</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>bias</color> <color=#f92672>=</color> <color=#f8f8f2>bias</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getBias</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>bias</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setHaziness</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>haziness</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>haziness</color> <color=#f92672>=</color> <color=#f8f8f2>haziness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getHaziness</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>haziness</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setSunElevation</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>sunElevation</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sunElevation</color> <color=#f92672>=</color> <color=#f8f8f2>sunElevation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getSunElevation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>sunElevation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setSunAzimuth</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>sunAzimuth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sunAzimuth</color> <color=#f92672>=</color> <color=#f8f8f2>sunAzimuth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getSunAzimuth</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>sunAzimuth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setSunColor</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>sunColor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sunColor</color> <color=#f92672>=</color> <color=#f8f8f2>sunColor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getSunColor</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>sunColor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCameraElevation</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>cameraElevation</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cameraElevation</color> <color=#f92672>=</color> <color=#f8f8f2>cameraElevation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getCameraElevation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>cameraElevation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setCameraAzimuth</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>cameraAzimuth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cameraAzimuth</color> <color=#f92672>=</color> <color=#f8f8f2>cameraAzimuth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getCameraAzimuth</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>cameraAzimuth</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setWindSpeed</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>windSpeed</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>windSpeed</color> <color=#f92672>=</color> <color=#f8f8f2>windSpeed</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getWindSpeed</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>windSpeed</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>float</color> <color=#f8f8f2>mn</color><color=#f8f8f2>,</color> <color=#f8f8f2>mx</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>dst</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>sunR</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>sunColor</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>r255</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>sunG</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>sunColor</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>r255</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>sunB</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>sunColor</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>r255</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>mn</color> <color=#f92672>=</color> <color=#ae81ff>10000</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>mx</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>10000</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>exponents</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>frequency</color> <color=#f92672>=</color> <color=#ae81ff>1.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>exponents</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f92672>-</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>frequency</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>max</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

        <color=#75715e>// min = -1.2f;</color>
        <color=#75715e>// max = 1.2f;</color>

        <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>src</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>tan</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[</color><color=#f8f8f2>h</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>h</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>tan</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>tan</color><color=#f8f8f2>(</color><color=#f8f8f2>fov</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color> <color=#f92672>/</color> <color=#f8f8f2>h</color> <color=#f92672>*</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>PI</color> <color=#f92672>*</color> <color=#ae81ff>0.5</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dst</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>dst</color> <color=#f92672>=</color> <color=#f8f8f2>createCompatibleDestImage</color><color=#f8f8f2>(</color><color=#f8f8f2>src</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>63</color> <color=#f92672>*</color> <color=#f8f8f2>time</color><color=#f8f8f2>);</color>
        <color=#75715e>//		skyPixels = getRGB( skyColors, t, 0, 1, 64, skyPixels );</color>
        <color=#f8f8f2>Graphics2D</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>createGraphics</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>drawImage</color><color=#f8f8f2>(</color><color=#f8f8f2>skyColors</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(),</color> <color=#f8f8f2>dst</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>(),</color> <color=#f8f8f2>t</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>64</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>dispose</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>clouds</color> <color=#f92672>=</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>dst</color><color=#f8f8f2>,</color> <color=#f8f8f2>dst</color><color=#f8f8f2>);</color>
        <color=#75715e>//		g.drawRenderedImage( clouds, null );</color>
        <color=#75715e>//		g.dispose();</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>finish</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>mn</color> <color=#f92672>+</color> <color=#e6db74>" "</color> <color=#f92672>+</color> <color=#f8f8f2>mx</color> <color=#f92672>+</color> <color=#e6db74>" "</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>finish</color> <color=#f92672>-</color> <color=#f8f8f2>start</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#ae81ff>0.001f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>exponents</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>tan</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>dst</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>evaluate</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>y</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>value</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>remainder</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>

        <color=#75715e>// to prevent "cascading" effects</color>
        <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#ae81ff>371</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>y</color> <color=#f92672>+=</color> <color=#ae81ff>529</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>value</color> <color=#f92672>+=</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise3</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>exponents</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>x</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>y</color> <color=#f92672>*=</color> <color=#f8f8f2>lacunarity</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>remainder</color> <color=#f92672>=</color> <color=#f8f8f2>octaves</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>octaves</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>remainder</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>value</color> <color=#f92672>+=</color> <color=#f8f8f2>remainder</color> <color=#f92672>*</color> <color=#f8f8f2>Noise</color><color=#f8f8f2>.</color><color=#a6e22e>noise3</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>exponents</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>filterRGB</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#75715e>// Curvature</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>fx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>x</color> <color=#f92672>/</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
        <color=#75715e>// y += 20*Math.sin( fx*Math.PI*0.5 );</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>fy</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>/</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>haze</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>haziness</color><color=#f8f8f2>,</color> <color=#ae81ff>100</color> <color=#f92672>*</color> <color=#f8f8f2>fy</color> <color=#f92672>*</color> <color=#f8f8f2>fy</color><color=#f8f8f2>);</color>
        <color=#75715e>//		int argb = skyPixels[(int)fy];</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>16</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>r255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>rgb</color> <color=#f92672>>></color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>r255</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>r255</color><color=#f8f8f2>;</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>cx</color> <color=#f92672>=</color> <color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>nx</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>cx</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ny</color> <color=#f92672>=</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#75715e>// FOV</color>
        <color=#75715e>// ny = (float)Math.tan( fov * fy * Math.PI * 0.5 );</color>
        <color=#f8f8f2>ny</color> <color=#f92672>=</color> <color=#f8f8f2>tan</color><color=#f92672>[</color><color=#f8f8f2>y</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>nx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>fx</color> <color=#f92672>-</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#ae81ff>1</color> <color=#f92672>+</color> <color=#f8f8f2>ny</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ny</color> <color=#f92672>+=</color> <color=#f8f8f2>t</color> <color=#f92672>*</color> <color=#f8f8f2>windSpeed</color><color=#f8f8f2>;</color> <color=#75715e>// Wind towards the camera</color>

        <color=#75715e>//		float xscale = scale/(1+y*bias*0.1f);</color>
        <color=#f8f8f2>nx</color> <color=#f92672>/=</color> <color=#f8f8f2>scale</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ny</color> <color=#f92672>/=</color> <color=#f8f8f2>scale</color> <color=#f92672>*</color> <color=#f8f8f2>stretch</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>evaluate</color><color=#f8f8f2>(</color><color=#f8f8f2>nx</color><color=#f8f8f2>,</color> <color=#f8f8f2>ny</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>fg</color> <color=#f92672>=</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color> <color=#75715e>// FIXME-bump map</color>
        <color=#75715e>// Normalize to 0..1</color>
        <color=#75715e>//		f = (f-min)/(max-min);</color>

        <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>f</color> <color=#f92672>+</color> <color=#ae81ff>1.23f</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>2.46f</color><color=#f8f8f2>;</color>

        <color=#75715e>//		f *= amount;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#f8f8f2>rgb</color> <color=#f92672>&</color> <color=#ae81ff>0xff000000</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>

        <color=#75715e>// Work out cloud cover</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>f</color> <color=#f92672>-</color> <color=#f8f8f2>cloudCover</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>c</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>cloudAlpha</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>cloudSharpness</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>);</color>
        <color=#75715e>// cloudAlpha *= amount;</color>
        <color=#75715e>// if ( cloudAlpha > 1 )</color>
        <color=#75715e>//	cloudAlpha = 1;</color>
        <color=#f8f8f2>mn</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>mn</color><color=#f8f8f2>,</color> <color=#f8f8f2>cloudAlpha</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>mx</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>mx</color><color=#f8f8f2>,</color> <color=#f8f8f2>cloudAlpha</color><color=#f8f8f2>);</color>

        <color=#75715e>// Sun glow</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>centreX</color> <color=#f92672>=</color> <color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>sunAzimuth</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>centreY</color> <color=#f92672>=</color> <color=#f8f8f2>height</color> <color=#f92672>*</color> <color=#f8f8f2>sunElevation</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>centreX</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>dy</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>centreY</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>distance2</color> <color=#f92672>=</color> <color=#f8f8f2>dx</color> <color=#f92672>*</color> <color=#f8f8f2>dx</color> <color=#f92672>+</color> <color=#f8f8f2>dy</color> <color=#f92672>*</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
        <color=#75715e>//		float sun = 0;</color>
        <color=#75715e>// distance2 = (float)Math.sqrt(distance2);</color>
        <color=#f8f8f2>distance2</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>distance2</color><color=#f8f8f2>,</color> <color=#f8f8f2>glowFalloff</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>sun</color> <color=#f92672>=</color> <color=#75715e>/*amount**/</color> <color=#ae81ff>10</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>exp</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>distance2</color> <color=#f92672>*</color> <color=#f8f8f2>glow</color> <color=#f92672>*</color> <color=#ae81ff>0.1f</color><color=#f8f8f2>);</color>
        <color=#75715e>//		sun = glow*10*(float)Math.exp(-distance2);</color>

        <color=#75715e>// Sun glow onto sky</color>
        <color=#f8f8f2>r</color> <color=#f92672>+=</color> <color=#f8f8f2>sun</color> <color=#f92672>*</color> <color=#f8f8f2>sunR</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color> <color=#f92672>+=</color> <color=#f8f8f2>sun</color> <color=#f92672>*</color> <color=#f8f8f2>sunG</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b</color> <color=#f92672>+=</color> <color=#f8f8f2>sun</color> <color=#f92672>*</color> <color=#f8f8f2>sunB</color><color=#f8f8f2>;</color>

        <color=#75715e>//		float cloudColor = cloudAlpha *sun;</color>
        <color=#75715e>// Bump map</color>
    <color=#75715e>/*</color>
<color=#75715e>    		float nnx = x-cx;</color>
<color=#75715e>    		float nny = y-1;</color>
<color=#75715e>    		nnx /= xscale;</color>
<color=#75715e>    		nny /= xscale * stretch;</color>
<color=#75715e>    		float gf = evaluate(nnx, nny);</color>
<color=#75715e>    		float gradient = fg-gf;</color>
<color=#75715e>    if (y == 100)System.out.println(fg+" "+gf+gradient);</color>
<color=#75715e>    		cloudColor += amount * gradient;</color>
<color=#75715e>    */</color>
        <color=#75715e>// ...</color>
    <color=#75715e>/*</color>
<color=#75715e>    		r += (cloudColor-r) * cloudAlpha;</color>
<color=#75715e>    		g += (cloudColor-g) * cloudAlpha;</color>
<color=#75715e>    		b += (cloudColor-b) * cloudAlpha;</color>
<color=#75715e>    */</color>
        <color=#75715e>// Clouds get darker as they get thicker</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>ca</color> <color=#f92672>=</color>
                <color=#f8f8f2>(</color><color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>cloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>cloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>cloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>cloudAlpha</color><color=#f8f8f2>)</color>
                        <color=#75715e>/** (1 + sun) */</color>
                        <color=#f92672>*</color> <color=#f8f8f2>amount</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>cloudR</color> <color=#f92672>=</color> <color=#f8f8f2>sunR</color> <color=#f92672>*</color> <color=#f8f8f2>ca</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>cloudG</color> <color=#f92672>=</color> <color=#f8f8f2>sunG</color> <color=#f92672>*</color> <color=#f8f8f2>ca</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>cloudB</color> <color=#f92672>=</color> <color=#f8f8f2>sunB</color> <color=#f92672>*</color> <color=#f8f8f2>ca</color><color=#f8f8f2>;</color>

        <color=#75715e>// Apply the haziness as we move further away</color>
        <color=#f8f8f2>cloudAlpha</color> <color=#f92672>*=</color> <color=#f8f8f2>haze</color><color=#f8f8f2>;</color>

        <color=#75715e>// Composite the clouds on the sky</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>iCloudAlpha</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>cloudAlpha</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>iCloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>r</color> <color=#f92672>+</color> <color=#f8f8f2>cloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>cloudR</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>iCloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>g</color> <color=#f92672>+</color> <color=#f8f8f2>cloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>cloudG</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>iCloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>b</color> <color=#f92672>+</color> <color=#f8f8f2>cloudAlpha</color> <color=#f92672>*</color> <color=#f8f8f2>cloudB</color><color=#f8f8f2>;</color>

        <color=#75715e>// Exposure</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>exposure</color> <color=#f92672>=</color> <color=#f8f8f2>gain</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>exp</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>r</color> <color=#f92672>*</color> <color=#f8f8f2>exposure</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>exp</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>g</color> <color=#f92672>*</color> <color=#f8f8f2>exposure</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#ae81ff>1</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>exp</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#f8f8f2>b</color> <color=#f92672>*</color> <color=#f8f8f2>exposure</color><color=#f8f8f2>);</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>ir</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>255</color> <color=#f92672>*</color> <color=#f8f8f2>r</color><color=#f8f8f2>)</color> <color=#f92672><<</color> <color=#ae81ff>16</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>ig</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>255</color> <color=#f92672>*</color> <color=#f8f8f2>g</color><color=#f8f8f2>)</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>ib</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>255</color> <color=#f92672>*</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#ae81ff>0xff000000</color> <color=#f92672>|</color> <color=#f8f8f2>ir</color> <color=#f92672>|</color> <color=#f8f8f2>ig</color> <color=#f92672>|</color> <color=#f8f8f2>ib</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Texture/Sky..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>