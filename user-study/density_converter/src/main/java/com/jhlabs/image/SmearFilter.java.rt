<color=#75715e>/*</color>
<color=#75715e>Copyright 2006 Jerry Huxtable</color>

<color=#75715e>Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e>you may not use this file except in compliance with the License.</color>
<color=#75715e>You may obtain a copy of the License at</color>

<color=#75715e>   http://www.apache.org/licenses/LICENSE-2.0</color>

<color=#75715e>Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e>distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e>See the License for the specific language governing permissions and</color>
<color=#75715e>limitations under the License.</color>
<color=#75715e>*/</color>

<color=#f92672>package</color> <color=#f8f8f2>com.jhlabs.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Date</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Random</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SmearFilter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>WholeImageFilter</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>CROSSES</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>LINES</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>CIRCLES</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>SQUARES</color> <color=#f92672>=</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>Colormap</color> <color=#f8f8f2>colormap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LinearColormap</color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>angle</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>density</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>scatter</color> <color=#f92672>=</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>distance</color> <color=#f92672>=</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Random</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>long</color> <color=#f8f8f2>seed</color> <color=#f92672>=</color> <color=#ae81ff>567</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>shape</color> <color=#f92672>=</color> <color=#f8f8f2>LINES</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>mix</color> <color=#f92672>=</color> <color=#ae81ff>0.5f</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>fadeout</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>background</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>SmearFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>randomGenerator</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Random</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setShape</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>shape</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>shape</color> <color=#f92672>=</color> <color=#f8f8f2>shape</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getShape</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>shape</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDistance</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>distance</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>distance</color> <color=#f92672>=</color> <color=#f8f8f2>distance</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getDistance</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>distance</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setDensity</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>density</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>density</color> <color=#f92672>=</color> <color=#f8f8f2>density</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getDensity</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>density</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setScatter</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>scatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>scatter</color> <color=#f92672>=</color> <color=#f8f8f2>scatter</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getScatter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>scatter</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies the angle of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param angle the angle of the texture.</color>
<color=#75715e>     * @angle</color>
<color=#75715e>     * @see #getAngle</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setAngle</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>angle</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>angle</color> <color=#f92672>=</color> <color=#f8f8f2>angle</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the angle of the texture.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the angle of the texture.</color>
<color=#75715e>     * @see #setAngle</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getAngle</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>angle</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setMix</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>mix</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>mix</color> <color=#f92672>=</color> <color=#f8f8f2>mix</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getMix</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>mix</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setFadeout</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>fadeout</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fadeout</color> <color=#f92672>=</color> <color=#f8f8f2>fadeout</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getFadeout</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>fadeout</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setBackground</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>background</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>background</color> <color=#f92672>=</color> <color=#f8f8f2>background</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getBackground</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>background</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>randomize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>seed</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Date</color><color=#f8f8f2>().</color><color=#a6e22e>getTime</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#a6e22e>random</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>low</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>high</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>low</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>high</color> <color=#f92672>-</color> <color=#f8f8f2>low</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextFloat</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#a6e22e>filterPixels</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>inPixels</color><color=#f8f8f2>,</color> <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>transformedSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>outPixels</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>setSeed</color><color=#f8f8f2>(</color><color=#f8f8f2>seed</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>sinAngle</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>sin</color><color=#f8f8f2>(</color><color=#f8f8f2>angle</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>cosAngle</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>cos</color><color=#f8f8f2>(</color><color=#f8f8f2>angle</color><color=#f8f8f2>);</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>numShapes</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>background</color> <color=#f92672>?</color> <color=#ae81ff>0xffffffff</color> <color=#f8f8f2>:</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>shape</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>CROSSES</color><color=#f8f8f2>:</color>
                <color=#75715e>// Crosses</color>
                <color=#f8f8f2>numShapes</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>density</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#f8f8f2>distance</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>));</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>numShapes</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>length</color> <color=#f92672>=</color> <color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>%</color> <color=#f8f8f2>distance</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color> <color=#f92672>=</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x1</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>x1</color> <color=#f92672><</color> <color=#f8f8f2>x</color> <color=#f92672>+</color> <color=#f8f8f2>length</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>x1</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x1</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>x1</color> <color=#f92672><</color> <color=#f8f8f2>width</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>rgb2</color> <color=#f92672>=</color> <color=#f8f8f2>background</color> <color=#f92672>?</color> <color=#ae81ff>0xffffffff</color> <color=#f8f8f2>:</color> <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>mix</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y1</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>y1</color> <color=#f92672><</color> <color=#f8f8f2>y</color> <color=#f92672>+</color> <color=#f8f8f2>length</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>y1</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>y1</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>y1</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>rgb2</color> <color=#f92672>=</color> <color=#f8f8f2>background</color> <color=#f92672>?</color> <color=#ae81ff>0xffffffff</color> <color=#f8f8f2>:</color> <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y1</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y1</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>mix</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>LINES</color><color=#f8f8f2>:</color>
                <color=#f8f8f2>numShapes</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>density</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>

                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>numShapes</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>sx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>sy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color> <color=#f92672>=</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>sy</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>sx</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>length</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>distance</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>length</color> <color=#f92672>*</color> <color=#f8f8f2>cosAngle</color><color=#f8f8f2>);</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>dy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>length</color> <color=#f92672>*</color> <color=#f8f8f2>sinAngle</color><color=#f8f8f2>);</color>

                    <color=#66d9ef>int</color> <color=#f8f8f2>x0</color> <color=#f92672>=</color> <color=#f8f8f2>sx</color> <color=#f92672>-</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>y0</color> <color=#f92672>=</color> <color=#f8f8f2>sy</color> <color=#f92672>-</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>x1</color> <color=#f92672>=</color> <color=#f8f8f2>sx</color> <color=#f92672>+</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>y1</color> <color=#f92672>=</color> <color=#f8f8f2>sy</color> <color=#f92672>+</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>,</color> <color=#f8f8f2>d</color><color=#f8f8f2>,</color> <color=#f8f8f2>incrE</color><color=#f8f8f2>,</color> <color=#f8f8f2>incrNE</color><color=#f8f8f2>,</color> <color=#f8f8f2>ddx</color><color=#f8f8f2>,</color> <color=#f8f8f2>ddy</color><color=#f8f8f2>;</color>

                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x1</color> <color=#f92672><</color> <color=#f8f8f2>x0</color><color=#f8f8f2>)</color> <color=#f8f8f2>ddx</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>else</color> <color=#f8f8f2>ddx</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>y1</color> <color=#f92672><</color> <color=#f8f8f2>y0</color><color=#f8f8f2>)</color> <color=#f8f8f2>ddy</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>else</color> <color=#f8f8f2>ddy</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f8f8f2>x1</color> <color=#f92672>-</color> <color=#f8f8f2>x0</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>dy</color> <color=#f92672>=</color> <color=#f8f8f2>y1</color> <color=#f92672>-</color> <color=#f8f8f2>y0</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>dx</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>dx</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>dy</color> <color=#f92672>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>dy</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>x0</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>y0</color><color=#f8f8f2>;</color>

                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color> <color=#f92672>&&</color> <color=#f8f8f2>x</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>int</color> <color=#f8f8f2>rgb2</color> <color=#f92672>=</color> <color=#f8f8f2>background</color> <color=#f92672>?</color> <color=#ae81ff>0xffffffff</color> <color=#f8f8f2>:</color> <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>mix</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>dx</color><color=#f8f8f2>)</color> <color=#f92672>></color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>abs</color><color=#f8f8f2>(</color><color=#f8f8f2>dy</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>dy</color> <color=#f92672>-</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>incrE</color> <color=#f92672>=</color> <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>incrNE</color> <color=#f92672>=</color> <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>dy</color> <color=#f92672>-</color> <color=#f8f8f2>dx</color><color=#f8f8f2>);</color>

                        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>!=</color> <color=#f8f8f2>x1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>+=</color> <color=#f8f8f2>incrE</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                                <color=#f8f8f2>d</color> <color=#f92672>+=</color> <color=#f8f8f2>incrNE</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>y</color> <color=#f92672>+=</color> <color=#f8f8f2>ddy</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>}</color>
                            <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#f8f8f2>ddx</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color> <color=#f92672>&&</color> <color=#f8f8f2>x</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>rgb2</color> <color=#f92672>=</color> <color=#f8f8f2>background</color> <color=#f92672>?</color> <color=#ae81ff>0xffffffff</color> <color=#f8f8f2>:</color> <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>mix</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>);</color>
                            <color=#f8f8f2>}</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>dx</color> <color=#f92672>-</color> <color=#f8f8f2>dy</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>incrE</color> <color=#f92672>=</color> <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>dx</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>incrNE</color> <color=#f92672>=</color> <color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>dx</color> <color=#f92672>-</color> <color=#f8f8f2>dy</color><color=#f8f8f2>);</color>

                        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>!=</color> <color=#f8f8f2>y1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>d</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>d</color> <color=#f92672>+=</color> <color=#f8f8f2>incrE</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                                <color=#f8f8f2>d</color> <color=#f92672>+=</color> <color=#f8f8f2>incrNE</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>x</color> <color=#f92672>+=</color> <color=#f8f8f2>ddx</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>}</color>
                            <color=#f8f8f2>y</color> <color=#f92672>+=</color> <color=#f8f8f2>ddy</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color> <color=#f92672>&&</color> <color=#f8f8f2>x</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>rgb2</color> <color=#f92672>=</color> <color=#f8f8f2>background</color> <color=#f92672>?</color> <color=#ae81ff>0xffffffff</color> <color=#f8f8f2>:</color> <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>mix</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>);</color>
                            <color=#f8f8f2>}</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>SQUARES</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>CIRCLES</color><color=#f8f8f2>:</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>radius</color> <color=#f92672>=</color> <color=#f8f8f2>distance</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>radius2</color> <color=#f92672>=</color> <color=#f8f8f2>radius</color> <color=#f92672>*</color> <color=#f8f8f2>radius</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>numShapes</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#ae81ff>2</color> <color=#f92672>*</color> <color=#f8f8f2>density</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color> <color=#f92672>/</color> <color=#f8f8f2>radius</color><color=#f8f8f2>);</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>numShapes</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>sx</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>sy</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>randomGenerator</color><color=#f8f8f2>.</color><color=#a6e22e>nextInt</color><color=#f8f8f2>()</color> <color=#f92672>&</color> <color=#ae81ff>0x7fffffff</color><color=#f8f8f2>)</color> <color=#f92672>%</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>int</color> <color=#f8f8f2>rgb</color> <color=#f92672>=</color> <color=#f8f8f2>inPixels</color><color=#f92672>[</color><color=#f8f8f2>sy</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>sx</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>sx</color> <color=#f92672>-</color> <color=#f8f8f2>radius</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>sx</color> <color=#f92672>+</color> <color=#f8f8f2>radius</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>x</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>sy</color> <color=#f92672>-</color> <color=#f8f8f2>radius</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>sy</color> <color=#f92672>+</color> <color=#f8f8f2>radius</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>y</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>int</color> <color=#f8f8f2>f</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>shape</color> <color=#f92672>==</color> <color=#f8f8f2>CIRCLES</color><color=#f8f8f2>)</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>sx</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>sx</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>sy</color><color=#f8f8f2>)</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>sy</color><color=#f8f8f2>);</color>
                            <color=#66d9ef>else</color> <color=#f8f8f2>f</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>x</color> <color=#f92672><</color> <color=#f8f8f2>width</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>&&</color> <color=#f8f8f2>y</color> <color=#f92672><</color> <color=#f8f8f2>height</color> <color=#f92672>&&</color> <color=#f8f8f2>f</color> <color=#f92672><=</color> <color=#f8f8f2>radius2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                                <color=#66d9ef>int</color> <color=#f8f8f2>rgb2</color> <color=#f92672>=</color> <color=#f8f8f2>background</color> <color=#f92672>?</color> <color=#ae81ff>0xffffffff</color> <color=#f8f8f2>:</color> <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                                <color=#f8f8f2>outPixels</color><color=#f92672>[</color><color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>width</color> <color=#f92672>+</color> <color=#f8f8f2>x</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ImageMath</color><color=#f8f8f2>.</color><color=#a6e22e>mixColors</color><color=#f8f8f2>(</color><color=#f8f8f2>mix</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb2</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgb</color><color=#f8f8f2>);</color>
                            <color=#f8f8f2>}</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>outPixels</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Effects/Smear..."</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>