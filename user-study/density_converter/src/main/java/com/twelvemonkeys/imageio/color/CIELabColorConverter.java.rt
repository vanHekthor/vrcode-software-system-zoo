<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2015, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.imageio.color</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.Validate</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Converts between CIE L*a*b* and sRGB color spaces.</color>
<color=#75715e> */</color>
<color=#75715e>// Code adapted from ImageJ's Color_Space_Converter.java (Public Domain):</color>
<color=#75715e>// http://rsb.info.nih.gov/ij/plugins/download/Color_Space_Converter.java</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>CIELabColorConverter</color> <color=#f8f8f2>{</color>
    <color=#75715e>// TODO: Create interface in the color package?</color>
    <color=#75715e>// TODO: Make YCbCr/YCCK -> RGB/CMYK implement same interface?</color>

    <color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>Illuminant</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>D50</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#ae81ff>96.4212f</color><color=#f8f8f2>,</color> <color=#ae81ff>100.0f</color><color=#f8f8f2>,</color> <color=#ae81ff>82.5188f</color><color=#f8f8f2>}),</color>
        <color=#f8f8f2>D65</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#ae81ff>95.0429f</color><color=#f8f8f2>,</color> <color=#ae81ff>100.0f</color><color=#f8f8f2>,</color> <color=#ae81ff>108.8900f</color><color=#f8f8f2>});</color>

        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>whitePoint</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>Illuminant</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>wp</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>whitePoint</color> <color=#f92672>=</color> <color=#f8f8f2>Validate</color><color=#f8f8f2>.</color><color=#a6e22e>isTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>wp</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>wp</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>==</color> <color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#f8f8f2>wp</color><color=#f8f8f2>,</color> <color=#e6db74>"Bad white point definition: %s"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>public</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#a6e22e>getWhitePoint</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>whitePoint</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>whitePoint</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>CIELabColorConverter</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Illuminant</color> <color=#f8f8f2>illuminant</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>whitePoint</color> <color=#f92672>=</color> <color=#f8f8f2>Validate</color><color=#f8f8f2>.</color><color=#a6e22e>notNull</color><color=#f8f8f2>(</color><color=#f8f8f2>illuminant</color><color=#f8f8f2>,</color> <color=#e6db74>"illuminant"</color><color=#f8f8f2>).</color><color=#a6e22e>getWhitePoint</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#a6e22e>clamp</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>x</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672><</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>></color> <color=#ae81ff>255.0f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#ae81ff>255.0f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>toRGB</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>l</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>rgbResult</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>XYZtoRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>LABtoXYZ</color><color=#f8f8f2>(</color><color=#f8f8f2>l</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgbResult</color><color=#f8f8f2>),</color> <color=#f8f8f2>rgbResult</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Convert LAB to XYZ.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param L</color>
<color=#75715e>     * @param a</color>
<color=#75715e>     * @param b</color>
<color=#75715e>     * @return XYZ values</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#a6e22e>LABtoXYZ</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>L</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>xyzResult</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Significant speedup: Removing Math.pow</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>L</color> <color=#f92672>+</color> <color=#ae81ff>16.0f</color><color=#f8f8f2>)</color> <color=#f92672>/</color> <color=#ae81ff>116.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>y3</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color> <color=#75715e>// Math.pow(y, 3.0);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>a</color> <color=#f92672>/</color> <color=#ae81ff>500.0f</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>y</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>x3</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f8f8f2>x</color><color=#f8f8f2>;</color> <color=#75715e>// Math.pow(x, 3.0);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>z</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>/</color> <color=#ae81ff>200.0f</color><color=#f8f8f2>);</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>z3</color> <color=#f92672>=</color> <color=#f8f8f2>z</color> <color=#f92672>*</color> <color=#f8f8f2>z</color> <color=#f92672>*</color> <color=#f8f8f2>z</color><color=#f8f8f2>;</color> <color=#75715e>// Math.pow(z, 3.0);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>y3</color> <color=#f92672>></color> <color=#ae81ff>0.008856f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>y3</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>y</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#ae81ff>16.0f</color> <color=#f92672>/</color> <color=#ae81ff>116.0f</color><color=#f8f8f2>))</color> <color=#f92672>/</color> <color=#ae81ff>7.787f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>x3</color> <color=#f92672>></color> <color=#ae81ff>0.008856f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>x3</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>x</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#ae81ff>16.0f</color> <color=#f92672>/</color> <color=#ae81ff>116.0f</color><color=#f8f8f2>))</color> <color=#f92672>/</color> <color=#ae81ff>7.787f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>z3</color> <color=#f92672>></color> <color=#ae81ff>0.008856f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>z</color> <color=#f92672>=</color> <color=#f8f8f2>z3</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>z</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>z</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#ae81ff>16.0f</color> <color=#f92672>/</color> <color=#ae81ff>116.0f</color><color=#f8f8f2>))</color> <color=#f92672>/</color> <color=#ae81ff>7.787f</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>xyzResult</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f8f8f2>whitePoint</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>xyzResult</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f8f8f2>whitePoint</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>xyzResult</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>z</color> <color=#f92672>*</color> <color=#f8f8f2>whitePoint</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>xyzResult</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Convert XYZ to RGB</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param xyz</color>
<color=#75715e>     * @return RGB values</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#a6e22e>XYZtoRGB</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>xyz</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>rgbResult</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>XYZtoRGB</color><color=#f8f8f2>(</color><color=#f8f8f2>xyz</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>xyz</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>xyz</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>rgbResult</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#a6e22e>XYZtoRGB</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>X</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>Y</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>Z</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color><color=#f92672>[]</color> <color=#f8f8f2>rgbResult</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>X</color> <color=#f92672>/</color> <color=#ae81ff>100.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>Y</color> <color=#f92672>/</color> <color=#ae81ff>100.0f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>z</color> <color=#f92672>=</color> <color=#f8f8f2>Z</color> <color=#f92672>/</color> <color=#ae81ff>100.0f</color><color=#f8f8f2>;</color>

        <color=#66d9ef>float</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#ae81ff>3.2406f</color> <color=#f92672>+</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f92672>-</color><color=#ae81ff>1.5372f</color> <color=#f92672>+</color> <color=#f8f8f2>z</color> <color=#f92672>*</color> <color=#f92672>-</color><color=#ae81ff>0.4986f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#f92672>-</color><color=#ae81ff>0.9689f</color> <color=#f92672>+</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#ae81ff>1.8758f</color> <color=#f92672>+</color> <color=#f8f8f2>z</color> <color=#f92672>*</color> <color=#ae81ff>0.0415f</color><color=#f8f8f2>;</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>x</color> <color=#f92672>*</color> <color=#ae81ff>0.0557f</color> <color=#f92672>+</color> <color=#f8f8f2>y</color> <color=#f92672>*</color> <color=#f92672>-</color><color=#ae81ff>0.2040f</color> <color=#f92672>+</color> <color=#f8f8f2>z</color> <color=#f92672>*</color> <color=#ae81ff>1.0570f</color><color=#f8f8f2>;</color>

        <color=#75715e>// assume sRGB</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>></color> <color=#ae81ff>0.0031308f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#ae81ff>1.055f</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>r</color><color=#f8f8f2>,</color> <color=#ae81ff>1.0</color> <color=#f92672>/</color> <color=#ae81ff>2.4</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#ae81ff>0.055f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>*</color> <color=#ae81ff>12.92f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>></color> <color=#ae81ff>0.0031308f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#ae81ff>1.055f</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color><color=#f8f8f2>,</color> <color=#ae81ff>1.0</color> <color=#f92672>/</color> <color=#ae81ff>2.4</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#ae81ff>0.055f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>*</color> <color=#ae81ff>12.92f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>></color> <color=#ae81ff>0.0031308f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#ae81ff>1.055f</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>pow</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#ae81ff>1.0</color> <color=#f92672>/</color> <color=#ae81ff>2.4</color><color=#f8f8f2>))</color> <color=#f92672>-</color> <color=#ae81ff>0.055f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>*</color> <color=#ae81ff>12.92f</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// convert 0..1 into 0..255</color>
        <color=#f8f8f2>rgbResult</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>clamp</color><color=#f8f8f2>(</color><color=#f8f8f2>r</color> <color=#f92672>*</color> <color=#ae81ff>255</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>rgbResult</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>clamp</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color> <color=#f92672>*</color> <color=#ae81ff>255</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>rgbResult</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>clamp</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>*</color> <color=#ae81ff>255</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>rgbResult</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>// TODO: Test, to figure out if accuracy is good enough.</color>
    <color=#75715e>// Visual inspection looks good! The author claims 5-12% error, worst case up to 25%...</color>
    <color=#75715e>// http://martin.ankerl.com/2007/10/04/optimized-pow-approximation-for-java-and-c-c/</color>
    <color=#66d9ef>static</color> <color=#66d9ef>double</color> <color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>b</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>tmp</color> <color=#f92672>=</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>doubleToLongBits</color><color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f8f8f2>);</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>tmp2</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>long</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>b</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>tmp</color> <color=#f92672>-</color> <color=#ae81ff>4606921280493453312L</color><color=#f8f8f2>))</color> <color=#f92672>+</color> <color=#ae81ff>4606921280493453312L</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>longBitsToDouble</color><color=#f8f8f2>(</color><color=#f8f8f2>tmp2</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>