<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2011, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.jpeg</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.Directory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.Entry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.psd.PSD</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.psd.PSDReader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.tiff.TIFFReader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.xmp.XMP</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.xmp.XMPReader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.stream.ByteArrayImageInputStream</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.IIOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageIO</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.ImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.color.ICC_ColorSpace</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.color.ICC_Profile</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.ByteArrayOutputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.EOFException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.charset.Charset</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>com.twelvemonkeys.lang.Validate.notNull</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * JPEGSegmentUtil</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haraldk$</color>
<color=#75715e> * @version $Id: JPEGSegmentUtil.java,v 1.0 24.01.11 17.37 haraldk Exp$</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>JPEGSegmentUtil</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>ALL_IDS</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableList</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>AllIdsList</color><color=#f8f8f2>());</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>ALL_SEGMENTS</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableMap</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>AllSegmentsMap</color><color=#f8f8f2>());</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>APP_SEGMENTS</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableMap</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>AllAppSegmentsMap</color><color=#f8f8f2>());</color>

    <color=#66d9ef>private</color> <color=#a6e22e>JPEGSegmentUtil</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Reads the requested JPEG segments from the stream.</color>
<color=#75715e>     * The stream position must be directly before the SOI marker, and only segments for the current image is read.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param stream     the stream to read from.</color>
<color=#75715e>     * @param marker     the segment marker to read</color>
<color=#75715e>     * @param identifier the identifier to read, or {@code null} to match any segment</color>
<color=#75715e>     * @return a list of segments with the given app marker and optional identifier. If no segments are found, an</color>
<color=#75715e>     * empty list is returned.</color>
<color=#75715e>     * @throws IIOException if a JPEG format exception occurs during reading</color>
<color=#75715e>     * @throws IOException  if an I/O exception occurs during reading</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color> <color=#a6e22e>readSegments</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>stream</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>marker</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>identifier</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>readSegments</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>,</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>singletonMap</color><color=#f8f8f2>(</color><color=#f8f8f2>marker</color><color=#f8f8f2>,</color> <color=#f8f8f2>identifier</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>singletonList</color><color=#f8f8f2>(</color><color=#f8f8f2>identifier</color><color=#f8f8f2>)</color> <color=#f8f8f2>:</color> <color=#f8f8f2>ALL_IDS</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Reads the requested JPEG segments from the stream.</color>
<color=#75715e>     * The stream position must be directly before the SOI marker, and only segments for the current image is read.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param stream             the stream to read from.</color>
<color=#75715e>     * @param segmentIdentifiers the segment identifiers</color>
<color=#75715e>     * @return a list of segments with the given app markers and optional identifiers. If no segments are found, an</color>
<color=#75715e>     * empty list is returned.</color>
<color=#75715e>     * @throws IIOException if a JPEG format exception occurs during reading</color>
<color=#75715e>     * @throws IOException  if an I/O exception occurs during reading</color>
<color=#75715e>     * @see #ALL_SEGMENTS</color>
<color=#75715e>     * @see #APP_SEGMENTS</color>
<color=#75715e>     * @see #ALL_IDS</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color> <color=#a6e22e>readSegments</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>stream</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>readSOI</color><color=#f8f8f2>(</color><color=#f8f8f2>notNull</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>,</color> <color=#e6db74>"stream"</color><color=#f8f8f2>));</color>

        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color> <color=#f8f8f2>segments</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>emptyList</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>JPEGSegment</color> <color=#f8f8f2>segment</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>do</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>segment</color> <color=#f92672>=</color> <color=#f8f8f2>readSegment</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>,</color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>);</color>
<color=#75715e>//                System.err.println("segment: " + segment);</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isRequested</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>,</color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>segments</color> <color=#f92672>==</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>EMPTY_LIST</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>segments</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color><color=#f8f8f2>();</color>
                    <color=#f8f8f2>}</color>

                    <color=#f8f8f2>segments</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isImageDone</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>EOFException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Just end here, in case of malformed stream</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// TODO: Should probably skip until EOI, so that multiple invocations succeeds for multiple image streams.</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>segments</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isRequested</color><color=#f8f8f2>(</color><color=#f8f8f2>JPEGSegment</color> <color=#f8f8f2>segment</color><color=#f8f8f2>,</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>marker</color><color=#f8f8f2>)</color> <color=#f92672>&&</color>
                <color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>identifier</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>marker</color><color=#f8f8f2>)</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>containsSafe</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>,</color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>)));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>containsSafe</color><color=#f8f8f2>(</color><color=#f8f8f2>JPEGSegment</color> <color=#f8f8f2>segment</color><color=#f8f8f2>,</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>identifiers</color> <color=#f92672>=</color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>marker</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>identifiers</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>identifiers</color><color=#f8f8f2>.</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>identifier</color><color=#f8f8f2>());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isImageDone</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>JPEGSegment</color> <color=#f8f8f2>segment</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// We're done with this image if we encounter a SOS, EOI (or a new SOI, but that should never happen)</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>marker</color> <color=#f92672>==</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOS</color> <color=#f92672>||</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>marker</color> <color=#f92672>==</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>EOI</color> <color=#f92672>||</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>marker</color> <color=#f92672>==</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOI</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>asNullTerminatedAsciiString</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>offset</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>-</color> <color=#f8f8f2>offset</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f92672>[</color><color=#f8f8f2>offset</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>==</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>i</color> <color=#f92672>></color> <color=#ae81ff>255</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>asAsciiString</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset</color> <color=#f92672>+</color> <color=#f8f8f2>i</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>asAsciiString</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>length</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>String</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>offset</color><color=#f8f8f2>,</color> <color=#f8f8f2>length</color><color=#f8f8f2>,</color> <color=#f8f8f2>Charset</color><color=#f8f8f2>.</color><color=#a6e22e>forName</color><color=#f8f8f2>(</color><color=#e6db74>"ascii"</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>readSOI</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>stream</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedShort</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOI</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IIOException</color><color=#f8f8f2>(</color><color=#e6db74>"Not a JPEG stream"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>JPEGSegment</color> <color=#a6e22e>readSegment</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>stream</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
<color=#75715e>//        int trash = 0;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>marker</color> <color=#f92672>=</color> <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedByte</color><color=#f8f8f2>();</color>

        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isKnownJPEGMarker</color><color=#f8f8f2>(</color><color=#f8f8f2>marker</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Skip trash padding before the marker</color>
            <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>marker</color> <color=#f92672>!=</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>marker</color> <color=#f92672>=</color> <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedByte</color><color=#f8f8f2>();</color>
<color=#75715e>//            trash++;</color>
            <color=#f8f8f2>}</color>

<color=#75715e>//        if (trash != 0) {</color>
            <color=#75715e>// TODO: Issue warning?</color>
<color=#75715e>//            System.err.println("trash: " + trash);</color>
<color=#75715e>//        }</color>

            <color=#f8f8f2>marker</color> <color=#f92672>=</color> <color=#ae81ff>0xff00</color> <color=#f92672>|</color> <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedByte</color><color=#f8f8f2>();</color>

            <color=#75715e>// Skip over 0xff padding between markers</color>
            <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>marker</color> <color=#f92672>==</color> <color=#ae81ff>0xffff</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>marker</color> <color=#f92672>=</color> <color=#ae81ff>0xff00</color> <color=#f92672>|</color> <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedByte</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>marker</color> <color=#f92672>>></color> <color=#ae81ff>8</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IIOException</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#e6db74>"Bad marker: %04x"</color><color=#f8f8f2>,</color> <color=#f8f8f2>marker</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>length</color> <color=#f92672>=</color> <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedShort</color><color=#f8f8f2>();</color> <color=#75715e>// Length including length field itself</color>

        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>segmentIdentifiers</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>marker</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>length</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>readFully</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>JPEGSegment</color><color=#f8f8f2>.</color><color=#a6e22e>isAppSegmentMarker</color><color=#f8f8f2>(</color><color=#f8f8f2>marker</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>ByteArrayOutputStream</color> <color=#f8f8f2>buffer</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ByteArrayOutputStream</color><color=#f8f8f2>(</color><color=#ae81ff>32</color><color=#f8f8f2>);</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>read</color><color=#f8f8f2>;</color>

                <color=#75715e>// NOTE: Read until null-termination (0) or EOF</color>
                <color=#66d9ef>while</color> <color=#f8f8f2>((</color><color=#f8f8f2>read</color> <color=#f92672>=</color> <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>())</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>buffer</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>read</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#f8f8f2>buffer</color><color=#f8f8f2>.</color><color=#a6e22e>toByteArray</color><color=#f8f8f2>();</color>

                <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>skipBytes</color><color=#f8f8f2>(</color><color=#f8f8f2>length</color> <color=#f92672>-</color> <color=#ae81ff>3</color> <color=#f92672>-</color> <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>skipBytes</color><color=#f8f8f2>(</color><color=#f8f8f2>length</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>JPEGSegment</color><color=#f8f8f2>(</color><color=#f8f8f2>marker</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>length</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isKnownJPEGMarker</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>marker</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>marker</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOI</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>EOI</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DHT</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOS</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DQT</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>COM</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF0</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF1</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF2</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF3</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF5</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF6</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF7</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF9</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF10</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF11</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF13</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF14</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF15</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>SOF55</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP0</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP1</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP2</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP3</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP4</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP5</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP6</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP7</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP8</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP9</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP10</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP11</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP12</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP13</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP14</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>APP15</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DRI</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>TEM</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DAC</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DHP</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DNL</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>EXP</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>LSE</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
            <color=#66d9ef>default</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>AllIdsList</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>{</color>
        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#e6db74>"[All ids]"</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>o</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>AllSegmentsMap</color> <color=#66d9ef>extends</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>{</color>
        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#e6db74>"{All segments}"</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>key</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Integer</color> <color=#f92672>&&</color> <color=#f8f8f2>JPEGSegment</color><color=#f8f8f2>.</color><color=#a6e22e>isAppSegmentMarker</color><color=#f8f8f2>((</color><color=#f8f8f2>Integer</color><color=#f8f8f2>)</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>ALL_IDS</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>AllAppSegmentsMap</color> <color=#66d9ef>extends</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>Integer</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>{</color>
        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#e6db74>"{All APPn segments}"</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>ALL_IDS</color> <color=#f8f8f2>:</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>key</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>key</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Integer</color> <color=#f92672>&&</color> <color=#f8f8f2>JPEGSegment</color><color=#f8f8f2>.</color><color=#a6e22e>isAppSegmentMarker</color><color=#f8f8f2>((</color><color=#f8f8f2>Integer</color><color=#f8f8f2>)</color> <color=#f8f8f2>key</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>arg</color> <color=#f8f8f2>:</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"File: "</color> <color=#f92672>+</color> <color=#f8f8f2>arg</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"------"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color> <color=#f8f8f2>segments</color> <color=#f92672>=</color> <color=#f8f8f2>readSegments</color><color=#f8f8f2>(</color><color=#f8f8f2>ImageIO</color><color=#f8f8f2>.</color><color=#a6e22e>createImageInputStream</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>arg</color><color=#f8f8f2>)),</color> <color=#f8f8f2>ALL_SEGMENTS</color><color=#f8f8f2>);</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>JPEGSegment</color> <color=#f8f8f2>segment</color> <color=#f8f8f2>:</color> <color=#f8f8f2>segments</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"segment: "</color> <color=#f92672>+</color> <color=#f8f8f2>segment</color><color=#f8f8f2>);</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#e6db74>"Exif"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>identifier</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>stream</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ByteArrayImageInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>offset</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>

                    <color=#75715e>// Root entry is TIFF, that contains the EXIF sub-IFD</color>
                    <color=#f8f8f2>Directory</color> <color=#f8f8f2>tiff</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TIFFReader</color><color=#f8f8f2>().</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"EXIF: "</color> <color=#f92672>+</color> <color=#f8f8f2>tiff</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>XMP</color><color=#f8f8f2>.</color><color=#a6e22e>NS_XAP</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>identifier</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>Directory</color> <color=#f8f8f2>xmp</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>XMPReader</color><color=#f8f8f2>().</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ByteArrayImageInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>offset</color><color=#f8f8f2>(),</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()));</color>
                    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"XMP: "</color> <color=#f92672>+</color> <color=#f8f8f2>xmp</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>TIFFReader</color><color=#f8f8f2>.</color><color=#a6e22e>HexDump</color><color=#f8f8f2>.</color><color=#a6e22e>dump</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#e6db74>"Photoshop 3.0"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>identifier</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// TODO: The "Photoshop 3.0" segment contains several image resources, of which one might contain</color>
                    <color=#75715e>//       IPTC metadata. Probably duplicated in the XMP though...</color>
                    <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>stream</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ByteArrayImageInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>offset</color><color=#f8f8f2>(),</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>());</color>
                    <color=#f8f8f2>Directory</color> <color=#f8f8f2>psd</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PSDReader</color><color=#f8f8f2>().</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>Entry</color> <color=#f8f8f2>iccEntry</color> <color=#f92672>=</color> <color=#f8f8f2>psd</color><color=#f8f8f2>.</color><color=#a6e22e>getEntryById</color><color=#f8f8f2>(</color><color=#f8f8f2>PSD</color><color=#f8f8f2>.</color><color=#a6e22e>RES_ICC_PROFILE</color><color=#f8f8f2>);</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iccEntry</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>ICC_ColorSpace</color> <color=#f8f8f2>colorSpace</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>((</color><color=#66d9ef>byte</color><color=#f92672>[]</color><color=#f8f8f2>)</color> <color=#f8f8f2>iccEntry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>()));</color>
                        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"colorSpace: "</color> <color=#f92672>+</color> <color=#f8f8f2>colorSpace</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"PSD: "</color> <color=#f92672>+</color> <color=#f8f8f2>psd</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>TIFFReader</color><color=#f8f8f2>.</color><color=#a6e22e>HexDump</color><color=#f8f8f2>.</color><color=#a6e22e>dump</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#e6db74>"ICC_PROFILE"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>identifier</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// Skip</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>TIFFReader</color><color=#f8f8f2>.</color><color=#a6e22e>HexDump</color><color=#f8f8f2>.</color><color=#a6e22e>dump</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"------"</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>