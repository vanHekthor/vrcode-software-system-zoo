<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2012, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.jpeg</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.Validate</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.IIOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageIO</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.plugins.jpeg.JPEGQTable</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.ImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.DataInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Determines an approximate JPEG compression quality value from the quantization tables.</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haraldk$</color>
<color=#75715e> * @version $Id: JPEGQuality.java,v 1.0 16.02.12 17:07 haraldk Exp$</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>JPEGQuality</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>NUM_QUANT_TABLES</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color> <color=#75715e>/* Quantization tables are numbered 0..3 */</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>DCT_SIZE_2</color> <color=#f92672>=</color> <color=#ae81ff>64</color><color=#f8f8f2>;</color> <color=#75715e>/* DCT_SIZE squared; # of elements in a block */</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Determines an approximate JPEG compression quality value from the quantization tables.</color>
<color=#75715e>     * The value will be in the range {@code [0...1]}, where {@code 1} is the best possible value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param segments a list of JPEG segments containing the DQT quantization tables.</color>
<color=#75715e>     * @return a float in the range {@code [0...1]}, representing the JPEG quality,</color>
<color=#75715e>     * or {@code -1} if the quality can't be determined.</color>
<color=#75715e>     * @throws IIOException if a JPEG format error is found during parsing.</color>
<color=#75715e>     * @throws IOException  if an I/O exception occurs during parsing.</color>
<color=#75715e>     * @see javax.imageio.plugins.jpeg.JPEGImageWriteParam#setCompressionQuality(float)</color>
<color=#75715e>     * @see JPEG#DQT</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>getJPEGQuality</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color> <color=#f8f8f2>segments</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>quality</color> <color=#f92672>=</color> <color=#f8f8f2>getJPEGQuality</color><color=#f8f8f2>(</color><color=#f8f8f2>getQuantizationTables</color><color=#f8f8f2>(</color><color=#f8f8f2>segments</color><color=#f8f8f2>));</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>quality</color> <color=#f92672>>=</color> <color=#ae81ff>0</color> <color=#f92672>?</color> <color=#f8f8f2>quality</color> <color=#f92672>/</color> <color=#ae81ff>100</color><color=#f8f8f2>f</color> <color=#f8f8f2>:</color> <color=#f8f8f2>quality</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Determines an approximate JPEG compression quality value from the quantization tables.</color>
<color=#75715e>     * The value will be in the range {@code [0...1]}, where {@code 1} is the best possible value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param input an image input stream containing JPEG data.</color>
<color=#75715e>     * @return a float in the range {@code [0...1]}, representing the JPEG quality,</color>
<color=#75715e>     * or {@code -1} if the quality can't be determined.</color>
<color=#75715e>     * @throws IIOException if a JPEG format error is found during parsing.</color>
<color=#75715e>     * @throws IOException  if an I/O exception occurs during parsing.</color>
<color=#75715e>     * @see javax.imageio.plugins.jpeg.JPEGImageWriteParam#setCompressionQuality(float)</color>
<color=#75715e>     * @see JPEG#DQT</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>float</color> <color=#a6e22e>getJPEGQuality</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>input</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>getJPEGQuality</color><color=#f8f8f2>(</color><color=#f8f8f2>JPEGSegmentUtil</color><color=#f8f8f2>.</color><color=#a6e22e>readSegments</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DQT</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>// Adapted from ImageMagick coders/jpeg.c & http://blog.apokalyptik.com/2009/09/16/quality-time-with-your-jpegs/</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>getJPEGQuality</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color><color=#f92672>[][]</color> <color=#f8f8f2>quantizationTables</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
<color=#75715e>//        System.err.println("tables: " + Arrays.deepToString(tables));</color>

        <color=#75715e>// TODO: Determine lossless JPEG, it's an entirely different algorithm</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>qvalue</color><color=#f8f8f2>;</color>

        <color=#75715e>// Determine the JPEG compression quality from the quantization tables.</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>sum</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>NUM_QUANT_TABLES</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>DCT_SIZE_2</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>sum</color> <color=#f92672>+=</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>hash</color><color=#f8f8f2>,</color> <color=#f8f8f2>sums</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// TODO: Make constant</color>
            <color=#f8f8f2>hash</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[]</color><color=#f8f8f2>{</color>
                    <color=#ae81ff>1020</color><color=#f8f8f2>,</color> <color=#ae81ff>1015</color><color=#f8f8f2>,</color> <color=#ae81ff>932</color><color=#f8f8f2>,</color> <color=#ae81ff>848</color><color=#f8f8f2>,</color> <color=#ae81ff>780</color><color=#f8f8f2>,</color> <color=#ae81ff>735</color><color=#f8f8f2>,</color> <color=#ae81ff>702</color><color=#f8f8f2>,</color> <color=#ae81ff>679</color><color=#f8f8f2>,</color> <color=#ae81ff>660</color><color=#f8f8f2>,</color> <color=#ae81ff>645</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>632</color><color=#f8f8f2>,</color> <color=#ae81ff>623</color><color=#f8f8f2>,</color> <color=#ae81ff>613</color><color=#f8f8f2>,</color> <color=#ae81ff>607</color><color=#f8f8f2>,</color> <color=#ae81ff>600</color><color=#f8f8f2>,</color> <color=#ae81ff>594</color><color=#f8f8f2>,</color> <color=#ae81ff>589</color><color=#f8f8f2>,</color> <color=#ae81ff>585</color><color=#f8f8f2>,</color> <color=#ae81ff>581</color><color=#f8f8f2>,</color> <color=#ae81ff>571</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>555</color><color=#f8f8f2>,</color> <color=#ae81ff>542</color><color=#f8f8f2>,</color> <color=#ae81ff>529</color><color=#f8f8f2>,</color> <color=#ae81ff>514</color><color=#f8f8f2>,</color> <color=#ae81ff>494</color><color=#f8f8f2>,</color> <color=#ae81ff>474</color><color=#f8f8f2>,</color> <color=#ae81ff>457</color><color=#f8f8f2>,</color> <color=#ae81ff>439</color><color=#f8f8f2>,</color> <color=#ae81ff>424</color><color=#f8f8f2>,</color> <color=#ae81ff>410</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>397</color><color=#f8f8f2>,</color> <color=#ae81ff>386</color><color=#f8f8f2>,</color> <color=#ae81ff>373</color><color=#f8f8f2>,</color> <color=#ae81ff>364</color><color=#f8f8f2>,</color> <color=#ae81ff>351</color><color=#f8f8f2>,</color> <color=#ae81ff>341</color><color=#f8f8f2>,</color> <color=#ae81ff>334</color><color=#f8f8f2>,</color> <color=#ae81ff>324</color><color=#f8f8f2>,</color> <color=#ae81ff>317</color><color=#f8f8f2>,</color> <color=#ae81ff>309</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>299</color><color=#f8f8f2>,</color> <color=#ae81ff>294</color><color=#f8f8f2>,</color> <color=#ae81ff>287</color><color=#f8f8f2>,</color> <color=#ae81ff>279</color><color=#f8f8f2>,</color> <color=#ae81ff>274</color><color=#f8f8f2>,</color> <color=#ae81ff>267</color><color=#f8f8f2>,</color> <color=#ae81ff>262</color><color=#f8f8f2>,</color> <color=#ae81ff>257</color><color=#f8f8f2>,</color> <color=#ae81ff>251</color><color=#f8f8f2>,</color> <color=#ae81ff>247</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>243</color><color=#f8f8f2>,</color> <color=#ae81ff>237</color><color=#f8f8f2>,</color> <color=#ae81ff>232</color><color=#f8f8f2>,</color> <color=#ae81ff>227</color><color=#f8f8f2>,</color> <color=#ae81ff>222</color><color=#f8f8f2>,</color> <color=#ae81ff>217</color><color=#f8f8f2>,</color> <color=#ae81ff>213</color><color=#f8f8f2>,</color> <color=#ae81ff>207</color><color=#f8f8f2>,</color> <color=#ae81ff>202</color><color=#f8f8f2>,</color> <color=#ae81ff>198</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>192</color><color=#f8f8f2>,</color> <color=#ae81ff>188</color><color=#f8f8f2>,</color> <color=#ae81ff>183</color><color=#f8f8f2>,</color> <color=#ae81ff>177</color><color=#f8f8f2>,</color> <color=#ae81ff>173</color><color=#f8f8f2>,</color> <color=#ae81ff>168</color><color=#f8f8f2>,</color> <color=#ae81ff>163</color><color=#f8f8f2>,</color> <color=#ae81ff>157</color><color=#f8f8f2>,</color> <color=#ae81ff>153</color><color=#f8f8f2>,</color> <color=#ae81ff>148</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>143</color><color=#f8f8f2>,</color> <color=#ae81ff>139</color><color=#f8f8f2>,</color> <color=#ae81ff>132</color><color=#f8f8f2>,</color> <color=#ae81ff>128</color><color=#f8f8f2>,</color> <color=#ae81ff>125</color><color=#f8f8f2>,</color> <color=#ae81ff>119</color><color=#f8f8f2>,</color> <color=#ae81ff>115</color><color=#f8f8f2>,</color> <color=#ae81ff>108</color><color=#f8f8f2>,</color> <color=#ae81ff>104</color><color=#f8f8f2>,</color> <color=#ae81ff>99</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>94</color><color=#f8f8f2>,</color> <color=#ae81ff>90</color><color=#f8f8f2>,</color> <color=#ae81ff>84</color><color=#f8f8f2>,</color> <color=#ae81ff>79</color><color=#f8f8f2>,</color> <color=#ae81ff>74</color><color=#f8f8f2>,</color> <color=#ae81ff>70</color><color=#f8f8f2>,</color> <color=#ae81ff>64</color><color=#f8f8f2>,</color> <color=#ae81ff>59</color><color=#f8f8f2>,</color> <color=#ae81ff>55</color><color=#f8f8f2>,</color> <color=#ae81ff>49</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>45</color><color=#f8f8f2>,</color> <color=#ae81ff>40</color><color=#f8f8f2>,</color> <color=#ae81ff>34</color><color=#f8f8f2>,</color> <color=#ae81ff>30</color><color=#f8f8f2>,</color> <color=#ae81ff>25</color><color=#f8f8f2>,</color> <color=#ae81ff>20</color><color=#f8f8f2>,</color> <color=#ae81ff>15</color><color=#f8f8f2>,</color> <color=#ae81ff>11</color><color=#f8f8f2>,</color> <color=#ae81ff>6</color><color=#f8f8f2>,</color> <color=#ae81ff>4</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>0</color>
            <color=#f8f8f2>};</color>
            <color=#f8f8f2>sums</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[]</color><color=#f8f8f2>{</color>
                    <color=#ae81ff>32640</color><color=#f8f8f2>,</color> <color=#ae81ff>32635</color><color=#f8f8f2>,</color> <color=#ae81ff>32266</color><color=#f8f8f2>,</color> <color=#ae81ff>31495</color><color=#f8f8f2>,</color> <color=#ae81ff>30665</color><color=#f8f8f2>,</color> <color=#ae81ff>29804</color><color=#f8f8f2>,</color> <color=#ae81ff>29146</color><color=#f8f8f2>,</color> <color=#ae81ff>28599</color><color=#f8f8f2>,</color> <color=#ae81ff>28104</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>27670</color><color=#f8f8f2>,</color> <color=#ae81ff>27225</color><color=#f8f8f2>,</color> <color=#ae81ff>26725</color><color=#f8f8f2>,</color> <color=#ae81ff>26210</color><color=#f8f8f2>,</color> <color=#ae81ff>25716</color><color=#f8f8f2>,</color> <color=#ae81ff>25240</color><color=#f8f8f2>,</color> <color=#ae81ff>24789</color><color=#f8f8f2>,</color> <color=#ae81ff>24373</color><color=#f8f8f2>,</color> <color=#ae81ff>23946</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>23572</color><color=#f8f8f2>,</color> <color=#ae81ff>22846</color><color=#f8f8f2>,</color> <color=#ae81ff>21801</color><color=#f8f8f2>,</color> <color=#ae81ff>20842</color><color=#f8f8f2>,</color> <color=#ae81ff>19949</color><color=#f8f8f2>,</color> <color=#ae81ff>19121</color><color=#f8f8f2>,</color> <color=#ae81ff>18386</color><color=#f8f8f2>,</color> <color=#ae81ff>17651</color><color=#f8f8f2>,</color> <color=#ae81ff>16998</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>16349</color><color=#f8f8f2>,</color> <color=#ae81ff>15800</color><color=#f8f8f2>,</color> <color=#ae81ff>15247</color><color=#f8f8f2>,</color> <color=#ae81ff>14783</color><color=#f8f8f2>,</color> <color=#ae81ff>14321</color><color=#f8f8f2>,</color> <color=#ae81ff>13859</color><color=#f8f8f2>,</color> <color=#ae81ff>13535</color><color=#f8f8f2>,</color> <color=#ae81ff>13081</color><color=#f8f8f2>,</color> <color=#ae81ff>12702</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>12423</color><color=#f8f8f2>,</color> <color=#ae81ff>12056</color><color=#f8f8f2>,</color> <color=#ae81ff>11779</color><color=#f8f8f2>,</color> <color=#ae81ff>11513</color><color=#f8f8f2>,</color> <color=#ae81ff>11135</color><color=#f8f8f2>,</color> <color=#ae81ff>10955</color><color=#f8f8f2>,</color> <color=#ae81ff>10676</color><color=#f8f8f2>,</color> <color=#ae81ff>10392</color><color=#f8f8f2>,</color> <color=#ae81ff>10208</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>9928</color><color=#f8f8f2>,</color> <color=#ae81ff>9747</color><color=#f8f8f2>,</color> <color=#ae81ff>9564</color><color=#f8f8f2>,</color> <color=#ae81ff>9369</color><color=#f8f8f2>,</color> <color=#ae81ff>9193</color><color=#f8f8f2>,</color> <color=#ae81ff>9017</color><color=#f8f8f2>,</color> <color=#ae81ff>8822</color><color=#f8f8f2>,</color> <color=#ae81ff>8639</color><color=#f8f8f2>,</color> <color=#ae81ff>8458</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>8270</color><color=#f8f8f2>,</color> <color=#ae81ff>8084</color><color=#f8f8f2>,</color> <color=#ae81ff>7896</color><color=#f8f8f2>,</color> <color=#ae81ff>7710</color><color=#f8f8f2>,</color> <color=#ae81ff>7527</color><color=#f8f8f2>,</color> <color=#ae81ff>7347</color><color=#f8f8f2>,</color> <color=#ae81ff>7156</color><color=#f8f8f2>,</color> <color=#ae81ff>6977</color><color=#f8f8f2>,</color> <color=#ae81ff>6788</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>6607</color><color=#f8f8f2>,</color> <color=#ae81ff>6422</color><color=#f8f8f2>,</color> <color=#ae81ff>6236</color><color=#f8f8f2>,</color> <color=#ae81ff>6054</color><color=#f8f8f2>,</color> <color=#ae81ff>5867</color><color=#f8f8f2>,</color> <color=#ae81ff>5684</color><color=#f8f8f2>,</color> <color=#ae81ff>5495</color><color=#f8f8f2>,</color> <color=#ae81ff>5305</color><color=#f8f8f2>,</color> <color=#ae81ff>5128</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>4945</color><color=#f8f8f2>,</color> <color=#ae81ff>4751</color><color=#f8f8f2>,</color> <color=#ae81ff>4638</color><color=#f8f8f2>,</color> <color=#ae81ff>4442</color><color=#f8f8f2>,</color> <color=#ae81ff>4248</color><color=#f8f8f2>,</color> <color=#ae81ff>4065</color><color=#f8f8f2>,</color> <color=#ae81ff>3888</color><color=#f8f8f2>,</color> <color=#ae81ff>3698</color><color=#f8f8f2>,</color> <color=#ae81ff>3509</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>3326</color><color=#f8f8f2>,</color> <color=#ae81ff>3139</color><color=#f8f8f2>,</color> <color=#ae81ff>2957</color><color=#f8f8f2>,</color> <color=#ae81ff>2775</color><color=#f8f8f2>,</color> <color=#ae81ff>2586</color><color=#f8f8f2>,</color> <color=#ae81ff>2405</color><color=#f8f8f2>,</color> <color=#ae81ff>2216</color><color=#f8f8f2>,</color> <color=#ae81ff>2037</color><color=#f8f8f2>,</color> <color=#ae81ff>1846</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>1666</color><color=#f8f8f2>,</color> <color=#ae81ff>1483</color><color=#f8f8f2>,</color> <color=#ae81ff>1297</color><color=#f8f8f2>,</color> <color=#ae81ff>1109</color><color=#f8f8f2>,</color> <color=#ae81ff>927</color><color=#f8f8f2>,</color> <color=#ae81ff>735</color><color=#f8f8f2>,</color> <color=#ae81ff>554</color><color=#f8f8f2>,</color> <color=#ae81ff>375</color><color=#f8f8f2>,</color> <color=#ae81ff>201</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>128</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color>
            <color=#f8f8f2>};</color>

            <color=#f8f8f2>qvalue</color> <color=#f92672>=</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>][</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>][</color><color=#ae81ff>53</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>][</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>][</color><color=#f8f8f2>DCT_SIZE_2</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// TODO: Make constant</color>
            <color=#f8f8f2>hash</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[]</color><color=#f8f8f2>{</color>
                    <color=#ae81ff>510</color><color=#f8f8f2>,</color> <color=#ae81ff>505</color><color=#f8f8f2>,</color> <color=#ae81ff>422</color><color=#f8f8f2>,</color> <color=#ae81ff>380</color><color=#f8f8f2>,</color> <color=#ae81ff>355</color><color=#f8f8f2>,</color> <color=#ae81ff>338</color><color=#f8f8f2>,</color> <color=#ae81ff>326</color><color=#f8f8f2>,</color> <color=#ae81ff>318</color><color=#f8f8f2>,</color> <color=#ae81ff>311</color><color=#f8f8f2>,</color> <color=#ae81ff>305</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>300</color><color=#f8f8f2>,</color> <color=#ae81ff>297</color><color=#f8f8f2>,</color> <color=#ae81ff>293</color><color=#f8f8f2>,</color> <color=#ae81ff>291</color><color=#f8f8f2>,</color> <color=#ae81ff>288</color><color=#f8f8f2>,</color> <color=#ae81ff>286</color><color=#f8f8f2>,</color> <color=#ae81ff>284</color><color=#f8f8f2>,</color> <color=#ae81ff>283</color><color=#f8f8f2>,</color> <color=#ae81ff>281</color><color=#f8f8f2>,</color> <color=#ae81ff>280</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>279</color><color=#f8f8f2>,</color> <color=#ae81ff>278</color><color=#f8f8f2>,</color> <color=#ae81ff>277</color><color=#f8f8f2>,</color> <color=#ae81ff>273</color><color=#f8f8f2>,</color> <color=#ae81ff>262</color><color=#f8f8f2>,</color> <color=#ae81ff>251</color><color=#f8f8f2>,</color> <color=#ae81ff>243</color><color=#f8f8f2>,</color> <color=#ae81ff>233</color><color=#f8f8f2>,</color> <color=#ae81ff>225</color><color=#f8f8f2>,</color> <color=#ae81ff>218</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>211</color><color=#f8f8f2>,</color> <color=#ae81ff>205</color><color=#f8f8f2>,</color> <color=#ae81ff>198</color><color=#f8f8f2>,</color> <color=#ae81ff>193</color><color=#f8f8f2>,</color> <color=#ae81ff>186</color><color=#f8f8f2>,</color> <color=#ae81ff>181</color><color=#f8f8f2>,</color> <color=#ae81ff>177</color><color=#f8f8f2>,</color> <color=#ae81ff>172</color><color=#f8f8f2>,</color> <color=#ae81ff>168</color><color=#f8f8f2>,</color> <color=#ae81ff>164</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>158</color><color=#f8f8f2>,</color> <color=#ae81ff>156</color><color=#f8f8f2>,</color> <color=#ae81ff>152</color><color=#f8f8f2>,</color> <color=#ae81ff>148</color><color=#f8f8f2>,</color> <color=#ae81ff>145</color><color=#f8f8f2>,</color> <color=#ae81ff>142</color><color=#f8f8f2>,</color> <color=#ae81ff>139</color><color=#f8f8f2>,</color> <color=#ae81ff>136</color><color=#f8f8f2>,</color> <color=#ae81ff>133</color><color=#f8f8f2>,</color> <color=#ae81ff>131</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>129</color><color=#f8f8f2>,</color> <color=#ae81ff>126</color><color=#f8f8f2>,</color> <color=#ae81ff>123</color><color=#f8f8f2>,</color> <color=#ae81ff>120</color><color=#f8f8f2>,</color> <color=#ae81ff>118</color><color=#f8f8f2>,</color> <color=#ae81ff>115</color><color=#f8f8f2>,</color> <color=#ae81ff>113</color><color=#f8f8f2>,</color> <color=#ae81ff>110</color><color=#f8f8f2>,</color> <color=#ae81ff>107</color><color=#f8f8f2>,</color> <color=#ae81ff>105</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>102</color><color=#f8f8f2>,</color> <color=#ae81ff>100</color><color=#f8f8f2>,</color> <color=#ae81ff>97</color><color=#f8f8f2>,</color> <color=#ae81ff>94</color><color=#f8f8f2>,</color> <color=#ae81ff>92</color><color=#f8f8f2>,</color> <color=#ae81ff>89</color><color=#f8f8f2>,</color> <color=#ae81ff>87</color><color=#f8f8f2>,</color> <color=#ae81ff>83</color><color=#f8f8f2>,</color> <color=#ae81ff>81</color><color=#f8f8f2>,</color> <color=#ae81ff>79</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>76</color><color=#f8f8f2>,</color> <color=#ae81ff>74</color><color=#f8f8f2>,</color> <color=#ae81ff>70</color><color=#f8f8f2>,</color> <color=#ae81ff>68</color><color=#f8f8f2>,</color> <color=#ae81ff>66</color><color=#f8f8f2>,</color> <color=#ae81ff>63</color><color=#f8f8f2>,</color> <color=#ae81ff>61</color><color=#f8f8f2>,</color> <color=#ae81ff>57</color><color=#f8f8f2>,</color> <color=#ae81ff>55</color><color=#f8f8f2>,</color> <color=#ae81ff>52</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>50</color><color=#f8f8f2>,</color> <color=#ae81ff>48</color><color=#f8f8f2>,</color> <color=#ae81ff>44</color><color=#f8f8f2>,</color> <color=#ae81ff>42</color><color=#f8f8f2>,</color> <color=#ae81ff>39</color><color=#f8f8f2>,</color> <color=#ae81ff>37</color><color=#f8f8f2>,</color> <color=#ae81ff>34</color><color=#f8f8f2>,</color> <color=#ae81ff>31</color><color=#f8f8f2>,</color> <color=#ae81ff>29</color><color=#f8f8f2>,</color> <color=#ae81ff>26</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>24</color><color=#f8f8f2>,</color> <color=#ae81ff>21</color><color=#f8f8f2>,</color> <color=#ae81ff>18</color><color=#f8f8f2>,</color> <color=#ae81ff>16</color><color=#f8f8f2>,</color> <color=#ae81ff>13</color><color=#f8f8f2>,</color> <color=#ae81ff>11</color><color=#f8f8f2>,</color> <color=#ae81ff>8</color><color=#f8f8f2>,</color> <color=#ae81ff>6</color><color=#f8f8f2>,</color> <color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>0</color>
            <color=#f8f8f2>};</color>
            <color=#f8f8f2>sums</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[]</color><color=#f8f8f2>{</color>
                    <color=#ae81ff>16320</color><color=#f8f8f2>,</color> <color=#ae81ff>16315</color><color=#f8f8f2>,</color> <color=#ae81ff>15946</color><color=#f8f8f2>,</color> <color=#ae81ff>15277</color><color=#f8f8f2>,</color> <color=#ae81ff>14655</color><color=#f8f8f2>,</color> <color=#ae81ff>14073</color><color=#f8f8f2>,</color> <color=#ae81ff>13623</color><color=#f8f8f2>,</color> <color=#ae81ff>13230</color><color=#f8f8f2>,</color> <color=#ae81ff>12859</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>12560</color><color=#f8f8f2>,</color> <color=#ae81ff>12240</color><color=#f8f8f2>,</color> <color=#ae81ff>11861</color><color=#f8f8f2>,</color> <color=#ae81ff>11456</color><color=#f8f8f2>,</color> <color=#ae81ff>11081</color><color=#f8f8f2>,</color> <color=#ae81ff>10714</color><color=#f8f8f2>,</color> <color=#ae81ff>10360</color><color=#f8f8f2>,</color> <color=#ae81ff>10027</color><color=#f8f8f2>,</color> <color=#ae81ff>9679</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>9368</color><color=#f8f8f2>,</color> <color=#ae81ff>9056</color><color=#f8f8f2>,</color> <color=#ae81ff>8680</color><color=#f8f8f2>,</color> <color=#ae81ff>8331</color><color=#f8f8f2>,</color> <color=#ae81ff>7995</color><color=#f8f8f2>,</color> <color=#ae81ff>7668</color><color=#f8f8f2>,</color> <color=#ae81ff>7376</color><color=#f8f8f2>,</color> <color=#ae81ff>7084</color><color=#f8f8f2>,</color> <color=#ae81ff>6823</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>6562</color><color=#f8f8f2>,</color> <color=#ae81ff>6345</color><color=#f8f8f2>,</color> <color=#ae81ff>6125</color><color=#f8f8f2>,</color> <color=#ae81ff>5939</color><color=#f8f8f2>,</color> <color=#ae81ff>5756</color><color=#f8f8f2>,</color> <color=#ae81ff>5571</color><color=#f8f8f2>,</color> <color=#ae81ff>5421</color><color=#f8f8f2>,</color> <color=#ae81ff>5240</color><color=#f8f8f2>,</color> <color=#ae81ff>5086</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>4976</color><color=#f8f8f2>,</color> <color=#ae81ff>4829</color><color=#f8f8f2>,</color> <color=#ae81ff>4719</color><color=#f8f8f2>,</color> <color=#ae81ff>4616</color><color=#f8f8f2>,</color> <color=#ae81ff>4463</color><color=#f8f8f2>,</color> <color=#ae81ff>4393</color><color=#f8f8f2>,</color> <color=#ae81ff>4280</color><color=#f8f8f2>,</color> <color=#ae81ff>4166</color><color=#f8f8f2>,</color> <color=#ae81ff>4092</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>3980</color><color=#f8f8f2>,</color> <color=#ae81ff>3909</color><color=#f8f8f2>,</color> <color=#ae81ff>3835</color><color=#f8f8f2>,</color> <color=#ae81ff>3755</color><color=#f8f8f2>,</color> <color=#ae81ff>3688</color><color=#f8f8f2>,</color> <color=#ae81ff>3621</color><color=#f8f8f2>,</color> <color=#ae81ff>3541</color><color=#f8f8f2>,</color> <color=#ae81ff>3467</color><color=#f8f8f2>,</color> <color=#ae81ff>3396</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>3323</color><color=#f8f8f2>,</color> <color=#ae81ff>3247</color><color=#f8f8f2>,</color> <color=#ae81ff>3170</color><color=#f8f8f2>,</color> <color=#ae81ff>3096</color><color=#f8f8f2>,</color> <color=#ae81ff>3021</color><color=#f8f8f2>,</color> <color=#ae81ff>2952</color><color=#f8f8f2>,</color> <color=#ae81ff>2874</color><color=#f8f8f2>,</color> <color=#ae81ff>2804</color><color=#f8f8f2>,</color> <color=#ae81ff>2727</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>2657</color><color=#f8f8f2>,</color> <color=#ae81ff>2583</color><color=#f8f8f2>,</color> <color=#ae81ff>2509</color><color=#f8f8f2>,</color> <color=#ae81ff>2437</color><color=#f8f8f2>,</color> <color=#ae81ff>2362</color><color=#f8f8f2>,</color> <color=#ae81ff>2290</color><color=#f8f8f2>,</color> <color=#ae81ff>2211</color><color=#f8f8f2>,</color> <color=#ae81ff>2136</color><color=#f8f8f2>,</color> <color=#ae81ff>2068</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>1996</color><color=#f8f8f2>,</color> <color=#ae81ff>1915</color><color=#f8f8f2>,</color> <color=#ae81ff>1858</color><color=#f8f8f2>,</color> <color=#ae81ff>1773</color><color=#f8f8f2>,</color> <color=#ae81ff>1692</color><color=#f8f8f2>,</color> <color=#ae81ff>1620</color><color=#f8f8f2>,</color> <color=#ae81ff>1552</color><color=#f8f8f2>,</color> <color=#ae81ff>1477</color><color=#f8f8f2>,</color> <color=#ae81ff>1398</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>1326</color><color=#f8f8f2>,</color> <color=#ae81ff>1251</color><color=#f8f8f2>,</color> <color=#ae81ff>1179</color><color=#f8f8f2>,</color> <color=#ae81ff>1109</color><color=#f8f8f2>,</color> <color=#ae81ff>1031</color><color=#f8f8f2>,</color> <color=#ae81ff>961</color><color=#f8f8f2>,</color> <color=#ae81ff>884</color><color=#f8f8f2>,</color> <color=#ae81ff>814</color><color=#f8f8f2>,</color> <color=#ae81ff>736</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>667</color><color=#f8f8f2>,</color> <color=#ae81ff>592</color><color=#f8f8f2>,</color> <color=#ae81ff>518</color><color=#f8f8f2>,</color> <color=#ae81ff>441</color><color=#f8f8f2>,</color> <color=#ae81ff>369</color><color=#f8f8f2>,</color> <color=#ae81ff>292</color><color=#f8f8f2>,</color> <color=#ae81ff>221</color><color=#f8f8f2>,</color> <color=#ae81ff>151</color><color=#f8f8f2>,</color> <color=#ae81ff>86</color><color=#f8f8f2>,</color>
                    <color=#ae81ff>64</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color>
            <color=#f8f8f2>};</color>

            <color=#f8f8f2>qvalue</color> <color=#f92672>=</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>][</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#f8f8f2>quantizationTables</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>][</color><color=#ae81ff>53</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#ae81ff>100</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>qvalue</color> <color=#f92672><</color> <color=#f8f8f2>hash</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>&&</color> <color=#f8f8f2>sum</color> <color=#f92672><</color> <color=#f8f8f2>sums</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>qvalue</color> <color=#f92672><=</color> <color=#f8f8f2>hash</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>&&</color> <color=#f8f8f2>sum</color> <color=#f92672><=</color> <color=#f8f8f2>sums</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>||</color> <color=#f8f8f2>i</color> <color=#f92672>>=</color> <color=#ae81ff>50</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>break</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>JPEGQTable</color><color=#f92672>[]</color> <color=#a6e22e>getQTables</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color> <color=#f8f8f2>segments</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color><color=#f92672>[][]</color> <color=#f8f8f2>tables</color> <color=#f92672>=</color> <color=#f8f8f2>getQuantizationTables</color><color=#f8f8f2>(</color><color=#f8f8f2>segments</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGQTable</color><color=#f92672>></color> <color=#f8f8f2>qTables</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>JPEGQTable</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f92672>[]</color> <color=#f8f8f2>table</color> <color=#f8f8f2>:</color> <color=#f8f8f2>tables</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>table</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>qTables</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>JPEGQTable</color><color=#f8f8f2>(</color><color=#f8f8f2>table</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>qTables</color><color=#f8f8f2>.</color><color=#a6e22e>toArray</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>JPEGQTable</color><color=#f92672>[</color><color=#f8f8f2>qTables</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color><color=#f92672>]</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color><color=#f92672>[][]</color> <color=#a6e22e>getQuantizationTables</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>JPEGSegment</color><color=#f92672>></color> <color=#f8f8f2>dqtSegments</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Validate</color><color=#f8f8f2>.</color><color=#a6e22e>notNull</color><color=#f8f8f2>(</color><color=#f8f8f2>dqtSegments</color><color=#f8f8f2>,</color> <color=#e6db74>"segments"</color><color=#f8f8f2>);</color>

        <color=#66d9ef>int</color><color=#f92672>[][]</color> <color=#f8f8f2>tables</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#ae81ff>4</color><color=#f92672>][]</color><color=#f8f8f2>;</color>

        <color=#75715e>// JPEG may contain multiple DQT marker segments</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>JPEGSegment</color> <color=#f8f8f2>segment</color> <color=#f8f8f2>:</color> <color=#f8f8f2>dqtSegments</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>marker</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>JPEG</color><color=#f8f8f2>.</color><color=#a6e22e>DQT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>DataInputStream</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DataInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>());</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>read</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

            <color=#75715e>// A single DQT marker segment may contain multiple tables</color>
            <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>read</color> <color=#f92672><</color> <color=#f8f8f2>segment</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>qtInfo</color> <color=#f92672>=</color> <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>read</color><color=#f92672>++</color><color=#f8f8f2>;</color>
<color=#75715e>//                System.err.printf("qtInfo: 0x%02x\n", qtInfo);</color>

                <color=#66d9ef>int</color> <color=#f8f8f2>num</color> <color=#f92672>=</color> <color=#f8f8f2>qtInfo</color> <color=#f92672>&</color> <color=#ae81ff>0x0f</color><color=#f8f8f2>;</color> <color=#75715e>// 0-3</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>bits</color> <color=#f92672>=</color> <color=#f8f8f2>qtInfo</color> <color=#f92672>>></color> <color=#ae81ff>4</color><color=#f8f8f2>;</color> <color=#75715e>// 0 == 8 bits, 1 == 16 bits</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>num</color> <color=#f92672>>=</color> <color=#ae81ff>4</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IIOException</color><color=#f8f8f2>(</color><color=#e6db74>"Bad DQT table index: "</color> <color=#f92672>+</color> <color=#f8f8f2>num</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>tables</color><color=#f92672>[</color><color=#f8f8f2>num</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IIOException</color><color=#f8f8f2>(</color><color=#e6db74>"Duplicate DQT table index: "</color> <color=#f92672>+</color> <color=#f8f8f2>num</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bits</color> <color=#f92672><</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>bits</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IIOException</color><color=#f8f8f2>(</color><color=#e6db74>"Bad DQT bit info: "</color> <color=#f92672>+</color> <color=#f8f8f2>bits</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>qtData</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>DCT_SIZE_2</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#f8f8f2>bits</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>data</color><color=#f8f8f2>.</color><color=#a6e22e>readFully</color><color=#f8f8f2>(</color><color=#f8f8f2>qtData</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>read</color> <color=#f92672>+=</color> <color=#f8f8f2>qtData</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>tables</color><color=#f92672>[</color><color=#f8f8f2>num</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>int</color><color=#f92672>[</color><color=#f8f8f2>DCT_SIZE_2</color><color=#f92672>]</color><color=#f8f8f2>;</color>

                <color=#75715e>// Expand (this is slightly inefficient)</color>
                <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>bits</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>case</color> <color=#ae81ff>0</color><color=#f8f8f2>:</color>
                        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>qtDataLength</color> <color=#f92672>=</color> <color=#f8f8f2>qtData</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>qtDataLength</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>tables</color><color=#f92672>[</color><color=#f8f8f2>num</color><color=#f92672>][</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>qtData</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>}</color>

                        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>case</color> <color=#ae81ff>1</color><color=#f8f8f2>:</color>
                        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>qtDataLength</color> <color=#f92672>=</color> <color=#f8f8f2>qtData</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>qtDataLength</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672>+=</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>tables</color><color=#f92672>[</color><color=#f8f8f2>num</color><color=#f92672>][</color><color=#f8f8f2>j</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>short</color><color=#f8f8f2>)</color> <color=#f8f8f2>((</color><color=#f8f8f2>qtData</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>)</color> <color=#f92672><<</color> <color=#ae81ff>8</color> <color=#f92672>|</color> <color=#f8f8f2>(</color><color=#f8f8f2>qtData</color><color=#f92672>[</color><color=#f8f8f2>j</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>));</color>
                        <color=#f8f8f2>}</color>

                        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>tables</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>arg</color> <color=#f8f8f2>:</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>quality</color> <color=#f92672>=</color> <color=#f8f8f2>getJPEGQuality</color><color=#f8f8f2>(</color><color=#f8f8f2>ImageIO</color><color=#f8f8f2>.</color><color=#a6e22e>createImageInputStream</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>arg</color><color=#f8f8f2>)));</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#f8f8f2>arg</color> <color=#f92672>+</color> <color=#e6db74>" quality: "</color> <color=#f92672>+</color> <color=#f8f8f2>quality</color> <color=#f92672>+</color> <color=#e6db74>"/"</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>(</color><color=#f8f8f2>quality</color> <color=#f92672>*</color> <color=#ae81ff>100</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>