<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2014, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.psd</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.Directory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.MetadataReader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.stream.SubImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.StringUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.Validate</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.IIOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.ImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.DataInput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.EOFException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * PhotoshopReader</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haraldk$</color>
<color=#75715e> * @version $Id: PhotoshopReader.java,v 1.0 04.01.12 11:56 haraldk Exp$</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>PSDReader</color> <color=#66d9ef>extends</color> <color=#f8f8f2>MetadataReader</color> <color=#f8f8f2>{</color>

    <color=#75715e>// TODO: Add constructor to allow optional parsing of resources</color>
    <color=#75715e>// TODO: Maybe this should be modelled more like the JPEG segment parsing, as it's all binary data...</color>
    <color=#75715e>// - Segment/SegmentReader + List<Segment></color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Directory</color> <color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>input</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Validate</color><color=#f8f8f2>.</color><color=#a6e22e>notNull</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#e6db74>"input"</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>PSDEntry</color><color=#f92672>></color> <color=#f8f8f2>entries</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>PSDEntry</color><color=#f92672>></color><color=#f8f8f2>();</color>

        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>

                <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>case</color> <color=#f8f8f2>PSD</color><color=#f8f8f2>.</color><color=#a6e22e>RESOURCE_TYPE_IMAGEREADY</color><color=#f8f8f2>:</color>
                    <color=#66d9ef>case</color> <color=#f8f8f2>PSD</color><color=#f8f8f2>.</color><color=#a6e22e>RESOURCE_TYPE_PHOTODELUXE</color><color=#f8f8f2>:</color>
                    <color=#66d9ef>case</color> <color=#f8f8f2>PSD</color><color=#f8f8f2>.</color><color=#a6e22e>RESOURCE_TYPE_LIGHTROOM</color><color=#f8f8f2>:</color>
                    <color=#66d9ef>case</color> <color=#f8f8f2>PSD</color><color=#f8f8f2>.</color><color=#a6e22e>RESOURCE_TYPE_DCSR</color><color=#f8f8f2>:</color>
                        <color=#75715e>// TODO: Warning for these types!</color>
                    <color=#66d9ef>case</color> <color=#f8f8f2>PSD</color><color=#f8f8f2>.</color><color=#a6e22e>RESOURCE_TYPE</color><color=#f8f8f2>:</color>
                        <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>default</color><color=#f8f8f2>:</color>
                        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IIOException</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#e6db74>"Wrong image resource type, expected '8BIM': '%08x'"</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>short</color> <color=#f8f8f2>id</color> <color=#f92672>=</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readShort</color><color=#f8f8f2>();</color>

                <color=#f8f8f2>PSDResource</color> <color=#f8f8f2>resource</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>PSDResource</color><color=#f8f8f2>(</color><color=#f8f8f2>id</color><color=#f8f8f2>,</color> <color=#f8f8f2>input</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>entries</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>PSDEntry</color><color=#f8f8f2>(</color><color=#f8f8f2>id</color><color=#f8f8f2>,</color> <color=#f8f8f2>resource</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>(),</color> <color=#f8f8f2>resource</color><color=#f8f8f2>.</color><color=#a6e22e>data</color><color=#f8f8f2>()));</color>

            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>EOFException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>PSDDirectory</color><color=#f8f8f2>(</color><color=#f8f8f2>entries</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>protected</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>PSDResource</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>readPascalString</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>DataInput</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>length</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedByte</color><color=#f8f8f2>();</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>length</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#e6db74>""</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>length</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readFully</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>decode</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>bytes</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>,</color> <color=#e6db74>"ASCII"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>final</color> <color=#66d9ef>short</color> <color=#f8f8f2>id</color><color=#f8f8f2>;</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
        <color=#66d9ef>final</color> <color=#66d9ef>long</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>

        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>PSDResource</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>short</color> <color=#f8f8f2>resourceId</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>input</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>id</color> <color=#f92672>=</color> <color=#f8f8f2>resourceId</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#f8f8f2>readPascalString</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>);</color>

            <color=#75715e>// Skip pad</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>nameSize</color> <color=#f92672>=</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>nameSize</color> <color=#f92672>%</color> <color=#ae81ff>2</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readByte</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>size</color> <color=#f92672>=</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>readUnsignedInt</color><color=#f8f8f2>();</color>
            <color=#66d9ef>long</color> <color=#f8f8f2>startPos</color> <color=#f92672>=</color> <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>getStreamPosition</color><color=#f8f8f2>();</color>

            <color=#f8f8f2>readData</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>SubImageInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>));</color>

            <color=#75715e>// NOTE: This should never happen, however it's safer to keep it here for future compatibility</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>getStreamPosition</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>startPos</color> <color=#f92672>+</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>seek</color><color=#f8f8f2>(</color><color=#f8f8f2>startPos</color> <color=#f92672>+</color> <color=#f8f8f2>size</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// Data is even-padded (word aligned)</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>size</color> <color=#f92672>%</color> <color=#ae81ff>2</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>readData</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
            <color=#75715e>// TODO: This design is ugly, as subclasses readData is invoked BEFORE their respective constructor...</color>
            <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>size</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readFully</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#a6e22e>id</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>id</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>data</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>data</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>name</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>builder</color> <color=#f92672>=</color> <color=#f8f8f2>toStringBuilder</color><color=#f8f8f2>();</color>

            <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>", data length: "</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>size</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"]"</color><color=#f8f8f2>);</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>protected</color> <color=#f8f8f2>StringBuilder</color> <color=#a6e22e>toStringBuilder</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>builder</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>(</color><color=#f8f8f2>getClass</color><color=#f8f8f2>().</color><color=#a6e22e>getSimpleName</color><color=#f8f8f2>());</color>

            <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"[ID: 0x"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>toHexString</color><color=#f8f8f2>(</color><color=#f8f8f2>id</color><color=#f8f8f2>));</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>name</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>trim</color><color=#f8f8f2>().</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>", name: \""</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>builder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\""</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>builder</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

<color=#f8f8f2>}</color>