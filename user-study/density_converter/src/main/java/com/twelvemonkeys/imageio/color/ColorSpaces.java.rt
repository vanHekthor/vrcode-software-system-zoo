<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2011, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.imageio.color</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.io.FileUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.Platform</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.SystemUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.Validate</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.util.LRUHashMap</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.color.ColorSpace</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.color.ICC_ColorSpace</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.color.ICC_Profile</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.InputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.ref.WeakReference</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.security.MessageDigest</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.security.NoSuchAlgorithmException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Arrays</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Properties</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A helper class for working with ICC color profiles and color spaces.</color>
<color=#75715e> * <p/></color>
<color=#75715e> * Standard ICC color profiles are read from system-specific locations</color>
<color=#75715e> * for known operating systems.</color>
<color=#75715e> * <p/></color>
<color=#75715e> * Color profiles may be configured by placing a property-file</color>
<color=#75715e> * {@code com/twelvemonkeys/imageio/color/icc_profiles.properties}</color>
<color=#75715e> * on the classpath, specifying the full path to the profiles.</color>
<color=#75715e> * ICC color profiles are probably already present on your system, or</color>
<color=#75715e> * can be downloaded from</color>
<color=#75715e> * <a href="http://www.color.org/profiles2.xalter">ICC</a>,</color>
<color=#75715e> * <a href="http://www.adobe.com/downloads/">Adobe</a> or other places.</color>
<color=#75715e> * <p/></color>
<color=#75715e> * Example property file:</color>
<color=#75715e> * <pre></color>
<color=#75715e> * # icc_profiles.properties</color>
<color=#75715e> * ADOBE_RGB_1998=/path/to/Adobe RGB 1998.icc</color>
<color=#75715e> * GENERIC_CMYK=/path/to/Generic CMYK.icc</color>
<color=#75715e> * </pre></color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haraldk$</color>
<color=#75715e> * @version $Id: ColorSpaces.java,v 1.0 24.01.11 17.51 haraldk Exp$</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>ColorSpaces</color> <color=#f8f8f2>{</color>
    <color=#75715e>// TODO: Consider creating our own ICC profile class, which just wraps the byte array,</color>
    <color=#75715e>// for easier access and manipulation until creating a "real" ICC_Profile/ColorSpace.</color>
    <color=#75715e>// This will also let us work around the issues in the LCMS implementation.</color>

    <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>DEBUG</color> <color=#f92672>=</color> <color=#e6db74>"true"</color><color=#f8f8f2>.</color><color=#a6e22e>equalsIgnoreCase</color><color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#e6db74>"com.twelvemonkeys.imageio.color.debug"</color><color=#f8f8f2>));</color>

    <color=#75715e>/**</color>
<color=#75715e>     * We need special ICC profile handling for KCMS vs LCMS. Delegate to specific strategy.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>ICCProfileSanitizer</color> <color=#f8f8f2>profileCleaner</color> <color=#f92672>=</color> <color=#f8f8f2>ICCProfileSanitizer</color><color=#f8f8f2>.</color><color=#a6e22e>Factory</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>

    <color=#75715e>// NOTE: java.awt.color.ColorSpace.CS_* uses 1000-1004, we'll use 5000+ to not interfere with future additions</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The Adobe RGB 1998 (or compatible) color space. Either read from disk or built-in.</color>
<color=#75715e>     */</color>
    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"WeakerAccess"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>CS_ADOBE_RGB_1998</color> <color=#f92672>=</color> <color=#ae81ff>5000</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A best-effort "generic" CMYK color space. Either read from disk or built-in.</color>
<color=#75715e>     */</color>
    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"WeakerAccess"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>CS_GENERIC_CMYK</color> <color=#f92672>=</color> <color=#ae81ff>5001</color><color=#f8f8f2>;</color>

    <color=#75715e>// Weak references to hold the color spaces while cached</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>ICC_Profile</color><color=#f92672>></color> <color=#f8f8f2>adobeRGB1998</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>ICC_Profile</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>ICC_Profile</color><color=#f92672>></color> <color=#f8f8f2>genericCMYK</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>ICC_Profile</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>);</color>

    <color=#75715e>// Cache for the latest used color spaces</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>Key</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_ColorSpace</color><color=#f92672>></color> <color=#f8f8f2>cache</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LRUHashMap</color><color=#f92672><</color><color=#f8f8f2>Key</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_ColorSpace</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#ae81ff>10</color><color=#f8f8f2>);</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Force invocation of ProfileDeferralMgr.activateProfiles() to avoid JDK-6986863</color>
            <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_sRGB</color><color=#f8f8f2>).</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Throwable</color> <color=#f8f8f2>disasters</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"ICC Color Profile not properly activated due to the exception below."</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Expect to see JDK-6986863 in action, and consider filing a bug report to your JRE provider."</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>disasters</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#a6e22e>ColorSpaces</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an ICC color space from the given ICC color profile.</color>
<color=#75715e>     * <p/></color>
<color=#75715e>     * For standard Java color spaces, the built-in instance is returned.</color>
<color=#75715e>     * Otherwise, color spaces are looked up from cache and created on demand.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param profile the ICC color profile. May not be {@code null}.</color>
<color=#75715e>     * @return an ICC color space</color>
<color=#75715e>     * @throws IllegalArgumentException    if {@code profile} is {@code null}.</color>
<color=#75715e>     * @throws java.awt.color.CMMException if {@code profile} is invalid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>ICC_ColorSpace</color> <color=#a6e22e>createColorSpace</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ICC_Profile</color> <color=#f8f8f2>profile</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Validate</color><color=#f8f8f2>.</color><color=#a6e22e>notNull</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>,</color> <color=#e6db74>"profile"</color><color=#f8f8f2>);</color>

        <color=#75715e>// Fix profile before lookup/create</color>
        <color=#f8f8f2>profileCleaner</color><color=#f8f8f2>.</color><color=#a6e22e>fixProfile</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>

        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>profileHeader</color> <color=#f92672>=</color> <color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>ICC_ColorSpace</color> <color=#f8f8f2>cs</color> <color=#f92672>=</color> <color=#f8f8f2>getInternalCS</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>.</color><color=#a6e22e>getColorSpaceType</color><color=#f8f8f2>(),</color> <color=#f8f8f2>profileHeader</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cs</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>cs</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>getCachedOrCreateCS</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>,</color> <color=#f8f8f2>profileHeader</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ICC_Profile</color> <color=#f8f8f2>profile</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Get *entire profile data*... :-/</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color> <color=#f92672>=</color> <color=#f8f8f2>profile</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>();</color>

        <color=#75715e>// Clear out preferred CMM, platform & creator, as these does not affect the profile in any way</color>
        <color=#75715e>// - LCMS updates CMM + creator to "lcms" and platform to current platform</color>
        <color=#75715e>// - KCMS keeps the values in the file...</color>
        <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>fill</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrCmmId</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrCmmId</color> <color=#f92672>+</color> <color=#ae81ff>4</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>fill</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrPlatform</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrPlatform</color> <color=#f92672>+</color> <color=#ae81ff>4</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
        <color=#75715e>// + Clear out rendering intent, as this may be updated by application</color>
        <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>fill</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrRenderingIntent</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrRenderingIntent</color> <color=#f92672>+</color> <color=#ae81ff>4</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>fill</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrCreator</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrCreator</color> <color=#f92672>+</color> <color=#ae81ff>4</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>

        <color=#75715e>// Clear out any existing MD5, as it is no longer correct</color>
        <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>fill</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrProfileID</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrProfileID</color> <color=#f92672>+</color> <color=#ae81ff>16</color><color=#f8f8f2>,</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>

        <color=#75715e>// Generate new MD5 and store in header</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>md5</color> <color=#f92672>=</color> <color=#f8f8f2>computeMD5</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>arraycopy</color><color=#f8f8f2>(</color><color=#f8f8f2>md5</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrProfileID</color><color=#f8f8f2>,</color> <color=#f8f8f2>md5</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>

        <color=#75715e>// ICC profile header is the first 128 bytes</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>copyOf</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#ae81ff>128</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>computeMD5</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>MessageDigest</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#e6db74>"MD5"</color><color=#f8f8f2>).</color><color=#a6e22e>digest</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>NoSuchAlgorithmException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Missing MD5 MessageDigest"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>ICC_ColorSpace</color> <color=#a6e22e>getInternalCS</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>profileCSType</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>profileHeader</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profileCSType</color> <color=#f92672>==</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_RGB</color> <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>profileHeader</color><color=#f8f8f2>,</color> <color=#f8f8f2>sRGB</color><color=#f8f8f2>.</color><color=#a6e22e>header</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_sRGB</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profileCSType</color> <color=#f92672>==</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_GRAY</color> <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>profileHeader</color><color=#f8f8f2>,</color> <color=#f8f8f2>GRAY</color><color=#f8f8f2>.</color><color=#a6e22e>header</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_GRAY</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profileCSType</color> <color=#f92672>==</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_3CLR</color> <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>profileHeader</color><color=#f8f8f2>,</color> <color=#f8f8f2>PYCC</color><color=#f8f8f2>.</color><color=#a6e22e>header</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_PYCC</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profileCSType</color> <color=#f92672>==</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_RGB</color> <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>profileHeader</color><color=#f8f8f2>,</color> <color=#f8f8f2>LINEAR_RGB</color><color=#f8f8f2>.</color><color=#a6e22e>header</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_LINEAR_RGB</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profileCSType</color> <color=#f92672>==</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_XYZ</color> <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>profileHeader</color><color=#f8f8f2>,</color> <color=#f8f8f2>CIEXYZ</color><color=#f8f8f2>.</color><color=#a6e22e>header</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_CIEXYZ</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>ICC_ColorSpace</color> <color=#a6e22e>getCachedOrCreateCS</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ICC_Profile</color> <color=#f8f8f2>profile</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>profileHeader</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Key</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>profileHeader</color><color=#f8f8f2>);</color>

        <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>cache</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>ICC_ColorSpace</color> <color=#f8f8f2>cs</color> <color=#f92672>=</color> <color=#f8f8f2>cache</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>cs</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>cs</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>

                <color=#f8f8f2>validateColorSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>cs</color><color=#f8f8f2>);</color>

                <color=#75715e>// On LCMS, validation *alters* the profile header, need to re-generate key</color>
                <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>profileCleaner</color><color=#f8f8f2>.</color><color=#a6e22e>validationAltersProfileHeader</color><color=#f8f8f2>()</color>
                        <color=#f92672>?</color> <color=#66d9ef>new</color> <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>cs</color><color=#f8f8f2>.</color><color=#a6e22e>getProfile</color><color=#f8f8f2>()))</color>
                        <color=#f8f8f2>:</color> <color=#f8f8f2>key</color><color=#f8f8f2>;</color>

                <color=#f8f8f2>cache</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>,</color> <color=#f8f8f2>cs</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>cs</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>validateColorSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_ColorSpace</color> <color=#f8f8f2>cs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Validate the color space, to avoid caching bad color spaces</color>
        <color=#75715e>// Will throw IllegalArgumentException or CMMException if the profile is bad</color>
        <color=#f8f8f2>cs</color><color=#f8f8f2>.</color><color=#a6e22e>fromRGB</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#ae81ff>1f</color><color=#f8f8f2>,</color> <color=#ae81ff>0f</color><color=#f8f8f2>,</color> <color=#ae81ff>0f</color><color=#f8f8f2>});</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Tests whether an ICC color profile is equal to the default sRGB profile.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param profile the ICC profile to test. May not be {@code null}.</color>
<color=#75715e>     * @return {@code true} if {@code profile} is equal to the default sRGB profile.</color>
<color=#75715e>     * @throws IllegalArgumentException if {@code profile} is {@code null}</color>
<color=#75715e>     * @see ColorSpace#isCS_sRGB()</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isCS_sRGB</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ICC_Profile</color> <color=#f8f8f2>profile</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Validate</color><color=#f8f8f2>.</color><color=#a6e22e>notNull</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>,</color> <color=#e6db74>"profile"</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>profile</color><color=#f8f8f2>.</color><color=#a6e22e>getColorSpaceType</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_RGB</color> <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>),</color> <color=#f8f8f2>sRGB</color><color=#f8f8f2>.</color><color=#a6e22e>header</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Tests whether an ICC color profile is known to cause problems for {@link java.awt.image.ColorConvertOp}.</color>
<color=#75715e>     * <p/></color>
<color=#75715e>     * <em></color>
<color=#75715e>     * Note that this method only tests if a color conversion using this profile is known to fail.</color>
<color=#75715e>     * There's no guarantee that the color conversion will succeed even if this method returns {@code false}.</color>
<color=#75715e>     * </em></color>
<color=#75715e>     *</color>
<color=#75715e>     * @param profile the ICC color profile. May not be {@code null}.</color>
<color=#75715e>     * @return {@code true} if known to be offending, {@code false} otherwise</color>
<color=#75715e>     * @throws IllegalArgumentException if {@code profile} is {@code null}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isOffendingColorProfile</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ICC_Profile</color> <color=#f8f8f2>profile</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Validate</color><color=#f8f8f2>.</color><color=#a6e22e>notNull</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>,</color> <color=#e6db74>"profile"</color><color=#f8f8f2>);</color>

        <color=#75715e>// NOTE:</color>
        <color=#75715e>// Several embedded ICC color profiles are non-compliant with Java pre JDK7 and throws CMMException</color>
        <color=#75715e>// The problem with these embedded ICC profiles seems to be the rendering intent</color>
        <color=#75715e>// being 1 (01000000) - "Media Relative Colormetric" in the offending profiles,</color>
        <color=#75715e>// and 0 (00000000) - "Perceptual" in the good profiles</color>
        <color=#75715e>// (that is 1 single bit of difference right there.. ;-)</color>
        <color=#75715e>// See http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7064516</color>

        <color=#75715e>// This is particularly annoying, as the byte copying isn't really necessary,</color>
        <color=#75715e>// except the getRenderingIntent method is package protected in java.awt.color</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>header</color> <color=#f92672>=</color> <color=#f8f8f2>profile</color><color=#f8f8f2>.</color><color=#a6e22e>getData</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icSigHead</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>header</color><color=#f92672>[</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrRenderingIntent</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>header</color><color=#f92672>[</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrRenderingIntent</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#ae81ff>0</color>
                <color=#f92672>||</color> <color=#f8f8f2>header</color><color=#f92672>[</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrRenderingIntent</color> <color=#f92672>+</color> <color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>!=</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>header</color><color=#f92672>[</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>icHdrRenderingIntent</color> <color=#f92672>+</color> <color=#ae81ff>3</color><color=#f92672>]</color> <color=#f92672>></color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Tests whether an ICC color profile is valid.</color>
<color=#75715e>     * Invalid profiles are known to cause problems for {@link java.awt.image.ColorConvertOp}.</color>
<color=#75715e>     * <p/></color>
<color=#75715e>     * <em></color>
<color=#75715e>     * Note that this method only tests if a color conversion using this profile is known to fail.</color>
<color=#75715e>     * There's no guarantee that the color conversion will succeed even if this method returns {@code false}.</color>
<color=#75715e>     * </em></color>
<color=#75715e>     *</color>
<color=#75715e>     * @param profile the ICC color profile. May not be {@code null}.</color>
<color=#75715e>     * @return {@code profile} if valid.</color>
<color=#75715e>     * @throws IllegalArgumentException    if {@code profile} is {@code null}</color>
<color=#75715e>     * @throws java.awt.color.CMMException if {@code profile} is invalid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>ICC_Profile</color> <color=#a6e22e>validateProfile</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>ICC_Profile</color> <color=#f8f8f2>profile</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Fix profile before validation</color>
        <color=#f8f8f2>profileCleaner</color><color=#f8f8f2>.</color><color=#a6e22e>fixProfile</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>validateColorSpace</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ICC_ColorSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>));</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>profile</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the color space specified by the given color space constant.</color>
<color=#75715e>     * <p/></color>
<color=#75715e>     * For standard Java color spaces, the built-in instance is returned.</color>
<color=#75715e>     * Otherwise, color spaces are looked up from cache and created on demand.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param colorSpace the color space constant.</color>
<color=#75715e>     * @return the {@link ColorSpace} specified by the color space constant.</color>
<color=#75715e>     * @throws IllegalArgumentException if {@code colorSpace} is not one of the defined color spaces ({@code CS_*}).</color>
<color=#75715e>     * @see ColorSpace</color>
<color=#75715e>     * @see ColorSpaces#CS_ADOBE_RGB_1998</color>
<color=#75715e>     * @see ColorSpaces#CS_GENERIC_CMYK</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>ColorSpace</color> <color=#a6e22e>getColorSpace</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>colorSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ICC_Profile</color> <color=#f8f8f2>profile</color><color=#f8f8f2>;</color>

        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>colorSpace</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>CS_ADOBE_RGB_1998</color><color=#f8f8f2>:</color>
                <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>ColorSpaces</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>profile</color> <color=#f92672>=</color> <color=#f8f8f2>adobeRGB1998</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>

                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profile</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#75715e>// Try to get system default or user-defined profile</color>
                        <color=#f8f8f2>profile</color> <color=#f92672>=</color> <color=#f8f8f2>readProfileFromPath</color><color=#f8f8f2>(</color><color=#f8f8f2>Profiles</color><color=#f8f8f2>.</color><color=#a6e22e>getPath</color><color=#f8f8f2>(</color><color=#e6db74>"ADOBE_RGB_1998"</color><color=#f8f8f2>));</color>

                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profile</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#75715e>// Fall back to the bundled ClayRGB1998 public domain Adobe RGB 1998 compatible profile,</color>
                            <color=#75715e>// which is identical for all practical purposes</color>
                            <color=#f8f8f2>profile</color> <color=#f92672>=</color> <color=#f8f8f2>readProfileFromClasspathResource</color><color=#f8f8f2>(</color><color=#e6db74>"/profiles/ClayRGB1998.icc"</color><color=#f8f8f2>);</color>

                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profile</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                                <color=#75715e>// Should never happen given we now bundle fallback profile...</color>
                                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Could not read AdobeRGB1998 profile"</color><color=#f8f8f2>);</color>
                            <color=#f8f8f2>}</color>
                        <color=#f8f8f2>}</color>

                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>.</color><color=#a6e22e>getColorSpaceType</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_RGB</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Configured AdobeRGB1998 profile is not TYPE_RGB"</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>}</color>

                        <color=#f8f8f2>adobeRGB1998</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>ICC_Profile</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>return</color> <color=#f8f8f2>createColorSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>

            <color=#66d9ef>case</color> <color=#f8f8f2>CS_GENERIC_CMYK</color><color=#f8f8f2>:</color>
                <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>ColorSpaces</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>profile</color> <color=#f92672>=</color> <color=#f8f8f2>genericCMYK</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>();</color>

                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profile</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#75715e>// Try to get system default or user-defined profile</color>
                        <color=#f8f8f2>profile</color> <color=#f92672>=</color> <color=#f8f8f2>readProfileFromPath</color><color=#f8f8f2>(</color><color=#f8f8f2>Profiles</color><color=#f8f8f2>.</color><color=#a6e22e>getPath</color><color=#f8f8f2>(</color><color=#e6db74>"GENERIC_CMYK"</color><color=#f8f8f2>));</color>

                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profile</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Using fallback profile"</color><color=#f8f8f2>);</color>
                            <color=#f8f8f2>}</color>

                            <color=#75715e>// Fall back to generic CMYK ColorSpace, which is *insanely slow* using ColorConvertOp... :-P</color>
                            <color=#66d9ef>return</color> <color=#f8f8f2>CMYKColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>();</color>
                        <color=#f8f8f2>}</color>

                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>.</color><color=#a6e22e>getColorSpaceType</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_CMYK</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Configured Generic CMYK profile is not TYPE_CMYK"</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>}</color>

                        <color=#f8f8f2>genericCMYK</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WeakReference</color><color=#f92672><</color><color=#f8f8f2>ICC_Profile</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>return</color> <color=#f8f8f2>createColorSpace</color><color=#f8f8f2>(</color><color=#f8f8f2>profile</color><color=#f8f8f2>);</color>

            <color=#66d9ef>default</color><color=#f8f8f2>:</color>
                <color=#75715e>// Default cases for convenience</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>colorSpace</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@SuppressWarnings</color><color=#f8f8f2>(</color><color=#e6db74>"SameParameterValue"</color><color=#f8f8f2>)</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>ICC_Profile</color> <color=#a6e22e>readProfileFromClasspathResource</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>profilePath</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>InputStream</color> <color=#f8f8f2>stream</color> <color=#f92672>=</color> <color=#f8f8f2>ColorSpaces</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>.</color><color=#a6e22e>getResourceAsStream</color><color=#f8f8f2>(</color><color=#f8f8f2>profilePath</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>stream</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Loading profile from classpath resource: "</color> <color=#f92672>+</color> <color=#f8f8f2>profilePath</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>FileUtil</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>ICC_Profile</color> <color=#a6e22e>readProfileFromPath</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>profilePath</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>profilePath</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Loading profile from: "</color> <color=#f92672>+</color> <color=#f8f8f2>profilePath</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>profilePath</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecurityException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>Key</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>Key</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>data</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>data</color> <color=#f92672>=</color> <color=#f8f8f2>data</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>other</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>other</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Key</color> <color=#f92672>&&</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>,</color> <color=#f8f8f2>((</color><color=#f8f8f2>Key</color><color=#f8f8f2>)</color> <color=#f8f8f2>other</color><color=#f8f8f2>).</color><color=#a6e22e>data</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>(</color><color=#f8f8f2>data</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>getClass</color><color=#f8f8f2>().</color><color=#a6e22e>getSimpleName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>"@"</color> <color=#f92672>+</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>toHexString</color><color=#f8f8f2>(</color><color=#f8f8f2>hashCode</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>// Cache header profile data to avoid excessive array creation/copying in static inner class for on-demand lazy init</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>sRGB</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>header</color> <color=#f92672>=</color> <color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_sRGB</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>CIEXYZ</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>header</color> <color=#f92672>=</color> <color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_CIEXYZ</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>PYCC</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>header</color> <color=#f92672>=</color> <color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_PYCC</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>GRAY</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>header</color> <color=#f92672>=</color> <color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_GRAY</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>LINEAR_RGB</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>header</color> <color=#f92672>=</color> <color=#f8f8f2>getProfileHeaderWithProfileId</color><color=#f8f8f2>(</color><color=#f8f8f2>ICC_Profile</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>ColorSpace</color><color=#f8f8f2>.</color><color=#a6e22e>CS_LINEAR_RGB</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>Profiles</color> <color=#f8f8f2>{</color>
        <color=#75715e>// TODO: Honour java.iccprofile.path property?</color>
        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Properties</color> <color=#f8f8f2>PROFILES</color> <color=#f92672>=</color> <color=#f8f8f2>loadProfiles</color><color=#f8f8f2>();</color>

        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Properties</color> <color=#a6e22e>loadProfiles</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>Properties</color> <color=#f8f8f2>systemDefaults</color><color=#f8f8f2>;</color>

            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>systemDefaults</color> <color=#f92672>=</color> <color=#f8f8f2>SystemUtil</color><color=#f8f8f2>.</color><color=#a6e22e>loadProperties</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>ColorSpaces</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color>
                        <color=#e6db74>"com/twelvemonkeys/imageio/color/icc_profiles_"</color> <color=#f92672>+</color> <color=#f8f8f2>Platform</color><color=#f8f8f2>.</color><color=#a6e22e>os</color><color=#f8f8f2>().</color><color=#a6e22e>id</color><color=#f8f8f2>()</color>
                <color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecurityException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>printf</color><color=#f8f8f2>(</color>
                        <color=#e6db74>"Warning: Could not load system default ICC profile locations from %s, will use bundled fallback profiles.\n"</color><color=#f8f8f2>,</color>
                        <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>()</color>
                <color=#f8f8f2>);</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>systemDefaults</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>printf</color><color=#f8f8f2>(</color>
                        <color=#e6db74>"Warning: Could not load system default ICC profile locations from %s, will use bundled fallback profiles.\n"</color><color=#f8f8f2>,</color>
                        <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>()</color>
                <color=#f8f8f2>);</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>systemDefaults</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// Create map with defaults and add user overrides if any</color>
            <color=#f8f8f2>Properties</color> <color=#f8f8f2>profiles</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Properties</color><color=#f8f8f2>(</color><color=#f8f8f2>systemDefaults</color><color=#f8f8f2>);</color>

            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Properties</color> <color=#f8f8f2>userOverrides</color> <color=#f92672>=</color> <color=#f8f8f2>SystemUtil</color><color=#f8f8f2>.</color><color=#a6e22e>loadProperties</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>ColorSpaces</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>,</color>
                        <color=#e6db74>"com/twelvemonkeys/imageio/color/icc_profiles"</color>
                <color=#f8f8f2>);</color>
                <color=#f8f8f2>profiles</color><color=#f8f8f2>.</color><color=#a6e22e>putAll</color><color=#f8f8f2>(</color><color=#f8f8f2>userOverrides</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>SecurityException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Most likely, this file won't be there</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Most likely, this file won't be there</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"User ICC profiles: "</color> <color=#f92672>+</color> <color=#f8f8f2>profiles</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"System ICC profiles : "</color> <color=#f92672>+</color> <color=#f8f8f2>systemDefaults</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>profiles</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>getPath</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>profileName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>PROFILES</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#f8f8f2>profileName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>