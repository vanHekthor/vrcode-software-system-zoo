<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.imageio.stream</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.spi.ImageInputStreamSpi</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.FileCacheImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.FileImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.ImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.MemoryCacheImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.InputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.URISyntaxException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.URL</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Locale</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * URLImageInputStreamSpi</color>
<color=#75715e> * Experimental</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haraldk$</color>
<color=#75715e> * @version $Id: URLImageInputStreamSpi.java,v 1.0 May 15, 2008 2:14:59 PM haraldk Exp$</color>
<color=#75715e> */</color>
<color=#75715e>// TODO: URI instead of URL?</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>URLImageInputStreamSpi</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ImageInputStreamSpi</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>public</color> <color=#a6e22e>URLImageInputStreamSpi</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#e6db74>"TwelveMonkeys"</color><color=#f8f8f2>,</color> <color=#e6db74>"1.0 BETA"</color><color=#f8f8f2>,</color> <color=#f8f8f2>URL</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>// TODO: Create a URI or URLImageInputStream class, with a getUR[I|L] method, to allow for multiple file formats</color>
    <color=#75715e>// The good thing with that is that it does not clash with the built-in Sun-stuff or other people's hacks</color>
    <color=#75715e>// The bad thing is that most people don't expect there to be an UR[I|L]ImageInputStreamSpi..</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ImageInputStream</color> <color=#a6e22e>createInputStreamInstance</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>pUseCache</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>File</color> <color=#f8f8f2>pCacheDir</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pInput</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>URL</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>URL</color> <color=#f8f8f2>url</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>URL</color><color=#f8f8f2>)</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>;</color>

            <color=#75715e>// Special case for file protocol, a lot faster than FileCacheImageInputStream</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#e6db74>"file"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>url</color><color=#f8f8f2>.</color><color=#a6e22e>getProtocol</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>BufferedImageInputStream</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>FileImageInputStream</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>url</color><color=#f8f8f2>.</color><color=#a6e22e>toURI</color><color=#f8f8f2>())));</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>URISyntaxException</color> <color=#f8f8f2>ignore</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// This should never happen, but if it does, we'll fall back to using the stream  </color>
                    <color=#f8f8f2>ignore</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// Otherwise revert to cached</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>InputStream</color> <color=#f8f8f2>stream</color> <color=#f92672>=</color> <color=#f8f8f2>url</color><color=#f8f8f2>.</color><color=#a6e22e>openStream</color><color=#f8f8f2>();</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pUseCache</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>BufferedImageInputStream</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>FileCacheImageInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>,</color> <color=#f8f8f2>pCacheDir</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#a6e22e>@Override</color>
                    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
                        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color> <color=#75715e>// NOTE: If this line throws IOE, it will shadow the original..</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>});</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>MemoryCacheImageInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>stream</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#a6e22e>@Override</color>
                    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>close</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
                        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                            <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
                        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>stream</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color> <color=#75715e>// NOTE: If this line throws IOE, it will shadow the original..</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>};</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Expected input of type URL: "</color> <color=#f92672>+</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getDescription</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Locale</color> <color=#f8f8f2>pLocale</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Service provider that instantiates an ImageInputStream from a URL"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>