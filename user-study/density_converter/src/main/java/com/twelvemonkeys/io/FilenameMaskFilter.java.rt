<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.io</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.util.regex.WildcardStringParser</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.FilenameFilter</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A Java Bean used for approving file names which are to be included in a {@code java.io.File}</color>
<color=#75715e> * listing. The mask is given as a well-known DOS filename format, with '*' and '?' as wildcards.</color>
<color=#75715e> * All other characters counts as ordinary characters.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>The file name masks are used as a filter input and is given to the class via the string array</color>
<color=#75715e> * property:<br></color>
<color=#75715e> * <dd>{@code filenameMasksForInclusion} - Filename mask for exclusion of files (default if both</color>
<color=#75715e> * properties are defined)</color>
<color=#75715e> * <dd>{@code filenameMasksForExclusion} - Filename mask for exclusion of files.</color>
<color=#75715e> *</color>
<color=#75715e> * <p>A recommended way of doing this is by referencing to the component which uses this class</color>
<color=#75715e> * for file listing. In this way all properties are set in the same component and this utility</color>
<color=#75715e> * component is kept in the background with only initial configuration necessary.</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:eirik.torske@iconmedialab.no">Eirik Torske</a></color>
<color=#75715e> * @see File#list(FilenameFilter) java.io.File.list</color>
<color=#75715e> * @see FilenameFilter java.io.FilenameFilter</color>
<color=#75715e> * @see WildcardStringParser</color>
<color=#75715e> * @deprecated</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FilenameMaskFilter</color> <color=#66d9ef>implements</color> <color=#f8f8f2>FilenameFilter</color> <color=#f8f8f2>{</color>

    <color=#75715e>// TODO: Rewrite to use regexp, or create new class</color>

    <color=#75715e>// Members</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>filenameMasksForInclusion</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>filenameMasksForExclusion</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>inclusion</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@code FilenameMaskFilter}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FilenameMaskFilter</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@code FilenameMaskFilter}</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pFilenameMask the filename mask</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FilenameMaskFilter</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pFilenameMask</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>filenameMask</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#f8f8f2>pFilenameMask</color><color=#f8f8f2>};</color>
        <color=#f8f8f2>setFilenameMasksForInclusion</color><color=#f8f8f2>(</color><color=#f8f8f2>filenameMask</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@code FilenameMaskFilter}</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pFilenameMasks the filename masks</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FilenameMaskFilter</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>pFilenameMasks</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>pFilenameMasks</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@code FilenameMaskFilter}</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pFilenameMask the filename masks</color>
<color=#75715e>     * @param pExclusion    if {@code true}, the masks will be excluded</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FilenameMaskFilter</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pFilenameMask</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>pExclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>filenameMask</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#f8f8f2>pFilenameMask</color><color=#f8f8f2>};</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pExclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>setFilenameMasksForExclusion</color><color=#f8f8f2>(</color><color=#f8f8f2>filenameMask</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>setFilenameMasksForInclusion</color><color=#f8f8f2>(</color><color=#f8f8f2>filenameMask</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@code FilenameMaskFilter}</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pFilenameMasks the filename masks</color>
<color=#75715e>     * @param pExclusion     if {@code true}, the masks will be excluded</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FilenameMaskFilter</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>pFilenameMasks</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>pExclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pExclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>setFilenameMasksForExclusion</color><color=#f8f8f2>(</color><color=#f8f8f2>pFilenameMasks</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>setFilenameMasksForInclusion</color><color=#f8f8f2>(</color><color=#f8f8f2>pFilenameMasks</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * @param pFilenameMasksForInclusion the filename masks to include</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setFilenameMasksForInclusion</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>pFilenameMasksForInclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>filenameMasksForInclusion</color> <color=#f92672>=</color> <color=#f8f8f2>pFilenameMasksForInclusion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * @return the current inclusion masks</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#a6e22e>getFilenameMasksForInclusion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>filenameMasksForInclusion</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * @param pFilenameMasksForExclusion the filename masks to exclude</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setFilenameMasksForExclusion</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>pFilenameMasksForExclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>filenameMasksForExclusion</color> <color=#f92672>=</color> <color=#f8f8f2>pFilenameMasksForExclusion</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>inclusion</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * @return the current exclusion masks</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#a6e22e>getFilenameMasksForExclusion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>filenameMasksForExclusion</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * This method implements the {@code java.io.FilenameFilter} interface.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pDir  the directory in which the file was found.</color>
<color=#75715e>     * @param pName the name of the file.</color>
<color=#75715e>     * @return {@code true} if the file {@code pName} should be included in the file list; {@code</color>
<color=#75715e>     * false} otherwise.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>accept</color><color=#f8f8f2>(</color><color=#f8f8f2>File</color> <color=#f8f8f2>pDir</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>WildcardStringParser</color> <color=#f8f8f2>parser</color><color=#f8f8f2>;</color>

        <color=#75715e>// Check each filename string mask whether the file is to be accepted</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color> <color=#75715e>// Inclusion</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>mask</color> <color=#f8f8f2>:</color> <color=#f8f8f2>filenameMasksForInclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>parser</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WildcardStringParser</color><color=#f8f8f2>(</color><color=#f8f8f2>mask</color><color=#f8f8f2>);</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>parser</color><color=#f8f8f2>.</color><color=#a6e22e>parseString</color><color=#f8f8f2>(</color><color=#f8f8f2>pName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

                    <color=#75715e>// The filename was accepted by the filename masks provided</color>
                    <color=#75715e>// - include it in filename list</color>
                    <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// The filename not was accepted by any of the filename masks</color>
            <color=#75715e>// provided - NOT to be included in the filename list</color>
            <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Exclusion</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>mask</color> <color=#f8f8f2>:</color> <color=#f8f8f2>filenameMasksForExclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>parser</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>WildcardStringParser</color><color=#f8f8f2>(</color><color=#f8f8f2>mask</color><color=#f8f8f2>);</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>parser</color><color=#f8f8f2>.</color><color=#a6e22e>parseString</color><color=#f8f8f2>(</color><color=#f8f8f2>pName</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>

                    <color=#75715e>// The filename was accepted by the filename masks provided</color>
                    <color=#75715e>// - NOT to be included in the filename list</color>
                    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// The filename was not accepted by any of the filename masks</color>
            <color=#75715e>// provided - include it in filename list</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * @return a string representation for debug purposes</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>retVal</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>inclusion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Inclusion</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>filenameMasksForInclusion</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"No filename masks set - property filenameMasksForInclusion is null!"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>filenameMasksForInclusion</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" filename mask(s) - "</color><color=#f8f8f2>);</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>filenameMasksForInclusion</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\""</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>filenameMasksForInclusion</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\", \""</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Exclusion</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>filenameMasksForExclusion</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"No filename masks set - property filenameMasksForExclusion is null!"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>filenameMasksForExclusion</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>" exclusion filename mask(s) - "</color><color=#f8f8f2>);</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>filenameMasksForExclusion</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\""</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>filenameMasksForExclusion</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\", \""</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>retVal</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>