<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.io.ole2</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.io.SeekableInputStream</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.DataInput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.nio.charset.Charset</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Collections</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.SortedSet</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.TreeSet</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Represents an OLE 2 compound document entry. This is similar to a file in a file system, or an</color>
<color=#75715e> * entry in a ZIP or JAR file.</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.no">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haku $</color>
<color=#75715e> * @version $Id:</color>
<color=#75715e> * //depot/branches/personal/haraldk/twelvemonkeys/release-2/twelvemonkeys-core/src/main/java/com/twelvemonkeys/io/ole2/Entry.java#4</color>
<color=#75715e> * $</color>
<color=#75715e> * @see CompoundDocument</color>
<color=#75715e> */</color>
<color=#75715e>// TODO: Consider extending java.io.File...</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>Entry</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Comparable</color><color=#f92672><</color><color=#f8f8f2>Entry</color><color=#f92672>></color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
    <color=#66d9ef>byte</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
    <color=#66d9ef>byte</color> <color=#f8f8f2>nodeColor</color><color=#f8f8f2>;</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>prevDId</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>nextDId</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>rootNodeDId</color><color=#f8f8f2>;</color>

    <color=#66d9ef>long</color> <color=#f8f8f2>createdTimestamp</color><color=#f8f8f2>;</color>
    <color=#66d9ef>long</color> <color=#f8f8f2>modifiedTimestamp</color><color=#f8f8f2>;</color>

    <color=#66d9ef>int</color> <color=#f8f8f2>startSId</color><color=#f8f8f2>;</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>streamSize</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>CompoundDocument</color> <color=#f8f8f2>document</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Entry</color> <color=#f8f8f2>parent</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>SortedSet</color><color=#f92672><</color><color=#f8f8f2>Entry</color><color=#f92672>></color> <color=#f8f8f2>children</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>LENGTH</color> <color=#f92672>=</color> <color=#ae81ff>128</color><color=#f8f8f2>;</color>

    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>EMPTY</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>USER_STORAGE</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>USER_STREAM</color> <color=#f92672>=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>LOCK_BYTES</color> <color=#f92672>=</color> <color=#ae81ff>3</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>PROPERTY</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
    <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>ROOT_STORAGE</color> <color=#f92672>=</color> <color=#ae81ff>5</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>SortedSet</color><color=#f92672><</color><color=#f8f8f2>Entry</color><color=#f92672>></color> <color=#f8f8f2>NO_CHILDREN</color> <color=#f92672>=</color>
            <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableSortedSet</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>TreeSet</color><color=#f92672><</color><color=#f8f8f2>Entry</color><color=#f92672>></color><color=#f8f8f2>());</color>

    <color=#66d9ef>private</color> <color=#a6e22e>Entry</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Reads an entry from the input.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pInput the input data</color>
<color=#75715e>     * @return the {@code Entry} read from the input data</color>
<color=#75715e>     * @throws IOException if an i/o exception occurs during reading</color>
<color=#75715e>     */</color>
    <color=#66d9ef>static</color> <color=#f8f8f2>Entry</color> <color=#a6e22e>readEntry</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>DataInput</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Entry</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Entry</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>pInput</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>p</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Reads this entry</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pInput the input data</color>
<color=#75715e>     * @throws IOException if an i/o exception occurs during reading</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>DataInput</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>64</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readFully</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>

        <color=#75715e>// NOTE: Length is in bytes, including the null-terminator...</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>nameLength</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readShort</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>name</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>String</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>nameLength</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>Charset</color><color=#f8f8f2>.</color><color=#a6e22e>forName</color><color=#f8f8f2>(</color><color=#e6db74>"UTF-16LE"</color><color=#f8f8f2>));</color>
        <color=#75715e>//        System.out.println("name: " + name);</color>

        <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readByte</color><color=#f8f8f2>();</color>
        <color=#75715e>//        System.out.println("type: " + type);</color>

        <color=#f8f8f2>nodeColor</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readByte</color><color=#f8f8f2>();</color>
        <color=#75715e>//        System.out.println("nodeColor: " + nodeColor);</color>

        <color=#f8f8f2>prevDId</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>
        <color=#75715e>//        System.out.println("prevDId: " + prevDId);</color>
        <color=#f8f8f2>nextDId</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>
        <color=#75715e>//        System.out.println("nextDId: " + nextDId);</color>
        <color=#f8f8f2>rootNodeDId</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>
        <color=#75715e>//        System.out.println("rootNodeDId: " + rootNodeDId);</color>

        <color=#75715e>// UID (16) + user flags (4), ignored</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>skipBytes</color><color=#f8f8f2>(</color><color=#ae81ff>20</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>20</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>CorruptDocumentException</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>createdTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>CompoundDocument</color><color=#f8f8f2>.</color><color=#a6e22e>toJavaTimeInMillis</color><color=#f8f8f2>(</color><color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>modifiedTimestamp</color> <color=#f92672>=</color> <color=#f8f8f2>CompoundDocument</color><color=#f8f8f2>.</color><color=#a6e22e>toJavaTimeInMillis</color><color=#f8f8f2>(</color><color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readLong</color><color=#f8f8f2>());</color>

        <color=#f8f8f2>startSId</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>
        <color=#75715e>//        System.out.println("startSId: " + startSId);</color>
        <color=#f8f8f2>streamSize</color> <color=#f92672>=</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>
        <color=#75715e>//        System.out.println("streamSize: " + streamSize);</color>

        <color=#75715e>// Reserved</color>
        <color=#f8f8f2>pInput</color><color=#f8f8f2>.</color><color=#a6e22e>readInt</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * If {@code true} this {@code Entry} is the root {@code Entry}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return {@code true} if this is the root {@code Entry}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isRoot</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>type</color> <color=#f92672>==</color> <color=#f8f8f2>ROOT_STORAGE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * If {@code true} this {@code Entry} is a directory {@code Entry}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return {@code true} if this is a directory {@code Entry}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isDirectory</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>type</color> <color=#f92672>==</color> <color=#f8f8f2>USER_STORAGE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * If {@code true} this {@code Entry} is a file (document) {@code Entry}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return {@code true} if this is a document {@code Entry}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isFile</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>type</color> <color=#f92672>==</color> <color=#f8f8f2>USER_STREAM</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the name of this {@code Entry}</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the name of this {@code Entry}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>name</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the {@code InputStream} for this {@code Entry}</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return an {@code InputStream} containing the data for this {@code Entry} or {@code null} if</color>
<color=#75715e>     * this is a directory {@code Entry}</color>
<color=#75715e>     * @throws IOException if an I/O exception occurs</color>
<color=#75715e>     * @see #length()</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>SeekableInputStream</color> <color=#a6e22e>getInputStream</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isFile</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>document</color><color=#f8f8f2>.</color><color=#a6e22e>getInputStreamForSId</color><color=#f8f8f2>(</color><color=#f8f8f2>startSId</color><color=#f8f8f2>,</color> <color=#f8f8f2>streamSize</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the length of this entry</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the length of the stream for this entry, or {@code 0} if this is a directory {@code</color>
<color=#75715e>     * Entry}</color>
<color=#75715e>     * @see #getInputStream()</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>isFile</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>L</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>streamSize</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the time that this entry was created. The time is converted from its internal</color>
<color=#75715e>     * representation to standard Java representation, milliseconds since the epoch (00:00:00 GMT,</color>
<color=#75715e>     * January 1, 1970).</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>Note that most applications leaves this value empty ({@code 0L}).</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return A {@code long} value representing the time this entry was created, measured in</color>
<color=#75715e>     * milliseconds since the epoch (00:00:00 GMT, January 1, 1970), or {@code 0L} if no creation</color>
<color=#75715e>     * time stamp exists for this entry.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>created</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>createdTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the time that this entry was last modified. The time is converted from its internal</color>
<color=#75715e>     * representation to standard Java representation, milliseconds since the epoch (00:00:00 GMT,</color>
<color=#75715e>     * January 1, 1970).</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>Note that many applications leaves this value empty ({@code 0L}).</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return A {@code long} value representing the time this entry was last modified, measured in</color>
<color=#75715e>     * milliseconds since the epoch (00:00:00 GMT, January 1, 1970), or {@code 0L} if no</color>
<color=#75715e>     * modification time stamp exists for this entry.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>long</color> <color=#a6e22e>lastModified</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>modifiedTimestamp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Return the parent of this {@code Entry}</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the parent of this {@code Entry}, or {@code null} if this is the root {@code Entry}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Entry</color> <color=#a6e22e>getParentEntry</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>parent</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the child of this {@code Entry} with the given name.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pName the name of the child {@code Entry}</color>
<color=#75715e>     * @return the child {@code Entry} or {@code null} if thee is no such child</color>
<color=#75715e>     * @throws IOException if an I/O exception occurs</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Entry</color> <color=#a6e22e>getChildEntry</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pName</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isFile</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>rootNodeDId</color> <color=#f92672>==</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>Entry</color> <color=#f8f8f2>dummy</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Entry</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>dummy</color><color=#f8f8f2>.</color><color=#a6e22e>name</color> <color=#f92672>=</color> <color=#f8f8f2>pName</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>dummy</color><color=#f8f8f2>.</color><color=#a6e22e>parent</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>SortedSet</color> <color=#f8f8f2>child</color> <color=#f92672>=</color> <color=#f8f8f2>getChildEntries</color><color=#f8f8f2>().</color><color=#a6e22e>tailSet</color><color=#f8f8f2>(</color><color=#f8f8f2>dummy</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>child</color><color=#f8f8f2>.</color><color=#a6e22e>first</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the children of this {@code Entry}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return a {@code SortedSet} of {@code Entry} objects</color>
<color=#75715e>     * @throws IOException if an I/O exception occurs</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>SortedSet</color><color=#f92672><</color><color=#f8f8f2>Entry</color><color=#f92672>></color> <color=#a6e22e>getChildEntries</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>children</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isFile</color><color=#f8f8f2>()</color> <color=#f92672>||</color> <color=#f8f8f2>rootNodeDId</color> <color=#f92672>==</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>children</color> <color=#f92672>=</color> <color=#f8f8f2>NO_CHILDREN</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Start at root node in R/B tree, and read to the left and right,</color>
                <color=#75715e>// re-build tree, according to the docs</color>
                <color=#f8f8f2>children</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableSortedSet</color><color=#f8f8f2>(</color><color=#f8f8f2>document</color><color=#f8f8f2>.</color><color=#a6e22e>getEntries</color><color=#f8f8f2>(</color><color=#f8f8f2>rootNodeDId</color><color=#f8f8f2>,</color> <color=#66d9ef>this</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>children</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"\""</color>
                <color=#f92672>+</color> <color=#f8f8f2>name</color>
                <color=#f92672>+</color> <color=#e6db74>"\""</color>
                <color=#f92672>+</color> <color=#e6db74>" ("</color>
                <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>isFile</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#e6db74>"Document"</color> <color=#f8f8f2>:</color> <color=#f8f8f2>(</color><color=#f8f8f2>isDirectory</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#e6db74>"Directory"</color> <color=#f8f8f2>:</color> <color=#e6db74>"Root"</color><color=#f8f8f2>))</color>
                <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>parent</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#e6db74>", parent: \""</color> <color=#f92672>+</color> <color=#f8f8f2>parent</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>"\""</color> <color=#f8f8f2>:</color> <color=#e6db74>""</color><color=#f8f8f2>)</color>
                <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>isFile</color><color=#f8f8f2>()</color>
                <color=#f92672>?</color> <color=#e6db74>""</color>
                <color=#f8f8f2>:</color> <color=#e6db74>", children: "</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>children</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>children</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>())</color> <color=#f8f8f2>:</color> <color=#e6db74>"(unknown)"</color><color=#f8f8f2>))</color>
                <color=#f92672>+</color> <color=#e6db74>", SId="</color>
                <color=#f92672>+</color> <color=#f8f8f2>startSId</color>
                <color=#f92672>+</color> <color=#e6db74>", length="</color>
                <color=#f92672>+</color> <color=#f8f8f2>streamSize</color>
                <color=#f92672>+</color> <color=#e6db74>")"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>pOther</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pOther</color> <color=#f92672>==</color> <color=#66d9ef>this</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>pOther</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Entry</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>Entry</color> <color=#f8f8f2>other</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>Entry</color><color=#f8f8f2>)</color> <color=#f8f8f2>pOther</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>)</color>
                <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>parent</color> <color=#f92672>==</color> <color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>parent</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>parent</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>parent</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>other</color><color=#f8f8f2>.</color><color=#a6e22e>parent</color><color=#f8f8f2>)));</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f92672>^</color> <color=#f8f8f2>startSId</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Entry</color> <color=#f8f8f2>pOther</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color> <color=#f92672>==</color> <color=#f8f8f2>pOther</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// NOTE: This is the sorting algorthm defined by the Compound Document:</color>
        <color=#75715e>//  - first sort by name length</color>
        <color=#75715e>//  - if lengths are equal, sort by comparing strings, case sensitive</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>diff</color> <color=#f92672>=</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>pOther</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>diff</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>diff</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>name</color><color=#f8f8f2>.</color><color=#a6e22e>compareTo</color><color=#f8f8f2>(</color><color=#f8f8f2>pOther</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>