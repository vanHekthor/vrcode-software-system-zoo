<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>


<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.image</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.SystemUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>magick.MagickImage</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImageOp</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * This class accelerates certain graphics operations, using</color>
<color=#75715e> * JMagick and ImageMagick, if available.</color>
<color=#75715e> * If those libraries are not installed, this class silently does nothing.</color>
<color=#75715e> * <p/></color>
<color=#75715e> * Set the system property {@code "com.twelvemonkeys.image.accel"} to</color>
<color=#75715e> * {@code false}, to disable, even if JMagick is installed.</color>
<color=#75715e> * Set the system property {@code "com.twelvemonkeys.image.magick.debug"} to</color>
<color=#75715e> * <p/></color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @version $Id: //depot/branches/personal/haraldk/twelvemonkeys/release-2/twelvemonkeys-core/src/main/java/com/twelvemonkeys/image/MagickAccelerator.java#3 $</color>
<color=#75715e> */</color>
<color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>MagickAccelerator</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>DEBUG</color> <color=#f92672>=</color> <color=#f8f8f2>Magick</color><color=#f8f8f2>.</color><color=#a6e22e>DEBUG</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>USE_MAGICK</color> <color=#f92672>=</color> <color=#f8f8f2>useMagick</color><color=#f8f8f2>();</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>RESAMPLE_OP</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Class</color><color=#f92672>[]</color> <color=#f8f8f2>nativeOp</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Class</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>nativeOp</color><color=#f92672>[</color><color=#f8f8f2>RESAMPLE_OP</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>Class</color><color=#f8f8f2>.</color><color=#a6e22e>forName</color><color=#f8f8f2>(</color><color=#e6db74>"com.twelvemonkeys.image.ResampleOp"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Could not find class: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>useMagick</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>available</color> <color=#f92672>=</color> <color=#f8f8f2>SystemUtil</color><color=#f8f8f2>.</color><color=#a6e22e>isClassAvailable</color><color=#f8f8f2>(</color><color=#e6db74>"magick.MagickImage"</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>available</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#e6db74>"ImageMagick bindings not available."</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>boolean</color> <color=#f8f8f2>useMagick</color> <color=#f92672>=</color>
                    <color=#f8f8f2>available</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#e6db74>"FALSE"</color><color=#f8f8f2>.</color><color=#a6e22e>equalsIgnoreCase</color><color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#e6db74>"com.twelvemonkeys.image.accel"</color><color=#f8f8f2>));</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>useMagick</color>
                                <color=#f92672>?</color> <color=#e6db74>"Will use ImageMagick bindings to accelerate image resampling operations."</color>
                                <color=#f8f8f2>:</color> <color=#e6db74>"Will not use ImageMagick to accelerate image resampling operations."</color>
                <color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>useMagick</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Throwable</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Most probably in case of a SecurityManager</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Could not enable ImageMagick bindings: "</color> <color=#f92672>+</color> <color=#f8f8f2>t</color><color=#f8f8f2>);</color>
            <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>int</color> <color=#a6e22e>getNativeOpIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>Class</color> <color=#f8f8f2>pOpClass</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>nativeOp</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pOpClass</color> <color=#f92672>==</color> <color=#f8f8f2>nativeOp</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImageOp</color> <color=#f8f8f2>pOperation</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>pInput</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>pOutput</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>USE_MAGICK</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>getNativeOpIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>pOperation</color><color=#f8f8f2>.</color><color=#a6e22e>getClass</color><color=#f8f8f2>()))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>RESAMPLE_OP</color><color=#f8f8f2>:</color>
                <color=#f8f8f2>ResampleOp</color> <color=#f8f8f2>resample</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ResampleOp</color><color=#f8f8f2>)</color> <color=#f8f8f2>pOperation</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>resampleMagick</color><color=#f8f8f2>(</color><color=#f8f8f2>pInput</color><color=#f8f8f2>,</color> <color=#f8f8f2>resample</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>resample</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>resample</color><color=#f8f8f2>.</color><color=#a6e22e>filterType</color><color=#f8f8f2>);</color>

                <color=#75715e>// NOTE: If output parameter is non-null, we have to return that</color>
                <color=#75715e>// image, instead of result</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pOutput</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#75715e>//pOutput.setData(result.getRaster()); // Fast, but less compatible</color>
                    <color=#75715e>// NOTE: For some reason, this is sometimes super-slow...?</color>
                    <color=#f8f8f2>ImageUtil</color><color=#f8f8f2>.</color><color=#a6e22e>drawOnto</color><color=#f8f8f2>(</color><color=#f8f8f2>pOutput</color><color=#f8f8f2>,</color> <color=#f8f8f2>result</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>pOutput</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>break</color><color=#f8f8f2>;</color>

            <color=#66d9ef>default</color><color=#f8f8f2>:</color>
                <color=#75715e>// Simply fall through, allowing acceleration to be added later</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>resampleMagick</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>pSrc</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>pWidth</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>pHeight</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>pFilterType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Convert to Magick, scale and convert back</color>
        <color=#f8f8f2>MagickImage</color> <color=#f8f8f2>image</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>MagickImage</color> <color=#f8f8f2>scaled</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>image</color> <color=#f92672>=</color> <color=#f8f8f2>MagickUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toMagick</color><color=#f8f8f2>(</color><color=#f8f8f2>pSrc</color><color=#f8f8f2>);</color>

            <color=#66d9ef>long</color> <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>start</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// NOTE: setFilter affects zoomImage, NOT scaleImage</color>
            <color=#f8f8f2>image</color><color=#f8f8f2>.</color><color=#a6e22e>setFilter</color><color=#f8f8f2>(</color><color=#f8f8f2>pFilterType</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>scaled</color> <color=#f92672>=</color> <color=#f8f8f2>image</color><color=#f8f8f2>.</color><color=#a6e22e>zoomImage</color><color=#f8f8f2>(</color><color=#f8f8f2>pWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>pHeight</color><color=#f8f8f2>);</color>
            <color=#75715e>//scaled = image.scaleImage(pWidth, pHeight); // AREA_AVERAGING</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>DEBUG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>long</color> <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>start</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Filtered: "</color> <color=#f92672>+</color> <color=#f8f8f2>time</color> <color=#f92672>+</color> <color=#e6db74>" ms"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>MagickUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toBuffered</color><color=#f8f8f2>(</color><color=#f8f8f2>scaled</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#75715e>//catch (MagickException e) {</color>
        <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// NOTE: Stupid workaround: If MagickException is caught, a</color>
            <color=#75715e>// NoClassDefFoundError is thrown, when MagickException class is</color>
            <color=#75715e>// unavailable...</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>e</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>RuntimeException</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>throw</color> <color=#f8f8f2>(</color><color=#f8f8f2>RuntimeException</color><color=#f8f8f2>)</color> <color=#f8f8f2>e</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>ImageConversionException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>(),</color> <color=#f8f8f2>e</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
            <color=#75715e>// NOTE: ImageMagick might be unstable after a while, if image data</color>
            <color=#75715e>// is not deallocated. The GC/finalize method handles this, but in</color>
            <color=#75715e>// special circumstances, it's not triggered often enough.</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>image</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>image</color><color=#f8f8f2>.</color><color=#a6e22e>destroyImages</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>scaled</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>scaled</color><color=#f8f8f2>.</color><color=#a6e22e>destroyImages</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>