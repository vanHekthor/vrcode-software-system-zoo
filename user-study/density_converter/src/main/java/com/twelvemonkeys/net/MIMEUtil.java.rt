<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.net</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.StringUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.SystemUtil</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Contains mappings from file extension to mime-types and from mime-type to file-types.</color>
<color=#75715e> *</color>
<color=#75715e> * <p></color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @version $Id:</color>
<color=#75715e> * //depot/branches/personal/haraldk/twelvemonkeys/release-2/twelvemonkeys-core/src/main/java/com/twelvemonkeys/net/MIMEUtil.java#5</color>
<color=#75715e> * $</color>
<color=#75715e> * @see <A href="http://www.iana.org/assignments/media-types/">MIME Media Types</A></color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>MIMEUtil</color> <color=#f8f8f2>{</color>
    <color=#75715e>// TODO: Piggy-back on the mappings form the JRE? (1.6 comes with javax.activation)</color>
    <color=#75715e>// TODO: Piggy-back on mappings from javax.activation?</color>
    <color=#75715e>// See: http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/activation/MimetypesFileTypeMap.html</color>
    <color=#75715e>// See: http://java.sun.com/javase/6/docs/api/javax/activation/MimetypesFileTypeMap.html</color>
    <color=#75715e>// TODO: Use the format (and lookup) specified by the above URLs</color>
    <color=#75715e>// TODO: Allow 3rd party to add mappings? Will need application context support to do it safe..</color>
    <color=#75715e>// :-P</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>sExtToMIME</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>sUnmodifiableExtToMIME</color> <color=#f92672>=</color>
            <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableMap</color><color=#f8f8f2>(</color><color=#f8f8f2>sExtToMIME</color><color=#f8f8f2>);</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>sMIMEToExt</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>sUnmodifiableMIMEToExt</color> <color=#f92672>=</color>
            <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableMap</color><color=#f8f8f2>(</color><color=#f8f8f2>sMIMEToExt</color><color=#f8f8f2>);</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Load mapping for MIMEUtil</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>Properties</color> <color=#f8f8f2>mappings</color> <color=#f92672>=</color> <color=#f8f8f2>SystemUtil</color><color=#f8f8f2>.</color><color=#a6e22e>loadProperties</color><color=#f8f8f2>(</color><color=#f8f8f2>MIMEUtil</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color> <color=#f8f8f2>entry</color> <color=#f8f8f2>:</color> <color=#f8f8f2>mappings</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Convert and break up extensions and mimeTypes</color>
                <color=#f8f8f2>String</color> <color=#f8f8f2>extStr</color> <color=#f92672>=</color> <color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>((</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>());</color>
                <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>extensions</color> <color=#f92672>=</color>
                        <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableList</color><color=#f8f8f2>(</color><color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>asList</color><color=#f8f8f2>(</color><color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toStringArray</color><color=#f8f8f2>(</color><color=#f8f8f2>extStr</color><color=#f8f8f2>,</color> <color=#e6db74>";, "</color><color=#f8f8f2>)));</color>

                <color=#f8f8f2>String</color> <color=#f8f8f2>typeStr</color> <color=#f92672>=</color> <color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>((</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>());</color>
                <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>mimeTypes</color> <color=#f92672>=</color>
                        <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableList</color><color=#f8f8f2>(</color><color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>asList</color><color=#f8f8f2>(</color><color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toStringArray</color><color=#f8f8f2>(</color><color=#f8f8f2>typeStr</color><color=#f8f8f2>,</color> <color=#e6db74>";, "</color><color=#f8f8f2>)));</color>

                <color=#75715e>// TODO: Handle duplicates in MIME to extension mapping, like</color>
                <color=#75715e>// xhtml=application/xhtml+xml;application/xml</color>
                <color=#75715e>// xml=text/xml;application/xml</color>

                <color=#75715e>// Populate normal and reverse MIME-mappings</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>extension</color> <color=#f8f8f2>:</color> <color=#f8f8f2>extensions</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>sExtToMIME</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>extension</color><color=#f8f8f2>,</color> <color=#f8f8f2>mimeTypes</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>mimeType</color> <color=#f8f8f2>:</color> <color=#f8f8f2>mimeTypes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>sMIMEToExt</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>mimeType</color><color=#f8f8f2>,</color> <color=#f8f8f2>extensions</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Could not read properties for MIMEUtil: "</color> <color=#f92672>+</color> <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>getMessage</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>// Disallow construction</color>
    <color=#66d9ef>private</color> <color=#a6e22e>MIMEUtil</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the default MIME type for the given file extension.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pFileExt the file extension</color>
<color=#75715e>     * @return a {@code String} containing the MIME type, or {@code null} if there are no known MIME</color>
<color=#75715e>     * types for the given file extension.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>getMIMEType</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pFileExt</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>types</color> <color=#f92672>=</color> <color=#f8f8f2>sExtToMIME</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>(</color><color=#f8f8f2>pFileExt</color><color=#f8f8f2>));</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>types</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>types</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f92672>?</color> <color=#66d9ef>null</color> <color=#f8f8f2>:</color> <color=#f8f8f2>types</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns all MIME types for the given file extension.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pFileExt the file extension</color>
<color=#75715e>     * @return a {@link List} of {@code String}s containing the MIME types, or an empty list, if there</color>
<color=#75715e>     * are no known MIME types for the given file extension.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>getMIMETypes</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pFileExt</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>types</color> <color=#f92672>=</color> <color=#f8f8f2>sExtToMIME</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>(</color><color=#f8f8f2>pFileExt</color><color=#f8f8f2>));</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>maskNull</color><color=#f8f8f2>(</color><color=#f8f8f2>types</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns an unmodifiabale {@link Map} view of the extension to MIME mapping, to use as the</color>
<color=#75715e>     * default mapping in client applications.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return an unmodifiabale {@code Map} view of the extension to MIME mapping.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#a6e22e>getMIMETypeMappings</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>sUnmodifiableExtToMIME</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the default file extension for the given MIME type. Specifying a wildcard type will</color>
<color=#75715e>     * return {@code null}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pMIME the MIME type</color>
<color=#75715e>     * @return a {@code String} containing the file extension, or {@code null} if there are no known</color>
<color=#75715e>     * file extensions for the given MIME type.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>getExtension</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>mime</color> <color=#f92672>=</color> <color=#f8f8f2>bareMIME</color><color=#f8f8f2>(</color><color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>(</color><color=#f8f8f2>pMIME</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>extensions</color> <color=#f92672>=</color> <color=#f8f8f2>sMIMEToExt</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>mime</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>extensions</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>extensions</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>())</color> <color=#f92672>?</color> <color=#66d9ef>null</color> <color=#f8f8f2>:</color> <color=#f8f8f2>extensions</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns all file extension for the given MIME type. The default extension will be the first in</color>
<color=#75715e>     * the list. Note that no specific order is given for wildcard types (image/*, *&#47;* etc).</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pMIME the MIME type</color>
<color=#75715e>     * @return a {@link List} of {@code String}s containing the MIME types, or an empty list, if there</color>
<color=#75715e>     * are no known file extensions for the given MIME type.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>getExtensions</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>mime</color> <color=#f92672>=</color> <color=#f8f8f2>bareMIME</color><color=#f8f8f2>(</color><color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>(</color><color=#f8f8f2>pMIME</color><color=#f8f8f2>));</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>mime</color><color=#f8f8f2>.</color><color=#a6e22e>endsWith</color><color=#f8f8f2>(</color><color=#e6db74>"/*"</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>getExtensionForWildcard</color><color=#f8f8f2>(</color><color=#f8f8f2>mime</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>extensions</color> <color=#f92672>=</color> <color=#f8f8f2>sMIMEToExt</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>mime</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>maskNull</color><color=#f8f8f2>(</color><color=#f8f8f2>extensions</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>// Gets all extensions for a wildcard MIME type</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>getExtensionForWildcard</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>family</color> <color=#f92672>=</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>1</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>extensions</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>LinkedHashSet</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#f8f8f2>mimeToExt</color> <color=#f8f8f2>:</color> <color=#f8f8f2>sMIMEToExt</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#e6db74>"*/"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>family</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>mimeToExt</color><color=#f8f8f2>.</color><color=#a6e22e>getKey</color><color=#f8f8f2>().</color><color=#a6e22e>startsWith</color><color=#f8f8f2>(</color><color=#f8f8f2>family</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>extensions</color><color=#f8f8f2>.</color><color=#a6e22e>addAll</color><color=#f8f8f2>(</color><color=#f8f8f2>mimeToExt</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableList</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>extensions</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns an unmodifiabale {@link Map} view of the MIME to extension mapping, to use as the</color>
<color=#75715e>     * default mapping in client applications.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return an unmodifiabale {@code Map} view of the MIME to extension mapping.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>>></color> <color=#a6e22e>getExtensionMappings</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>sUnmodifiableMIMEToExt</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Tests wehter the type is a subtype of the type family.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pTypeFamily the MIME type family ({@code image/*, *&#47;*}, etc)</color>
<color=#75715e>     * @param pType       the MIME type</color>
<color=#75715e>     * @return {@code true} if {@code pType} is a subtype of {@code pTypeFamily}, otherwise {@code</color>
<color=#75715e>     * false}</color>
<color=#75715e>     */</color>
    <color=#75715e>// TODO: Rename? isSubtype?</color>
    <color=#75715e>// TODO: Make public</color>
    <color=#66d9ef>static</color> <color=#66d9ef>boolean</color> <color=#a6e22e>includes</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pTypeFamily</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// TODO: Handle null in a well-defined way</color>
        <color=#75715e>// - Is null family same as */*?</color>
        <color=#75715e>// - Is null subtype of any family? Subtype of no family?</color>

        <color=#f8f8f2>String</color> <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>bareMIME</color><color=#f8f8f2>(</color><color=#f8f8f2>pType</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>pTypeFamily</color><color=#f8f8f2>)</color>
                <color=#f92672>||</color> <color=#e6db74>"*/*"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>pTypeFamily</color><color=#f8f8f2>)</color>
                <color=#f92672>||</color> <color=#f8f8f2>pTypeFamily</color><color=#f8f8f2>.</color><color=#a6e22e>endsWith</color><color=#f8f8f2>(</color><color=#e6db74>"/*"</color><color=#f8f8f2>)</color>
                <color=#f92672>&&</color> <color=#f8f8f2>pTypeFamily</color><color=#f8f8f2>.</color><color=#a6e22e>startsWith</color><color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>'/'</color><color=#f8f8f2>)));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Removes any charset or extra info from the mime-type string (anything after a semicolon, {@code</color>
<color=#75715e>     * ;}, inclusive).</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pMIME the mime-type string</color>
<color=#75715e>     * @return the bare mime-type</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>bareMIME</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>idx</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pMIME</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>idx</color> <color=#f92672>=</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>';'</color><color=#f8f8f2>))</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>idx</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>pMIME</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>// Returns the list or empty list if list is null</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#a6e22e>maskNull</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>pTypes</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>pTypes</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>emptyList</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#f8f8f2>pTypes</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * For debugging. Prints all known MIME types and file extensions.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pArgs command line arguments</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>pArgs</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pArgs</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>pArgs</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>family</color> <color=#f92672>=</color> <color=#f8f8f2>pArgs</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>incuded</color> <color=#f92672>=</color> <color=#f8f8f2>includes</color><color=#f8f8f2>(</color><color=#f8f8f2>family</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Mime type family "</color>
                            <color=#f92672>+</color> <color=#f8f8f2>family</color>
                            <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>incuded</color> <color=#f92672>?</color> <color=#e6db74>" includes "</color> <color=#f8f8f2>:</color> <color=#e6db74>" does not include "</color><color=#f8f8f2>)</color>
                            <color=#f92672>+</color> <color=#e6db74>"type "</color>
                            <color=#f92672>+</color> <color=#f8f8f2>type</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pArgs</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>str</color> <color=#f92672>=</color> <color=#f8f8f2>pArgs</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>str</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>'/'</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#75715e>// MIME</color>
                <color=#f8f8f2>String</color> <color=#f8f8f2>extension</color> <color=#f92672>=</color> <color=#f8f8f2>getExtension</color><color=#f8f8f2>(</color><color=#f8f8f2>str</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
                        <color=#e6db74>"Default extension for MIME type '"</color>
                                <color=#f92672>+</color> <color=#f8f8f2>str</color>
                                <color=#f92672>+</color> <color=#e6db74>"' is "</color>
                                <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>extension</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#e6db74>": '"</color> <color=#f92672>+</color> <color=#f8f8f2>extension</color> <color=#f92672>+</color> <color=#e6db74>"'"</color> <color=#f8f8f2>:</color> <color=#e6db74>"unknown"</color><color=#f8f8f2>)</color>
                                <color=#f92672>+</color> <color=#e6db74>"."</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"All possible: "</color> <color=#f92672>+</color> <color=#f8f8f2>getExtensions</color><color=#f8f8f2>(</color><color=#f8f8f2>str</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#75715e>// EXT</color>
                <color=#f8f8f2>String</color> <color=#f8f8f2>mimeType</color> <color=#f92672>=</color> <color=#f8f8f2>getMIMEType</color><color=#f8f8f2>(</color><color=#f8f8f2>str</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color>
                        <color=#e6db74>"Default MIME type for extension '"</color>
                                <color=#f92672>+</color> <color=#f8f8f2>str</color>
                                <color=#f92672>+</color> <color=#e6db74>"' is "</color>
                                <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>mimeType</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#e6db74>": '"</color> <color=#f92672>+</color> <color=#f8f8f2>mimeType</color> <color=#f92672>+</color> <color=#e6db74>"'"</color> <color=#f8f8f2>:</color> <color=#e6db74>"unknown"</color><color=#f8f8f2>)</color>
                                <color=#f92672>+</color> <color=#e6db74>"."</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"All possible: "</color> <color=#f92672>+</color> <color=#f8f8f2>getMIMETypes</color><color=#f8f8f2>(</color><color=#f8f8f2>str</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>return</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>Set</color> <color=#f8f8f2>set</color> <color=#f92672>=</color> <color=#f8f8f2>sMIMEToExt</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>mimeTypes</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>String</color><color=#f92672>[</color><color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Iterator</color> <color=#f8f8f2>iterator</color> <color=#f92672>=</color> <color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>iterator</color><color=#f8f8f2>();</color> <color=#f8f8f2>iterator</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>();</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>mime</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>iterator</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>mimeTypes</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>mime</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>sort</color><color=#f8f8f2>(</color><color=#f8f8f2>mimeTypes</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Known MIME types ("</color> <color=#f92672>+</color> <color=#f8f8f2>mimeTypes</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>+</color> <color=#e6db74>"):"</color><color=#f8f8f2>);</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>mimeTypes</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>mimeType</color> <color=#f92672>=</color> <color=#f8f8f2>mimeTypes</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>j</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#e6db74>", "</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#f8f8f2>mimeType</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"\n"</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>set</color> <color=#f92672>=</color> <color=#f8f8f2>sExtToMIME</color><color=#f8f8f2>.</color><color=#a6e22e>keySet</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>extensions</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>String</color><color=#f92672>[</color><color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Iterator</color> <color=#f8f8f2>iterator</color> <color=#f92672>=</color> <color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>iterator</color><color=#f8f8f2>();</color> <color=#f8f8f2>iterator</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>();</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>ext</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>)</color> <color=#f8f8f2>iterator</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>extensions</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>ext</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>sort</color><color=#f8f8f2>(</color><color=#f8f8f2>extensions</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Known file types ("</color> <color=#f92672>+</color> <color=#f8f8f2>extensions</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>+</color> <color=#e6db74>"):"</color><color=#f8f8f2>);</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color> <color=#f92672><</color> <color=#f8f8f2>extensions</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>j</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>extension</color> <color=#f92672>=</color> <color=#f8f8f2>extensions</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>j</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#e6db74>", "</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>print</color><color=#f8f8f2>(</color><color=#f8f8f2>extension</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>