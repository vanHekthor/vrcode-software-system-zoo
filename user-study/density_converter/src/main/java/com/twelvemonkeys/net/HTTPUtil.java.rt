<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2013, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.net</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.DateUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.StringUtil</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.text.DateFormat</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.text.ParseException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.text.SimpleDateFormat</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Date</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Locale</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.TimeZone</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * HTTPUtil</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haraldk$</color>
<color=#75715e> * @version $Id: HTTPUtil.java,v 1.0 08.09.13 13:57 haraldk Exp$</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>HTTPUtil</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * RFC 1123 date format, as recommended by RFC 2616 (HTTP/1.1), sec 3.3 NOTE: All date formats are</color>
<color=#75715e>     * private, to ensure synchronized access.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>SimpleDateFormat</color> <color=#f8f8f2>HTTP_RFC1123_FORMAT</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>SimpleDateFormat</color><color=#f8f8f2>(</color><color=#e6db74>"EEE, dd MMM yyyy HH:mm:ss z"</color><color=#f8f8f2>,</color> <color=#f8f8f2>Locale</color><color=#f8f8f2>.</color><color=#a6e22e>US</color><color=#f8f8f2>);</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>HTTP_RFC1123_FORMAT</color><color=#f8f8f2>.</color><color=#a6e22e>setTimeZone</color><color=#f8f8f2>(</color><color=#f8f8f2>TimeZone</color><color=#f8f8f2>.</color><color=#a6e22e>getTimeZone</color><color=#f8f8f2>(</color><color=#e6db74>"GMT"</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * RFC 850 date format, (almost) as described in RFC 2616 (HTTP/1.1), sec 3.3 USE FOR PARSING ONLY</color>
<color=#75715e>     * (format is not 100% correct, to be more robust).</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>SimpleDateFormat</color> <color=#f8f8f2>HTTP_RFC850_FORMAT</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>SimpleDateFormat</color><color=#f8f8f2>(</color><color=#e6db74>"EEE, dd-MMM-yy HH:mm:ss z"</color><color=#f8f8f2>,</color> <color=#f8f8f2>Locale</color><color=#f8f8f2>.</color><color=#a6e22e>US</color><color=#f8f8f2>);</color>
    <color=#75715e>/**</color>
<color=#75715e>     * ANSI C asctime() date format, (almost) as described in RFC 2616 (HTTP/1.1), sec 3.3. USE FOR</color>
<color=#75715e>     * PARSING ONLY (format is not 100% correct, to be more robust).</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>SimpleDateFormat</color> <color=#f8f8f2>HTTP_ASCTIME_FORMAT</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>SimpleDateFormat</color><color=#f8f8f2>(</color><color=#e6db74>"EEE MMM d HH:mm:ss yy"</color><color=#f8f8f2>,</color> <color=#f8f8f2>Locale</color><color=#f8f8f2>.</color><color=#a6e22e>US</color><color=#f8f8f2>);</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#f8f8f2>sNext50YearWindowChange</color> <color=#f92672>=</color> <color=#f8f8f2>DateUtil</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeDay</color><color=#f8f8f2>();</color>

    <color=#66d9ef>static</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>HTTP_RFC850_FORMAT</color><color=#f8f8f2>.</color><color=#a6e22e>setTimeZone</color><color=#f8f8f2>(</color><color=#f8f8f2>TimeZone</color><color=#f8f8f2>.</color><color=#a6e22e>getTimeZone</color><color=#f8f8f2>(</color><color=#e6db74>"GMT"</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>HTTP_ASCTIME_FORMAT</color><color=#f8f8f2>.</color><color=#a6e22e>setTimeZone</color><color=#f8f8f2>(</color><color=#f8f8f2>TimeZone</color><color=#f8f8f2>.</color><color=#a6e22e>getTimeZone</color><color=#f8f8f2>(</color><color=#e6db74>"GMT"</color><color=#f8f8f2>));</color>

        <color=#75715e>// http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.3:</color>
        <color=#75715e>// - HTTP/1.1 clients and caches SHOULD assume that an RFC-850 date</color>
        <color=#75715e>//   which appears to be more than 50 years in the future is in fact</color>
        <color=#75715e>//   in the past (this helps solve the "year 2000" problem).</color>
        <color=#f8f8f2>update50YearWindowIfNeeded</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>update50YearWindowIfNeeded</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Avoid class synchronization</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>next</color> <color=#f92672>=</color> <color=#f8f8f2>sNext50YearWindowChange</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>next</color> <color=#f92672><</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>currentTimeMillis</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Next check in one day</color>
            <color=#f8f8f2>next</color> <color=#f92672>+=</color> <color=#f8f8f2>DateUtil</color><color=#f8f8f2>.</color><color=#a6e22e>DAY</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>sNext50YearWindowChange</color> <color=#f92672>=</color> <color=#f8f8f2>next</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>Date</color> <color=#f8f8f2>startDate</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Date</color><color=#f8f8f2>(</color><color=#f8f8f2>next</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#ae81ff>50l</color> <color=#f92672>*</color> <color=#f8f8f2>DateUtil</color><color=#f8f8f2>.</color><color=#a6e22e>CALENDAR_YEAR</color><color=#f8f8f2>));</color>
            <color=#75715e>// System.out.println("next test: " + new Date(next) + ", 50 year start: " + startDate);</color>
            <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>HTTP_RFC850_FORMAT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>HTTP_RFC850_FORMAT</color><color=#f8f8f2>.</color><color=#a6e22e>set2DigitYearStart</color><color=#f8f8f2>(</color><color=#f8f8f2>startDate</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>HTTP_ASCTIME_FORMAT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>HTTP_ASCTIME_FORMAT</color><color=#f8f8f2>.</color><color=#a6e22e>set2DigitYearStart</color><color=#f8f8f2>(</color><color=#f8f8f2>startDate</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#a6e22e>HTTPUtil</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Formats the time to a HTTP date, using the RFC 1123 format, as described in <a</color>
<color=#75715e>     * href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3" >RFC 2616 (HTTP/1.1), sec.</color>
<color=#75715e>     * 3.3</a>.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pTime the time</color>
<color=#75715e>     * @return a {@code String} representation of the time</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>formatHTTPDate</color><color=#f8f8f2>(</color><color=#66d9ef>long</color> <color=#f8f8f2>pTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>formatHTTPDate</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>Date</color><color=#f8f8f2>(</color><color=#f8f8f2>pTime</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Formats the time to a HTTP date, using the RFC 1123 format, as described in <a</color>
<color=#75715e>     * href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3" >RFC 2616 (HTTP/1.1), sec.</color>
<color=#75715e>     * 3.3</a>.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pTime the time</color>
<color=#75715e>     * @return a {@code String} representation of the time</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>formatHTTPDate</color><color=#f8f8f2>(</color><color=#f8f8f2>Date</color> <color=#f8f8f2>pTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>HTTP_RFC1123_FORMAT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>HTTP_RFC1123_FORMAT</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>pTime</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Parses a HTTP date string into a {@code long} representing milliseconds since January 1, 1970</color>
<color=#75715e>     * GMT.</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>Use this method with headers that contain dates, such as {@code If-Modified-Since} or {@code</color>
<color=#75715e>     * Last-Modified}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>The date string may be in either RFC 1123, RFC 850 or ANSI C asctime() format, as described</color>
<color=#75715e>     * in <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3" >RFC 2616 (HTTP/1.1),</color>
<color=#75715e>     * sec. 3.3</a></color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pDate the date to parse</color>
<color=#75715e>     * @return a {@code long} value representing the date, expressed as the number of milliseconds</color>
<color=#75715e>     * since January 1, 1970 GMT,</color>
<color=#75715e>     * @throws NumberFormatException    if the date parameter is not parseable.</color>
<color=#75715e>     * @throws IllegalArgumentException if the date paramter is {@code null}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>long</color> <color=#a6e22e>parseHTTPDate</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>pDate</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>NumberFormatException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>parseHTTPDateImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>pDate</color><color=#f8f8f2>).</color><color=#a6e22e>getTime</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * ParseHTTPDate implementation</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pDate the date string to parse</color>
<color=#75715e>     * @return a {@code Date}</color>
<color=#75715e>     * @throws NumberFormatException    if the date parameter is not parseable.</color>
<color=#75715e>     * @throws IllegalArgumentException if the date paramter is {@code null}</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>Date</color> <color=#a6e22e>parseHTTPDateImpl</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pDate</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>NumberFormatException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pDate</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"date == null"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>isEmpty</color><color=#f8f8f2>(</color><color=#f8f8f2>pDate</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NumberFormatException</color><color=#f8f8f2>(</color><color=#e6db74>"Invalid HTTP date: \""</color> <color=#f92672>+</color> <color=#f8f8f2>pDate</color> <color=#f92672>+</color> <color=#e6db74>"\""</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>DateFormat</color> <color=#f8f8f2>format</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pDate</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>'-'</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>format</color> <color=#f92672>=</color> <color=#f8f8f2>HTTP_RFC850_FORMAT</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>update50YearWindowIfNeeded</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pDate</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(</color><color=#e6db74>','</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>format</color> <color=#f92672>=</color> <color=#f8f8f2>HTTP_ASCTIME_FORMAT</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>update50YearWindowIfNeeded</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>format</color> <color=#f92672>=</color> <color=#f8f8f2>HTTP_RFC1123_FORMAT</color><color=#f8f8f2>;</color>
            <color=#75715e>// NOTE: RFC1123 always uses 4-digit years</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>Date</color> <color=#f8f8f2>date</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#75715e>//noinspection SynchronizationOnLocalVariableOrMethodParameter</color>
            <color=#66d9ef>synchronized</color> <color=#f8f8f2>(</color><color=#f8f8f2>format</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>date</color> <color=#f92672>=</color> <color=#f8f8f2>format</color><color=#f8f8f2>.</color><color=#a6e22e>parse</color><color=#f8f8f2>(</color><color=#f8f8f2>pDate</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ParseException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>NumberFormatException</color> <color=#f8f8f2>nfe</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>NumberFormatException</color><color=#f8f8f2>(</color><color=#e6db74>"Invalid HTTP date: \""</color> <color=#f92672>+</color> <color=#f8f8f2>pDate</color> <color=#f92672>+</color> <color=#e6db74>"\""</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>nfe</color><color=#f8f8f2>.</color><color=#a6e22e>initCause</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
            <color=#66d9ef>throw</color> <color=#f8f8f2>nfe</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>date</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NumberFormatException</color><color=#f8f8f2>(</color><color=#e6db74>"Invalid HTTP date: \""</color> <color=#f92672>+</color> <color=#f8f8f2>pDate</color> <color=#f92672>+</color> <color=#e6db74>"\""</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>date</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>