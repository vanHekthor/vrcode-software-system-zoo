<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.util</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * DuplicateHandler</color>
<color=#75715e> * <p/></color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @version $Id: //depot/branches/personal/haraldk/twelvemonkeys/release-2/twelvemonkeys-core/src/main/java/com/twelvemonkeys/util/DuplicateHandler.java#2 $</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>DuplicateHandler</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Resolves duplicates according to a certain strategy.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pOld the old value</color>
<color=#75715e>     * @param pNew the new value</color>
<color=#75715e>     * @return the resolved value.</color>
<color=#75715e>     * @throws IllegalArgumentException is the arguments cannot be resolved for</color>
<color=#75715e>     *                                  some reason.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>T</color> <color=#a6e22e>resolve</color><color=#f8f8f2>(</color><color=#f8f8f2>T</color> <color=#f8f8f2>pOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>T</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>);</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Will use the first (old) value. Any new values will be discarded.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @see CollectionUtil#invert(java.util.Map, java.util.Map, DuplicateHandler)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>DuplicateHandler</color><color=#f92672><?></color> <color=#f8f8f2>USE_FIRST_VALUE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DuplicateHandler</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Returns {@code pOld}.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @param pOld the old value</color>
<color=#75715e>         * @param pNew the new value</color>
<color=#75715e>         *</color>
<color=#75715e>         * @return {@code pOld}</color>
<color=#75715e>         */</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>Object</color> <color=#a6e22e>resolve</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>pOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>pOld</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>};</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Will use the last (new) value. Any old values will be discarded</color>
<color=#75715e>     * (overwritten).</color>
<color=#75715e>     *</color>
<color=#75715e>     * @see CollectionUtil#invert(java.util.Map, java.util.Map, DuplicateHandler)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>DuplicateHandler</color><color=#f92672><?></color> <color=#f8f8f2>USE_LAST_VALUE</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DuplicateHandler</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Returns {@code pNew}.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @param pOld the old value</color>
<color=#75715e>         * @param pNew the new value</color>
<color=#75715e>         *</color>
<color=#75715e>         * @return {@code pNew}</color>
<color=#75715e>         */</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>Object</color> <color=#a6e22e>resolve</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>pOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>};</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Converts duplicats to an {@code Object} array.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @see CollectionUtil#invert(java.util.Map, java.util.Map, DuplicateHandler)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>DuplicateHandler</color><color=#f92672><?></color> <color=#f8f8f2>DUPLICATES_AS_ARRAY</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DuplicateHandler</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Returns an {@code Object} array, containing {@code pNew} as its</color>
<color=#75715e>         * last element.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @param pOld the old value</color>
<color=#75715e>         * @param pNew the new value</color>
<color=#75715e>         *</color>
<color=#75715e>         * @return an {@code Object} array, containing {@code pNew} as its</color>
<color=#75715e>         * last element.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>Object</color> <color=#a6e22e>resolve</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>pOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>Object</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>Object</color><color=#f92672>[]</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pOld</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Object</color><color=#f92672>[]</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Object</color><color=#f92672>[]</color> <color=#f8f8f2>old</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>Object</color><color=#f92672>[]</color><color=#f8f8f2>)</color> <color=#f8f8f2>pOld</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Object</color><color=#f92672>[</color><color=#f8f8f2>old</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>arraycopy</color><color=#f8f8f2>(</color><color=#f8f8f2>old</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>result</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>old</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>result</color><color=#f92672>[</color><color=#f8f8f2>old</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Object</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>pOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>};</color>
            <color=#f8f8f2>}</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>};</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Converts duplicates to a comma-separated {@code String}.</color>
<color=#75715e>     * Note that all values should allready be {@code String}s if using this</color>
<color=#75715e>     * handler.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @see CollectionUtil#invert(java.util.Map, java.util.Map, DuplicateHandler)</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>DuplicateHandler</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color> <color=#f8f8f2>DUPLICATES_AS_CSV</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DuplicateHandler</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f92672>></color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Returns a comma-separated {@code String}, with the string</color>
<color=#75715e>         * representation of {@code pNew} as the last element.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @param pOld the old value</color>
<color=#75715e>         * @param pNew the new value</color>
<color=#75715e>         *</color>
<color=#75715e>         * @return a comma-separated {@code String}, with the string</color>
<color=#75715e>         * representation of {@code pNew} as the last element.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>resolve</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>pOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pNew</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f8f8f2>.</color><color=#a6e22e>valueOf</color><color=#f8f8f2>(</color><color=#f8f8f2>pOld</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>','</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>pNew</color><color=#f8f8f2>);</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>};</color>
<color=#f8f8f2>}</color>