<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.util</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.lang.StringUtil</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.text.FieldPosition</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.text.Format</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.text.ParsePosition</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.StringTokenizer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Vector</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Format for converting and parsing time.</color>
<color=#75715e> * <p></color>
<color=#75715e> * The format is expressed in a string as follows:</color>
<color=#75715e> * <DL></color>
<color=#75715e> * <DD>m (or any multiple of m's)</color>
<color=#75715e> * <DT>the minutes part (padded with 0's, if number has less digits than</color>
<color=#75715e> * the number of m's)</color>
<color=#75715e> * m -> 0,1,...,59,60,61,...</color>
<color=#75715e> * mm -> 00,01,...,59,60,61,...</color>
<color=#75715e> * <DD>s or ss</color>
<color=#75715e> * <DT>the seconds part (padded with 0's, if number has less digits than</color>
<color=#75715e> * the number of s's)</color>
<color=#75715e> * s -> 0,1,...,59</color>
<color=#75715e> * ss -> 00,01,...,59</color>
<color=#75715e> * <DD>S</color>
<color=#75715e> * <DT>all seconds (including the ones above 59)</color>
<color=#75715e> * </DL></color>
<color=#75715e> * <p></color>
<color=#75715e> * May not handle all cases, and formats... ;-)</color>
<color=#75715e> * Safest is: Always delimiters between the minutes (m) and seconds (s) part.</color>
<color=#75715e> * <p></color>
<color=#75715e> * TODO:</color>
<color=#75715e> * Move to com.twelvemonkeys.text?</color>
<color=#75715e> * Milliseconds!</color>
<color=#75715e> * Fix bugs.</color>
<color=#75715e> * Known bugs:</color>
<color=#75715e> * <p></color>
<color=#75715e> * The last character in the formatString is not escaped, while it should be.</color>
<color=#75715e> * The first character after an escaped character is escaped while is shouldn't</color>
<color=#75715e> * be.</color>
<color=#75715e> * <p></color>
<color=#75715e> * This is not a 100% compatible implementation of a java.text.Format.</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @see Time</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>TimeFormat</color> <color=#66d9ef>extends</color> <color=#f8f8f2>Format</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>MINUTE</color> <color=#f92672>=</color> <color=#e6db74>"m"</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>SECOND</color> <color=#f92672>=</color> <color=#e6db74>"s"</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>TIME</color> <color=#f92672>=</color> <color=#e6db74>"S"</color><color=#f8f8f2>;</color>
    <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ESCAPE</color> <color=#f92672>=</color> <color=#e6db74>"\\"</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The default time format</color>
<color=#75715e>     */</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#f8f8f2>TimeFormat</color> <color=#f8f8f2>DEFAULT_FORMAT</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TimeFormat</color><color=#f8f8f2>(</color><color=#e6db74>"m:ss"</color><color=#f8f8f2>);</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>String</color> <color=#f8f8f2>formatString</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Main method for testing ONLY</color>
<color=#75715e>     */</color>

    <color=#66d9ef>static</color> <color=#66d9ef>void</color> <color=#a6e22e>main</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color><color=#f92672>[]</color> <color=#f8f8f2>argv</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Time</color> <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>TimeFormat</color> <color=#f8f8f2>in</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>TimeFormat</color> <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>>=</color> <color=#ae81ff>3</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Creating out TimeFormat: \""</color> <color=#f92672>+</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#e6db74>"\""</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TimeFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>>=</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Creating in TimeFormat: \""</color> <color=#f92672>+</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#e6db74>"\""</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>in</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TimeFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Using default format for in"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>in</color> <color=#f92672>=</color> <color=#f8f8f2>DEFAULT_FORMAT</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>out</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color>
            <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#f8f8f2>in</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f8f8f2>.</color><color=#a6e22e>length</color> <color=#f92672>>=</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Parsing: \""</color> <color=#f92672>+</color> <color=#f8f8f2>argv</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>+</color> <color=#e6db74>"\" with format \""</color>
                    <color=#f92672>+</color> <color=#f8f8f2>in</color><color=#f8f8f2>.</color><color=#a6e22e>formatString</color> <color=#f92672>+</color> <color=#e6db74>"\""</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#f8f8f2>in</color><color=#f8f8f2>.</color><color=#a6e22e>parse</color><color=#f8f8f2>(</color><color=#f8f8f2>argv</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color>
            <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Time</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Time is \""</color> <color=#f92672>+</color> <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>time</color><color=#f8f8f2>)</color> <color=#f92672>+</color>
                <color=#e6db74>"\" according to format \""</color> <color=#f92672>+</color> <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>formatString</color> <color=#f92672>+</color> <color=#e6db74>"\""</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>


    <color=#75715e>/**</color>
<color=#75715e>     * The formatter array.</color>
<color=#75715e>     */</color>

    <color=#66d9ef>protected</color> <color=#f8f8f2>TimeFormatter</color><color=#f92672>[]</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a new TimeFormat with the given formatString,</color>
<color=#75715e>     */</color>

    <color=#66d9ef>public</color> <color=#a6e22e>TimeFormat</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>formatString</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>Vector</color> <color=#f8f8f2>formatter</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Vector</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>StringTokenizer</color> <color=#f8f8f2>tok</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringTokenizer</color><color=#f8f8f2>(</color><color=#f8f8f2>pStr</color><color=#f8f8f2>,</color> <color=#e6db74>"\\msS"</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>String</color> <color=#f8f8f2>previous</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>current</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>previousCount</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

        <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>tok</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreElements</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>current</color> <color=#f92672>=</color> <color=#f8f8f2>tok</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>();</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>ESCAPE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Handle escaping of s, S or m</color>
                <color=#f8f8f2>current</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>current</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#f8f8f2>current</color> <color=#f8f8f2>:</color> <color=#e6db74>""</color><color=#f8f8f2>)</color>
                        <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>tok</color><color=#f8f8f2>.</color><color=#a6e22e>hasMoreElements</color><color=#f8f8f2>()</color> <color=#f92672>?</color> <color=#f8f8f2>tok</color><color=#f8f8f2>.</color><color=#a6e22e>nextToken</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#e6db74>""</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>previous</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>previousCount</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// Skip over first,</color>
            <color=#75715e>// or if current is the same, increase count, and try again</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>current</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>previousCount</color><color=#f92672>++</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>previous</color> <color=#f92672>=</color> <color=#f8f8f2>current</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Create new formatter for each part</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>MINUTE</color><color=#f8f8f2>))</color>
                    <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>MinutesFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>previousCount</color><color=#f8f8f2>));</color>
                <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>SECOND</color><color=#f8f8f2>))</color>
                    <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>SecondsFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>previousCount</color><color=#f8f8f2>));</color>
                <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>TIME</color><color=#f8f8f2>))</color>
                    <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>SecondsFormatter</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>));</color>
                <color=#66d9ef>else</color>
                    <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>TextFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>));</color>

                <color=#f8f8f2>previousCount</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>previous</color> <color=#f92672>=</color> <color=#f8f8f2>current</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// Add new formatter for last part</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>MINUTE</color><color=#f8f8f2>))</color>
                <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>MinutesFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>previousCount</color><color=#f8f8f2>));</color>
            <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>SECOND</color><color=#f8f8f2>))</color>
                <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>SecondsFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>previousCount</color><color=#f8f8f2>));</color>
            <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>TIME</color><color=#f8f8f2>))</color>
                <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>SecondsFormatter</color><color=#f8f8f2>(</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>));</color>
            <color=#66d9ef>else</color>
                <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>TextFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>previous</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// Debug</color>
	<color=#75715e>/*</color>
<color=#75715e>	for (int i = 0; i < formatter.size(); i++) {</color>
<color=#75715e>	    System.out.println("Formatter " + formatter.get(i).getClass() </color>
<color=#75715e>			       + ": length=" + ((TimeFormatter) formatter.get(i)).digits);</color>
<color=#75715e>	}</color>
<color=#75715e>	*/</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>formatter</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>TimeFormatter</color><color=#f92672>[]</color><color=#f8f8f2>)</color>
                <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>toArray</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>TimeFormatter</color><color=#f92672>[</color><color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color><color=#f92672>]</color><color=#f8f8f2>);</color>

    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * DUMMY IMPLEMENTATION!!</color>
<color=#75715e>     * Not locale specific.</color>
<color=#75715e>     */</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>TimeFormat</color> <color=#a6e22e>getInstance</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>DEFAULT_FORMAT</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/** DUMMY IMPLEMENTATION!! */</color>
    <color=#75715e>/* Not locale specific</color>
<color=#75715e>    public static TimeFormat getInstance(Locale pLocale) {</color>
<color=#75715e>	return DEFAULT_FORMAT;</color>
<color=#75715e>    }</color>
<color=#75715e>    */</color>

    <color=#75715e>/** DUMMY IMPLEMENTATION!! */</color>
    <color=#75715e>/* Not locale specific</color>
<color=#75715e>    public static Locale[] getAvailableLocales() {</color>
<color=#75715e>	return new Locale[] {Locale.getDefault()};</color>
<color=#75715e>    }</color>
<color=#75715e>    */</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Gets the format string.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getFormatString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>formatString</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * DUMMY IMPLEMENTATION!!</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>StringBuffer</color> <color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>pObj</color><color=#f8f8f2>,</color> <color=#f8f8f2>StringBuffer</color> <color=#f8f8f2>pToAppendTo</color><color=#f8f8f2>,</color>
                               <color=#f8f8f2>FieldPosition</color> <color=#f8f8f2>pPos</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>(</color><color=#f8f8f2>pObj</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>Time</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Must be instance of "</color> <color=#f92672>+</color> <color=#f8f8f2>Time</color><color=#f8f8f2>.</color><color=#a6e22e>class</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>pToAppendTo</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>format</color><color=#f8f8f2>(</color><color=#f8f8f2>pObj</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Formats the the given time, using this format.</color>
<color=#75715e>     */</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>Time</color> <color=#f8f8f2>pTime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>buf</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>pTime</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>buf</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * DUMMY IMPLEMENTATION!!</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Object</color> <color=#a6e22e>parseObject</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>,</color> <color=#f8f8f2>ParsePosition</color> <color=#f8f8f2>pStatus</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Time</color> <color=#f8f8f2>t</color> <color=#f92672>=</color> <color=#f8f8f2>parse</color><color=#f8f8f2>(</color><color=#f8f8f2>pStr</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>pStatus</color><color=#f8f8f2>.</color><color=#a6e22e>setIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>());</color> <color=#75715e>// Not 100%</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>t</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Parses a Time, according to this format.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Will bug on some formats. It's safest to always use delimiters between</color>
<color=#75715e>     * the minutes (m) and seconds (s) part.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Time</color> <color=#a6e22e>parse</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Time</color> <color=#f8f8f2>time</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Time</color><color=#f8f8f2>();</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>sec</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>pos</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

        <color=#66d9ef>boolean</color> <color=#f8f8f2>onlyUseSeconds</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>(</color><color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color>
                <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>pos</color> <color=#f92672>+</color> <color=#f8f8f2>skip</color> <color=#f92672><</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>());</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// Go to next offset</color>
            <color=#f8f8f2>pos</color> <color=#f92672>+=</color> <color=#f8f8f2>skip</color><color=#f8f8f2>;</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>MinutesFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Parse MINUTES</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color>
                        <color=#f92672>&&</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>TextFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// Skip until next format element</color>
                    <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(((</color><color=#f8f8f2>TextFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>).</color><color=#a6e22e>text</color><color=#f8f8f2>,</color> <color=#f8f8f2>pos</color><color=#f8f8f2>);</color>
                    <color=#75715e>// Error in format, try parsing to end</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>skip</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color>
                        <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// Skip until end of string</color>
                    <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// Hope this is correct...</color>
                    <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>digits</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>

                <color=#75715e>// May be first char</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>skip</color> <color=#f92672>></color> <color=#f8f8f2>pos</color><color=#f8f8f2>)</color>
                    <color=#f8f8f2>min</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>parseInt</color><color=#f8f8f2>(</color><color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#f8f8f2>pos</color><color=#f8f8f2>,</color> <color=#f8f8f2>skip</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>SecondsFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#75715e>// Parse SECONDS</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>digits</color> <color=#f92672>==</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// Only seconds (or full TIME)</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color>
                            <color=#f92672>&&</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>TextFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#75715e>// Skip until next format element</color>
                        <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(((</color><color=#f8f8f2>TextFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>).</color><color=#a6e22e>text</color><color=#f8f8f2>,</color> <color=#f8f8f2>pos</color><color=#f8f8f2>);</color>

                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#75715e>// Skip until end of string</color>
                        <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#75715e>// Cannot possibly know how long?</color>
                        <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
                        <color=#66d9ef>continue</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color>

                    <color=#75715e>// Get seconds</color>
                    <color=#f8f8f2>sec</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>parseInt</color><color=#f8f8f2>(</color><color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#f8f8f2>pos</color><color=#f8f8f2>,</color> <color=#f8f8f2>skip</color><color=#f8f8f2>));</color>
                    <color=#75715e>//		    System.out.println("Only seconds: " + sec);</color>

                    <color=#f8f8f2>onlyUseSeconds</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>break</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// Normal SECONDS</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color>
                            <color=#f92672>&&</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>TextFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#75715e>// Skip until next format element</color>
                        <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>indexOf</color><color=#f8f8f2>(((</color><color=#f8f8f2>TextFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>).</color><color=#a6e22e>text</color><color=#f8f8f2>,</color> <color=#f8f8f2>pos</color><color=#f8f8f2>);</color>

                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>i</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f92672>>=</color> <color=#f8f8f2>formatter</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#75715e>// Skip until end of string</color>
                        <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>digits</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color>
                    <color=#75715e>// Get seconds</color>
                    <color=#f8f8f2>sec</color> <color=#f92672>=</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>parseInt</color><color=#f8f8f2>(</color><color=#f8f8f2>pStr</color><color=#f8f8f2>.</color><color=#a6e22e>substring</color><color=#f8f8f2>(</color><color=#f8f8f2>pos</color><color=#f8f8f2>,</color> <color=#f8f8f2>skip</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>TextFormatter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>skip</color> <color=#f92672>=</color> <color=#f8f8f2>formatter</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>.</color><color=#a6e22e>digits</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

        <color=#f8f8f2>}</color>

        <color=#75715e>// Set the minutes part if we should</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>onlyUseSeconds</color><color=#f8f8f2>)</color>
            <color=#f8f8f2>time</color><color=#f8f8f2>.</color><color=#a6e22e>setMinutes</color><color=#f8f8f2>(</color><color=#f8f8f2>min</color><color=#f8f8f2>);</color>

        <color=#75715e>// Set the seconds part</color>
        <color=#f8f8f2>time</color><color=#f8f8f2>.</color><color=#a6e22e>setSeconds</color><color=#f8f8f2>(</color><color=#f8f8f2>sec</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>time</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>

<color=#75715e>/**</color>
<color=#75715e> * The base class of TimeFormatters</color>
<color=#75715e> */</color>
<color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>TimeFormatter</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>int</color> <color=#f8f8f2>digits</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#66d9ef>abstract</color> <color=#f8f8f2>String</color> <color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>Time</color> <color=#f8f8f2>t</color><color=#f8f8f2>);</color>
<color=#f8f8f2>}</color>

<color=#75715e>/**</color>
<color=#75715e> * Formats the seconds part of the Time</color>
<color=#75715e> */</color>
<color=#66d9ef>class</color> <color=#a6e22e>SecondsFormatter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TimeFormatter</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>SecondsFormatter</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>pDigits</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>digits</color> <color=#f92672>=</color> <color=#f8f8f2>pDigits</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>String</color> <color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>Time</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Negative number of digits, means all seconds, no padding</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>digits</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>.</color><color=#a6e22e>getTime</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// If seconds is more than digits long, simply return it</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>.</color><color=#a6e22e>getSeconds</color><color=#f8f8f2>()</color> <color=#f92672>>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#ae81ff>10</color><color=#f8f8f2>,</color> <color=#f8f8f2>digits</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>.</color><color=#a6e22e>getSeconds</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// Else return it with leading 0's</color>
        <color=#75715e>//return StringUtil.formatNumber(t.getSeconds(), digits);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>pad</color><color=#f8f8f2>(</color><color=#e6db74>""</color> <color=#f92672>+</color> <color=#f8f8f2>t</color><color=#f8f8f2>.</color><color=#a6e22e>getSeconds</color><color=#f8f8f2>(),</color> <color=#f8f8f2>digits</color><color=#f8f8f2>,</color> <color=#e6db74>"0"</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>

<color=#75715e>/**</color>
<color=#75715e> * Formats the minutes part of the Time</color>
<color=#75715e> */</color>
<color=#66d9ef>class</color> <color=#a6e22e>MinutesFormatter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TimeFormatter</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>MinutesFormatter</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>pDigits</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>digits</color> <color=#f92672>=</color> <color=#f8f8f2>pDigits</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>String</color> <color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>Time</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// If minutes is more than digits long, simply return it</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>.</color><color=#a6e22e>getMinutes</color><color=#f8f8f2>()</color> <color=#f92672>>=</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#ae81ff>10</color><color=#f8f8f2>,</color> <color=#f8f8f2>digits</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>Integer</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>(</color><color=#f8f8f2>t</color><color=#f8f8f2>.</color><color=#a6e22e>getMinutes</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>// Else return it with leading 0's</color>
        <color=#75715e>//return StringUtil.formatNumber(t.getMinutes(), digits);</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>StringUtil</color><color=#f8f8f2>.</color><color=#a6e22e>pad</color><color=#f8f8f2>(</color><color=#e6db74>""</color> <color=#f92672>+</color> <color=#f8f8f2>t</color><color=#f8f8f2>.</color><color=#a6e22e>getMinutes</color><color=#f8f8f2>(),</color> <color=#f8f8f2>digits</color><color=#f8f8f2>,</color> <color=#e6db74>"0"</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>

<color=#75715e>/**</color>
<color=#75715e> * Formats text constant part of the Time</color>
<color=#75715e> */</color>
<color=#66d9ef>class</color> <color=#a6e22e>TextFormatter</color> <color=#66d9ef>extends</color> <color=#f8f8f2>TimeFormatter</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>String</color> <color=#f8f8f2>text</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>TextFormatter</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>pText</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>text</color> <color=#f92672>=</color> <color=#f8f8f2>pText</color><color=#f8f8f2>;</color>

        <color=#75715e>// Just to be able to skip over</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>pText</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>digits</color> <color=#f92672>=</color> <color=#f8f8f2>pText</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#f8f8f2>String</color> <color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>Time</color> <color=#f8f8f2>t</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// Simply return the text</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>text</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

<color=#f8f8f2>}</color>