<color=#75715e>/*</color>
<color=#75715e> * Copyright (c) 2008, Harald Kuhr</color>
<color=#75715e> * All rights reserved.</color>
<color=#75715e> *</color>
<color=#75715e> * Redistribution and use in source and binary forms, with or without</color>
<color=#75715e> * modification, are permitted provided that the following conditions are met:</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions of source code must retain the above copyright notice, this</color>
<color=#75715e> *   list of conditions and the following disclaimer.</color>
<color=#75715e> *</color>
<color=#75715e> * * Redistributions in binary form must reproduce the above copyright notice,</color>
<color=#75715e> *   this list of conditions and the following disclaimer in the documentation</color>
<color=#75715e> *   and/or other materials provided with the distribution.</color>
<color=#75715e> *</color>
<color=#75715e> * * Neither the name of the copyright holder nor the names of its</color>
<color=#75715e> *   contributors may be used to endorse or promote products derived from</color>
<color=#75715e> *   this software without specific prior written permission.</color>
<color=#75715e> *</color>
<color=#75715e> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"</color>
<color=#75715e> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</color>
<color=#75715e> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</color>
<color=#75715e> * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE</color>
<color=#75715e> * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</color>
<color=#75715e> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR</color>
<color=#75715e> * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</color>
<color=#75715e> * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</color>
<color=#75715e> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</color>
<color=#75715e> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */</color>

<color=#f92672>package</color> <color=#f8f8f2>com.twelvemonkeys.xml</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.DOMConfiguration</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.DOMImplementationList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.Document</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.Node</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.bootstrap.DOMImplementationRegistry</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.ls.DOMImplementationLS</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.ls.LSOutput</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.w3c.dom.ls.LSSerializer</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.OutputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.Writer</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * {@code DOMImplementationLS} backed implementation.</color>
<color=#75715e> *</color>
<color=#75715e> * @author <a href="mailto:harald.kuhr@gmail.com">Harald Kuhr</a></color>
<color=#75715e> * @author last modified by $Author: haku $</color>
<color=#75715e> * @version $Id:</color>
<color=#75715e> * //depot/branches/personal/haraldk/twelvemonkeys/release-2/twelvemonkeys-core/src/main/java/com/twelvemonkeys/xml/DOMSerializer.java#2</color>
<color=#75715e> * $</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>DOMSerializer</color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_PRETTY_PRINT</color> <color=#f92672>=</color> <color=#e6db74>"format-pretty-print"</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_XML_DECLARATION</color> <color=#f92672>=</color> <color=#e6db74>"xml-declaration"</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>LSSerializer</color> <color=#f8f8f2>serializer</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>LSOutput</color> <color=#f8f8f2>output</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#a6e22e>DOMSerializer</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>DOMImplementationLS</color> <color=#f8f8f2>domImpl</color> <color=#f92672>=</color> <color=#f8f8f2>Support</color><color=#f8f8f2>.</color><color=#a6e22e>getImplementation</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>serializer</color> <color=#f92672>=</color> <color=#f8f8f2>domImpl</color><color=#f8f8f2>.</color><color=#a6e22e>createLSSerializer</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>domImpl</color><color=#f8f8f2>.</color><color=#a6e22e>createLSOutput</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a serializer using the given byte stream and encoding.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pStream   the byte stream.</color>
<color=#75715e>     * @param pEncoding the encoding.</color>
<color=#75715e>     * @throws IllegalStateException if no {@code DOMImplementation} with the right features can be</color>
<color=#75715e>     *                               instantiated.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>DOMSerializer</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>OutputStream</color> <color=#f8f8f2>pStream</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pEncoding</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>setByteStream</color><color=#f8f8f2>(</color><color=#f8f8f2>pStream</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>setEncoding</color><color=#f8f8f2>(</color><color=#f8f8f2>pEncoding</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a serializer using the given character stream and encoding.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pStream the characted stream.</color>
<color=#75715e>     * @throws IllegalStateException if no {@code DOMImplementation} with the right features can be</color>
<color=#75715e>     *                               instantiated.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>DOMSerializer</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Writer</color> <color=#f8f8f2>pStream</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>setCharacterStream</color><color=#f8f8f2>(</color><color=#f8f8f2>pStream</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

  <color=#75715e>/*</color>
<color=#75715e>  // TODO: Is it useful?</color>
<color=#75715e>  public void setNewLine(final String pNewLine) {</color>
<color=#75715e>      serializer.setNewLine(pNewLine);</color>
<color=#75715e>  }</color>

<color=#75715e>  public String getNewLine() {</color>
<color=#75715e>      return serializer.getNewLine();</color>
<color=#75715e>  }</color>
<color=#75715e>  */</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Specifies wether the serializer should use indentation and optimize for readability.</color>
<color=#75715e>     *</color>
<color=#75715e>     * <p>Note: This is a hint, and may be ignored by DOM implemenations.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pPrettyPrint {@code true} to enable pretty printing</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setPrettyPrint</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>pPrettyPrint</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>DOMConfiguration</color> <color=#f8f8f2>configuration</color> <color=#f92672>=</color> <color=#f8f8f2>serializer</color><color=#f8f8f2>.</color><color=#a6e22e>getDomConfig</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>configuration</color><color=#f8f8f2>.</color><color=#a6e22e>canSetParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_PRETTY_PRINT</color><color=#f8f8f2>,</color> <color=#f8f8f2>pPrettyPrint</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>configuration</color><color=#f8f8f2>.</color><color=#a6e22e>setParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_PRETTY_PRINT</color><color=#f8f8f2>,</color> <color=#f8f8f2>pPrettyPrint</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>getPrettyPrint</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>Boolean</color><color=#f8f8f2>.</color><color=#a6e22e>TRUE</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>serializer</color><color=#f8f8f2>.</color><color=#a6e22e>getDomConfig</color><color=#f8f8f2>().</color><color=#a6e22e>getParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_PRETTY_PRINT</color><color=#f8f8f2>));</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>setXMLDeclaration</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>pXMLDeclaration</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>serializer</color><color=#f8f8f2>.</color><color=#a6e22e>getDomConfig</color><color=#f8f8f2>().</color><color=#a6e22e>setParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_XML_DECLARATION</color><color=#f8f8f2>,</color> <color=#f8f8f2>pXMLDeclaration</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Serializes the entire document.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pDocument the document.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>serialize</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Document</color> <color=#f8f8f2>pDocument</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>serializeImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>pDocument</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Serializes the given node, along with any subnodes. Will not emit XML declaration.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param pNode the top node.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>serialize</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Node</color> <color=#f8f8f2>pNode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>serializeImpl</color><color=#f8f8f2>(</color><color=#f8f8f2>pNode</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>serializeImpl</color><color=#f8f8f2>(</color><color=#66d9ef>final</color> <color=#f8f8f2>Node</color> <color=#f8f8f2>pNode</color><color=#f8f8f2>,</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>pOmitDecl</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>setXMLDeclaration</color><color=#f8f8f2>(</color><color=#f8f8f2>pOmitDecl</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>serializer</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>pNode</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>Support</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>DOMImplementationRegistry</color> <color=#f8f8f2>DOM_REGISTRY</color> <color=#f92672>=</color> <color=#f8f8f2>createDOMRegistry</color><color=#f8f8f2>();</color>

        <color=#66d9ef>static</color> <color=#f8f8f2>DOMImplementationLS</color> <color=#a6e22e>getImplementation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>DOMImplementationLS</color> <color=#f8f8f2>implementation</color> <color=#f92672>=</color>
                    <color=#f8f8f2>(</color><color=#f8f8f2>DOMImplementationLS</color><color=#f8f8f2>)</color> <color=#f8f8f2>DOM_REGISTRY</color><color=#f8f8f2>.</color><color=#a6e22e>getDOMImplementation</color><color=#f8f8f2>(</color><color=#e6db74>"LS 3.0"</color><color=#f8f8f2>);</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>implementation</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

                <color=#f8f8f2>DOMImplementationList</color> <color=#f8f8f2>list</color> <color=#f92672>=</color> <color=#f8f8f2>DOM_REGISTRY</color><color=#f8f8f2>.</color><color=#a6e22e>getDOMImplementationList</color><color=#f8f8f2>(</color><color=#e6db74>""</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"DOM implementations ("</color> <color=#f92672>+</color> <color=#f8f8f2>list</color><color=#f8f8f2>.</color><color=#a6e22e>getLength</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>"):"</color><color=#f8f8f2>);</color>
                <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>list</color><color=#f8f8f2>.</color><color=#a6e22e>getLength</color><color=#f8f8f2>();</color> <color=#f8f8f2>i</color><color=#f92672>++</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>err</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"    "</color> <color=#f92672>+</color> <color=#f8f8f2>list</color><color=#f8f8f2>.</color><color=#a6e22e>item</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
                        <color=#e6db74>"Could not create DOM Implementation (no LS support found)"</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>implementation</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f8f8f2>DOMImplementationRegistry</color> <color=#a6e22e>createDOMRegistry</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>DOMImplementationRegistry</color><color=#f8f8f2>.</color><color=#a6e22e>newInstance</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>ClassNotFoundException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>InstantiationException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IllegalAccessException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>e</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>