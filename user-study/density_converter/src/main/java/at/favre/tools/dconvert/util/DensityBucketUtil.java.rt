<color=#75715e>/*</color>
<color=#75715e> *  Copyright 2016 Patrick Favre-Bulle</color>
<color=#75715e> *</color>
<color=#75715e> *  Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e> *  you may not use this file except in compliance with the License.</color>
<color=#75715e> *  You may obtain a copy of the License at</color>
<color=#75715e> *</color>
<color=#75715e> *      http://www.apache.org/licenses/LICENSE-2.0</color>
<color=#75715e> *</color>
<color=#75715e> * Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e> * distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e> * See the License for the specific language governing permissions and</color>
<color=#75715e> * limitations under the License.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>at.favre.tools.dconvert.util</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.arg.Arguments</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.arg.EScaleMode</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.descriptors.DensityDescriptor</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.TreeMap</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Helps assembling needed densities to convert to</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>DensityBucketUtil</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>SVG_UPSCALE_FACTOR</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#a6e22e>DensityBucketUtil</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>DensityDescriptor</color><color=#f92672>></color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color> <color=#a6e22e>getDensityBuckets</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>util</color><color=#f8f8f2>.</color><color=#a6e22e>List</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>densities</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Dimension</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Arguments</color> <color=#f8f8f2>args</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>isNinePatch</color><color=#f8f8f2>)</color>
            <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isNinePatch</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>setSize</color><color=#f8f8f2>(</color><color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>scaleMode</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>DP_WIDTH</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>getDensityBucketsWithDpScale</color><color=#f8f8f2>(</color><color=#f8f8f2>densities</color><color=#f8f8f2>,</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>,</color> <color=#f8f8f2>args</color><color=#f8f8f2>,</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>DP_HEIGHT</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>getDensityBucketsHeightDpScale</color><color=#f8f8f2>(</color><color=#f8f8f2>densities</color><color=#f8f8f2>,</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>,</color> <color=#f8f8f2>args</color><color=#f8f8f2>,</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>);</color>
            <color=#66d9ef>default</color><color=#f8f8f2>:</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>FRACTION</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>getDensityBucketsWithFractionScale</color><color=#f8f8f2>(</color><color=#f8f8f2>densities</color><color=#f8f8f2>,</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>,</color> <color=#f8f8f2>args</color><color=#f8f8f2>,</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>DensityDescriptor</color><color=#f92672>></color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color> <color=#a6e22e>getDensityBucketsWithDpScale</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>util</color><color=#f8f8f2>.</color><color=#a6e22e>List</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>densities</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>,</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>args</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>)</color>
            <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>scaleFactor</color> <color=#f92672>=</color> <color=#f8f8f2>fraction</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>;</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>baseWidth</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>fraction</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>baseHeight</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>scaleFactor</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color> <color=#f8f8f2>bucketMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>T</color> <color=#f8f8f2>density</color> <color=#f8f8f2>:</color> <color=#f8f8f2>densities</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseWidth</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>)</color> <color=#f92672><=</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>skipUpscaling</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>bucketMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>density</color><color=#f8f8f2>,</color>
                        <color=#66d9ef>new</color> <color=#f8f8f2>Dimension</color><color=#f8f8f2>(</color>
                                <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseWidth</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>),</color>
                                <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseHeight</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>)));</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#75715e>//    densities.stream()</color>
        <color=#75715e>//        .filter(</color>
        <color=#75715e>//            density -></color>
        <color=#75715e>//                (int) args.round(baseWidth * density.fraction) <= srcDimension.width</color>
        <color=#75715e>//                    || !args.skipUpscaling)</color>
        <color=#75715e>//        .forEach(</color>
        <color=#75715e>//            density -> {</color>
        <color=#75715e>//              bucketMap.put(</color>
        <color=#75715e>//                  density,</color>
        <color=#75715e>//                  new Dimension(</color>
        <color=#75715e>//                      (int) args.round(baseWidth * density.fraction),</color>
        <color=#75715e>//                      (int) args.round(baseHeight * density.fraction)));</color>
        <color=#75715e>//            });</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>bucketMap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>DensityDescriptor</color><color=#f92672>></color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color> <color=#a6e22e>getDensityBucketsHeightDpScale</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>util</color><color=#f8f8f2>.</color><color=#a6e22e>List</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>densities</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>,</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>args</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>)</color>
            <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>float</color> <color=#f8f8f2>scaleFactor</color> <color=#f92672>=</color> <color=#f8f8f2>fraction</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>;</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>baseWidth</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>scaleFactor</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>baseHeight</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>fraction</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color> <color=#f8f8f2>bucketMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>T</color> <color=#f8f8f2>density</color> <color=#f8f8f2>:</color> <color=#f8f8f2>densities</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseHeight</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>)</color> <color=#f92672><=</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>skipUpscaling</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>bucketMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>density</color><color=#f8f8f2>,</color>
                        <color=#66d9ef>new</color> <color=#f8f8f2>Dimension</color><color=#f8f8f2>(</color>
                                <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseWidth</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>),</color>
                                <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseHeight</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>)));</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#75715e>//    densities.stream()</color>
        <color=#75715e>//        .filter(</color>
        <color=#75715e>//            density -></color>
        <color=#75715e>//                (int) args.round(baseHeight * density.fraction) <= srcDimension.height</color>
        <color=#75715e>//                    || !args.skipUpscaling)</color>
        <color=#75715e>//        .forEach(</color>
        <color=#75715e>//            density -> {</color>
        <color=#75715e>//              bucketMap.put(</color>
        <color=#75715e>//                  density,</color>
        <color=#75715e>//                  new Dimension(</color>
        <color=#75715e>//                      (int) args.round(baseWidth * density.fraction),</color>
        <color=#75715e>//                      (int) args.round(baseHeight * density.fraction)));</color>
        <color=#75715e>//            });</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>bucketMap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#f92672><</color><color=#f8f8f2>T</color> <color=#66d9ef>extends</color> <color=#f8f8f2>DensityDescriptor</color><color=#f92672>></color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color> <color=#a6e22e>getDensityBucketsWithFractionScale</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>java</color><color=#f8f8f2>.</color><color=#a6e22e>util</color><color=#f8f8f2>.</color><color=#a6e22e>List</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>densities</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>,</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>args</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>double</color> <color=#f8f8f2>baseWidth</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>/</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>;</color>
        <color=#66d9ef>double</color> <color=#f8f8f2>baseHeight</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>srcDimension</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>/</color> <color=#f8f8f2>fraction</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color> <color=#f8f8f2>bucketMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>TreeMap</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>T</color> <color=#f8f8f2>density</color> <color=#f8f8f2>:</color> <color=#f8f8f2>densities</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fraction</color> <color=#f92672>>=</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color> <color=#f92672>||</color> <color=#f92672>!</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>skipUpscaling</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>bucketMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>density</color><color=#f8f8f2>,</color>
                        <color=#66d9ef>new</color> <color=#f8f8f2>Dimension</color><color=#f8f8f2>(</color>
                                <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseWidth</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>),</color>
                                <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>baseHeight</color> <color=#f92672>*</color> <color=#f8f8f2>density</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>)));</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#75715e>//    densities.stream()</color>
        <color=#75715e>//        .filter(density -> fraction >= density.fraction || !args.skipUpscaling)</color>
        <color=#75715e>//        .forEach(</color>
        <color=#75715e>//            density -> {</color>
        <color=#75715e>//              bucketMap.put(</color>
        <color=#75715e>//                  density,</color>
        <color=#75715e>//                  new Dimension(</color>
        <color=#75715e>//                      (int) args.round(baseWidth * density.fraction),</color>
        <color=#75715e>//                      (int) args.round(baseHeight * density.fraction)));</color>
        <color=#75715e>//            });</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>bucketMap</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

<color=#75715e>//  private static Dimension getHqDimension(File image, Arguments args) throws IOException {</color>
<color=#75715e>//    Dimension srcDimension = ImageUtil.getImageDimension(image);</color>
<color=#75715e>//    Dimension hqDimension;</color>
<color=#75715e>//    if (args.scaleMode == EScaleMode.FACTOR && args.fraction < SVG_UPSCALE_FACTOR) {</color>
<color=#75715e>//      hqDimension =</color>
<color=#75715e>//              new Dimension(</color>
<color=#75715e>//                      (int) args.round(SVG_UPSCALE_FACTOR / args.fraction * (float) srcDimension.width),</color>
<color=#75715e>//                      (int) args.round(SVG_UPSCALE_FACTOR / args.fraction * (float) srcDimension.width));</color>
<color=#75715e>//    } else if (args.scaleMode == EScaleMode.DP_WIDTH</color>
<color=#75715e>//            && (args.fraction * SVG_UPSCALE_FACTOR < srcDimension.width)) {</color>
<color=#75715e>//      float scaleFactor = args.fraction / (float) srcDimension.width * SVG_UPSCALE_FACTOR;</color>
<color=#75715e>//      hqDimension =</color>
<color=#75715e>//              new Dimension(</color>
<color=#75715e>//                      (int) args.round(scaleFactor * (float) srcDimension.width),</color>
<color=#75715e>//                      (int) args.round(scaleFactor * (float) srcDimension.height));</color>
<color=#75715e>//    } else if (args.scaleMode == EScaleMode.DP_HEIGHT</color>
<color=#75715e>//            && (args.fraction * SVG_UPSCALE_FACTOR < srcDimension.height)) {</color>
<color=#75715e>//      float scaleFactor = args.fraction / (float) srcDimension.height * SVG_UPSCALE_FACTOR;</color>
<color=#75715e>//      hqDimension =</color>
<color=#75715e>//              new Dimension(</color>
<color=#75715e>//                      (int) args.round(scaleFactor * (float) srcDimension.width),</color>
<color=#75715e>//                      (int) args.round(scaleFactor * (float) srcDimension.height));</color>
<color=#75715e>//    } else {</color>
<color=#75715e>//      hqDimension = srcDimension;</color>
<color=#75715e>//    }</color>
<color=#75715e>//    return hqDimension;</color>
<color=#75715e>//  }</color>
<color=#f8f8f2>}</color>