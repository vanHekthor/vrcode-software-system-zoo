<color=#75715e>/*</color>
<color=#75715e> *  Copyright 2016 Patrick Favre-Bulle</color>
<color=#75715e> *</color>
<color=#75715e> *  Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e> *  you may not use this file except in compliance with the License.</color>
<color=#75715e> *  You may obtain a copy of the License at</color>
<color=#75715e> *</color>
<color=#75715e> *      http://www.apache.org/licenses/LICENSE-2.0</color>
<color=#75715e> *</color>
<color=#75715e> * Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e> * distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e> * See the License for the specific language governing permissions and</color>
<color=#75715e> * limitations under the License.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>at.favre.tools.dconvert</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.arg.Arguments</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.IPlatformConverter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.Result</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.postprocessing.IPostProcessor</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.ArrayBlockingQueue</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.ExecutorService</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.ThreadPoolExecutor</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.concurrent.TimeUnit</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Handles post processing tasks</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>WorkerHandler</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>{</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>processors</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ExecutorService</color> <color=#f8f8f2>threadPool</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Callback</color> <color=#f8f8f2>callback</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>jobCount</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>WorkerHandler</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>processors</color><color=#f8f8f2>,</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>,</color> <color=#f8f8f2>Callback</color> <color=#f8f8f2>callback</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>processors</color> <color=#f92672>=</color> <color=#f8f8f2>processors</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>threadPool</color> <color=#f92672>=</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>ThreadPoolExecutor</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>arguments</color><color=#f8f8f2>.</color><color=#a6e22e>threadCount</color><color=#f8f8f2>,</color>
                        <color=#f8f8f2>arguments</color><color=#f8f8f2>.</color><color=#a6e22e>threadCount</color><color=#f8f8f2>,</color>
                        <color=#ae81ff>5</color><color=#f8f8f2>,</color>
                        <color=#f8f8f2>TimeUnit</color><color=#f8f8f2>.</color><color=#a6e22e>SECONDS</color><color=#f8f8f2>,</color>
                        <color=#66d9ef>new</color> <color=#f8f8f2>ArrayBlockingQueue</color><color=#f92672><</color><color=#f8f8f2>Runnable</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#ae81ff>1024</color> <color=#f92672>*</color> <color=#ae81ff>10</color><color=#f8f8f2>));</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>callback</color> <color=#f92672>=</color> <color=#f8f8f2>callback</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>arguments</color> <color=#f92672>=</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>start</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color> <color=#f8f8f2>allFiles</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>jobCount</color> <color=#f92672>=</color> <color=#f8f8f2>allFiles</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>processors</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>InternalCallback</color> <color=#f8f8f2>internalCallback</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>InternalCallback</color><color=#f8f8f2>(</color><color=#f8f8f2>callback</color><color=#f8f8f2>);</color>

        <color=#75715e>//    for (T processor : processors) {</color>
        <color=#75715e>//      for (File fileToProcess : allFiles) {</color>
        <color=#75715e>////        threadPool.execute(new Worker(fileToProcess, processor, arguments,</color>
        <color=#75715e>// internalCallback));</color>
        <color=#75715e>//        ((IPlatformConverter) processor).convert(fileToProcess, arguments);</color>
        <color=#75715e>//      }</color>
        <color=#75715e>//    }</color>

        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>T</color> <color=#f8f8f2>processor</color> <color=#f8f8f2>:</color> <color=#f8f8f2>processors</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>File</color> <color=#f8f8f2>fileToProcess</color> <color=#f8f8f2>:</color> <color=#f8f8f2>allFiles</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Result</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>processor</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>IPostProcessor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>result</color> <color=#f92672>=</color>
                            <color=#f8f8f2>((</color><color=#f8f8f2>IPostProcessor</color><color=#f8f8f2>)</color> <color=#f8f8f2>processor</color><color=#f8f8f2>)</color>
                                    <color=#f8f8f2>.</color><color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>fileToProcess</color><color=#f8f8f2>,</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>.</color><color=#a6e22e>keepUnoptimizedFilesPostProcessor</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>processor</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>IPlatformConverter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>IPlatformConverter</color><color=#f8f8f2>)</color> <color=#f8f8f2>processor</color><color=#f8f8f2>).</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>fileToProcess</color><color=#f8f8f2>,</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
                <color=#f8f8f2>internalCallback</color><color=#f8f8f2>.</color><color=#a6e22e>onJobFinished</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

<color=#75715e>//    threadPool.shutdown();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>jobCount</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>callback</color><color=#f8f8f2>.</color><color=#a6e22e>onFinished</color><color=#f8f8f2>(</color>
                    <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color><color=#f8f8f2>(),</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>(),</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Exception</color><color=#f92672>></color><color=#f8f8f2>(),</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>interface</color> <color=#a6e22e>Callback</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>void</color> <color=#a6e22e>onProgress</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>percent</color><color=#f8f8f2>);</color>

        <color=#66d9ef>void</color> <color=#a6e22e>onFinished</color><color=#f8f8f2>(</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>finishedJobs</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color> <color=#f8f8f2>outFiles</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>log</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Exception</color><color=#f92672>></color> <color=#f8f8f2>exceptions</color><color=#f8f8f2>,</color>
                <color=#66d9ef>boolean</color> <color=#f8f8f2>haltedDuringProcess</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>Worker</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Runnable</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>;</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>File</color> <color=#f8f8f2>unprocessedFile</color><color=#f8f8f2>;</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>T</color> <color=#f8f8f2>processor</color><color=#f8f8f2>;</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>InternalCallback</color> <color=#f8f8f2>callback</color><color=#f8f8f2>;</color>

        <color=#66d9ef>public</color> <color=#a6e22e>Worker</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>File</color> <color=#f8f8f2>unprocessedFile</color><color=#f8f8f2>,</color> <color=#f8f8f2>T</color> <color=#f8f8f2>processors</color><color=#f8f8f2>,</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>,</color> <color=#f8f8f2>InternalCallback</color> <color=#f8f8f2>callback</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>unprocessedFile</color> <color=#f92672>=</color> <color=#f8f8f2>unprocessedFile</color><color=#f8f8f2>;</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>arguments</color> <color=#f92672>=</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>;</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>processor</color> <color=#f92672>=</color> <color=#f8f8f2>processors</color><color=#f8f8f2>;</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>callback</color> <color=#f92672>=</color> <color=#f8f8f2>callback</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#a6e22e>@Override</color>
        <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>run</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>Result</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>processor</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>IPostProcessor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>result</color> <color=#f92672>=</color>
                        <color=#f8f8f2>((</color><color=#f8f8f2>IPostProcessor</color><color=#f8f8f2>)</color> <color=#f8f8f2>processor</color><color=#f8f8f2>)</color>
                                <color=#f8f8f2>.</color><color=#a6e22e>process</color><color=#f8f8f2>(</color><color=#f8f8f2>unprocessedFile</color><color=#f8f8f2>,</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>.</color><color=#a6e22e>keepUnoptimizedFilesPostProcessor</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>processor</color> <color=#66d9ef>instanceof</color> <color=#f8f8f2>IPlatformConverter</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>((</color><color=#f8f8f2>IPlatformConverter</color><color=#f8f8f2>)</color> <color=#f8f8f2>processor</color><color=#f8f8f2>).</color><color=#a6e22e>convert</color><color=#f8f8f2>(</color><color=#f8f8f2>unprocessedFile</color><color=#f8f8f2>,</color> <color=#f8f8f2>arguments</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
            <color=#f8f8f2>callback</color><color=#f8f8f2>.</color><color=#a6e22e>onJobFinished</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>class</color> <color=#a6e22e>InternalCallback</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Exception</color><color=#f92672>></color> <color=#f8f8f2>exceptionList</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>Exception</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Callback</color> <color=#f8f8f2>callback</color><color=#f8f8f2>;</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>StringBuilder</color> <color=#f8f8f2>logBuilder</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>StringBuilder</color><color=#f8f8f2>();</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color> <color=#f8f8f2>files</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>currentJobCount</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>canceled</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

        <color=#66d9ef>public</color> <color=#a6e22e>InternalCallback</color><color=#f8f8f2>(</color><color=#f8f8f2>Callback</color> <color=#f8f8f2>callback</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>callback</color> <color=#f92672>=</color> <color=#f8f8f2>callback</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>synchronized</color> <color=#66d9ef>void</color> <color=#a6e22e>onJobFinished</color><color=#f8f8f2>(</color><color=#f8f8f2>Result</color> <color=#f8f8f2>result</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>canceled</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>currentJobCount</color><color=#f92672>++</color><color=#f8f8f2>;</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>log</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>log</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>logBuilder</color><color=#f8f8f2>.</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>log</color><color=#f8f8f2>).</color><color=#a6e22e>append</color><color=#f8f8f2>(</color><color=#e6db74>"\n"</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>processedFiles</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>files</color><color=#f8f8f2>.</color><color=#a6e22e>addAll</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>processedFiles</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>exception</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>exceptionList</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>.</color><color=#a6e22e>exception</color><color=#f8f8f2>);</color>

                        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>arguments</color><color=#f8f8f2>.</color><color=#a6e22e>haltOnError</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                            <color=#f8f8f2>canceled</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
                            <color=#f8f8f2>threadPool</color><color=#f8f8f2>.</color><color=#a6e22e>shutdownNow</color><color=#f8f8f2>();</color>
                            <color=#f8f8f2>callback</color><color=#f8f8f2>.</color><color=#a6e22e>onFinished</color><color=#f8f8f2>(</color><color=#f8f8f2>currentJobCount</color><color=#f8f8f2>,</color> <color=#f8f8f2>files</color><color=#f8f8f2>,</color> <color=#f8f8f2>logBuilder</color><color=#f8f8f2>,</color> <color=#f8f8f2>exceptionList</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>}</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>canceled</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>currentJobCount</color> <color=#f92672>==</color> <color=#f8f8f2>jobCount</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>callback</color><color=#f8f8f2>.</color><color=#a6e22e>onFinished</color><color=#f8f8f2>(</color><color=#f8f8f2>currentJobCount</color><color=#f8f8f2>,</color> <color=#f8f8f2>files</color><color=#f8f8f2>,</color> <color=#f8f8f2>logBuilder</color><color=#f8f8f2>,</color> <color=#f8f8f2>exceptionList</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>callback</color><color=#f8f8f2>.</color><color=#a6e22e>onProgress</color><color=#f8f8f2>((</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>currentJobCount</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#66d9ef>float</color><color=#f8f8f2>)</color> <color=#f8f8f2>jobCount</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>