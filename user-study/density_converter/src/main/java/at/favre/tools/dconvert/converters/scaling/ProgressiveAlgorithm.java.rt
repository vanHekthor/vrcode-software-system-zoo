<color=#75715e>/*</color>
<color=#75715e> *  Copyright 2016 Patrick Favre-Bulle</color>
<color=#75715e> *</color>
<color=#75715e> *  Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e> *  you may not use this file except in compliance with the License.</color>
<color=#75715e> *  You may obtain a copy of the License at</color>
<color=#75715e> *</color>
<color=#75715e> *      http://www.apache.org/licenses/LICENSE-2.0</color>
<color=#75715e> *</color>
<color=#75715e> * Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e> * distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e> * See the License for the specific language governing permissions and</color>
<color=#75715e> * limitations under the License.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.scaling</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>com.mortennobel.imagescaling.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.imgscalr.Scalr</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A best of of progressive scaling algorithms from different libs</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ProgressiveAlgorithm</color> <color=#66d9ef>implements</color> <color=#f8f8f2>ScaleAlgorithm</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Type</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>Type</color> <color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>type</color> <color=#f92672>=</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>switch</color> <color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>NOBEL_BILINEAR</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>MultiStepRescaleOp</color><color=#f8f8f2>(</color><color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color> <color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_BILINEAR</color><color=#f8f8f2>)</color>
                        <color=#f8f8f2>.</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>NOBEL_BICUBUC</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>MultiStepRescaleOp</color><color=#f8f8f2>(</color><color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color> <color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_BICUBIC</color><color=#f8f8f2>)</color>
                        <color=#f8f8f2>.</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>NOBEL_NEAREST_NEIGHBOR</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>MultiStepRescaleOp</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color> <color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_NEAREST_NEIGHBOR</color><color=#f8f8f2>)</color>
                        <color=#f8f8f2>.</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>NOBEL_LANCZOS3</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>MultiStepLanczos3RescaleOp</color><color=#f8f8f2>(</color><color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>).</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>PROGRESSIVE_BILINEAR_AND_LANCZOS2</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>scaleProgressiveLanczos</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>PROGRESSIVE_BILINEAR_AND_LANCZOS3</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>scaleProgressiveLanczos</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color> <color=#ae81ff>3</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>THUMBNAILATOR_BILINEAR</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThumbnailnatorProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_BILINEAR</color><color=#f8f8f2>)</color>
                        <color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>THUMBNAILATOR_BICUBUC</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThumbnailnatorProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_BICUBIC</color><color=#f8f8f2>)</color>
                        <color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>IMGSCALR_SEVENTH_STEP</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>Scalr</color><color=#f8f8f2>.</color><color=#a6e22e>resize</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>Scalr</color><color=#f8f8f2>.</color><color=#a6e22e>Method</color><color=#f8f8f2>.</color><color=#a6e22e>ULTRA_QUALITY</color><color=#f8f8f2>,</color> <color=#f8f8f2>Scalr</color><color=#f8f8f2>.</color><color=#a6e22e>Mode</color><color=#f8f8f2>.</color><color=#a6e22e>FIT_EXACT</color><color=#f8f8f2>,</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#66d9ef>case</color> <color=#f8f8f2>IMGSCALR_HALF_STEP</color><color=#f8f8f2>:</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>Scalr</color><color=#f8f8f2>.</color><color=#a6e22e>resize</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>Scalr</color><color=#f8f8f2>.</color><color=#a6e22e>Method</color><color=#f8f8f2>.</color><color=#a6e22e>QUALITY</color><color=#f8f8f2>,</color> <color=#f8f8f2>Scalr</color><color=#f8f8f2>.</color><color=#a6e22e>Mode</color><color=#f8f8f2>.</color><color=#a6e22e>FIT_EXACT</color><color=#f8f8f2>,</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#66d9ef>default</color><color=#f8f8f2>:</color>
                <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"unknown algorithm"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>scaleProgressiveLanczos</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>radius</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dstWidth</color> <color=#f92672><</color> <color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>()</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>)</color> <color=#f92672>&&</color> <color=#f8f8f2>dstHeight</color> <color=#f92672><</color> <color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>()</color> <color=#f92672>/</color> <color=#ae81ff>2</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThumbnailnatorProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_BILINEAR</color><color=#f8f8f2>)</color>
                    <color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>LanczosFilter</color><color=#f8f8f2>(</color><color=#f8f8f2>radius</color><color=#f8f8f2>))</color>
                    <color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"ProgressiveAlgorithm["</color> <color=#f92672>+</color> <color=#f8f8f2>type</color> <color=#f92672>+</color> <color=#e6db74>']'</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>Object</color> <color=#f8f8f2>o</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#66d9ef>this</color> <color=#f92672>==</color> <color=#f8f8f2>o</color><color=#f8f8f2>)</color> <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>o</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>||</color> <color=#f8f8f2>getClass</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getClass</color><color=#f8f8f2>())</color> <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>ProgressiveAlgorithm</color> <color=#f8f8f2>that</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>)</color> <color=#f8f8f2>o</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>type</color> <color=#f92672>==</color> <color=#f8f8f2>that</color><color=#f8f8f2>.</color><color=#a6e22e>type</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>type</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>?</color> <color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>hashCode</color><color=#f8f8f2>()</color> <color=#f8f8f2>:</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>Type</color> <color=#f8f8f2>{</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Algorithms from https://github.com/mortennobel/java-image-scaling</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>NOBEL_BILINEAR</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>NOBEL_BICUBUC</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>NOBEL_NEAREST_NEIGHBOR</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>NOBEL_LANCZOS3</color><color=#f8f8f2>,</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Algorithms from https://github.com/coobird/thumbnailator</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>THUMBNAILATOR_BILINEAR</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>THUMBNAILATOR_BICUBUC</color><color=#f8f8f2>,</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Algorithms from https://github.com/thebuzzmedia/imgscalr</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>IMGSCALR_SEVENTH_STEP</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>IMGSCALR_HALF_STEP</color><color=#f8f8f2>,</color>
        <color=#75715e>/**</color>
<color=#75715e>         * Combination of bilinear with lanczos3, uses bilinear if target is at least half of src</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>PROGRESSIVE_BILINEAR_AND_LANCZOS2</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>PROGRESSIVE_BILINEAR_AND_LANCZOS3</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>MultiStepLanczos3RescaleOp</color> <color=#66d9ef>extends</color> <color=#f8f8f2>AdvancedResizeOp</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#a6e22e>MultiStepLanczos3RescaleOp</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>DimensionConstrain</color><color=#f8f8f2>.</color><color=#a6e22e>createAbsolutionDimension</color><color=#f8f8f2>(</color><color=#f8f8f2>dstWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>doFilter</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>dest</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>;</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#f8f8f2>h</color><color=#f8f8f2>;</color>

            <color=#f8f8f2>w</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>

            <color=#66d9ef>do</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>w</color> <color=#f92672>></color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>w</color> <color=#f92672>/=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>w</color> <color=#f92672><</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>w</color> <color=#f92672>=</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>w</color> <color=#f92672>=</color> <color=#f8f8f2>dstWidth</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>h</color> <color=#f92672>></color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>h</color> <color=#f92672>/=</color> <color=#ae81ff>2</color><color=#f8f8f2>;</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>h</color> <color=#f92672><</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>ResampleOp</color> <color=#f8f8f2>resizeOp</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ResampleOp</color><color=#f8f8f2>(</color><color=#f8f8f2>w</color><color=#f8f8f2>,</color> <color=#f8f8f2>h</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>resizeOp</color><color=#f8f8f2>.</color><color=#a6e22e>setFilter</color><color=#f8f8f2>(</color><color=#f8f8f2>ResampleFilters</color><color=#f8f8f2>.</color><color=#a6e22e>getLanczos3Filter</color><color=#f8f8f2>());</color>
                <color=#f8f8f2>ret</color> <color=#f92672>=</color> <color=#f8f8f2>resizeOp</color><color=#f8f8f2>.</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>ret</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>while</color> <color=#f8f8f2>(</color><color=#f8f8f2>w</color> <color=#f92672>!=</color> <color=#f8f8f2>dstWidth</color> <color=#f92672>||</color> <color=#f8f8f2>h</color> <color=#f92672>!=</color> <color=#f8f8f2>dstHeight</color><color=#f8f8f2>);</color>

            <color=#66d9ef>return</color> <color=#f8f8f2>ret</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>