<color=#75715e>/*</color>
<color=#75715e> *  Copyright 2016 Patrick Favre-Bulle</color>
<color=#75715e> *</color>
<color=#75715e> *  Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e> *  you may not use this file except in compliance with the License.</color>
<color=#75715e> *  You may obtain a copy of the License at</color>
<color=#75715e> *</color>
<color=#75715e> *      http://www.apache.org/licenses/LICENSE-2.0</color>
<color=#75715e> *</color>
<color=#75715e> * Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e> * distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e> * See the License for the specific language governing permissions and</color>
<color=#75715e> * limitations under the License.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.scaling</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.arg.Arguments</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.arg.EScalingAlgorithm</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.arg.ImageType</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.util.LoadedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.util.MiscUtil</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.util.NinePatchScaler</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.twelvemonkeys.imageio.metadata.CompoundDirectory</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.IIOImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageIO</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageWriteParam</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageWriter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.FileImageOutputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.ImageOutputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.ConvolveOp</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.Kernel</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Handles scaling and writing/compression images to disk</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ImageHandler</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>TEST_MODE</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>ConvolveOp</color> <color=#f8f8f2>OP_ANTIALIAS</color> <color=#f92672>=</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ConvolveOp</color><color=#f8f8f2>(</color>
                    <color=#66d9ef>new</color> <color=#f8f8f2>Kernel</color><color=#f8f8f2>(</color><color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#66d9ef>float</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#ae81ff>.0f</color><color=#f8f8f2>,</color> <color=#ae81ff>.08f</color><color=#f8f8f2>,</color> <color=#ae81ff>.0f</color><color=#f8f8f2>,</color> <color=#ae81ff>.08f</color><color=#f8f8f2>,</color> <color=#ae81ff>.68f</color><color=#f8f8f2>,</color> <color=#ae81ff>.08f</color><color=#f8f8f2>,</color> <color=#ae81ff>.0f</color><color=#f8f8f2>,</color> <color=#ae81ff>.08f</color><color=#f8f8f2>,</color> <color=#ae81ff>.0f</color><color=#f8f8f2>}),</color>
                    <color=#f8f8f2>ConvolveOp</color><color=#f8f8f2>.</color><color=#a6e22e>EDGE_NO_OP</color><color=#f8f8f2>,</color>
                    <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>Color</color> <color=#f8f8f2>DEFAULT_COLOR</color> <color=#f92672>=</color> <color=#f8f8f2>Color</color><color=#f8f8f2>.</color><color=#a6e22e>white</color><color=#f8f8f2>;</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>ScaleAlgorithm</color><color=#f8f8f2>,</color> <color=#f8f8f2>Long</color><color=#f92672>></color> <color=#f8f8f2>traceMap</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>ScaleAlgorithm</color><color=#f8f8f2>,</color> <color=#f8f8f2>Long</color><color=#f92672>></color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Arguments</color> <color=#f8f8f2>args</color><color=#f8f8f2>;</color>

    <color=#66d9ef>public</color> <color=#a6e22e>ImageHandler</color><color=#f8f8f2>(</color><color=#f8f8f2>Arguments</color> <color=#f8f8f2>args</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>args</color> <color=#f92672>=</color> <color=#f8f8f2>args</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color> <color=#a6e22e>saveToFile</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>File</color> <color=#f8f8f2>targetFile</color><color=#f8f8f2>,</color> <color=#f8f8f2>LoadedImage</color> <color=#f8f8f2>imageData</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color> <color=#f8f8f2>targetDimension</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>isNinePatch</color><color=#f8f8f2>)</color>
            <color=#66d9ef>throws</color> <color=#f8f8f2>Exception</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color> <color=#f8f8f2>files</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageType</color><color=#f8f8f2>.</color><color=#a6e22e>ECompression</color><color=#f92672>></color> <color=#f8f8f2>compressionList</color> <color=#f92672>=</color>
                <color=#f8f8f2>Arguments</color><color=#f8f8f2>.</color><color=#a6e22e>getOutCompressionForType</color><color=#f8f8f2>(</color>
                        <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>outputCompressionMode</color><color=#f8f8f2>,</color> <color=#f8f8f2>Arguments</color><color=#f8f8f2>.</color><color=#a6e22e>getImageType</color><color=#f8f8f2>(</color><color=#f8f8f2>imageData</color><color=#f8f8f2>.</color><color=#a6e22e>getSourceFile</color><color=#f8f8f2>()));</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>ImageType</color><color=#f8f8f2>.</color><color=#a6e22e>ECompression</color> <color=#f8f8f2>compression</color> <color=#f8f8f2>:</color> <color=#f8f8f2>compressionList</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>File</color> <color=#f8f8f2>imageFile</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>targetFile</color><color=#f8f8f2>.</color><color=#a6e22e>getAbsolutePath</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>"."</color> <color=#f92672>+</color> <color=#f8f8f2>compression</color><color=#f8f8f2>.</color><color=#a6e22e>extension</color><color=#f8f8f2>);</color>

            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>imageFile</color><color=#f8f8f2>.</color><color=#a6e22e>exists</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>skipExistingFiles</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>break</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ScaleAlgorithm</color><color=#f92672>></color> <color=#f8f8f2>algorithms</color> <color=#f92672>=</color>
                    <color=#f8f8f2>getScaleAlgorithm</color><color=#f8f8f2>(</color>
                            <color=#f8f8f2>getScalingAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>getScalingType</color><color=#f8f8f2>(</color><color=#f8f8f2>imageData</color><color=#f8f8f2>,</color> <color=#f8f8f2>targetDimension</color><color=#f8f8f2>)),</color>
                            <color=#f8f8f2>getScalingType</color><color=#f8f8f2>(</color><color=#f8f8f2>imageData</color><color=#f8f8f2>,</color> <color=#f8f8f2>targetDimension</color><color=#f8f8f2>));</color>

            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>ScaleAlgorithm</color> <color=#f8f8f2>scaleAlgorithm</color> <color=#f8f8f2>:</color> <color=#f8f8f2>algorithms</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>traceMap</color><color=#f8f8f2>.</color><color=#a6e22e>containsKey</color><color=#f8f8f2>(</color><color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>traceMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>L</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>scaledImage</color><color=#f8f8f2>;</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>isNinePatch</color> <color=#f92672>&&</color> <color=#f8f8f2>compression</color> <color=#f92672>==</color> <color=#f8f8f2>ImageType</color><color=#f8f8f2>.</color><color=#a6e22e>ECompression</color><color=#f8f8f2>.</color><color=#a6e22e>PNG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>scaledImage</color> <color=#f92672>=</color>
                            <color=#66d9ef>new</color> <color=#f8f8f2>NinePatchScaler</color><color=#f8f8f2>()</color>
                                    <color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>(</color>
                                            <color=#f8f8f2>imageData</color><color=#f8f8f2>.</color><color=#a6e22e>getImage</color><color=#f8f8f2>(),</color>
                                            <color=#f8f8f2>targetDimension</color><color=#f8f8f2>,</color>
                                            <color=#f8f8f2>getAsScalingAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>,</color> <color=#f8f8f2>compression</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>long</color> <color=#f8f8f2>startNanos</color> <color=#f92672>=</color> <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>();</color>
                    <color=#f8f8f2>scaledImage</color> <color=#f92672>=</color>
                            <color=#f8f8f2>scale</color><color=#f8f8f2>(</color>
                                    <color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>,</color>
                                    <color=#f8f8f2>imageData</color><color=#f8f8f2>.</color><color=#a6e22e>getImage</color><color=#f8f8f2>(),</color>
                                    <color=#f8f8f2>targetDimension</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>,</color>
                                    <color=#f8f8f2>targetDimension</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>,</color>
                                    <color=#f8f8f2>compression</color><color=#f8f8f2>,</color>
                                    <color=#f8f8f2>DEFAULT_COLOR</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>traceMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color>
                            <color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>,</color> <color=#f8f8f2>traceMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>)</color> <color=#f92672>+</color> <color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>nanoTime</color><color=#f8f8f2>()</color> <color=#f92672>-</color> <color=#f8f8f2>startNanos</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color>

                <color=#f8f8f2>File</color> <color=#f8f8f2>fileToSave</color> <color=#f92672>=</color> <color=#f8f8f2>imageFile</color><color=#f8f8f2>;</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>algorithms</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#ae81ff>1</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>fileToSave</color> <color=#f92672>=</color>
                            <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color>
                                    <color=#f8f8f2>imageFile</color><color=#f8f8f2>.</color><color=#a6e22e>getParentFile</color><color=#f8f8f2>(),</color>
                                    <color=#f8f8f2>MiscUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getFileNameWithoutExtension</color><color=#f8f8f2>(</color><color=#f8f8f2>imageFile</color><color=#f8f8f2>)</color>
                                            <color=#f92672>+</color> <color=#e6db74>"."</color>
                                            <color=#f92672>+</color> <color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>toString</color><color=#f8f8f2>()</color>
                                            <color=#f92672>+</color> <color=#e6db74>"."</color>
                                            <color=#f92672>+</color> <color=#f8f8f2>MiscUtil</color><color=#f8f8f2>.</color><color=#a6e22e>getFileExtension</color><color=#f8f8f2>(</color><color=#f8f8f2>imageFile</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color>

                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>compression</color> <color=#f92672>==</color> <color=#f8f8f2>ImageType</color><color=#f8f8f2>.</color><color=#a6e22e>ECompression</color><color=#f8f8f2>.</color><color=#a6e22e>JPG</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>compressJpeg</color><color=#f8f8f2>(</color><color=#f8f8f2>scaledImage</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>compressionQuality</color><color=#f8f8f2>,</color> <color=#f8f8f2>fileToSave</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>ImageIO</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>scaledImage</color><color=#f8f8f2>,</color> <color=#f8f8f2>compression</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>().</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>(),</color> <color=#f8f8f2>fileToSave</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color>
                <color=#f8f8f2>scaledImage</color><color=#f8f8f2>.</color><color=#a6e22e>flush</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>files</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>imageFile</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>files</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>compressJpeg</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>bufferedImage</color><color=#f8f8f2>,</color> <color=#f8f8f2>CompoundDirectory</color> <color=#f8f8f2>exif</color><color=#f8f8f2>,</color> <color=#66d9ef>float</color> <color=#f8f8f2>quality</color><color=#f8f8f2>,</color> <color=#f8f8f2>File</color> <color=#f8f8f2>targetFile</color><color=#f8f8f2>)</color>
            <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>bufferedImage</color><color=#f8f8f2>.</color><color=#a6e22e>hasTileWriters</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color> <color=#75715e>// Influenced by: FRACTION</color>
            <color=#f8f8f2>ImageWriter</color> <color=#f8f8f2>jpgWriter</color> <color=#f92672>=</color> <color=#f8f8f2>ImageIO</color><color=#f8f8f2>.</color><color=#a6e22e>getImageWritersByFormatName</color><color=#f8f8f2>(</color><color=#e6db74>"jpg"</color><color=#f8f8f2>).</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>ImageWriteParam</color> <color=#f8f8f2>jpgWriteParam</color> <color=#f92672>=</color> <color=#f8f8f2>jpgWriter</color><color=#f8f8f2>.</color><color=#a6e22e>getDefaultWriteParam</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>jpgWriteParam</color><color=#f8f8f2>.</color><color=#a6e22e>setCompressionMode</color><color=#f8f8f2>(</color><color=#f8f8f2>ImageWriteParam</color><color=#f8f8f2>.</color><color=#a6e22e>MODE_EXPLICIT</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>jpgWriteParam</color><color=#f8f8f2>.</color><color=#a6e22e>setCompressionQuality</color><color=#f8f8f2>(</color><color=#f8f8f2>quality</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>ImageWriter</color> <color=#f8f8f2>writer</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
            <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>ImageOutputStream</color> <color=#f8f8f2>outputStream</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FileImageOutputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>targetFile</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>writer</color> <color=#f92672>=</color> <color=#f8f8f2>ImageIO</color><color=#f8f8f2>.</color><color=#a6e22e>getImageWritersByFormatName</color><color=#f8f8f2>(</color><color=#e6db74>"jpg"</color><color=#f8f8f2>).</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
                <color=#f8f8f2>writer</color><color=#f8f8f2>.</color><color=#a6e22e>setOutput</color><color=#f8f8f2>(</color><color=#f8f8f2>outputStream</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>writer</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>new</color> <color=#f8f8f2>IIOImage</color><color=#f8f8f2>(</color><color=#f8f8f2>bufferedImage</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>),</color> <color=#f8f8f2>jpgWriteParam</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>outputStream</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>finally</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>writer</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>writer</color><color=#f8f8f2>.</color><color=#a6e22e>dispose</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>EScalingAlgorithm</color> <color=#a6e22e>getScalingAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color> <color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>type</color> <color=#f92672>==</color> <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color>
                <color=#f92672>?</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>upScalingAlgorithm</color>
                <color=#f8f8f2>:</color> <color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>downScalingAlgorithm</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color> <color=#a6e22e>getScalingType</color><color=#f8f8f2>(</color><color=#f8f8f2>LoadedImage</color> <color=#f8f8f2>imageData</color><color=#f8f8f2>,</color> <color=#f8f8f2>Dimension</color> <color=#f8f8f2>targetDimension</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>targetSize</color> <color=#f92672>=</color> <color=#f8f8f2>targetDimension</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>*</color> <color=#f8f8f2>targetDimension</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>long</color> <color=#f8f8f2>sourceSize</color> <color=#f92672>=</color> <color=#f8f8f2>imageData</color><color=#f8f8f2>.</color><color=#a6e22e>getImage</color><color=#f8f8f2>().</color><color=#a6e22e>getHeight</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>imageData</color><color=#f8f8f2>.</color><color=#a6e22e>getImage</color><color=#f8f8f2>().</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>targetSize</color> <color=#f92672>>=</color> <color=#f8f8f2>sourceSize</color>
                <color=#f92672>?</color> <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color>
                <color=#f8f8f2>:</color> <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ScaleAlgorithm</color><color=#f92672>></color> <color=#a6e22e>getScaleAlgorithm</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>EScalingAlgorithm</color> <color=#f8f8f2>algorithm</color><color=#f8f8f2>,</color> <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color> <color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>TEST_MODE</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ScaleAlgorithm</color><color=#f92672>></color> <color=#f8f8f2>algos</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>ScaleAlgorithm</color><color=#f92672>></color><color=#f8f8f2>();</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>EScalingAlgorithm</color> <color=#f8f8f2>eScalingAlgorithm</color> <color=#f8f8f2>:</color> <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>getAllEnabled</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>getSupportedForType</color><color=#f8f8f2>().</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>algos</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>getImplementation</color><color=#f8f8f2>());</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>algos</color><color=#f8f8f2>;</color>
            <color=#75715e>//      return EScalingAlgorithm.getAllEnabled().stream()</color>
            <color=#75715e>//          .filter(eScalingAlgorithm -></color>
            <color=#75715e>// eScalingAlgorithm.getSupportedForType().contains(type))</color>
            <color=#75715e>//          .map(EScalingAlgorithm::getImplementation)</color>
            <color=#75715e>//          .collect(Collectors.toList());</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>singletonList</color><color=#f8f8f2>(</color><color=#f8f8f2>algorithm</color><color=#f8f8f2>.</color><color=#a6e22e>getImplementation</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>scale</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>ScaleAlgorithm</color> <color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>ImageType</color><color=#f8f8f2>.</color><color=#a6e22e>ECompression</color> <color=#f8f8f2>compression</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Color</color> <color=#f8f8f2>background</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>scaledImage</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>dWidth</color> <color=#f92672>==</color> <color=#f8f8f2>imageToScale</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>()</color> <color=#f92672>&&</color> <color=#f8f8f2>dHeight</color> <color=#f92672>==</color> <color=#f8f8f2>imageToScale</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>scaledImage</color> <color=#f92672>=</color> <color=#f8f8f2>imageToScale</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>scaledImage</color> <color=#f92672>=</color> <color=#f8f8f2>scaleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>imageToScale</color><color=#f8f8f2>,</color> <color=#f8f8f2>dWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>dHeight</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>compression</color><color=#f8f8f2>.</color><color=#a6e22e>hasTransparency</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>convertedImg</color> <color=#f92672>=</color>
                    <color=#66d9ef>new</color> <color=#f8f8f2>BufferedImage</color><color=#f8f8f2>(</color>
                            <color=#f8f8f2>scaledImage</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(),</color> <color=#f8f8f2>scaledImage</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>(),</color> <color=#f8f8f2>BufferedImage</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_INT_RGB</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>convertedImg</color><color=#f8f8f2>.</color><color=#a6e22e>getGraphics</color><color=#f8f8f2>().</color><color=#a6e22e>drawImage</color><color=#f8f8f2>(</color><color=#f8f8f2>scaledImage</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>background</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>scaledImage</color> <color=#f92672>=</color> <color=#f8f8f2>convertedImg</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>args</color><color=#f8f8f2>.</color><color=#a6e22e>enableAntiAliasing</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>scaledImage</color> <color=#f92672>=</color> <color=#f8f8f2>OP_ANTIALIAS</color><color=#f8f8f2>.</color><color=#a6e22e>filter</color><color=#f8f8f2>(</color><color=#f8f8f2>scaledImage</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>scaledImage</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>private</color> <color=#f8f8f2>ScaleAlgorithm</color> <color=#a6e22e>getAsScalingAlgorithm</color><color=#f8f8f2>(</color>
            <color=#66d9ef>final</color> <color=#f8f8f2>ScaleAlgorithm</color> <color=#f8f8f2>algorithm</color><color=#f8f8f2>,</color> <color=#f8f8f2>ImageType</color><color=#f8f8f2>.</color><color=#a6e22e>ECompression</color> <color=#f8f8f2>compression</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>(</color><color=#e6db74>"Java 1.6"</color><color=#f8f8f2>);</color>
        <color=#75715e>//    return (imageToScale, dWidth, dHeight) -></color>
        <color=#75715e>//        ImageHandler.this.scale(</color>
        <color=#75715e>//            algorithm, imageToScale, dWidth, dHeight, compression, DEFAULT_COLOR);</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>