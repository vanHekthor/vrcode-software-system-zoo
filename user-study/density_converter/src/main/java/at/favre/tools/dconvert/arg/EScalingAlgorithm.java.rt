<color=#75715e>/*</color>
<color=#75715e> *  Copyright 2016 Patrick Favre-Bulle</color>
<color=#75715e> *</color>
<color=#75715e> *  Licensed under the Apache License, Version 2.0 (the "License");</color>
<color=#75715e> *  you may not use this file except in compliance with the License.</color>
<color=#75715e> *  You may obtain a copy of the License at</color>
<color=#75715e> *</color>
<color=#75715e> *      http://www.apache.org/licenses/LICENSE-2.0</color>
<color=#75715e> *</color>
<color=#75715e> * Unless required by applicable law or agreed to in writing, software</color>
<color=#75715e> * distributed under the License is distributed on an "AS IS" BASIS,</color>
<color=#75715e> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</color>
<color=#75715e> * See the License for the specific language governing permissions and</color>
<color=#75715e> * limitations under the License.</color>
<color=#75715e> */</color>

<color=#f92672>package</color> <color=#f8f8f2>at.favre.tools.dconvert.arg</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.scaling.NaiveGraphics2dAlgorithm</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.scaling.ProgressiveAlgorithm</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.scaling.ResampleAlgorithm</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>at.favre.tools.dconvert.converters.scaling.ScaleAlgorithm</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>com.mortennobel.imagescaling.ResampleFilters</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Supported scaling algorithms in dconvert</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>EScalingAlgorithm</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>LANCZOS1</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>LanczosFilter</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>)),</color>
            <color=#e6db74>"lanczos1"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>LANCZOS2</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>LanczosFilter</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>)),</color>
            <color=#e6db74>"lanczos2"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>LANCZOS3</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>LanczosFilter</color><color=#f8f8f2>(</color><color=#ae81ff>3</color><color=#f8f8f2>)),</color>
            <color=#e6db74>"lanczos3"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>LANCZOS4</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>LanczosFilter</color><color=#f8f8f2>(</color><color=#ae81ff>4</color><color=#f8f8f2>)),</color>
            <color=#e6db74>"lanczos4"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>LANCZOS5</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>LanczosFilter</color><color=#f8f8f2>(</color><color=#ae81ff>5</color><color=#f8f8f2>)),</color>
            <color=#e6db74>"lanczos5"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>MITCHELL</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ResampleFilters</color><color=#f8f8f2>.</color><color=#a6e22e>getMitchellFilter</color><color=#f8f8f2>()),</color>
            <color=#e6db74>"mitchell"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BSPLINE</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ResampleFilters</color><color=#f8f8f2>.</color><color=#a6e22e>getBSplineFilter</color><color=#f8f8f2>()),</color>
            <color=#e6db74>"bspline"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>HERMITE</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ResampleAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ResampleFilters</color><color=#f8f8f2>.</color><color=#a6e22e>getHermiteFilter</color><color=#f8f8f2>()),</color>
            <color=#e6db74>"hermite"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>NEAREST_NEIGHBOR</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>NaiveGraphics2dAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_NEAREST_NEIGHBOR</color><color=#f8f8f2>),</color>
            <color=#e6db74>"nearestNeighbor"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BILINEAR_PROGRESSIVE</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>NOBEL_BILINEAR</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bilinearProgressive"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BICUBIC_PROGRESSIVE</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>NOBEL_BICUBUC</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bicubicProgressive"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>NEAREST_NEIGHBOR_PROGRESSIVE</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>NOBEL_NEAREST_NEIGHBOR</color><color=#f8f8f2>),</color>
            <color=#e6db74>"nearestNeighborProgressive"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BILINEAR_PROGRESSIVE2</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>THUMBNAILATOR_BILINEAR</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bilinearProgressive2"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BICUBIC_PROGRESSIVE_SMOOTH</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>IMGSCALR_SEVENTH_STEP</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bicubicProgressiveSmooth"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BILINEAR_LANCZOS2</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>PROGRESSIVE_BILINEAR_AND_LANCZOS3</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bilinearLanczos2"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BILINEAR_LANCZOS3</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>ProgressiveAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>Type</color><color=#f8f8f2>.</color><color=#a6e22e>PROGRESSIVE_BILINEAR_AND_LANCZOS3</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bilinearLanczos3"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>DOWNSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>false</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BICUBIC</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>NaiveGraphics2dAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_BICUBIC</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bicubic"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>BILINEAR</color><color=#f8f8f2>(</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>NaiveGraphics2dAlgorithm</color><color=#f8f8f2>(</color><color=#f8f8f2>RenderingHints</color><color=#f8f8f2>.</color><color=#a6e22e>VALUE_INTERPOLATION_BILINEAR</color><color=#f8f8f2>),</color>
            <color=#e6db74>"bilinear"</color><color=#f8f8f2>,</color>
            <color=#66d9ef>new</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#f8f8f2>Type</color><color=#f8f8f2>.</color><color=#a6e22e>UPSCALING</color><color=#f8f8f2>},</color>
            <color=#66d9ef>true</color><color=#f8f8f2>);</color>

    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ScaleAlgorithm</color> <color=#f8f8f2>algorithm</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>cliName</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Type</color><color=#f92672>></color> <color=#f8f8f2>supportedForType</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>enabled</color><color=#f8f8f2>;</color>

    <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>ScaleAlgorithm</color> <color=#f8f8f2>algorithm</color><color=#f8f8f2>,</color> <color=#f8f8f2>String</color> <color=#f8f8f2>cliName</color><color=#f8f8f2>,</color> <color=#f8f8f2>Type</color><color=#f92672>[]</color> <color=#f8f8f2>supportedForType</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>enabled</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>algorithm</color> <color=#f92672>=</color> <color=#f8f8f2>algorithm</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>cliName</color> <color=#f92672>=</color> <color=#f8f8f2>cliName</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>supportedForType</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>unmodifiableList</color><color=#f8f8f2>(</color><color=#f8f8f2>Arrays</color><color=#f8f8f2>.</color><color=#a6e22e>asList</color><color=#f8f8f2>(</color><color=#f8f8f2>supportedForType</color><color=#f8f8f2>));</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>enabled</color> <color=#f92672>=</color> <color=#f8f8f2>enabled</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>EScalingAlgorithm</color> <color=#a6e22e>getByName</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>name</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>EScalingAlgorithm</color> <color=#f8f8f2>eScalingAlgorithm</color> <color=#f8f8f2>:</color> <color=#f8f8f2>getAllEnabled</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>getName</color><color=#f8f8f2>().</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>name</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>EScalingAlgorithm</color><color=#f92672>></color> <color=#a6e22e>getForType</color><color=#f8f8f2>(</color><color=#f8f8f2>Type</color> <color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>EScalingAlgorithm</color><color=#f92672>></color> <color=#f8f8f2>algos</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>EScalingAlgorithm</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>EScalingAlgorithm</color> <color=#f8f8f2>eScalingAlgorithm</color> <color=#f8f8f2>:</color> <color=#f8f8f2>getAllEnabled</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>getSupportedForType</color><color=#f8f8f2>().</color><color=#a6e22e>contains</color><color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>algos</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>algos</color><color=#f8f8f2>;</color>
        <color=#75715e>//    return getAllEnabled().stream()</color>
        <color=#75715e>//        .filter(eScalingAlgorithm -> eScalingAlgorithm.getSupportedForType().contains(type))</color>
        <color=#75715e>//        .collect(Collectors.toSet());</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>String</color> <color=#a6e22e>getCliArgString</color><color=#f8f8f2>(</color><color=#f8f8f2>Type</color> <color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedOperationException</color><color=#f8f8f2>(</color><color=#e6db74>"Java 1.6"</color><color=#f8f8f2>);</color>
        <color=#75715e>//    StringBuilder sb = new StringBuilder();</color>
        <color=#75715e>////    getAllEnabled().stream()</color>
        <color=#75715e>////        .filter(eScalingAlgorithm -> eScalingAlgorithm.getSupportedForType().contains(type))</color>
        <color=#75715e>////        .forEach(</color>
        <color=#75715e>////            eScalingAlgorithm -> {</color>
        <color=#75715e>////              sb.append(eScalingAlgorithm.getName()).append("|");</color>
        <color=#75715e>////            });</color>
        <color=#75715e>//    String argList = sb.toString();</color>
        <color=#75715e>//    return argList.substring(0, argList.length() - 1);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>EScalingAlgorithm</color><color=#f92672>></color> <color=#a6e22e>getAllEnabled</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Set</color><color=#f92672><</color><color=#f8f8f2>EScalingAlgorithm</color><color=#f92672>></color> <color=#f8f8f2>set</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>HashSet</color><color=#f92672><</color><color=#f8f8f2>EScalingAlgorithm</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>EScalingAlgorithm</color> <color=#f8f8f2>eScalingAlgorithm</color> <color=#f8f8f2>:</color> <color=#f8f8f2>EScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>.</color><color=#a6e22e>isEnabled</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>set</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#f8f8f2>eScalingAlgorithm</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>set</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>ScaleAlgorithm</color> <color=#a6e22e>getImplementation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>algorithm</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>cliName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>Type</color><color=#f92672>></color> <color=#a6e22e>getSupportedForType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>supportedForType</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isEnabled</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>enabled</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>Type</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>UPSCALING</color><color=#f8f8f2>,</color>
        <color=#f8f8f2>DOWNSCALING</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>