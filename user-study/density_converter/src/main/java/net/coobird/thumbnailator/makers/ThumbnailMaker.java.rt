<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.makers</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.builders.BufferedImageBuilder</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.DefaultResizerFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.FixedResizerFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.Resizer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.ResizerFactory</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.HashMap</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Map</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An abstract class which provides support functionalities for</color>
<color=#75715e> * {@link ThumbnailMaker} implementations.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>ThumbnailMaker</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * String used for an exception message.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>NOT_READY_FOR_MAKE</color> <color=#f92672>=</color> <color=#e6db74>"Maker not ready to "</color> <color=#f92672>+</color>
            <color=#e6db74>"make thumbnail."</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Used when determining whether the "imageType" parameter has been set</color>
<color=#75715e>     * already or not.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_IMAGE_TYPE</color> <color=#f92672>=</color> <color=#e6db74>"imageType"</color><color=#f8f8f2>;</color>


    <color=#75715e>/**</color>
<color=#75715e>     * Used when determining whether the "resizer" parameter has been set</color>
<color=#75715e>     * already or not.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_RESIZER</color> <color=#f92672>=</color> <color=#e6db74>"resizer"</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Used when determining whether the "resizerFactory" parameter has been set</color>
<color=#75715e>     * already or not.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_RESIZERFACTORY</color> <color=#f92672>=</color> <color=#e6db74>"resizerFactory"</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Class which keeps track of the parameters being set for the</color>
<color=#75715e>     * {@link ThumbnailMaker}.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * This class provides functionality to determine whether or not all the</color>
<color=#75715e>     * required parameters have been set or not.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @author coobird</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#66d9ef>static</color> <color=#66d9ef>class</color> <color=#a6e22e>ReadinessTracker</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Map</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Boolean</color><color=#f92672>></color> <color=#f8f8f2>alreadySetMap</color> <color=#f92672>=</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>HashMap</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Boolean</color><color=#f92672>></color><color=#f8f8f2>();</color>

        <color=#75715e>/**</color>
<color=#75715e>         * Returns whether or not the {@link ThumbnailMaker} has all its</color>
<color=#75715e>         * required parameter set to be able to make a thumbnail.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @return            {@code true} if the {@link ThumbnailMaker} is ready</color>
<color=#75715e>         * to make thumbnails, {@code false} otherwise.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>protected</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isReady</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>Map</color><color=#f8f8f2>.</color><color=#a6e22e>Entry</color><color=#f92672><</color><color=#f8f8f2>String</color><color=#f8f8f2>,</color> <color=#f8f8f2>Boolean</color><color=#f92672>></color> <color=#f8f8f2>entry</color> <color=#f8f8f2>:</color> <color=#f8f8f2>alreadySetMap</color><color=#f8f8f2>.</color><color=#a6e22e>entrySet</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>entry</color><color=#f8f8f2>.</color><color=#a6e22e>getValue</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>return</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
            <color=#66d9ef>return</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/**</color>
<color=#75715e>         * Tells the {@link ReadinessTracker} that the given parameter has not</color>
<color=#75715e>         * yet been set by the {@link ThumbnailMaker}.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @param parameterName The parameter which has not been set.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>parameterName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>alreadySetMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>parameterName</color><color=#f8f8f2>,</color> <color=#66d9ef>false</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/**</color>
<color=#75715e>         * Tells the {@link ReadinessTracker} that the given parameter has been</color>
<color=#75715e>         * set by the {@link ThumbnailMaker}.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @param parameterName The parameter to be marked as being set.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>protected</color> <color=#66d9ef>void</color> <color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>parameterName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>alreadySetMap</color><color=#f8f8f2>.</color><color=#a6e22e>put</color><color=#f8f8f2>(</color><color=#f8f8f2>parameterName</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/**</color>
<color=#75715e>         * Returns whether the specified parameter has already been set.</color>
<color=#75715e>         *</color>
<color=#75715e>         * @param parameterName The parameter to check whether it has been</color>
<color=#75715e>         *                      already set or not</color>
<color=#75715e>         * @return                    {@code true} if the parameter has been set,</color>
<color=#75715e>         * {@code false} otherwise.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>protected</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isSet</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>parameterName</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>alreadySetMap</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>parameterName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Object used to keep track whether the required parameters for creating</color>
<color=#75715e>     * a thumbnail has been set.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>final</color> <color=#f8f8f2>ReadinessTracker</color> <color=#f8f8f2>ready</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Default image type of the thumbnails created by {@link ThumbnailMaker}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>DEFAULT_IMAGE_TYPE</color> <color=#f92672>=</color> <color=#f8f8f2>BufferedImage</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_INT_ARGB</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The image type of the resulting thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The {@link ResizerFactory} which is used to obtain a {@link Resizer}</color>
<color=#75715e>     * for the resizing operation.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * By delaying the decision of picking the {@link Resizer} to use until</color>
<color=#75715e>     * when the thumbnail is to be created could lead to a more suitable</color>
<color=#75715e>     * {@link Resizer} being picked, as the dimensions for the source and</color>
<color=#75715e>     * destination images are known at that time.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates and initializes an instance of {@link ThumbnailMaker}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThumbnailMaker</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>ready</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ReadinessTracker</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_IMAGE_TYPE</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZER</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZERFACTORY</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>defaultImageType</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>defaultResizerFactory</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Makes a thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param img The source image.</color>
<color=#75715e>     * @return The thumbnail created from the source image, using the</color>
<color=#75715e>     * parameters set by the {@link ThumbnailMaker}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>);</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Makes a thumbnail of the specified dimensions, from the specified</color>
<color=#75715e>     * source image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param img    The source image.</color>
<color=#75715e>     * @param width  The target width of the thumbnail.</color>
<color=#75715e>     * @param height The target height of the thumbnail.</color>
<color=#75715e>     * @throws IllegalStateException    If the {@code ThumbnailMaker} is</color>
<color=#75715e>     *                                  not ready to create thumbnails.</color>
<color=#75715e>     * @throws IllegalArgumentException If the width and/or height is less</color>
<color=#75715e>     *                                  than or equal to zero.</color>
<color=#75715e>     * @return The thumbnail image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>makeThumbnail</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>height</color>
    <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>isReady</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#f8f8f2>ThumbnailMaker</color><color=#f8f8f2>.</color><color=#a6e22e>NOT_READY_FOR_MAKE</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Width must be greater than zero."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>height</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Height must be greater than zero."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>thumbnailImage</color> <color=#f92672>=</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>BufferedImageBuilder</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>).</color><color=#a6e22e>build</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>Dimension</color> <color=#f8f8f2>imgSize</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Dimension</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(),</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>Dimension</color> <color=#f8f8f2>thumbnailSize</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Dimension</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>Resizer</color> <color=#f8f8f2>resizer</color> <color=#f92672>=</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getResizer</color><color=#f8f8f2>(</color><color=#f8f8f2>imgSize</color><color=#f8f8f2>,</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>resizer</color><color=#f8f8f2>.</color><color=#a6e22e>resize</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>,</color> <color=#f8f8f2>thumbnailImage</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>thumbnailImage</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the type for the {@link BufferedImage} to produce.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param imageType The type of the {@code BufferedImage}.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#a6e22e>imageType</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>imageType</color> <color=#f92672>=</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_IMAGE_TYPE</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the type of the {@link BufferedImage} to be the default type.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#a6e22e>defaultImageType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>(</color><color=#f8f8f2>DEFAULT_IMAGE_TYPE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the {@link Resizer} which is used for the resizing operation.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param resizer The {@link Resizer} to use when resizing the image</color>
<color=#75715e>     *                to create the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#a6e22e>resizer</color><color=#f8f8f2>(</color><color=#f8f8f2>Resizer</color> <color=#f8f8f2>resizer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>resizerFactory</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FixedResizerFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>resizer</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZER</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZERFACTORY</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the {@link Resizer} to use the default {@link Resizer}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#a6e22e>defaultResizer</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>defaultResizerFactory</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the {@link ResizerFactory} which is used to obtain a {@link Resizer}</color>
<color=#75715e>     * for the resizing operation.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param resizerFactory The {@link ResizerFactory} to obtain the</color>
<color=#75715e>     *                       {@link Resizer} used when resizing the image</color>
<color=#75715e>     *                       to create the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.4.0</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#a6e22e>resizerFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>resizerFactory</color> <color=#f92672>=</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZER</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZERFACTORY</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the {@link ResizerFactory} to use {@link DefaultResizerFactory}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.4.0</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#a6e22e>defaultResizerFactory</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>resizerFactory</color> <color=#f92672>=</color> <color=#f8f8f2>DefaultResizerFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZER</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_RESIZERFACTORY</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>