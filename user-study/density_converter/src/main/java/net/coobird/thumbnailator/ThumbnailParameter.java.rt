<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.filters.ImageFilter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.geometry.Region</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.FixedResizerFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.Resizer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.ResizerFactory</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.ArrayList</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * This class is used to specify the parameters to use when creating a thumbnail.</color>
<color=#75715e> * <p></color>
<color=#75715e> * An instance of {@link ThumbnailParameter} is mutable -- it should not be</color>
<color=#75715e> * reused for multiple resizes, as the parameters can change behind the scenes</color>
<color=#75715e> * as the resizing process progresses.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>ThumbnailParameter</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * A constant used to denote that the output format of the thumbnail should</color>
<color=#75715e>     * be the same as the format of the original image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>ORIGINAL_FORMAT</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A constant used to denote that the output format of the thumbnail should</color>
<color=#75715e>     * be the determined from available information such as the file name of</color>
<color=#75715e>     * the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If a suitable output format cannot be determined, then the implementation</color>
<color=#75715e>     * should behave as if {@link #ORIGINAL_FORMAT} was specified.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>DETERMINE_FORMAT</color> <color=#f92672>=</color> <color=#e6db74>"\0"</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A constant used to denote that the output format type of the thumbnail</color>
<color=#75715e>     * should be the default type of the codec being used.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>DEFAULT_FORMAT_TYPE</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A constant used to denote that the default compression quality settings</color>
<color=#75715e>     * should be used when creating the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>DEFAULT_QUALITY</color> <color=#f92672>=</color> <color=#f8f8f2>Float</color><color=#f8f8f2>.</color><color=#a6e22e>NaN</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A constant used to denote that the image type of the original image</color>
<color=#75715e>     * should be used when creating the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>ORIGINAL_IMAGE_TYPE</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A constant used to denote that the default image type should be used</color>
<color=#75715e>     * when creating the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>DEFAULT_IMAGE_TYPE</color> <color=#f92672>=</color> <color=#f8f8f2>BufferedImage</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_INT_ARGB</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The thumbnail size.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If this field is set, then the {@link #scalingFactor} field will be set</color>
<color=#75715e>     * as {@link Double#NaN} to indicate that it is not set.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Dimension</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The scaling factor to apply to the width when creating a thumbnail from</color>
<color=#75715e>     * the original image.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If this field is set, then the {@link #thumbnailSize} field will be set</color>
<color=#75715e>     * as {@code null} to indicate that it is not set.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The scaling factor to apply to the height when creating a thumbnail from</color>
<color=#75715e>     * the original image.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If this field is set, then the {@link #thumbnailSize} field will be set</color>
<color=#75715e>     * as {@code null} to indicate that it is not set.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Indicated whether or not the thumbnail should retain the aspect ratio</color>
<color=#75715e>     * the same as the original image when the aspect ratio of the desired</color>
<color=#75715e>     * dimensions for the thumbnail does not match the ratio of the original</color>
<color=#75715e>     * image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The output format for the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * A value of {@link ThumbnailParameter#ORIGINAL_FORMAT} indicates that the</color>
<color=#75715e>     * image format of the original image should be used as the output format.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * A value of {@link ThumbnailParameter#DETERMINE_FORMAT} indicates that the</color>
<color=#75715e>     * output format of the thumbnail should be the determined from the</color>
<color=#75715e>     * information available, such as the output file name of the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The output format type for the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * A value of {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE} indicates</color>
<color=#75715e>     * that the default type of the specified compression format should be used</color>
<color=#75715e>     * as the output format type.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The output quality settings which will be used by the image compressor.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * An acceptable value is in the range of {@code 0.0f} to {@code 1.0f},</color>
<color=#75715e>     * where {@code 0.0f} is for the lowest quality setting and {@code 1.0f} for</color>
<color=#75715e>     * the highest quality setting.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * A value of {@link Float#NaN} indicates that the default quality settings</color>
<color=#75715e>     * of the output codec should be used.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The image type of the {@code BufferedImage} used for the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * {@link ImageFilter}s to apply to the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * The filters will be applied after the original image has been resized.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The {@link ResizerFactory} for obtaining a {@link Resizer} that is</color>
<color=#75715e>     * to be used when performing an image resizing operation.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The region of the source image to use when creating a thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * A value of {@code null} represents that the entire source image should</color>
<color=#75715e>     * be used to create the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Whether or not to fit the thumbnail within the specified dimensions.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If {@code true} is specified, then the thumbnail will be sized to fit</color>
<color=#75715e>     * within the specified dimensions, if the thumbnail is going to exceed</color>
<color=#75715e>     * those dimensions.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Whether or not to use the Exif orientation metadata to orient the</color>
<color=#75715e>     * thumbnails.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>useExifOrientation</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Private constructor which sets all the required fields, and performs</color>
<color=#75715e>     * validation of the given arguments.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * This constructor is to be called from all the public constructors.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param thumbnailSize       The size of the thumbnail to generate.</color>
<color=#75715e>     * @param widthScalingFactor  The scaling factor to apply to the width</color>
<color=#75715e>     *                            when creating a	thumbnail from the original</color>
<color=#75715e>     *                            image.</color>
<color=#75715e>     * @param heightScalingFactor The scaling factor to apply to the height</color>
<color=#75715e>     *                            when creating a	thumbnail from the original</color>
<color=#75715e>     *                            image.</color>
<color=#75715e>     * @param sourceRegion        The region of the source image to use when</color>
<color=#75715e>     *                            creating a thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} indicates that the</color>
<color=#75715e>     *                            entire source image should be used to create</color>
<color=#75715e>     *                            the thumbnail.</color>
<color=#75715e>     * @param keepAspectRatio     Indicates whether or not the thumbnail should</color>
<color=#75715e>     *                            maintain the aspect ratio of the original image.</color>
<color=#75715e>     * @param outputFormat        A string indicating the compression format</color>
<color=#75715e>     *                            that should be applied on the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#ORIGINAL_FORMAT}</color>
<color=#75715e>     *                            should be provided if the same image format as</color>
<color=#75715e>     *                            the original should	be used for the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DETERMINE_FORMAT}</color>
<color=#75715e>     *                            should be provided if the output format of the</color>
<color=#75715e>     *                            thumbnail should be the determined from the</color>
<color=#75715e>     *                            information available, such as the output file</color>
<color=#75715e>     *                            name of the thumbnail.</color>
<color=#75715e>     * @param outputFormatType    A string indicating the compression type that</color>
<color=#75715e>     *                            should be used when writing the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}</color>
<color=#75715e>     *                            should be provided if the thumbnail should be</color>
<color=#75715e>     *                            written using the default compression type of</color>
<color=#75715e>     *                            the codec specified in {@code outputFormat}.</color>
<color=#75715e>     * @param outputQuality       A value from {@code 0.0f} to {@code 1.0f} which</color>
<color=#75715e>     *                            indicates the quality setting to use for the</color>
<color=#75715e>     *                            compression of the thumbnail. {@code 0.0f}</color>
<color=#75715e>     *                            indicates the lowest quality, {@code 1.0f}</color>
<color=#75715e>     *                            indicates the highest quality setting for the</color>
<color=#75715e>     *                            compression.</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_QUALITY}</color>
<color=#75715e>     *                            should be specified when the codec's default</color>
<color=#75715e>     *                            compression quality settings should be used.</color>
<color=#75715e>     * @param imageType           The {@link BufferedImage} image type of the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_IMAGE_TYPE}</color>
<color=#75715e>     *                            should be specified when the default image</color>
<color=#75715e>     *                            type should be used when creating the thumbnail.</color>
<color=#75715e>     * @param filters             The {@link ImageFilter}s to apply to the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} will be recognized as</color>
<color=#75715e>     *                            no filters are to be applied.</color>
<color=#75715e>     *                            The filters are applied after the original</color>
<color=#75715e>     *                            image has been resized.</color>
<color=#75715e>     * @param resizerFactory      The {@link ResizerFactory} for obtaining a</color>
<color=#75715e>     *                            {@link Resizer} that is to be used when</color>
<color=#75715e>     *                            performing an image resizing operation.</color>
<color=#75715e>     * @param fitWithinDimensions Whether or not to fit the thumbnail within</color>
<color=#75715e>     *                            the specified dimensions.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            thumbnail will be sized to fit within the</color>
<color=#75715e>     *                            specified dimensions, if the thumbnail is</color>
<color=#75715e>     *                            going to exceed those dimensions.</color>
<color=#75715e>     * @param useExifOrientation  Whether or not to use the Exif metadata to</color>
<color=#75715e>     *                            determine the orientation of the thumbnail.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            Exif metadata will be used to determine</color>
<color=#75715e>     *                            the orientation of the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If the scaling factor is not a</color>
<color=#75715e>     *                                  rational number or is less than or</color>
<color=#75715e>     *                                  equal to 0, or if the</color>
<color=#75715e>     *                                  {@link ResizerFactory} is null.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#a6e22e>ThumbnailParameter</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>Dimension</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>,</color>
            <color=#66d9ef>double</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>,</color>
            <color=#66d9ef>double</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>useExifOrientation</color>
    <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#75715e>// The following 2 fields are set by the public constructors.</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>thumbnailSize</color> <color=#f92672>=</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>widthScalingFactor</color> <color=#f92672>=</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>heightScalingFactor</color> <color=#f92672>=</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>;</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>keepAspectRatio</color> <color=#f92672>=</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>;</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sourceRegion</color> <color=#f92672>=</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>outputFormat</color> <color=#f92672>=</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>outputFormatType</color> <color=#f92672>=</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>;</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Note:</color>
<color=#75715e>         * The value of DEFAULT_QUALITY is Float.NaN which cannot be compared</color>
<color=#75715e>         * by using the regular == operator. Therefore, to check that NaN is</color>
<color=#75715e>         * being used, one must use the Float.NaN method.</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>((</color><color=#f8f8f2>outputQuality</color> <color=#f92672><</color> <color=#ae81ff>0.0f</color> <color=#f92672>||</color> <color=#f8f8f2>outputQuality</color> <color=#f92672>></color> <color=#ae81ff>1.0f</color><color=#f8f8f2>)</color> <color=#f92672>&&</color>
                <color=#f92672>!</color><color=#f8f8f2>Float</color><color=#f8f8f2>.</color><color=#a6e22e>isNaN</color><color=#f8f8f2>(</color><color=#f8f8f2>outputQuality</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"The output quality must be "</color> <color=#f92672>+</color>
                    <color=#e6db74>"between 0.0f and 1.0f, or Float.NaN to use the default "</color> <color=#f92672>+</color>
                    <color=#e6db74>"compression quality of codec being used."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>outputQuality</color> <color=#f92672>=</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>imageType</color> <color=#f92672>=</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>;</color>

        <color=#75715e>// Creating a new ArrayList, as `filters` should be mutable as of 0.4.3.</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>filters</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>filters</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>filters</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>ArrayList</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color><color=#f8f8f2>(</color><color=#f8f8f2>filters</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>resizerFactory</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Resizer cannot be null"</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>resizerFactory</color> <color=#f92672>=</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fitWithinDimensions</color> <color=#f92672>=</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>useExifOrientation</color> <color=#f92672>=</color> <color=#f8f8f2>useExifOrientation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Perform validations on the {@code thumbnailSize} field.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>validateThumbnailSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thumbnailSize</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Thumbnail size cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672><</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Thumbnail dimensions must be greater than 0."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Perform validations on the {@code scalingFactor} field.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>void</color> <color=#a6e22e>validateScalingFactor</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>widthScalingFactor</color> <color=#f92672><=</color> <color=#ae81ff>0.0</color> <color=#f92672>||</color> <color=#f8f8f2>heightScalingFactor</color> <color=#f92672><=</color> <color=#ae81ff>0.0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Scaling factor is less than or equal to 0."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isNaN</color><color=#f8f8f2>(</color><color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isInfinite</color><color=#f8f8f2>(</color><color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Scaling factor must be a rational number."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isNaN</color><color=#f8f8f2>(</color><color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isInfinite</color><color=#f8f8f2>(</color><color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Scaling factor must be a rational number."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an object holding the parameters needed in order to make a</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param thumbnailSize       The size of the thumbnail to generate.</color>
<color=#75715e>     * @param sourceRegion        The region of the source image to use when</color>
<color=#75715e>     *                            creating a thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} indicates that the</color>
<color=#75715e>     *                            entire source image should be used to create</color>
<color=#75715e>     *                            the thumbnail.</color>
<color=#75715e>     * @param keepAspectRatio     Indicates whether or not the thumbnail should</color>
<color=#75715e>     *                            maintain the aspect ratio of the original image.</color>
<color=#75715e>     * @param outputFormat        A string indicating the compression format</color>
<color=#75715e>     *                            that should be applied on the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#ORIGINAL_FORMAT}</color>
<color=#75715e>     *                            should be provided if the same image format as</color>
<color=#75715e>     *                            the original should	be used for the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DETERMINE_FORMAT}</color>
<color=#75715e>     *                            should be provided if the output format of the</color>
<color=#75715e>     *                            thumbnail should be the determined from the</color>
<color=#75715e>     *                            information available, such as the output file</color>
<color=#75715e>     *                            name of the thumbnail.</color>
<color=#75715e>     * @param outputFormatType    A string indicating the compression type that</color>
<color=#75715e>     *                            should be used when writing the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}</color>
<color=#75715e>     *                            should be provided if the thumbnail should be</color>
<color=#75715e>     *                            written using the default compression type of</color>
<color=#75715e>     *                            the codec specified in {@code outputFormat}.</color>
<color=#75715e>     * @param outputQuality       A value from {@code 0.0f} to {@code 1.0f} which</color>
<color=#75715e>     *                            indicates the quality setting to use for the</color>
<color=#75715e>     *                            compression of the thumbnail. {@code 0.0f}</color>
<color=#75715e>     *                            indicates the lowest quality, {@code 1.0f}</color>
<color=#75715e>     *                            indicates the highest quality setting for the</color>
<color=#75715e>     *                            compression.</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_QUALITY}</color>
<color=#75715e>     *                            should be specified when the codec's default</color>
<color=#75715e>     *                            compression quality settings should be used.</color>
<color=#75715e>     * @param imageType           The {@link BufferedImage} image type of the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_IMAGE_TYPE}</color>
<color=#75715e>     *                            should be specified when the default image</color>
<color=#75715e>     *                            type should be used when creating the thumbnail.</color>
<color=#75715e>     * @param filters             The {@link ImageFilter}s to apply to the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} will be recognized as</color>
<color=#75715e>     *                            no filters are to be applied.</color>
<color=#75715e>     *                            The filters are applied after the original</color>
<color=#75715e>     *                            image has been resized.</color>
<color=#75715e>     * @param resizer             The {@link Resizer} to use when performing the</color>
<color=#75715e>     *                            resizing operation to create a thumbnail.</color>
<color=#75715e>     * @param fitWithinDimensions Whether or not to fit the thumbnail within</color>
<color=#75715e>     *                            the specified dimensions.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            thumbnail will be sized to fit within the</color>
<color=#75715e>     *                            specified dimensions, if the thumbnail is</color>
<color=#75715e>     *                            going to exceed those dimensions.</color>
<color=#75715e>     * @param useExifOrientation  Whether or not to use the Exif metadata to</color>
<color=#75715e>     *                            determine the orientation of the thumbnail.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            Exif metadata will be used to determine</color>
<color=#75715e>     *                            the orientation of the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If size is {@code null} or if the</color>
<color=#75715e>     *                                  dimensions are negative, or if the</color>
<color=#75715e>     *                                  {@link Resizer} is null.</color>
<color=#75715e>     * @since 0.4.3</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThumbnailParameter</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>Dimension</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Resizer</color> <color=#f8f8f2>resizer</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>useExifOrientation</color>
    <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>NaN</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>NaN</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>FixedResizerFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>resizer</color><color=#f8f8f2>),</color>
                <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>useExifOrientation</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>validateThumbnailSize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an object holding the parameters needed in order to make a</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param widthScalingFactor  The scaling factor to apply to the width</color>
<color=#75715e>     *                            when creating a	thumbnail from the original</color>
<color=#75715e>     *                            image.</color>
<color=#75715e>     * @param heightScalingFactor The scaling factor to apply to the height</color>
<color=#75715e>     *                            when creating a	thumbnail from the original</color>
<color=#75715e>     *                            image.</color>
<color=#75715e>     * @param sourceRegion        The region of the source image to use when</color>
<color=#75715e>     *                            creating a thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} indicates that the</color>
<color=#75715e>     *                            entire source image should be used to create</color>
<color=#75715e>     *                            the thumbnail.</color>
<color=#75715e>     * @param keepAspectRatio     Indicates whether or not the thumbnail should</color>
<color=#75715e>     *                            maintain the aspect ratio of the original image.</color>
<color=#75715e>     * @param outputFormat        A string indicating the compression format</color>
<color=#75715e>     *                            that should be applied on the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#ORIGINAL_FORMAT}</color>
<color=#75715e>     *                            should be provided if the same image format as</color>
<color=#75715e>     *                            the original should	be used for the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DETERMINE_FORMAT}</color>
<color=#75715e>     *                            should be provided if the output format of the</color>
<color=#75715e>     *                            thumbnail should be the determined from the</color>
<color=#75715e>     *                            information available, such as the output file</color>
<color=#75715e>     *                            name of the thumbnail.</color>
<color=#75715e>     * @param outputFormatType    A string indicating the compression type that</color>
<color=#75715e>     *                            should be used when writing the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}</color>
<color=#75715e>     *                            should be provided if the thumbnail should be</color>
<color=#75715e>     *                            written using the default compression type of</color>
<color=#75715e>     *                            the codec specified in {@code outputFormat}.</color>
<color=#75715e>     * @param outputQuality       A value from {@code 0.0f} to {@code 1.0f} which</color>
<color=#75715e>     *                            indicates the quality setting to use for the</color>
<color=#75715e>     *                            compression of the thumbnail. {@code 0.0f}</color>
<color=#75715e>     *                            indicates the lowest quality, {@code 1.0f}</color>
<color=#75715e>     *                            indicates the highest quality setting for the</color>
<color=#75715e>     *                            compression.</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_QUALITY}</color>
<color=#75715e>     *                            should be specified when the codec's default</color>
<color=#75715e>     *                            compression quality settings should be used.</color>
<color=#75715e>     * @param imageType           The {@link BufferedImage} image type of the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_IMAGE_TYPE}</color>
<color=#75715e>     *                            should be specified when the default image</color>
<color=#75715e>     *                            type should be used when creating the thumbnail.</color>
<color=#75715e>     * @param filters             The {@link ImageFilter}s to apply to the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} will be recognized as</color>
<color=#75715e>     *                            no filters are to be applied.</color>
<color=#75715e>     *                            The filters are applied after the original</color>
<color=#75715e>     *                            image has been resized.</color>
<color=#75715e>     * @param resizer             The {@link Resizer} to use when performing the</color>
<color=#75715e>     *                            resizing operation to create a thumbnail.</color>
<color=#75715e>     * @param fitWithinDimensions Whether or not to fit the thumbnail within</color>
<color=#75715e>     *                            the specified dimensions.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            thumbnail will be sized to fit within the</color>
<color=#75715e>     *                            specified dimensions, if the thumbnail is</color>
<color=#75715e>     *                            going to exceed those dimensions.</color>
<color=#75715e>     * @param useExifOrientation  Whether or not to use the Exif metadata to</color>
<color=#75715e>     *                            determine the orientation of the thumbnail.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            Exif metadata will be used to determine</color>
<color=#75715e>     *                            the orientation of the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If the scaling factor is not a</color>
<color=#75715e>     *                                  rational number or is less than or</color>
<color=#75715e>     *                                  equal to 0, or if the</color>
<color=#75715e>     *                                  {@link Resizer} is null.</color>
<color=#75715e>     * @since 0.4.3</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThumbnailParameter</color><color=#f8f8f2>(</color>
            <color=#66d9ef>double</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>,</color>
            <color=#66d9ef>double</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Resizer</color> <color=#f8f8f2>resizer</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>useExifOrientation</color>
    <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color>
                <color=#66d9ef>null</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>FixedResizerFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>resizer</color><color=#f8f8f2>),</color>
                <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>useExifOrientation</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>validateScalingFactor</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an object holding the parameters needed in order to make a</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param thumbnailSize       The size of the thumbnail to generate.</color>
<color=#75715e>     * @param sourceRegion        The region of the source image to use when</color>
<color=#75715e>     *                            creating a thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} indicates that the</color>
<color=#75715e>     *                            entire source image should be used to create</color>
<color=#75715e>     *                            the thumbnail.</color>
<color=#75715e>     * @param keepAspectRatio     Indicates whether or not the thumbnail should</color>
<color=#75715e>     *                            maintain the aspect ratio of the original image.</color>
<color=#75715e>     * @param outputFormat        A string indicating the compression format</color>
<color=#75715e>     *                            that should be applied on the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#ORIGINAL_FORMAT}</color>
<color=#75715e>     *                            should be provided if the same image format as</color>
<color=#75715e>     *                            the original should	be used for the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DETERMINE_FORMAT}</color>
<color=#75715e>     *                            should be provided if the output format of the</color>
<color=#75715e>     *                            thumbnail should be the determined from the</color>
<color=#75715e>     *                            information available, such as the output file</color>
<color=#75715e>     *                            name of the thumbnail.</color>
<color=#75715e>     * @param outputFormatType    A string indicating the compression type that</color>
<color=#75715e>     *                            should be used when writing the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}</color>
<color=#75715e>     *                            should be provided if the thumbnail should be</color>
<color=#75715e>     *                            written using the default compression type of</color>
<color=#75715e>     *                            the codec specified in {@code outputFormat}.</color>
<color=#75715e>     * @param outputQuality       A value from {@code 0.0f} to {@code 1.0f} which</color>
<color=#75715e>     *                            indicates the quality setting to use for the</color>
<color=#75715e>     *                            compression of the thumbnail. {@code 0.0f}</color>
<color=#75715e>     *                            indicates the lowest quality, {@code 1.0f}</color>
<color=#75715e>     *                            indicates the highest quality setting for the</color>
<color=#75715e>     *                            compression.</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_QUALITY}</color>
<color=#75715e>     *                            should be specified when the codec's default</color>
<color=#75715e>     *                            compression quality settings should be used.</color>
<color=#75715e>     * @param imageType           The {@link BufferedImage} image type of the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_IMAGE_TYPE}</color>
<color=#75715e>     *                            should be specified when the default image</color>
<color=#75715e>     *                            type should be used when creating the thumbnail.</color>
<color=#75715e>     * @param filters             The {@link ImageFilter}s to apply to the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} will be recognized as</color>
<color=#75715e>     *                            no filters are to be applied.</color>
<color=#75715e>     *                            The filters are applied after the original</color>
<color=#75715e>     *                            image has been resized.</color>
<color=#75715e>     * @param resizerFactory      The {@link ResizerFactory} for obtaining a</color>
<color=#75715e>     *                            {@link Resizer} that is to be used when</color>
<color=#75715e>     *                            performing an image resizing operation.</color>
<color=#75715e>     * @param fitWithinDimensions Whether or not to fit the thumbnail within</color>
<color=#75715e>     *                            the specified dimensions.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            thumbnail will be sized to fit within the</color>
<color=#75715e>     *                            specified dimensions, if the thumbnail is</color>
<color=#75715e>     *                            going to exceed those dimensions.</color>
<color=#75715e>     * @param useExifOrientation  Whether or not to use the Exif metadata to</color>
<color=#75715e>     *                            determine the orientation of the thumbnail.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            Exif metadata will be used to determine</color>
<color=#75715e>     *                            the orientation of the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If size is {@code null} or if the</color>
<color=#75715e>     *                                  dimensions are negative, or if the</color>
<color=#75715e>     *                                  {@link ResizerFactory} is null.</color>
<color=#75715e>     * @since 0.4.3</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThumbnailParameter</color><color=#f8f8f2>(</color>
            <color=#f8f8f2>Dimension</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>useExifOrientation</color>
    <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>NaN</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>NaN</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>useExifOrientation</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>validateThumbnailSize</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an object holding the parameters needed in order to make a</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param widthScalingFactor  The scaling factor to apply to the width</color>
<color=#75715e>     *                            when creating a	thumbnail from the original</color>
<color=#75715e>     *                            image.</color>
<color=#75715e>     * @param heightScalingFactor The scaling factor to apply to the height</color>
<color=#75715e>     *                            when creating a	thumbnail from the original</color>
<color=#75715e>     *                            image.</color>
<color=#75715e>     * @param sourceRegion        The region of the source image to use when</color>
<color=#75715e>     *                            creating a thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} indicates that the</color>
<color=#75715e>     *                            entire source image should be used to create</color>
<color=#75715e>     *                            the thumbnail.</color>
<color=#75715e>     * @param keepAspectRatio     Indicates whether or not the thumbnail should</color>
<color=#75715e>     *                            maintain the aspect ratio of the original image.</color>
<color=#75715e>     * @param outputFormat        A string indicating the compression format</color>
<color=#75715e>     *                            that should be applied on the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#ORIGINAL_FORMAT}</color>
<color=#75715e>     *                            should be provided if the same image format as</color>
<color=#75715e>     *                            the original should	be used for the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DETERMINE_FORMAT}</color>
<color=#75715e>     *                            should be provided if the output format of the</color>
<color=#75715e>     *                            thumbnail should be the determined from the</color>
<color=#75715e>     *                            information available, such as the output file</color>
<color=#75715e>     *                            name of the thumbnail.</color>
<color=#75715e>     * @param outputFormatType    A string indicating the compression type that</color>
<color=#75715e>     *                            should be used when writing the thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}</color>
<color=#75715e>     *                            should be provided if the thumbnail should be</color>
<color=#75715e>     *                            written using the default compression type of</color>
<color=#75715e>     *                            the codec specified in {@code outputFormat}.</color>
<color=#75715e>     * @param outputQuality       A value from {@code 0.0f} to {@code 1.0f} which</color>
<color=#75715e>     *                            indicates the quality setting to use for the</color>
<color=#75715e>     *                            compression of the thumbnail. {@code 0.0f}</color>
<color=#75715e>     *                            indicates the lowest quality, {@code 1.0f}</color>
<color=#75715e>     *                            indicates the highest quality setting for the</color>
<color=#75715e>     *                            compression.</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_QUALITY}</color>
<color=#75715e>     *                            should be specified when the codec's default</color>
<color=#75715e>     *                            compression quality settings should be used.</color>
<color=#75715e>     * @param imageType           The {@link BufferedImage} image type of the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of</color>
<color=#75715e>     *                            {@link ThumbnailParameter#DEFAULT_IMAGE_TYPE}</color>
<color=#75715e>     *                            should be specified when the default image</color>
<color=#75715e>     *                            type should be used when creating the thumbnail.</color>
<color=#75715e>     * @param filters             The {@link ImageFilter}s to apply to the</color>
<color=#75715e>     *                            thumbnail.</color>
<color=#75715e>     *                            A value of {@code null} will be recognized as</color>
<color=#75715e>     *                            no filters are to be applied.</color>
<color=#75715e>     *                            The filters are applied after the original</color>
<color=#75715e>     *                            image has been resized.</color>
<color=#75715e>     * @param resizerFactory      The {@link ResizerFactory} for obtaining a</color>
<color=#75715e>     *                            {@link Resizer} that is to be used when</color>
<color=#75715e>     *                            performing an image resizing operation.</color>
<color=#75715e>     * @param fitWithinDimensions Whether or not to fit the thumbnail within</color>
<color=#75715e>     *                            the specified dimensions.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            thumbnail will be sized to fit within the</color>
<color=#75715e>     *                            specified dimensions, if the thumbnail is</color>
<color=#75715e>     *                            going to exceed those dimensions.</color>
<color=#75715e>     * @param useExifOrientation  Whether or not to use the Exif metadata to</color>
<color=#75715e>     *                            determine the orientation of the thumbnail.</color>
<color=#75715e>     *                            <p></color>
<color=#75715e>     *                            If {@code true} is specified, then the</color>
<color=#75715e>     *                            Exif metadata will be used to determine</color>
<color=#75715e>     *                            the orientation of the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If the scaling factor is not a</color>
<color=#75715e>     *                                  rational number or is less than or</color>
<color=#75715e>     *                                  equal to 0, or if the</color>
<color=#75715e>     *                                  {@link ResizerFactory} is null.</color>
<color=#75715e>     * @since 0.4.3</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThumbnailParameter</color><color=#f8f8f2>(</color>
            <color=#66d9ef>double</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>,</color>
            <color=#66d9ef>double</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
            <color=#66d9ef>float</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
            <color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
            <color=#66d9ef>boolean</color> <color=#f8f8f2>useExifOrientation</color>
    <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color>
                <color=#66d9ef>null</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormat</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>outputQuality</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
                <color=#f8f8f2>useExifOrientation</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>validateScalingFactor</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the size of the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Returns {@code null} if the scaling factor is set rather than the</color>
<color=#75715e>     * explicit thumbnail size.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The size of the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Dimension</color> <color=#a6e22e>getSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>thumbnailSize</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#f8f8f2>(</color><color=#f8f8f2>Dimension</color><color=#f8f8f2>)</color> <color=#f8f8f2>thumbnailSize</color><color=#f8f8f2>.</color><color=#a6e22e>clone</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the scaling factor to apply to the width when creating the</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Returns {@link Double#NaN} if the thumbnail size is set rather than the</color>
<color=#75715e>     * scaling factor.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The width scaling factor for the thumbnail.</color>
<color=#75715e>     * @since 0.3.10</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>double</color> <color=#a6e22e>getWidthScalingFactor</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the scaling factor to apply to the height when creating the</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Returns {@link Double#NaN} if the thumbnail size is set rather than the</color>
<color=#75715e>     * scaling factor.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The height scaling factor for the thumbnail.</color>
<color=#75715e>     * @since 0.3.10</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>double</color> <color=#a6e22e>getHeightScalingFactor</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the type of image. The value returned is the constant used for</color>
<color=#75715e>     * image types of {@link BufferedImage}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The type of the image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns whether or not the thumbnail is to maintain the aspect ratio of</color>
<color=#75715e>     * the source image when creating the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return {@code true} if the thumbnail is to maintain the aspect</color>
<color=#75715e>     * ratio of the original image, {@code false} otherwise.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>isKeepAspectRatio</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the output format for the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If the output format is to use the same compression format as the</color>
<color=#75715e>     * original image, this method will return</color>
<color=#75715e>     * {@link ThumbnailParameter#ORIGINAL_FORMAT}.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If the output format should be determined from the information available</color>
<color=#75715e>     * such as the file name of the thumbnail, then this method will return</color>
<color=#75715e>     * {@link ThumbnailParameter#DETERMINE_FORMAT}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The output format for the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getOutputFormat</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>outputFormat</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the output format type for the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If the default compression type of the compression format is to be used,</color>
<color=#75715e>     * then this method will return</color>
<color=#75715e>     * {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The output format type for the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getOutputFormatType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>outputFormatType</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the compression quality settings for the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * The value is in the range of {@code 0.0f} to {@code 1.0f},</color>
<color=#75715e>     * where {@code 0.0f} is for the lowest quality setting and {@code 1.0f} for</color>
<color=#75715e>     * the highest quality setting.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If the default compression quality is to be used, then this method will</color>
<color=#75715e>     * return {@link ThumbnailParameter#DEFAULT_QUALITY}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The compression quality settings for the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>float</color> <color=#a6e22e>getOutputQuality</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>outputQuality</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the list of {@link ImageFilter}s which are applied to the</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * These filters are applied after the original image has been resized.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The {@link ImageFilter}s which are applied to the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#a6e22e>getImageFilters</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>filters</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the default {@link Resizer} that will be used when performing the</color>
<color=#75715e>     * resizing operation to create a thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The default {@link Resizer} to use when performing a resize</color>
<color=#75715e>     * operation.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Resizer</color> <color=#a6e22e>getResizer</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getResizer</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the {@link ResizerFactory} for obtaining a {@link Resizer} which</color>
<color=#75715e>     * is to be used when performing the resizing operation to create a</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The {@link ResizerFactory} to use to obtain the</color>
<color=#75715e>     * {@link Resizer}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ResizerFactory</color> <color=#a6e22e>getResizerFactory</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns whether or not the original image type should be used for the</color>
<color=#75715e>     * thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return        {@code true} if the original image type should be used,</color>
<color=#75715e>     * {@code false} otherwise.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>useOriginalImageType</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>imageType</color> <color=#f92672>==</color> <color=#f8f8f2>ORIGINAL_IMAGE_TYPE</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the region of the source image to use when creating a thumbnail,</color>
<color=#75715e>     * represented by a {@link Region} object.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The {@code Region} object representing the source region</color>
<color=#75715e>     * to use when creating a thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * A value of {@code null} indicates that the entire source</color>
<color=#75715e>     * image should be used to create the thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Region</color> <color=#a6e22e>getSourceRegion</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns whether or not to fit the thumbnail within the specified</color>
<color=#75715e>     * dimensions.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return        {@code true} is returned when the thumbnail should be sized</color>
<color=#75715e>     * to fit within the specified dimensions, if the thumbnail</color>
<color=#75715e>     * is going to exceed those dimensions.</color>
<color=#75715e>     * @since 0.4.0</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>fitWithinDimenions</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns whether or not the Exif metadata should be used to determine</color>
<color=#75715e>     * the orientation of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return        {@code true} is returned when the Exif metadata should be</color>
<color=#75715e>     * used to decide the orientation of the thumbnail,</color>
<color=#75715e>     * {@code false} otherwise.</color>
<color=#75715e>     * @since 0.4.3</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>boolean</color> <color=#a6e22e>useExifOrientation</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>useExifOrientation</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>