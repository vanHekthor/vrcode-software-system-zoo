<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.makers</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A {@link ThumbnailMaker} which resizes an image to a specified dimension</color>
<color=#75715e> * when producing a thumbnail.</color>
<color=#75715e> * <p></color>
<color=#75715e> * Optionally, if the aspect ratio of the thumbnail is to be maintained the same</color>
<color=#75715e> * as the original image (by calling the {@link #keepAspectRatio(boolean)}</color>
<color=#75715e> * method with the value {@code true}), then the dimensions specified by the</color>
<color=#75715e> * {@link #size(int, int)} method, {@link #FixedSizeThumbnailMaker(int, int)} or</color>
<color=#75715e> * {@link #FixedSizeThumbnailMaker(int, int, boolean)} constructor will be used</color>
<color=#75715e> * as the maximum constraint of dimensions of the thumbnail.</color>
<color=#75715e> * <p></color>
<color=#75715e> * In other words, when the aspect ratio is to be kept constant, then</color>
<color=#75715e> * thumbnails which are created will be sized to fit inside the dimensions</color>
<color=#75715e> * specified by the size parameter.</color>
<color=#75715e> * <p></color>
<color=#75715e> * Upon calculating the size of the thumbnail, if any of the dimensions are</color>
<color=#75715e> * {@code 0}, then that dimension will be promoted to {@code 1}, regardless of</color>
<color=#75715e> * whether the aspect ratio of the original image is to be maintained. This will</color>
<color=#75715e> * lead to some thumbnails not preserving the aspect ratio of the original</color>
<color=#75715e> * image, even if {@link #keepAspectRatio(boolean)} has been {@code true}.</color>
<color=#75715e> * <p></color>
<color=#75715e> * <DL></color>
<color=#75715e> * <DT><B>Usage:</B></DT></color>
<color=#75715e> * <DD></color>
<color=#75715e> * The following example demonstrates how to create a thumbnail which fits</color>
<color=#75715e> * within 200 pixels by 200 pixels, while preserving the aspect ratio of the</color>
<color=#75715e> * source image:</color>
<color=#75715e> * <pre></color>
<color=#75715e> * BufferedImage img = ImageIO.read(new File("sourceImage.jpg"));</color>
<color=#75715e> *</color>
<color=#75715e> * BufferedImage thumbnail = new FixedSizeThumbnailMaker()</color>
<color=#75715e> * .size(200, 200)</color>
<color=#75715e> * .keepAspectRatio(true)</color>
<color=#75715e> * .make(img);</color>
<color=#75715e> * </pre></color>
<color=#75715e> * </DD></color>
<color=#75715e> * </DL></color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>FixedSizeThumbnailMaker</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_SIZE</color> <color=#f92672>=</color> <color=#e6db74>"size"</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_KEEP_RATIO</color> <color=#f92672>=</color> <color=#e6db74>"keepRatio"</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_FIT_WITHIN</color> <color=#f92672>=</color> <color=#e6db74>"fitWithinDimensions"</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>keepRatio</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@link FixedSizeThumbnailMaker}.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * The size of the resulting thumbnail, and whether or not the aspect ratio</color>
<color=#75715e>     * of the original image should be maintained in the thumbnail must be</color>
<color=#75715e>     * set before this instance is able to produce thumbnails.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FixedSizeThumbnailMaker</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_SIZE</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_KEEP_RATIO</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_FIT_WITHIN</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@link FixedSizeThumbnailMaker} which creates thumbnails</color>
<color=#75715e>     * with the specified size.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Before this instance is able to produce thumbnails, whether or not the</color>
<color=#75715e>     * aspect ratio of the original image should be maintained in the thumbnail</color>
<color=#75715e>     * must be specified by calling the {@link #keepAspectRatio(boolean)}</color>
<color=#75715e>     * method.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width  The width of the thumbnail to produce.</color>
<color=#75715e>     * @param height The height of the thumbnails to produce.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FixedSizeThumbnailMaker</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>size</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@link FixedSizeThumbnailMaker} which creates thumbnails</color>
<color=#75715e>     * with the specified size. Whether or not the aspect ratio of the original</color>
<color=#75715e>     * image should be preserved by the thumbnail is also specified at</color>
<color=#75715e>     * instantiation.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width       The width of the thumbnail to produce.</color>
<color=#75715e>     * @param height      The height of the thumbnails to produce.</color>
<color=#75715e>     * @param aspectRatio Whether or not to maintain the aspect ratio in the</color>
<color=#75715e>     *                    thumbnail the same as the original image.</color>
<color=#75715e>     *                    <p></color>
<color=#75715e>     *                    If {@code true} is specified, then the</color>
<color=#75715e>     *                    thumbnail image will have the same aspect ratio</color>
<color=#75715e>     *                    as the original image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FixedSizeThumbnailMaker</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>aspectRatio</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>size</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>(</color><color=#f8f8f2>aspectRatio</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@link FixedSizeThumbnailMaker} which creates thumbnails</color>
<color=#75715e>     * with the specified size. Whether or not the aspect ratio of the original</color>
<color=#75715e>     * image should be preserved by the thumbnail, and whether to fit the</color>
<color=#75715e>     * thumbnail within the given dimensions is also specified at</color>
<color=#75715e>     * instantiation.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width       The width of the thumbnail to produce.</color>
<color=#75715e>     * @param height      The height of the thumbnails to produce.</color>
<color=#75715e>     * @param aspectRatio Whether or not to maintain the aspect ratio in the</color>
<color=#75715e>     *                    thumbnail the same as the original image.</color>
<color=#75715e>     *                    <p></color>
<color=#75715e>     *                    If {@code true} is specified, then the</color>
<color=#75715e>     *                    thumbnail image will have the same aspect ratio</color>
<color=#75715e>     *                    as the original image.</color>
<color=#75715e>     * @param fit         Whether or not to fit the thumbnail within the</color>
<color=#75715e>     *                    specified dimensions.</color>
<color=#75715e>     *                    <p></color>
<color=#75715e>     *                    If {@code true} is specified, then the thumbnail</color>
<color=#75715e>     *                    will be sized to fit within the specified</color>
<color=#75715e>     *                    {@code width} and {@code height}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FixedSizeThumbnailMaker</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>aspectRatio</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>fit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>size</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>(</color><color=#f8f8f2>aspectRatio</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>(</color><color=#f8f8f2>fit</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the size of the thumbnail to produce.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width  The width of the thumbnail to produce.</color>
<color=#75715e>     * @param height The height of the thumbnails to produce.</color>
<color=#75715e>     * @throws IllegalStateException If the size has already</color>
<color=#75715e>     *                               been previously set, or if the</color>
<color=#75715e>     *                               {@code width} or {@code height} is less</color>
<color=#75715e>     *                               than or equal to zero.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>FixedSizeThumbnailMaker</color> <color=#a6e22e>size</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>isSet</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_SIZE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"The size has already been set."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Width must be greater than zero."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>height</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Height must be greater than zero."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_SIZE</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets whether or not the thumbnail is to maintain the aspect ratio of</color>
<color=#75715e>     * the original image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param keep Whether or not to maintain the aspect ratio in the</color>
<color=#75715e>     *             thumbnail the same as the original image.</color>
<color=#75715e>     *             <p></color>
<color=#75715e>     *             If {@code true} is specified, then the</color>
<color=#75715e>     *             thumbnail image will have the same aspect ratio</color>
<color=#75715e>     *             as the original image.</color>
<color=#75715e>     * @throws IllegalStateException If whether to keep the aspect ratio has</color>
<color=#75715e>     *                               already	been previously set.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>FixedSizeThumbnailMaker</color> <color=#a6e22e>keepAspectRatio</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>keep</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>isSet</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_KEEP_RATIO</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Whether to keep the aspect ratio has already been set."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>keepRatio</color> <color=#f92672>=</color> <color=#f8f8f2>keep</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_KEEP_RATIO</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets whether or not the thumbnail should fit within the specified</color>
<color=#75715e>     * dimensions.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * When the dimensions of a thumbnail will exceed the specified dimensions,</color>
<color=#75715e>     * with the aspect ratio of the original being preserved, then if this</color>
<color=#75715e>     * method was called with {@code false}, then the resulting thumbnail will</color>
<color=#75715e>     * have the larger dimension align with the specified dimension, and the</color>
<color=#75715e>     * other will exceed the given dimension.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * When {@link #keepAspectRatio(boolean)} is {@code false}, then calling</color>
<color=#75715e>     * this method with {@code true} or {@code false} makes no difference, as</color>
<color=#75715e>     * the thumbnail dimensions will be exactly the given dimensions.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param fit Whether or not to maintain the aspect ratio in the</color>
<color=#75715e>     *            thumbnail the same as the original image.</color>
<color=#75715e>     *            <p></color>
<color=#75715e>     *            If {@code true} is specified, then the</color>
<color=#75715e>     *            thumbnail image will have the same aspect ratio</color>
<color=#75715e>     *            as the original image.</color>
<color=#75715e>     * @throws IllegalStateException If whether to keep the aspect ratio has</color>
<color=#75715e>     *                               already	been previously set.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.4.0</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>FixedSizeThumbnailMaker</color> <color=#a6e22e>fitWithinDimensions</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>fit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>isSet</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_FIT_WITHIN</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Whether to fit within dimensions has already been set."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fitWithinDimensions</color> <color=#f92672>=</color> <color=#f8f8f2>fit</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_FIT_WITHIN</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>targetWidth</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>targetHeight</color> <color=#f92672>=</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>keepRatio</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>sourceWidth</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>sourceHeight</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>

            <color=#66d9ef>double</color> <color=#f8f8f2>sourceRatio</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>sourceWidth</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>sourceHeight</color><color=#f8f8f2>;</color>
            <color=#66d9ef>double</color> <color=#f8f8f2>targetRatio</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>targetWidth</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>targetHeight</color><color=#f8f8f2>;</color>

            <color=#75715e>/*</color>
<color=#75715e>             * If the ratios are not the same, then the appropriate</color>
<color=#75715e>             * width and height must be picked.</color>
<color=#75715e>             */</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>compare</color><color=#f8f8f2>(</color><color=#f8f8f2>sourceRatio</color><color=#f8f8f2>,</color> <color=#f8f8f2>targetRatio</color><color=#f8f8f2>)</color> <color=#f92672>!=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sourceRatio</color> <color=#f92672>></color> <color=#f8f8f2>targetRatio</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>targetWidth</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>targetHeight</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>targetWidth</color> <color=#f92672>/</color> <color=#f8f8f2>sourceRatio</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>targetWidth</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>targetHeight</color> <color=#f92672>*</color> <color=#f8f8f2>sourceRatio</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>targetHeight</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                    <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sourceRatio</color> <color=#f92672>></color> <color=#f8f8f2>targetRatio</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>targetWidth</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>targetHeight</color> <color=#f92672>*</color> <color=#f8f8f2>sourceRatio</color><color=#f8f8f2>);</color>
                        <color=#f8f8f2>targetHeight</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
                    <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                        <color=#f8f8f2>targetWidth</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
                        <color=#f8f8f2>targetHeight</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>targetWidth</color> <color=#f92672>/</color> <color=#f8f8f2>sourceRatio</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>}</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>targetWidth</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>targetWidth</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#f8f8f2>targetWidth</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>targetHeight</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>targetHeight</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#f8f8f2>targetHeight</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>makeThumbnail</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>,</color> <color=#f8f8f2>targetWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>targetHeight</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>