<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.tasks</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.ThumbnailParameter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.tasks.io.ImageSink</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.tasks.io.ImageSource</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A {@link ThumbnailTask} which holds an {@link ImageSource} from which the</color>
<color=#75715e> * image is read or retrieved, and an {@link ImageSink} to which the thumbnail</color>
<color=#75715e> * is stored or written.</color>
<color=#75715e> * <p></color>
<color=#75715e> * This class will take care of handing off information from the</color>
<color=#75715e> * {@link ImageSource} to the {@link ImageSink}. For example, the output format</color>
<color=#75715e> * that should be used by the {@link ImageSink} will be handed off if the</color>
<color=#75715e> * {@link ThumbnailParameter#ORIGINAL_FORMAT} parameter is set.</color>
<color=#75715e> *</color>
<color=#75715e> * @param <S> The source class from which the source image is retrieved</color>
<color=#75715e> *            or read.</color>
<color=#75715e> * @param <D> The destination class to which the thumbnail is stored</color>
<color=#75715e> *            or written.</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>SourceSinkThumbnailTask</color><color=#f92672><</color><color=#f8f8f2>S</color><color=#f8f8f2>,</color> <color=#f8f8f2>D</color><color=#f92672>></color> <color=#66d9ef>extends</color> <color=#f8f8f2>ThumbnailTask</color><color=#f92672><</color><color=#f8f8f2>S</color><color=#f8f8f2>,</color> <color=#f8f8f2>D</color><color=#f92672>></color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The source from which the image is retrieved or read.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ImageSource</color><color=#f92672><</color><color=#f8f8f2>S</color><color=#f92672>></color> <color=#f8f8f2>source</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The destination to which the thumbnail is stored or written.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>ImageSink</color><color=#f92672><</color><color=#f8f8f2>D</color><color=#f92672>></color> <color=#f8f8f2>destination</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates a {@link ThumbnailTask} in which an image is retrived from the</color>
<color=#75715e>     * specified {@link ImageSource} and written to the specified</color>
<color=#75715e>     * {@link ImageSink}, using the parameters provided in the specified</color>
<color=#75715e>     * {@link ThumbnailParameter}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param param       The parameters to use to create the thumbnail.</color>
<color=#75715e>     * @param source      The source from which the image is retrieved</color>
<color=#75715e>     *                    or read from.</color>
<color=#75715e>     * @param destination The destination to which the thumbnail is</color>
<color=#75715e>     *                    stored or written to.</color>
<color=#75715e>     * @throws NullPointerException If either the parameter,</color>
<color=#75715e>     *                              {@link ImageSource} or {@link ImageSink}</color>
<color=#75715e>     *                              is {@code null}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>SourceSinkThumbnailTask</color><color=#f8f8f2>(</color><color=#f8f8f2>ThumbnailParameter</color> <color=#f8f8f2>param</color><color=#f8f8f2>,</color> <color=#f8f8f2>ImageSource</color><color=#f92672><</color><color=#f8f8f2>S</color><color=#f92672>></color> <color=#f8f8f2>source</color><color=#f8f8f2>,</color> <color=#f8f8f2>ImageSink</color><color=#f92672><</color><color=#f8f8f2>D</color><color=#f92672>></color> <color=#f8f8f2>destination</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>source</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"ImageSource cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>destination</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"ImageSink cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>setThumbnailParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>);</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>source</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>setThumbnailParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>);</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>destination</color> <color=#f92672>=</color> <color=#f8f8f2>destination</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>read</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>inputFormatName</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>getInputFormatName</color><color=#f8f8f2>();</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>img</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>paramOutputFormat</color> <color=#f92672>=</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getOutputFormat</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>String</color> <color=#f8f8f2>formatName</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>.</color><color=#a6e22e>DETERMINE_FORMAT</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>paramOutputFormat</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>paramOutputFormat</color> <color=#f92672>=</color> <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>preferredOutputFormatName</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>paramOutputFormat</color> <color=#f92672>==</color> <color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>.</color><color=#a6e22e>ORIGINAL_FORMAT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>formatName</color> <color=#f92672>=</color> <color=#f8f8f2>inputFormatName</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>formatName</color> <color=#f92672>=</color> <color=#f8f8f2>paramOutputFormat</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>setOutputFormatName</color><color=#f8f8f2>(</color><color=#f8f8f2>formatName</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>write</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>S</color> <color=#a6e22e>getSource</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>getSource</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>D</color> <color=#a6e22e>getDestination</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>destination</color><color=#f8f8f2>.</color><color=#a6e22e>getSink</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>