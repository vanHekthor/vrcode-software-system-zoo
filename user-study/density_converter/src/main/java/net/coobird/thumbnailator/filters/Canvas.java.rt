<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.filters</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.geometry.Position</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An {@link ImageFilter} which will enclose an image into a specified</color>
<color=#75715e> * enclosing image.</color>
<color=#75715e> * <p></color>
<color=#75715e> * The intended use of this {@code ImageFilter} is to take an image and place</color>
<color=#75715e> * it inside of a larger image, creating a border around the original image.</color>
<color=#75715e> * This can be useful when the dimensions of a thumbnail must always be the</color>
<color=#75715e> * same dimensions, and the original images are of differing dimensions.</color>
<color=#75715e> * <p></color>
<color=#75715e> * The fill color used for the enclosing image can be specified, along with</color>
<color=#75715e> * whether or not to crop an image if it is larger than the enclosing image.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> * @since 0.3.2</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Canvas</color> <color=#66d9ef>implements</color> <color=#f8f8f2>ImageFilter</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The width of the enclosing image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The width of the enclosing image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The positioning of the enclosed image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The fill color for the background.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Color</color> <color=#f8f8f2>fillColor</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Whether or not to crop the enclosed image if the enclosing image is</color>
<color=#75715e>     * smaller than the enclosed image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>crop</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code Canvas} filter.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * No fill color will be applied to the filtered image. If the image to</color>
<color=#75715e>     * filter does not have a transparency channel, the image will be filled</color>
<color=#75715e>     * black.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Crops the enclosed image if the enclosing image is smaller.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width    The width of the filtered image.</color>
<color=#75715e>     * @param height   The height of the filtered image.</color>
<color=#75715e>     * @param position The position to place the enclosed image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>Canvas</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code Canvas} filter.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * No fill color will be applied to the filtered image. If the image to</color>
<color=#75715e>     * filter does not have a transparency channel, the image will be filled</color>
<color=#75715e>     * black.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width    The width of the filtered image.</color>
<color=#75715e>     * @param height   The height of the filtered image.</color>
<color=#75715e>     * @param position The position to place the enclosed image.</color>
<color=#75715e>     * @param crop     Whether or not to crop the enclosed image if the</color>
<color=#75715e>     *                 enclosed image has dimensions which are larger than</color>
<color=#75715e>     *                 the specified {@code width} and {@code height}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>Canvas</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>crop</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#f8f8f2>crop</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code Canvas} filter.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Crops the enclosed image if the enclosing image is smaller.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width     The width of the filtered image.</color>
<color=#75715e>     * @param height    The height of the filtered image.</color>
<color=#75715e>     * @param position  The position to place the enclosed image.</color>
<color=#75715e>     * @param fillColor The color to fill portions of the image which is</color>
<color=#75715e>     *                  not covered by the enclosed image. Portions of the</color>
<color=#75715e>     *                  image which is transparent will be filled with</color>
<color=#75715e>     *                  the specified color as well.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>Canvas</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#f8f8f2>Color</color> <color=#f8f8f2>fillColor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#66d9ef>true</color><color=#f8f8f2>,</color> <color=#f8f8f2>fillColor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code Canvas} filter.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width     The width of the filtered image.</color>
<color=#75715e>     * @param height    The height of the filtered image.</color>
<color=#75715e>     * @param position  The position to place the enclosed image.</color>
<color=#75715e>     * @param crop      Whether or not to crop the enclosed image if the</color>
<color=#75715e>     *                  enclosed image has dimensions which are larger than</color>
<color=#75715e>     *                  the specified {@code width} and {@code height}.</color>
<color=#75715e>     * @param fillColor The color to fill portions of the image which is</color>
<color=#75715e>     *                  not covered by the enclosed image. Portions of the</color>
<color=#75715e>     *                  image which is transparent will be filled with</color>
<color=#75715e>     *                  the specified color as well.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>Canvas</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>crop</color><color=#f8f8f2>,</color> <color=#f8f8f2>Color</color> <color=#f8f8f2>fillColor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>position</color> <color=#f92672>=</color> <color=#f8f8f2>position</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>crop</color> <color=#f92672>=</color> <color=#f8f8f2>crop</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fillColor</color> <color=#f92672>=</color> <color=#f8f8f2>fillColor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>apply</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>widthToUse</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>heightToUse</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

        <color=#75715e>/*</color>
<color=#75715e>         * To prevent cropping when cropping is disabled, if the dimension of</color>
<color=#75715e>         * the enclosed image exceeds the dimension of the enclosing image,</color>
<color=#75715e>         * then the enclosing image will have its dimension enlarged.</color>
<color=#75715e>         *</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>crop</color> <color=#f92672>&&</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#f8f8f2>width</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>widthToUse</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>crop</color> <color=#f92672>&&</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>()</color> <color=#f92672>></color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>heightToUse</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>Point</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>position</color><color=#f8f8f2>.</color><color=#a6e22e>calculate</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>widthToUse</color><color=#f8f8f2>,</color> <color=#f8f8f2>heightToUse</color><color=#f8f8f2>,</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(),</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>(),</color>
                <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>finalImage</color> <color=#f92672>=</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>BufferedImage</color><color=#f8f8f2>(</color><color=#f8f8f2>widthToUse</color><color=#f8f8f2>,</color> <color=#f8f8f2>heightToUse</color><color=#f8f8f2>,</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>());</color>

        <color=#f8f8f2>Graphics</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>finalImage</color><color=#f8f8f2>.</color><color=#a6e22e>getGraphics</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fillColor</color> <color=#f92672>==</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f92672>!</color><color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getColorModel</color><color=#f8f8f2>().</color><color=#a6e22e>hasAlpha</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#75715e>/*</color>
<color=#75715e>             * Fulfills the specification to use a black fill color for images</color>
<color=#75715e>             * w/o alpha, if the fill color isn't specified.</color>
<color=#75715e>             */</color>
            <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setColor</color><color=#f8f8f2>(</color><color=#f8f8f2>Color</color><color=#f8f8f2>.</color><color=#a6e22e>black</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>fillRect</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>fillColor</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setColor</color><color=#f8f8f2>(</color><color=#f8f8f2>fillColor</color><color=#f8f8f2>);</color>
            <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>fillRect</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>widthToUse</color><color=#f8f8f2>,</color> <color=#f8f8f2>heightToUse</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>drawImage</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>,</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>y</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>dispose</color><color=#f8f8f2>();</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>finalImage</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>