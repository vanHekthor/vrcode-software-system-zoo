<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.geometry</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * Calculates the size of an enclosed object relative to the enclosing object.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> * @since 0.3.4</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>RelativeSize</color> <color=#66d9ef>implements</color> <color=#f8f8f2>Size</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The scaling factor to use for the enclosed object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>double</color> <color=#f8f8f2>scalingFactor</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates an object which calculates the size of an object, using</color>
<color=#75715e>     * the given scaling factor.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param scalingFactor The scaling factor to use to determine the</color>
<color=#75715e>     *                      size of the enclosing object.</color>
<color=#75715e>     * @throws IllegalArgumentException When the scaling factor is not within</color>
<color=#75715e>     *                                  the range of {@code 0.0d} and</color>
<color=#75715e>     *                                  {@code 1.0d}, inclusive.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>RelativeSize</color><color=#f8f8f2>(</color><color=#66d9ef>double</color> <color=#f8f8f2>scalingFactor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>scalingFactor</color> <color=#f92672><</color> <color=#ae81ff>0.0d</color> <color=#f92672>||</color> <color=#f8f8f2>scalingFactor</color> <color=#f92672>></color> <color=#ae81ff>1.0d</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"The scaling factor must be between 0.0d and 1.0d, inclusive."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>scalingFactor</color> <color=#f92672>=</color> <color=#f8f8f2>scalingFactor</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>Dimension</color> <color=#a6e22e>calculate</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672><=</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>height</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Width and height must be greater than 0."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>newWidth</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>scalingFactor</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>newHeight</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>height</color> <color=#f92672>*</color> <color=#f8f8f2>scalingFactor</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>Dimension</color><color=#f8f8f2>(</color><color=#f8f8f2>newWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>newHeight</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns a {@code String} representation of this object.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return        {@code String} representation of this object.</color>
<color=#75715e>     */</color>
    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"RelativeSize [scalingFactor="</color> <color=#f92672>+</color> <color=#f8f8f2>scalingFactor</color> <color=#f92672>+</color> <color=#e6db74>"]"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>