<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.tasks.io</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.filters.ImageFilter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.geometry.Region</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.tasks.UnsupportedFormatException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.util.exif.ExifFilterUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.util.exif.ExifUtils</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.util.exif.Orientation</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageIO</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageReadParam</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.ImageReader</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>javax.imageio.stream.ImageInputStream</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.FileNotFoundException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.lang.reflect.Field</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Iterator</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An {@link ImageSource} which reads the source image from a file.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>FileImageSource</color> <color=#66d9ef>extends</color> <color=#f8f8f2>AbstractImageSource</color><color=#f92672><</color><color=#f8f8f2>File</color><color=#f92672>></color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The index used to obtain the first image in an image file.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>FIRST_IMAGE_INDEX</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The file from which the image should be obtained.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>File</color> <color=#f8f8f2>sourceFile</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@link FileImageSource} with the specified file as</color>
<color=#75715e>     * the source image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param sourceFile The source image file.</color>
<color=#75715e>     * @throws NullPointerException If the image is null.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FileImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>File</color> <color=#f8f8f2>sourceFile</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sourceFile</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"File cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sourceFile</color> <color=#f92672>=</color> <color=#f8f8f2>sourceFile</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@link FileImageSource} with the specified file as</color>
<color=#75715e>     * the source image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param sourceFilePath The filepath of the source image file.</color>
<color=#75715e>     * @throws NullPointerException If the image is null.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>FileImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>sourceFilePath</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>sourceFilePath</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"File cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sourceFile</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>sourceFilePath</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>read</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>sourceFile</color><color=#f8f8f2>.</color><color=#a6e22e>exists</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>FileNotFoundException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Could not find file: "</color> <color=#f92672>+</color> <color=#f8f8f2>sourceFile</color><color=#f8f8f2>.</color><color=#a6e22e>getAbsolutePath</color><color=#f8f8f2>()</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/* TODO refactor.</color>
<color=#75715e>         * The following code has been adapted from the</color>
<color=#75715e>         * StreamThumbnailTask.read method.</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>ImageInputStream</color> <color=#f8f8f2>iis</color> <color=#f92672>=</color> <color=#f8f8f2>ImageIO</color><color=#f8f8f2>.</color><color=#a6e22e>createImageInputStream</color><color=#f8f8f2>(</color><color=#f8f8f2>sourceFile</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>iis</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Could not open file: "</color> <color=#f92672>+</color> <color=#f8f8f2>sourceFile</color><color=#f8f8f2>.</color><color=#a6e22e>getAbsolutePath</color><color=#f8f8f2>());</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>Iterator</color><color=#f92672><</color><color=#f8f8f2>ImageReader</color><color=#f92672>></color> <color=#f8f8f2>readers</color> <color=#f92672>=</color> <color=#f8f8f2>ImageIO</color><color=#f8f8f2>.</color><color=#a6e22e>getImageReaders</color><color=#f8f8f2>(</color><color=#f8f8f2>iis</color><color=#f8f8f2>);</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>readers</color><color=#f8f8f2>.</color><color=#a6e22e>hasNext</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>String</color> <color=#f8f8f2>sourcePath</color> <color=#f92672>=</color> <color=#f8f8f2>sourceFile</color><color=#f8f8f2>.</color><color=#a6e22e>getPath</color><color=#f8f8f2>();</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>UnsupportedFormatException</color><color=#f8f8f2>(</color>
                    <color=#f8f8f2>UnsupportedFormatException</color><color=#f8f8f2>.</color><color=#a6e22e>UNKNOWN</color><color=#f8f8f2>,</color>
                    <color=#e6db74>"No suitable ImageReader found for "</color> <color=#f92672>+</color> <color=#f8f8f2>sourcePath</color> <color=#f92672>+</color> <color=#e6db74>"."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>ImageReader</color> <color=#f8f8f2>reader</color> <color=#f92672>=</color> <color=#f8f8f2>readers</color><color=#f8f8f2>.</color><color=#a6e22e>next</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>reader</color><color=#f8f8f2>.</color><color=#a6e22e>setInput</color><color=#f8f8f2>(</color><color=#f8f8f2>iis</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>inputFormatName</color> <color=#f92672>=</color> <color=#f8f8f2>reader</color><color=#f8f8f2>.</color><color=#a6e22e>getFormatName</color><color=#f8f8f2>();</color>

        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>useExifOrientation</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>Orientation</color> <color=#f8f8f2>orientation</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>orientation</color> <color=#f92672>=</color>
                        <color=#f8f8f2>ExifUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getExifOrientation</color><color=#f8f8f2>(</color><color=#f8f8f2>reader</color><color=#f8f8f2>,</color> <color=#f8f8f2>FIRST_IMAGE_INDEX</color><color=#f8f8f2>);</color>

                <color=#75715e>// Skip this code block if there's no rotation needed.</color>
                <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>orientation</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>orientation</color> <color=#f92672>!=</color> <color=#f8f8f2>Orientation</color><color=#f8f8f2>.</color><color=#a6e22e>TOP_LEFT</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color> <color=#f92672>=</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getImageFilters</color><color=#f8f8f2>();</color>

                    <color=#75715e>// EXIF orientation filter is added to the beginning, as</color>
                    <color=#75715e>// it should be performed early to prevent mis-orientation</color>
                    <color=#75715e>// in later filters.</color>
                    <color=#f8f8f2>filters</color><color=#f8f8f2>.</color><color=#a6e22e>add</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>ExifFilterUtils</color><color=#f8f8f2>.</color><color=#a6e22e>getFilterForOrientation</color><color=#f8f8f2>(</color><color=#f8f8f2>orientation</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#75715e>// If something goes wrong, then skip the orientation-related</color>
            <color=#75715e>// processing.</color>
            <color=#75715e>// TODO Ought to have some way to track errors.</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>;</color>

        <color=#f8f8f2>ImageReadParam</color> <color=#f8f8f2>irParam</color> <color=#f92672>=</color> <color=#f8f8f2>reader</color><color=#f8f8f2>.</color><color=#a6e22e>getDefaultReadParam</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>reader</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>(</color><color=#f8f8f2>FIRST_IMAGE_INDEX</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>reader</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>(</color><color=#f8f8f2>FIRST_IMAGE_INDEX</color><color=#f8f8f2>);</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSourceRegion</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>Region</color> <color=#f8f8f2>region</color> <color=#f92672>=</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSourceRegion</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>sourceRegion</color> <color=#f92672>=</color> <color=#f8f8f2>region</color><color=#f8f8f2>.</color><color=#a6e22e>calculate</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>

            <color=#f8f8f2>irParam</color><color=#f8f8f2>.</color><color=#a6e22e>setSourceRegion</color><color=#f8f8f2>(</color><color=#f8f8f2>sourceRegion</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#75715e>/*</color>
<color=#75715e>         * FIXME Workaround to enable subsampling for large source images.</color>
<color=#75715e>         *</color>
<color=#75715e>         * Issue:</color>
<color=#75715e>         * https://code.google.com/p/thumbnailator/issues/detail?id=69</color>
<color=#75715e>         */</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color>
                <color=#e6db74>"true"</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>getProperty</color><color=#f8f8f2>(</color><color=#e6db74>"thumbnailator.conserveMemoryWorkaround"</color><color=#f8f8f2>))</color> <color=#f92672>&&</color>
                <color=#f8f8f2>width</color> <color=#f92672>></color> <color=#ae81ff>1800</color> <color=#f92672>&&</color> <color=#f8f8f2>height</color> <color=#f92672>></color> <color=#ae81ff>1800</color> <color=#f92672>&&</color>
                <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672>*</color> <color=#f8f8f2>height</color> <color=#f92672>*</color> <color=#ae81ff>4</color> <color=#f92672>></color> <color=#f8f8f2>Runtime</color><color=#f8f8f2>.</color><color=#a6e22e>getRuntime</color><color=#f8f8f2>().</color><color=#a6e22e>freeMemory</color><color=#f8f8f2>()</color> <color=#f92672>/</color> <color=#ae81ff>4</color><color=#f8f8f2>)</color>
        <color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>int</color> <color=#f8f8f2>subsampling</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>

            <color=#75715e>// Calculate the maximum subsampling that can be used.</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>()</color> <color=#f92672>!=</color> <color=#66d9ef>null</color> <color=#f92672>&&</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>().</color><color=#a6e22e>width</color> <color=#f92672>*</color> <color=#ae81ff>2</color> <color=#f92672><</color> <color=#f8f8f2>width</color> <color=#f92672>&&</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>().</color><color=#a6e22e>height</color> <color=#f92672>*</color> <color=#ae81ff>2</color> <color=#f92672><</color> <color=#f8f8f2>height</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>double</color> <color=#f8f8f2>widthScaling</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>width</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>().</color><color=#a6e22e>width</color><color=#f8f8f2>;</color>
                <color=#66d9ef>double</color> <color=#f8f8f2>heightScaling</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>height</color> <color=#f92672>/</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>().</color><color=#a6e22e>height</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>subsampling</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>floor</color><color=#f8f8f2>(</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>min</color><color=#f8f8f2>(</color><color=#f8f8f2>widthScaling</color><color=#f8f8f2>,</color> <color=#f8f8f2>heightScaling</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>subsampling</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>floor</color><color=#f8f8f2>(</color><color=#ae81ff>1</color> <color=#f92672>/</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>max</color><color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getHeightScalingFactor</color><color=#f8f8f2>(),</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getWidthScalingFactor</color><color=#f8f8f2>())));</color>
            <color=#f8f8f2>}</color>

            <color=#75715e>// Prevent excessive subsampling that can ruin image quality.</color>
            <color=#75715e>// This will ensure that at least a 600 x 600 image will be used as source.</color>
            <color=#66d9ef>for</color> <color=#f8f8f2>(;</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672>/</color> <color=#f8f8f2>subsampling</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>600</color> <color=#f92672>||</color> <color=#f8f8f2>(</color><color=#f8f8f2>height</color> <color=#f92672>/</color> <color=#f8f8f2>subsampling</color><color=#f8f8f2>)</color> <color=#f92672><</color> <color=#ae81ff>600</color><color=#f8f8f2>;</color> <color=#f8f8f2>subsampling</color><color=#f92672>--</color><color=#f8f8f2>)</color> <color=#f8f8f2>;</color>

            <color=#75715e>// If scaling factor based resize is used, need to change the scaling factor.</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getSize</color><color=#f8f8f2>()</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
                    <color=#f8f8f2>Class</color><color=#f92672><?></color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getClass</color><color=#f8f8f2>();</color>
                    <color=#f8f8f2>Field</color> <color=#f8f8f2>heightField</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getDeclaredField</color><color=#f8f8f2>(</color><color=#e6db74>"heightScalingFactor"</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>Field</color> <color=#f8f8f2>widthField</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getDeclaredField</color><color=#f8f8f2>(</color><color=#e6db74>"widthScalingFactor"</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>heightField</color><color=#f8f8f2>.</color><color=#a6e22e>setAccessible</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>widthField</color><color=#f8f8f2>.</color><color=#a6e22e>setAccessible</color><color=#f8f8f2>(</color><color=#66d9ef>true</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>heightField</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>,</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getHeightScalingFactor</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>subsampling</color><color=#f8f8f2>);</color>
                    <color=#f8f8f2>widthField</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>,</color> <color=#f8f8f2>param</color><color=#f8f8f2>.</color><color=#a6e22e>getWidthScalingFactor</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>(</color><color=#66d9ef>double</color><color=#f8f8f2>)</color> <color=#f8f8f2>subsampling</color><color=#f8f8f2>);</color>
                <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                    <color=#75715e>// If we can't update the parameter, then disable subsampling.</color>
                    <color=#f8f8f2>subsampling</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
                <color=#f8f8f2>}</color>
            <color=#f8f8f2>}</color>

            <color=#f8f8f2>irParam</color><color=#f8f8f2>.</color><color=#a6e22e>setSourceSubsampling</color><color=#f8f8f2>(</color><color=#f8f8f2>subsampling</color><color=#f8f8f2>,</color> <color=#f8f8f2>subsampling</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>img</color> <color=#f92672>=</color> <color=#f8f8f2>reader</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>(</color><color=#f8f8f2>FIRST_IMAGE_INDEX</color><color=#f8f8f2>,</color> <color=#f8f8f2>irParam</color><color=#f8f8f2>);</color>

        <color=#75715e>/*</color>
<color=#75715e>         * Dispose the reader to free resources.</color>
<color=#75715e>         *</color>
<color=#75715e>         * This seems to be one of the culprits which was causing</color>
<color=#75715e>         * `OutOfMemoryError`s which began appearing frequently with</color>
<color=#75715e>         * Java 7 Update 21.</color>
<color=#75715e>         *</color>
<color=#75715e>         * Issue:</color>
<color=#75715e>         * http://code.google.com/p/thumbnailator/issues/detail?id=42</color>
<color=#75715e>         */</color>
        <color=#f8f8f2>reader</color><color=#f8f8f2>.</color><color=#a6e22e>dispose</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>iis</color><color=#f8f8f2>.</color><color=#a6e22e>close</color><color=#f8f8f2>();</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>finishedReading</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the source file from which an image is read.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return The {@code File} representation of the source file.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>File</color> <color=#a6e22e>getSource</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>sourceFile</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>