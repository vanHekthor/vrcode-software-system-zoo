<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.tasks.io</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.io.IOException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.MalformedURLException</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.Proxy</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.net.URL</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An {@link ImageSource} which retrieves a source image from a URL.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>URLImageSource</color> <color=#66d9ef>extends</color> <color=#f8f8f2>AbstractImageSource</color><color=#f92672><</color><color=#f8f8f2>URL</color><color=#f92672>></color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The URL from which to retrieve the source image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>URL</color> <color=#f8f8f2>url</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The proxy to use to connect to the image URL.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If a proxy is not required, then this field will be {@code null}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Proxy</color> <color=#f8f8f2>proxy</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates an {@link URLImageSource} with the URL from which the</color>
<color=#75715e>     * source image should be retrieved from.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param url URL to the source image.</color>
<color=#75715e>     * @throws NullPointerException If the URL is null</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>URLImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>URL</color> <color=#f8f8f2>url</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>url</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"URL cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>url</color> <color=#f92672>=</color> <color=#f8f8f2>url</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proxy</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates an {@link URLImageSource} with the URL from which the</color>
<color=#75715e>     * source image should be retrieved from.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param url URL to the source image.</color>
<color=#75715e>     * @throws NullPointerException  If the URL is null</color>
<color=#75715e>     * @throws MalformedURLException If the URL is not valid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>URLImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>url</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>MalformedURLException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>url</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"URL cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>url</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>URL</color><color=#f8f8f2>(</color><color=#f8f8f2>url</color><color=#f8f8f2>);</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proxy</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates an {@link URLImageSource} with the URL from which the</color>
<color=#75715e>     * source image should be retrieved from, along with the proxy to use</color>
<color=#75715e>     * to connect to the aforementioned URL.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param url   URL to the source image.</color>
<color=#75715e>     * @param proxy Proxy to use to connect to the URL.</color>
<color=#75715e>     * @throws NullPointerException If the URL and or the proxy is null</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>URLImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>URL</color> <color=#f8f8f2>url</color><color=#f8f8f2>,</color> <color=#f8f8f2>Proxy</color> <color=#f8f8f2>proxy</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>url</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"URL cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>proxy</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Proxy cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>url</color> <color=#f92672>=</color> <color=#f8f8f2>url</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proxy</color> <color=#f92672>=</color> <color=#f8f8f2>proxy</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates an {@link URLImageSource} with the URL from which the</color>
<color=#75715e>     * source image should be retrieved from, along with the proxy to use</color>
<color=#75715e>     * to connect to the aforementioned URL.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param url   URL to the source image.</color>
<color=#75715e>     * @param proxy Proxy to use to connect to the URL.</color>
<color=#75715e>     * @throws NullPointerException  If the URL and or the proxy is null</color>
<color=#75715e>     * @throws MalformedURLException If the URL is not valid.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>URLImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>url</color><color=#f8f8f2>,</color> <color=#f8f8f2>Proxy</color> <color=#f8f8f2>proxy</color><color=#f8f8f2>)</color> <color=#66d9ef>throws</color> <color=#f8f8f2>MalformedURLException</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>url</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"URL cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>proxy</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Proxy cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>url</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>URL</color><color=#f8f8f2>(</color><color=#f8f8f2>url</color><color=#f8f8f2>);</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>proxy</color> <color=#f92672>=</color> <color=#f8f8f2>proxy</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>read</color><color=#f8f8f2>()</color> <color=#66d9ef>throws</color> <color=#f8f8f2>IOException</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>InputStreamImageSource</color> <color=#f8f8f2>source</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>proxy</color> <color=#f92672>!=</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>source</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>InputStreamImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>url</color><color=#f8f8f2>.</color><color=#a6e22e>openConnection</color><color=#f8f8f2>(</color><color=#f8f8f2>proxy</color><color=#f8f8f2>).</color><color=#a6e22e>getInputStream</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
                <color=#f8f8f2>source</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>InputStreamImageSource</color><color=#f8f8f2>(</color><color=#f8f8f2>url</color><color=#f8f8f2>.</color><color=#a6e22e>openStream</color><color=#f8f8f2>());</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>IOException</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>(</color><color=#e6db74>"Could not open connection to URL: "</color> <color=#f92672>+</color> <color=#f8f8f2>url</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>setThumbnailParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>param</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>;</color>
        <color=#66d9ef>try</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>img</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>read</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IOException</color><color=#f8f8f2>(</color><color=#e6db74>"Could not obtain image from URL: "</color> <color=#f92672>+</color> <color=#f8f8f2>url</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>inputFormatName</color> <color=#f92672>=</color> <color=#f8f8f2>source</color><color=#f8f8f2>.</color><color=#a6e22e>getInputFormatName</color><color=#f8f8f2>();</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>finishedReading</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the URL from which the source image is retrieved from.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the url		The URL to the source image.s</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>URL</color> <color=#a6e22e>getSource</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>url</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the proxy to use when connecting to the URL to retrieve the</color>
<color=#75715e>     * source image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return the proxy	The proxy used to connect to a URL.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Proxy</color> <color=#a6e22e>getProxy</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>proxy</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>