<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.geometry</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A representation of a region, using a {@link Position} object and a</color>
<color=#75715e> * {@link Dimension} object.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> * @since 0.3.4</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>Region</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * Position of the region.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Size of the region.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Size</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a representation of a region from a {@link Position} and</color>
<color=#75715e>     * {@link Size}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param position Position of the region.</color>
<color=#75715e>     * @param size     Size of the region.</color>
<color=#75715e>     * @throws NullPointerException When the position and/or the size is</color>
<color=#75715e>     *                              {@code null}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>Region</color><color=#f8f8f2>(</color><color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#f8f8f2>Size</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>position</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Position cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>size</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Size cannot be null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>position</color> <color=#f92672>=</color> <color=#f8f8f2>position</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>size</color> <color=#f92672>=</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the position of the region.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return Position of the region.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Position</color> <color=#a6e22e>getPosition</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>position</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the size of the region.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return Size of the region.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Size</color> <color=#a6e22e>getSize</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Calculates the position and size of the enclosed region, relative to the</color>
<color=#75715e>     * enclosing region.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * The portions of the enclosed region which lies outside of the enclosing</color>
<color=#75715e>     * region are ignored. Effectively, the {@link Rectangle} returned by this</color>
<color=#75715e>     * method is a intersection of the enclosing and enclose regions.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width  Width of the enclosing region.</color>
<color=#75715e>     * @param height Height of the enclosing region.</color>
<color=#75715e>     * @return Position and size of the enclosed region.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>Rectangle</color> <color=#a6e22e>calculate</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>Dimension</color> <color=#f8f8f2>d</color> <color=#f92672>=</color> <color=#f8f8f2>size</color><color=#f8f8f2>.</color><color=#a6e22e>calculate</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>Point</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>position</color><color=#f8f8f2>.</color><color=#a6e22e>calculate</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>d</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>d</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>outerRectangle</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Rectangle</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>Rectangle</color> <color=#f8f8f2>innerRectangle</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Rectangle</color><color=#f8f8f2>(</color><color=#f8f8f2>p</color><color=#f8f8f2>,</color> <color=#f8f8f2>d</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>outerRectangle</color><color=#f8f8f2>.</color><color=#a6e22e>intersection</color><color=#f8f8f2>(</color><color=#f8f8f2>innerRectangle</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns a {@code String} representation of this region.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return        {@code String} representation of this region.</color>
<color=#75715e>     */</color>
    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"Region [position="</color> <color=#f92672>+</color> <color=#f8f8f2>position</color> <color=#f92672>+</color> <color=#e6db74>", size="</color> <color=#f92672>+</color> <color=#f8f8f2>size</color> <color=#f92672>+</color> <color=#e6db74>"]"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>