<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.builders</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A builder for creating {@link BufferedImage} with specified parameters.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>BufferedImageBuilder</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The default image type of the {@link BufferedImage}s to be created</color>
<color=#75715e>     * by this builder.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>DEFAULT_TYPE</color> <color=#f92672>=</color> <color=#f8f8f2>BufferedImage</color><color=#f8f8f2>.</color><color=#a6e22e>TYPE_INT_ARGB</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The image type to use for the {@link BufferedImage} that is to be</color>
<color=#75715e>     * created.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The width to use for the {@link BufferedImage} that is to be created.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The height to use for the {@link BufferedImage} that is to be created.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code BufferedImageBuilder} with the specified size, and</color>
<color=#75715e>     * the default image type.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param size The size of the {@link BufferedImage} to build.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>BufferedImageBuilder</color><color=#f8f8f2>(</color><color=#f8f8f2>Dimension</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>size</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code BufferedImageBuilder} with the specified size and</color>
<color=#75715e>     * image type.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param size      The size of the {@link BufferedImage} to build.</color>
<color=#75715e>     * @param imageType The image type of the {@link BufferedImage} to build.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>BufferedImageBuilder</color><color=#f8f8f2>(</color><color=#f8f8f2>Dimension</color> <color=#f8f8f2>size</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>size</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code BufferedImageBuilder} with the specified size, and</color>
<color=#75715e>     * the default image type.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width  The width of the {@link BufferedImage} to build.</color>
<color=#75715e>     * @param height The height of the {@link BufferedImage} to build.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>BufferedImageBuilder</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>DEFAULT_TYPE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a {@code BufferedImageBuilder} with the specified size and</color>
<color=#75715e>     * image type.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width     The width of the {@link BufferedImage} to build.</color>
<color=#75715e>     * @param height    The height of the {@link BufferedImage} to build.</color>
<color=#75715e>     * @param imageType The image type of the {@link BufferedImage} to build.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>BufferedImageBuilder</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>size</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>imageType</color><color=#f8f8f2>(</color><color=#f8f8f2>imageType</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Generates a new {@code BufferedImage}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return Returns a newly created {@link BufferedImage} from the</color>
<color=#75715e>     * parameters set in the {@link BufferedImageBuilder}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>build</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>BufferedImage</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the type of the image of the {@link BufferedImage}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param imageType The image type to use.</color>
<color=#75715e>     * @return This {@link BufferedImageBuilder} instance.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImageBuilder</color> <color=#a6e22e>imageType</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>imageType</color> <color=#f92672>=</color> <color=#f8f8f2>imageType</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the size for the {@code BufferedImage}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width  The width of the image to create.</color>
<color=#75715e>     * @param height The height of the image to create.</color>
<color=#75715e>     * @return This {@link BufferedImageBuilder} instance.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImageBuilder</color> <color=#a6e22e>size</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>width</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>height</color><color=#f8f8f2>(</color><color=#f8f8f2>height</color><color=#f8f8f2>);</color>

        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the width for the {@link BufferedImage}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width The width of the image to create.</color>
<color=#75715e>     * @return This {@link BufferedImageBuilder} instance.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImageBuilder</color> <color=#a6e22e>width</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Width must be greater than 0."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the height for the {@link BufferedImage}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param height The height of the image to create.</color>
<color=#75715e>     * @return This {@link BufferedImageBuilder} instance.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImageBuilder</color> <color=#a6e22e>height</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>height</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"Height must be greater than 0."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>