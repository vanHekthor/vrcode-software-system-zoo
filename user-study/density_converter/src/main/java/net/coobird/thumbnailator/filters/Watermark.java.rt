<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.filters</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.builders.BufferedImageBuilder</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.geometry.Position</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * This class applies a watermark to an image.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Watermark</color> <color=#66d9ef>implements</color> <color=#f8f8f2>ImageFilter</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The position of the watermark.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The watermark image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>watermarkImg</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The opacity of the watermark.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>final</color> <color=#66d9ef>float</color> <color=#f8f8f2>opacity</color><color=#f8f8f2>;</color>


    <color=#75715e>/**</color>
<color=#75715e>     * Instantiates a filter which applies a watermark to an image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param position     The position of the watermark.</color>
<color=#75715e>     * @param watermarkImg The watermark image.</color>
<color=#75715e>     * @param opacity      The opacity of the watermark.</color>
<color=#75715e>     *                     <p></color>
<color=#75715e>     *                     The value should be between {@code 0.0f} and</color>
<color=#75715e>     *                     {@code 1.0f}, where {@code 0.0f} is completely</color>
<color=#75715e>     *                     transparent, and {@code 1.0f} is completely</color>
<color=#75715e>     *                     opaque.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>Watermark</color><color=#f8f8f2>(</color><color=#f8f8f2>Position</color> <color=#f8f8f2>position</color><color=#f8f8f2>,</color> <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>watermarkImg</color><color=#f8f8f2>,</color>
                     <color=#66d9ef>float</color> <color=#f8f8f2>opacity</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>position</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Position is null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>watermarkImg</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Watermark image is null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>opacity</color> <color=#f92672>></color> <color=#ae81ff>1.0f</color> <color=#f92672>||</color> <color=#f8f8f2>opacity</color> <color=#f92672><</color> <color=#ae81ff>0.0f</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Opacity is out of range of "</color> <color=#f92672>+</color>
                    <color=#e6db74>"between 0.0f and 1.0f."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>position</color> <color=#f92672>=</color> <color=#f8f8f2>position</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>watermarkImg</color> <color=#f92672>=</color> <color=#f8f8f2>watermarkImg</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>opacity</color> <color=#f92672>=</color> <color=#f8f8f2>opacity</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>apply</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>type</color> <color=#f92672>=</color> <color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getType</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>imgWithWatermark</color> <color=#f92672>=</color>
                <color=#66d9ef>new</color> <color=#f8f8f2>BufferedImageBuilder</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>type</color><color=#f8f8f2>).</color><color=#a6e22e>build</color><color=#f8f8f2>();</color>

        <color=#66d9ef>int</color> <color=#f8f8f2>watermarkWidth</color> <color=#f92672>=</color> <color=#f8f8f2>watermarkImg</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>watermarkHeight</color> <color=#f92672>=</color> <color=#f8f8f2>watermarkImg</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>();</color>

        <color=#f8f8f2>Point</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>position</color><color=#f8f8f2>.</color><color=#a6e22e>calculate</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>,</color> <color=#f8f8f2>watermarkWidth</color><color=#f8f8f2>,</color> <color=#f8f8f2>watermarkHeight</color><color=#f8f8f2>,</color>
                <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>Graphics2D</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>imgWithWatermark</color><color=#f8f8f2>.</color><color=#a6e22e>createGraphics</color><color=#f8f8f2>();</color>

        <color=#75715e>// Draw the actual image.</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>drawImage</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

        <color=#75715e>// Draw the watermark on top.</color>
        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>setComposite</color><color=#f8f8f2>(</color>
                <color=#f8f8f2>AlphaComposite</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>(</color><color=#f8f8f2>AlphaComposite</color><color=#f8f8f2>.</color><color=#a6e22e>SRC_OVER</color><color=#f8f8f2>,</color> <color=#f8f8f2>opacity</color><color=#f8f8f2>)</color>
        <color=#f8f8f2>);</color>

        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>drawImage</color><color=#f8f8f2>(</color><color=#f8f8f2>watermarkImg</color><color=#f8f8f2>,</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>x</color><color=#f8f8f2>,</color> <color=#f8f8f2>p</color><color=#f8f8f2>.</color><color=#a6e22e>y</color><color=#f8f8f2>,</color> <color=#66d9ef>null</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>g</color><color=#f8f8f2>.</color><color=#a6e22e>dispose</color><color=#f8f8f2>();</color>

        <color=#66d9ef>return</color> <color=#f8f8f2>imgWithWatermark</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>