<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.util.exif</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * This enum corresponds to the types of data present in an IFD,</color>
<color=#75715e> * as defined in Section 4.6.2 of the Exif Specification version 2.3.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>enum</color> <color=#f8f8f2>IfdType</color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * An 8-bit unsigned integer value.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>BYTE</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>),</color>

    <color=#75715e>/**</color>
<color=#75715e>     * An 8-bit value containing a single 7-bit ASCII character.</color>
<color=#75715e>     * The final byte is NULL-terminated.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>ASCII</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>),</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A 16-bit unsigned integer value.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>SHORT</color><color=#f8f8f2>(</color><color=#ae81ff>3</color><color=#f8f8f2>,</color> <color=#ae81ff>2</color><color=#f8f8f2>),</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A 32-bit unsigned integer value.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>LONG</color><color=#f8f8f2>(</color><color=#ae81ff>4</color><color=#f8f8f2>,</color> <color=#ae81ff>4</color><color=#f8f8f2>),</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Two {@link #LONG} values, where the first {@code LONG} is the</color>
<color=#75715e>     * numerator, while the second {@code LONG} is the denominator.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>RATIONAL</color><color=#f8f8f2>(</color><color=#ae81ff>5</color><color=#f8f8f2>,</color> <color=#f8f8f2>LONG</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#ae81ff>2</color><color=#f8f8f2>),</color>

    <color=#75715e>/**</color>
<color=#75715e>     * An 8-bit value which can be value as defined elsewhere.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>UNDEFINED</color><color=#f8f8f2>(</color><color=#ae81ff>7</color><color=#f8f8f2>,</color> <color=#ae81ff>1</color><color=#f8f8f2>),</color>

    <color=#75715e>/**</color>
<color=#75715e>     * A 32-bit signed integer value using 2's complement.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>SLONG</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>,</color> <color=#ae81ff>4</color><color=#f8f8f2>),</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Two {@link #SLONG} values, where the first {@code SLONG} is the</color>
<color=#75715e>     * numerator, while the second {@code SLONG} is the denominator.</color>
<color=#75715e>     */</color>
    <color=#f8f8f2>SRATIONAL</color><color=#f8f8f2>(</color><color=#ae81ff>5</color><color=#f8f8f2>,</color> <color=#f8f8f2>SLONG</color><color=#f8f8f2>.</color><color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#ae81ff>2</color><color=#f8f8f2>),</color>
    <color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#a6e22e>IfdType</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>value</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>value</color> <color=#f92672>=</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>size</color> <color=#f92672>=</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the size in bytes for this IFD type.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return Size in bytes for this IFD type.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>size</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>size</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the IFD type as a type value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return IFD type as a type value.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>value</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>value</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns the {@link IfdType} corresponding to the given IFD type value.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param value The IFD type value.</color>
<color=#75715e>     * @return            {@link IfdType} corresponding to the IDF type value.</color>
<color=#75715e>     * Return {@code null} if the given value does not</color>
<color=#75715e>     * correspond to a	valid {@link IfdType}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#66d9ef>static</color> <color=#f8f8f2>IfdType</color> <color=#a6e22e>typeOf</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#f8f8f2>IfdType</color> <color=#f8f8f2>type</color> <color=#f8f8f2>:</color> <color=#f8f8f2>IfdType</color><color=#f8f8f2>.</color><color=#a6e22e>values</color><color=#f8f8f2>())</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>type</color><color=#f8f8f2>.</color><color=#a6e22e>value</color> <color=#f92672>==</color> <color=#f8f8f2>value</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
                <color=#66d9ef>return</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>}</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>return</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns a textual {@link String} reprensentation of this enum.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @return A textual representation of this enum.</color>
<color=#75715e>     */</color>
    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>toString</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#e6db74>"IfdType [type="</color> <color=#f92672>+</color> <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>name</color><color=#f8f8f2>()</color> <color=#f92672>+</color> <color=#e6db74>", value="</color> <color=#f92672>+</color> <color=#f8f8f2>value</color> <color=#f92672>+</color> <color=#e6db74>", size="</color> <color=#f92672>+</color> <color=#f8f8f2>size</color> <color=#f92672>+</color> <color=#e6db74>"]"</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>