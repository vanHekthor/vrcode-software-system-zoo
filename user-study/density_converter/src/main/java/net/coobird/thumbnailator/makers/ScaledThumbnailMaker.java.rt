<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.makers</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A {@link ThumbnailMaker} which scales an image by a specified scaling factor</color>
<color=#75715e> * when producing a thumbnail.</color>
<color=#75715e> * <p></color>
<color=#75715e> * Upon calculating the size of the thumbnail, if any of the dimensions are</color>
<color=#75715e> * {@code 0}, then that dimension will be promoted to {@code 1}. This will</color>
<color=#75715e> * cause some resizing operations to not preserve the aspect ratio of the</color>
<color=#75715e> * original image.</color>
<color=#75715e> * <p></color>
<color=#75715e> * <DL></color>
<color=#75715e> * <DT><B>Usage:</B></DT></color>
<color=#75715e> * <DD></color>
<color=#75715e> * The following example demonstrates how to create a thumbnail which is 25%</color>
<color=#75715e> * the size of the source image:</color>
<color=#75715e> * <pre></color>
<color=#75715e> * BufferedImage img = ImageIO.read(new File("sourceImage.jpg"));</color>
<color=#75715e> * BufferedImage thumbnail = new ScaledThumbnailMaker()</color>
<color=#75715e> * .scale(0.25)</color>
<color=#75715e> * .make(img);</color>
<color=#75715e> * </pre></color>
<color=#75715e> * </DD></color>
<color=#75715e> * </DL></color>
<color=#75715e> * It is also possible to independently specify the scaling factor for the</color>
<color=#75715e> * width and height. (If the two scaling factors are not equal then the aspect</color>
<color=#75715e> * ratio of the original image will not be preserved.)</color>
<color=#75715e> * <p></color>
<color=#75715e> * <DL></color>
<color=#75715e> * <DT><B>Usage:</B></DT></color>
<color=#75715e> * <DD></color>
<color=#75715e> * The following example demonstrates how to create a thumbnail which is scaled</color>
<color=#75715e> * 50% in the width and 75% in the height:</color>
<color=#75715e> * <pre></color>
<color=#75715e> * BufferedImage img = ImageIO.read(new File("sourceImage.jpg"));</color>
<color=#75715e> * BufferedImage thumbnail = new ScaledThumbnailMaker()</color>
<color=#75715e> * .scale(0.50, 0.75)</color>
<color=#75715e> * .make(img);</color>
<color=#75715e> * </pre></color>
<color=#75715e> * </DD></color>
<color=#75715e> * </DL></color>
<color=#75715e> * <DL></color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>ScaledThumbnailMaker</color> <color=#66d9ef>extends</color> <color=#f8f8f2>ThumbnailMaker</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#f8f8f2>String</color> <color=#f8f8f2>PARAM_SCALE</color> <color=#f92672>=</color> <color=#e6db74>"scale"</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The scaling factor to apply to the width when resizing an image to</color>
<color=#75715e>     * create a thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>double</color> <color=#f8f8f2>widthFactor</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The scaling factor to apply to the height when resizing an image to</color>
<color=#75715e>     * create a thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>private</color> <color=#66d9ef>double</color> <color=#f8f8f2>heightFactor</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Creates an instance of {@code ScaledThumbnailMaker} without the</color>
<color=#75715e>     * scaling factor specified.</color>
<color=#75715e>     * </p></color>
<color=#75715e>     * <p></color>
<color=#75715e>     * To use this {@code ScaledThumbnailMaker}, one must specify the</color>
<color=#75715e>     * scaling factor to use by calling the {@link #scale(double)} method</color>
<color=#75715e>     * before generating a thumbnail.</color>
<color=#75715e>     * </p></color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ScaledThumbnailMaker</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>super</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>unset</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_SCALE</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an instance of {@code ScaledThumbnailMaker} with the specified</color>
<color=#75715e>     * scaling factor.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param factor The scaling factor to apply when resizing an</color>
<color=#75715e>     *               image to create a thumbnail.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ScaledThumbnailMaker</color><color=#f8f8f2>(</color><color=#66d9ef>double</color> <color=#f8f8f2>factor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>factor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an instance of {@code ScaledThumbnailMaker} with the specified</color>
<color=#75715e>     * scaling factors for the width and height.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param widthFactor  The scaling factor to apply to the width when</color>
<color=#75715e>     *                     resizing an image to create a thumbnail.</color>
<color=#75715e>     * @param heightFactor The scaling factor to apply to the height when</color>
<color=#75715e>     *                     resizing an image to create a thumbnail.</color>
<color=#75715e>     * @since 0.3.10</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ScaledThumbnailMaker</color><color=#f8f8f2>(</color><color=#66d9ef>double</color> <color=#f8f8f2>widthFactor</color><color=#f8f8f2>,</color> <color=#66d9ef>double</color> <color=#f8f8f2>heightFactor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>widthFactor</color><color=#f8f8f2>,</color> <color=#f8f8f2>heightFactor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Sets the scaling factor for the thumbnail.</color>
<color=#75715e>     * </p></color>
<color=#75715e>     * <p></color>
<color=#75715e>     * The aspect ratio of the resulting image is unaltered from the original.</color>
<color=#75715e>     * </p></color>
<color=#75715e>     *</color>
<color=#75715e>     * @param factor The scaling factor to apply when resizing an</color>
<color=#75715e>     *               image to create a thumbnail.</color>
<color=#75715e>     * @throws IllegalStateException If the scaling factor has already</color>
<color=#75715e>     *                               been previously set.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ScaledThumbnailMaker</color> <color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#66d9ef>double</color> <color=#f8f8f2>factor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>factor</color><color=#f8f8f2>,</color> <color=#f8f8f2>factor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Sets the scaling factors for the thumbnail.</color>
<color=#75715e>     * </p></color>
<color=#75715e>     *</color>
<color=#75715e>     * @param widthFactor  The scaling factor to apply to the width when</color>
<color=#75715e>     *                     resizing an image to create a thumbnail.</color>
<color=#75715e>     * @param heightFactor The scaling factor to apply to the height when</color>
<color=#75715e>     *                     resizing an image to create a thumbnail.</color>
<color=#75715e>     * @throws IllegalStateException If the scaling factor has already</color>
<color=#75715e>     *                               been previously set.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.3.10</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ScaledThumbnailMaker</color> <color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#66d9ef>double</color> <color=#f8f8f2>widthFactor</color><color=#f8f8f2>,</color> <color=#66d9ef>double</color> <color=#f8f8f2>heightFactor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>isSet</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_SCALE</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"The scaling factor has already been set."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>widthFactor</color> <color=#f92672><=</color> <color=#ae81ff>0</color> <color=#f92672>||</color> <color=#f8f8f2>heightFactor</color> <color=#f92672><=</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"The scaling factor must be greater than zero."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>widthFactor</color> <color=#f92672>=</color> <color=#f8f8f2>widthFactor</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>heightFactor</color> <color=#f92672>=</color> <color=#f8f8f2>heightFactor</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>ready</color><color=#f8f8f2>.</color><color=#a6e22e>set</color><color=#f8f8f2>(</color><color=#f8f8f2>PARAM_SCALE</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>BufferedImage</color> <color=#a6e22e>make</color><color=#f8f8f2>(</color><color=#f8f8f2>BufferedImage</color> <color=#f8f8f2>img</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getWidth</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>widthFactor</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color> <color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>round</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>.</color><color=#a6e22e>getHeight</color><color=#f8f8f2>()</color> <color=#f92672>*</color> <color=#f8f8f2>heightFactor</color><color=#f8f8f2>);</color>

        <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>height</color> <color=#f92672>==</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f92672>?</color> <color=#ae81ff>1</color> <color=#f8f8f2>:</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>

        <color=#66d9ef>return</color> <color=#66d9ef>super</color><color=#f8f8f2>.</color><color=#a6e22e>makeThumbnail</color><color=#f8f8f2>(</color><color=#f8f8f2>img</color><color=#f8f8f2>,</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>