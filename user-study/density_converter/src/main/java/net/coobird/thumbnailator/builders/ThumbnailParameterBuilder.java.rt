<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.builders</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.ThumbnailParameter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.filters.ImageFilter</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.geometry.Region</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.DefaultResizerFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.FixedResizerFactory</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.Resizer</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.resizers.ResizerFactory</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.awt.*</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.awt.image.BufferedImage</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.Collections</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>java.util.List</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * A builder for generating {@link ThumbnailParameter}.</color>
<color=#75715e> * <p></color>
<color=#75715e> * The default values assigned to the {@link ThumbnailParameter} created by</color>
<color=#75715e> * the {@link ThumbnailParameterBuilder} are as follows:</color>
<color=#75715e> * <p></color>
<color=#75715e> * <dl></color>
<color=#75715e> * <dt>width</dt></color>
<color=#75715e> * <dd>Unassigned. Must be set by the {@link #size(int, int)} method.</dd></color>
<color=#75715e> * <dt>height</dt></color>
<color=#75715e> * <dd>Unassigned. Must be set by the {@link #size(int, int)} method.</dd></color>
<color=#75715e> * <dt>scaling factor</dt></color>
<color=#75715e> * <dd>Unassigned. Must be set by the {@link #scale(double)} method or</color>
<color=#75715e> * {@link #scale(double, double)} method.</dd></color>
<color=#75715e> * <dt>source region</dt></color>
<color=#75715e> * <dd>Uses the entire source image.</dd></color>
<color=#75715e> * <dt>image type</dt></color>
<color=#75715e> * <dd>See {@link ThumbnailParameter#DEFAULT_IMAGE_TYPE}. Same as</color>
<color=#75715e> * {@link BufferedImage#TYPE_INT_ARGB}.</dd></color>
<color=#75715e> * <dt>aspect ratio</dt></color>
<color=#75715e> * <dd>Maintain the aspect ratio of the original image.</dd></color>
<color=#75715e> * <dt>output quality</dt></color>
<color=#75715e> * <dd>See {@link ThumbnailParameter#DEFAULT_QUALITY}.</dd></color>
<color=#75715e> * <dt>output format</dt></color>
<color=#75715e> * <dd>See {@link ThumbnailParameter#ORIGINAL_FORMAT}. Maintains the same</color>
<color=#75715e> * image format as the original image.</dd></color>
<color=#75715e> * <dt>output format type</dt></color>
<color=#75715e> * <dd>See {@link ThumbnailParameter#DEFAULT_FORMAT_TYPE}. Uses the default</color>
<color=#75715e> * format type of the codec used to create the thumbnail image.</dd></color>
<color=#75715e> * <dt>image filters</dt></color>
<color=#75715e> * <dd>None.</dd></color>
<color=#75715e> * <dt>resizer factory</dt></color>
<color=#75715e> * <dd>{@link DefaultResizerFactory} is used.</dd></color>
<color=#75715e> * <dt>resizer</dt></color>
<color=#75715e> * <dd>The default {@link Resizer} returned by the {@link ResizerFactory}.</dd></color>
<color=#75715e> * <dt>use of Exif metadata for orientation</dt></color>
<color=#75715e> * <dd>Use the Exif metadata to determine the orientation of the thumbnail.</dd></color>
<color=#75715e> * </dl></color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>final</color> <color=#66d9ef>class</color> <color=#a6e22e>ThumbnailParameterBuilder</color> <color=#f8f8f2>{</color>
    <color=#66d9ef>private</color> <color=#66d9ef>static</color> <color=#66d9ef>final</color> <color=#66d9ef>int</color> <color=#f8f8f2>UNINITIALIZED</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>

    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>width</color> <color=#f92672>=</color> <color=#f8f8f2>UNINITIALIZED</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color> <color=#f92672>=</color> <color=#f8f8f2>UNINITIALIZED</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>double</color> <color=#f8f8f2>widthScalingFactor</color> <color=#f92672>=</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>NaN</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>double</color> <color=#f8f8f2>heightScalingFactor</color> <color=#f92672>=</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>NaN</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>int</color> <color=#f8f8f2>imageType</color> <color=#f92672>=</color> <color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_IMAGE_TYPE</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>keepAspectRatio</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>float</color> <color=#f8f8f2>thumbnailQuality</color> <color=#f92672>=</color> <color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_QUALITY</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>thumbnailFormat</color> <color=#f92672>=</color> <color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>.</color><color=#a6e22e>ORIGINAL_FORMAT</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>thumbnailFormatType</color> <color=#f92672>=</color> <color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>.</color><color=#a6e22e>DEFAULT_FORMAT_TYPE</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color> <color=#f92672>=</color> <color=#f8f8f2>Collections</color><color=#f8f8f2>.</color><color=#a6e22e>emptyList</color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color> <color=#f92672>=</color> <color=#f8f8f2>DefaultResizerFactory</color><color=#f8f8f2>.</color><color=#a6e22e>getInstance</color><color=#f8f8f2>();</color>
    <color=#66d9ef>private</color> <color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color> <color=#f92672>=</color> <color=#66d9ef>null</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>fitWithinDimensions</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
    <color=#66d9ef>private</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>useExifOrientation</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Creates an instance of a {@link ThumbnailParameterBuilder}.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#a6e22e>ThumbnailParameterBuilder</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the image type fo the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param type The image type of the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>imageType</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>type</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>imageType</color> <color=#f92672>=</color> <color=#f8f8f2>type</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the size of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param size The dimensions of the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>size</color><color=#f8f8f2>(</color><color=#f8f8f2>Dimension</color> <color=#f8f8f2>size</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>size</color><color=#f8f8f2>(</color><color=#f8f8f2>size</color><color=#f8f8f2>.</color><color=#a6e22e>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>size</color><color=#f8f8f2>.</color><color=#a6e22e>height</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the size of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param width  The width of the thumbnail.</color>
<color=#75715e>     * @param height The height of the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If the widht or height is less than 0.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>size</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>height</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Width must be greater than 0."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>height</color> <color=#f92672><</color> <color=#ae81ff>0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Height must be greater than 0."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>width</color> <color=#f92672>=</color> <color=#f8f8f2>width</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>height</color> <color=#f92672>=</color> <color=#f8f8f2>height</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the scaling factor of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param scalingFactor The scaling factor of the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If the scaling factor is not a</color>
<color=#75715e>     *                                  rational number, or if it is less</color>
<color=#75715e>     *                                  than {@code 0.0}.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#66d9ef>double</color> <color=#f8f8f2>scalingFactor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>scale</color><color=#f8f8f2>(</color><color=#f8f8f2>scalingFactor</color><color=#f8f8f2>,</color> <color=#f8f8f2>scalingFactor</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the scaling factor of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param widthScalingFactor  The scaling factor to use for the width</color>
<color=#75715e>     *                            when creating the thumbnail.</color>
<color=#75715e>     * @param heightScalingFactor The scaling factor to use for the height</color>
<color=#75715e>     *                            when creating the thumbnail.</color>
<color=#75715e>     * @throws IllegalArgumentException If the scaling factor is not a</color>
<color=#75715e>     *                                  rational number, or if it is less</color>
<color=#75715e>     *                                  than {@code 0.0}.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.3.10</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>scale</color><color=#f8f8f2>(</color><color=#66d9ef>double</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>,</color> <color=#66d9ef>double</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>widthScalingFactor</color> <color=#f92672><=</color> <color=#ae81ff>0.0</color> <color=#f92672>||</color> <color=#f8f8f2>heightScalingFactor</color> <color=#f92672><=</color> <color=#ae81ff>0.0</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Scaling factor is less than or equal to 0."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isNaN</color><color=#f8f8f2>(</color><color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isInfinite</color><color=#f8f8f2>(</color><color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Scaling factor must be a rational number."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isNaN</color><color=#f8f8f2>(</color><color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>)</color> <color=#f92672>||</color> <color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isInfinite</color><color=#f8f8f2>(</color><color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalArgumentException</color><color=#f8f8f2>(</color><color=#e6db74>"Scaling factor must be a rational number."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>widthScalingFactor</color> <color=#f92672>=</color> <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>;</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>heightScalingFactor</color> <color=#f92672>=</color> <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the region of the source image to use when creating a thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param sourceRegion The region of the source image to use when</color>
<color=#75715e>     *                     creating a thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.3.4</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>region</color><color=#f8f8f2>(</color><color=#f8f8f2>Region</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>sourceRegion</color> <color=#f92672>=</color> <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets whether or not the thumbnail is to maintain the aspect ratio of</color>
<color=#75715e>     * the original image.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param keep {@code true} if the aspect ratio of the original image</color>
<color=#75715e>     *             is to be maintained in the thumbnail, {@code false}</color>
<color=#75715e>     *             otherwise.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>keepAspectRatio</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>keep</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>keepAspectRatio</color> <color=#f92672>=</color> <color=#f8f8f2>keep</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the compression quality setting of the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * An acceptable value is in the range of {@code 0.0f} to {@code 1.0f},</color>
<color=#75715e>     * where {@code 0.0f} is for the lowest quality setting and {@code 1.0f} for</color>
<color=#75715e>     * the highest quality setting.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * If the default compression quality is to be used, then the value</color>
<color=#75715e>     * {@link ThumbnailParameter#DEFAULT_QUALITY} should be used.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param quality The compression quality setting of the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>quality</color><color=#f8f8f2>(</color><color=#66d9ef>float</color> <color=#f8f8f2>quality</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>thumbnailQuality</color> <color=#f92672>=</color> <color=#f8f8f2>quality</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the output format of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param format The output format of the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>format</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>format</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>thumbnailFormat</color> <color=#f92672>=</color> <color=#f8f8f2>format</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the output format type of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param formatType The output format type of the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>formatType</color><color=#f8f8f2>(</color><color=#f8f8f2>String</color> <color=#f8f8f2>formatType</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>thumbnailFormatType</color> <color=#f92672>=</color> <color=#f8f8f2>formatType</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the {@link ImageFilter}s to apply to the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * These filters will be applied after the original image is resized.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param filters The output format type of the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>filters</color><color=#f8f8f2>(</color><color=#f8f8f2>List</color><color=#f92672><</color><color=#f8f8f2>ImageFilter</color><color=#f92672>></color> <color=#f8f8f2>filters</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>filters</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Filters is null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>filters</color> <color=#f92672>=</color> <color=#f8f8f2>filters</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the {@link Resizer} to use when performing the resizing operation</color>
<color=#75715e>     * to create the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Calling this method after {@link #resizerFactory(ResizerFactory)} will</color>
<color=#75715e>     * cause the {@link ResizerFactory} used by the resulting</color>
<color=#75715e>     * {@link ThumbnailParameter} to only return the specified {@link Resizer}.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param resizer The {@link Resizer} to use when creating the</color>
<color=#75715e>     *                thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>resizer</color><color=#f8f8f2>(</color><color=#f8f8f2>Resizer</color> <color=#f8f8f2>resizer</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>resizer</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Resizer is null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>resizerFactory</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>FixedResizerFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>resizer</color><color=#f8f8f2>);</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets the {@link ResizerFactory} to use to obtain a {@link Resizer} when</color>
<color=#75715e>     * performing the resizing operation to create the thumbnail.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * Calling this method after {@link #resizer(Resizer)} could result in</color>
<color=#75715e>     * {@link Resizer}s not specified in the {@code resizer} method to be used</color>
<color=#75715e>     * when creating thumbnails.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param resizerFactory The {@link ResizerFactory} to use when obtaining</color>
<color=#75715e>     *                       a {@link Resizer} to create the thumbnail.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.4.0</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>resizerFactory</color><color=#f8f8f2>(</color><color=#f8f8f2>ResizerFactory</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>resizerFactory</color> <color=#f92672>==</color> <color=#66d9ef>null</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>NullPointerException</color><color=#f8f8f2>(</color><color=#e6db74>"Resizer is null."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>

        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>resizerFactory</color> <color=#f92672>=</color> <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets whether or not the thumbnail should fit within the specified</color>
<color=#75715e>     * dimensions.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param fit {@code true} if the thumbnail should be sized to fit</color>
<color=#75715e>     *            within the specified dimensions, if the thumbnail</color>
<color=#75715e>     *            is going to exceed those dimensions.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.4.0</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>fitWithinDimensions</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>fit</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>fitWithinDimensions</color> <color=#f92672>=</color> <color=#f8f8f2>fit</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Sets whether or not the Exif metadata should be used to determine the</color>
<color=#75715e>     * orientation of the thumbnail.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @param use {@code true} if the Exif metadata should be used</color>
<color=#75715e>     *            to determine the orientation of the thumbnail,</color>
<color=#75715e>     *            {@code false} otherwise.</color>
<color=#75715e>     * @return A reference to this object.</color>
<color=#75715e>     * @since 0.4.3</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameterBuilder</color> <color=#a6e22e>useExifOrientation</color><color=#f8f8f2>(</color><color=#66d9ef>boolean</color> <color=#f8f8f2>use</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>useExifOrientation</color> <color=#f92672>=</color> <color=#f8f8f2>use</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#66d9ef>this</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Returns a {@link ThumbnailParameter} from the parameters which are</color>
<color=#75715e>     * currently set.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * This method will throw a {@link IllegalArgumentException} required</color>
<color=#75715e>     * parameters for the {@link ThumbnailParameter} have not been set.</color>
<color=#75715e>     *</color>
<color=#75715e>     * @throws IllegalStateException If neither the size nor the scaling</color>
<color=#75715e>     *                               factor has been set.</color>
<color=#75715e>     * @return A {@link ThumbnailParameter} with parameters set through</color>
<color=#75715e>     * the use of this builder.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>public</color> <color=#f8f8f2>ThumbnailParameter</color> <color=#a6e22e>build</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>Double</color><color=#f8f8f2>.</color><color=#a6e22e>isNaN</color><color=#f8f8f2>(</color><color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>))</color> <color=#f8f8f2>{</color>
            <color=#75715e>// If scaling factor has been set.</color>
            <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>(</color>
                    <color=#f8f8f2>widthScalingFactor</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>heightScalingFactor</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>thumbnailFormat</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>thumbnailFormatType</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>thumbnailQuality</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>useExifOrientation</color>
            <color=#f8f8f2>);</color>

        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>width</color> <color=#f92672>!=</color> <color=#f8f8f2>UNINITIALIZED</color> <color=#f92672>&&</color> <color=#f8f8f2>height</color> <color=#f92672>!=</color> <color=#f8f8f2>UNINITIALIZED</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>return</color> <color=#66d9ef>new</color> <color=#f8f8f2>ThumbnailParameter</color><color=#f8f8f2>(</color>
                    <color=#66d9ef>new</color> <color=#f8f8f2>Dimension</color><color=#f8f8f2>(</color><color=#f8f8f2>width</color><color=#f8f8f2>,</color> <color=#f8f8f2>height</color><color=#f8f8f2>),</color>
                    <color=#f8f8f2>sourceRegion</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>keepAspectRatio</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>thumbnailFormat</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>thumbnailFormatType</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>thumbnailQuality</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>imageType</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>filters</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>resizerFactory</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>fitWithinDimensions</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>useExifOrientation</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color>
                    <color=#e6db74>"The size nor the scaling factor has been set."</color>
            <color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>