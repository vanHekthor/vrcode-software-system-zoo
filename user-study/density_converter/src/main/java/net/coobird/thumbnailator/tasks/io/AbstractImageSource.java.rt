<color=#f92672>package</color> <color=#f8f8f2>net.coobird.thumbnailator.tasks.io</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>net.coobird.thumbnailator.ThumbnailParameter</color><color=#f8f8f2>;</color>

<color=#75715e>/**</color>
<color=#75715e> * An abstract class for {@link ImageSource}s.</color>
<color=#75715e> *</color>
<color=#75715e> * @author coobird</color>
<color=#75715e> */</color>
<color=#66d9ef>public</color> <color=#66d9ef>abstract</color> <color=#66d9ef>class</color> <color=#a6e22e>AbstractImageSource</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#66d9ef>implements</color> <color=#f8f8f2>ImageSource</color><color=#f92672><</color><color=#f8f8f2>T</color><color=#f92672>></color> <color=#f8f8f2>{</color>
    <color=#75715e>/**</color>
<color=#75715e>     * The image format of the input image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>String</color> <color=#f8f8f2>inputFormatName</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * The parameters that should be used when retrieving the image.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#f8f8f2>ThumbnailParameter</color> <color=#f8f8f2>param</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Indicates whether the input has already been read.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#66d9ef>boolean</color> <color=#f8f8f2>hasReadInput</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Default constructor.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#a6e22e>AbstractImageSource</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
    <color=#f8f8f2>}</color>

    <color=#75715e>/**</color>
<color=#75715e>     * Indicates that the {@link ImageSource} has completed reading the input</color>
<color=#75715e>     * file, and returns the value given in the argument.</color>
<color=#75715e>     * <p></color>
<color=#75715e>     * This method should be used by implementation classes when returning</color>
<color=#75715e>     * the result of the {@link #read()} method, as shown in the following</color>
<color=#75715e>     * example code:</color>
<color=#75715e>     * <pre></color>
<color=#75715e>     * return finishedReading(sourceImage);</color>
<color=#75715e>     * </pre></color>
<color=#75715e>     *</color>
<color=#75715e>     * @param <V>         The return value type.</color>
<color=#75715e>     * @param returnValue The return value of the {@link #read()} method.</color>
<color=#75715e>     * @return The return value of the {@link #read()} method.</color>
<color=#75715e>     */</color>
    <color=#66d9ef>protected</color> <color=#f92672><</color><color=#f8f8f2>V</color><color=#f92672>></color> <color=#f8f8f2>V</color> <color=#a6e22e>finishedReading</color><color=#f8f8f2>(</color><color=#f8f8f2>V</color> <color=#f8f8f2>returnValue</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>hasReadInput</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>returnValue</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setThumbnailParameter</color><color=#f8f8f2>(</color><color=#f8f8f2>ThumbnailParameter</color> <color=#f8f8f2>param</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>this</color><color=#f8f8f2>.</color><color=#a6e22e>param</color> <color=#f92672>=</color> <color=#f8f8f2>param</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#f8f8f2>String</color> <color=#a6e22e>getInputFormatName</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f92672>!</color><color=#f8f8f2>hasReadInput</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#66d9ef>throw</color> <color=#66d9ef>new</color> <color=#f8f8f2>IllegalStateException</color><color=#f8f8f2>(</color><color=#e6db74>"Input has not been read yet."</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>inputFormatName</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>