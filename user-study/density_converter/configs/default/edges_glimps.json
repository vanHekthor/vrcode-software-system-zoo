{
  "edges": [
    {
      "type": "external method call",
      "label": "new DConvert().execute",
      "declaration": "public Result convert(File srcImage, Arguments args)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/Convert.java",
        "lines": {
          "from": 114,
          "to": 114
        },
        "columns": {
          "from": 18,
          "to": 24
        },
        "callMethodLines": {
          "from": 36,
          "to": 165
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/DConvert.java",
        "lines": {
          "from": 58,
          "to": 197
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "Arguments",
      "declaration": "public Arguments(File src, File dst, float fraction, Set<EPlatform> platform, EOutputCompressionMode outputCompressionMode, EScaleMode scaleMode, EScalingAlgorithm downScalingAlgorithm, EScalingAlgorithm upScalingAlgorithm, float compressionQuality, int threadCount, boolean skipExistingFiles, boolean skipUpscaling, boolean verboseLog, boolean includeAndroidLdpiTvdpi, boolean haltOnError, boolean createMipMapInsteadOfDrawableDir, boolean iosCreateImagesetFolders, boolean enablePngCrush, boolean enableMozJpeg, boolean postConvertWebp, boolean enableAntiAliasing, boolean dryRun, boolean keepUnoptimizedFilesPostProcessor, RoundingHandler.Strategy roundingHandler, boolean guiAdvancedOptions, boolean clearDirBeforeConvert)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/Convert.java",
        "lines": {
          "from": 68,
          "to": 68
        },
        "columns": {
          "from": 21,
          "to": 29
        },
        "callMethodLines": {
          "from": 36,
          "to": 165
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/Arguments.java",
        "lines": {
          "from": 79,
          "to": 149
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "start",
      "declaration": "public void start(List<File> allFiles)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/DConvert.java",
        "lines": {
          "from": 184,
          "to": 184
        },
        "columns": {
          "from": 22,
          "to": 26
        },
        "callMethodLines": {
          "from": 58,
          "to": 197
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/WorkerHandler.java",
        "lines": {
          "from": 56,
          "to": 89
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "((IPlatformConverter) processor).convert",
      "declaration": "public Result convert(File srcImage, Arguments args)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/WorkerHandler.java",
        "lines": {
          "from": 77,
          "to": 77
        },
        "columns": {
          "from": 63,
          "to": 69
        },
        "callMethodLines": {
          "from": 56,
          "to": 89
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/APlatformConverter.java",
        "lines": {
          "from": 41,
          "to": 124
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "DensityBucketUtil.getDensityBuckets",
      "declaration": "public static <T extends DensityDescriptor> Map<T, Dimension> getDensityBuckets(java.util.List<T> densities, Dimension srcDimension, Arguments args, float fraction, boolean isNinePatch)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/APlatformConverter.java",
        "lines": {
          "from": 65,
          "to": 65
        },
        "columns": {
          "from": 39,
          "to": 55
        },
        "callMethodLines": {
          "from": 41,
          "to": 124
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/util/DensityBucketUtil.java",
        "lines": {
          "from": 38,
          "to": 59
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "getDensityBucketsWithFractionScale",
      "declaration": "private static <T extends DensityDescriptor> Map<T, Dimension> getDensityBucketsWithFractionScale(java.util.List<T> densities, Dimension srcDimension, Arguments args, float fraction)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/util/DensityBucketUtil.java",
        "lines": {
          "from": 57,
          "to": 57
        },
        "columns": {
          "from": 24,
          "to": 57
        },
        "callMethodLines": {
          "from": 38,
          "to": 59
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/util/DensityBucketUtil.java",
        "lines": {
          "from": 129,
          "to": 155
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "args.round",
      "declaration": "public double round(double raw)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/util/DensityBucketUtil.java",
        "lines": {
          "from": 140,
          "to": 140
        },
        "columns": {
          "from": 44,
          "to": 48
        },
        "callMethodLines": {
          "from": 129,
          "to": 155
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/Arguments.java",
        "lines": {
          "from": 251,
          "to": 253
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "args.round",
      "declaration": "public double round(double raw)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/util/DensityBucketUtil.java",
        "lines": {
          "from": 141,
          "to": 141
        },
        "columns": {
          "from": 44,
          "to": 48
        },
        "callMethodLines": {
          "from": 129,
          "to": 155
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/Arguments.java",
        "lines": {
          "from": 251,
          "to": 253
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "RoundingHandler",
      "declaration": "public RoundingHandler(Strategy strategy)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/Arguments.java",
        "lines": {
          "from": 252,
          "to": 252
        },
        "columns": {
          "from": 20,
          "to": 34
        },
        "callMethodLines": {
          "from": 251,
          "to": 253
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/RoundingHandler.java",
        "lines": {
          "from": 25,
          "to": 27
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "new RoundingHandler(roundingHandler).round",
      "declaration": "public long round(double value)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/Arguments.java",
        "lines": {
          "from": 252,
          "to": 252
        },
        "columns": {
          "from": 53,
          "to": 57
        },
        "callMethodLines": {
          "from": 251,
          "to": 253
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/RoundingHandler.java",
        "lines": {
          "from": 29,
          "to": 39
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "convertImage",
      "declaration": "private void convertImage(Arguments args, LoadedImage imageData, boolean isNinePatch, StringBuilder log, List\u003cFile\u003e allResultingFiles, Dimension dimension, File imageFile) throws Exception",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/APlatformConverter.java",
        "lines": {
          "from": 103,
          "to": 103
        },
        "columns": {
          "from": 25,
          "to": 36
        },
        "callMethodLines": {
          "from": 41,
          "to": 124
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/APlatformConverter.java",
        "lines": {
          "from": 168,
          "to": 193
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "new ImageHandler(args).saveToFile",
      "declaration": "public List<File> saveToFile(File targetFile, LoadedImage imageData, Dimension targetDimension, boolean isNinePatch) throws Exception",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/APlatformConverter.java",
        "lines": {
          "from": 178,
          "to": 178
        },
        "columns": {
          "from": 40,
          "to": 49
        },
        "callMethodLines": {
          "from": 168,
          "to": 193
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 60,
          "to": 131
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "ImageHandler",
      "declaration": "public ImageHandler(Arguments args)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/APlatformConverter.java",
        "lines": {
          "from": 178,
          "to": 178
        },
        "columns": {
          "from": 21,
          "to": 32
        },
        "callMethodLines": {
          "from": 168,
          "to": 193
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 56,
          "to": 58
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "scale",
      "declaration": "public BufferedImage at.favre.tools.dconvert.converters.scaling.ImageHandler.scale(ScaleAlgorithm scaleAlgorithm, BufferedImage imageToScale, int dWidth, int dHeight, ECompression compression, Color background)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 97,
          "to": 97
        },
        "columns": {
          "from": 29,
          "to": 33
        },
        "callMethodLines": {
          "from": 60,
          "to": 131
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 189,
          "to": 227
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "imageData.getImage",
      "declaration": "public LoadedImage(File sourceFile, BufferedImage image, IIOMetadata metadata, CompoundDirectory directory)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 99,
          "to": 99
        },
        "columns": {
          "from": 47,
          "to": 54
        },
        "callMethodLines": {
          "from": 60,
          "to": 131
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/util/LoadedImage.java",
        "lines": {
          "from": 46,
          "to": 48
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "getScaleAlgorithm",
      "declaration": "private List<ScaleAlgorithm> getScaleAlgorithm(EScalingAlgorithm algorithm, EScalingAlgorithm.Type type)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 76,
          "to": 76
        },
        "columns": {
          "from": 21,
          "to": 37
        },
        "callMethodLines": {
          "from": 60,
          "to": 131
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 169,
          "to": 187
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "getScalingAlgorithm",
      "declaration": "private EScalingAlgorithm getScalingAlgorithm(EScalingAlgorithm.Type type)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 77,
          "to": 77
        },
        "columns": {
          "from": 29,
          "to": 47
        },
        "callMethodLines": {
          "from": 60,
          "to": 131
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 155,
          "to": 159
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "scaleAlgorithm.scale",
      "declaration": "public BufferedImage scale(BufferedImage imageToScale, int dWidth, int dHeight)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 202,
          "to": 202
        },
        "columns": {
          "from": 42,
          "to": 46
        },
        "callMethodLines": {
          "from": 189,
          "to": 227
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ResampleAlgorithm.java",
        "lines": {
          "from": 35,
          "to": 39
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "getScalingType",
      "declaration": "private EScalingAlgorithm.Type getScalingType(LoadedImage imageData, Dimension targetDimension)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 77,
          "to": 77
        },
        "columns": {
          "from": 49,
          "to": 62
        },
        "callMethodLines": {
          "from": 60,
          "to": 131
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 161,
          "to": 167
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "getScalingType",
      "declaration": "private EScalingAlgorithm.Type getScalingType(LoadedImage imageData, Dimension targetDimension)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 78,
          "to": 78
        },
        "columns": {
          "from": 29,
          "to": 42
        },
        "callMethodLines": {
          "from": 60,
          "to": 131
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 161,
          "to": 167
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "algorithm.getImplementation",
      "declaration": "public ScaleAlgorithm getImplementation()",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ImageHandler.java",
        "lines": {
          "from": 185,
          "to": 185
        },
        "columns": {
          "from": 56,
          "to": 72
        },
        "callMethodLines": {
          "from": 169,
          "to": 187
        }
      },
      "to": {
        "file": "src/main/java/at/favre/tools/dconvert/arg/EScalingAlgorithm.java",
        "lines": {
          "from": 182,
          "to": 184
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "ResampleOp",
      "declaration": "public ResampleOp(int destWidth, int destHeight)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ResampleAlgorithm.java",
        "lines": {
          "from": 36,
          "to": 36
        },
        "columns": {
          "from": 35,
          "to": 44
        },
        "callMethodLines": {
          "from": 35,
          "to": 39
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/ResampleOp.java",
        "lines": {
          "from": 73,
          "to": 75
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "resizeOp.filter",
      "declaration": "public final BufferedImage filter(BufferedImage src, BufferedImage dest)",
      "from": {
        "file": "src/main/java/at/favre/tools/dconvert/converters/scaling/ResampleAlgorithm.java",
        "lines": {
          "from": 38,
          "to": 38
        },
        "columns": {
          "from": 25,
          "to": 30
        },
        "callMethodLines": {
          "from": 35,
          "to": 39
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/AdvancedResizeOp.java",
        "lines": {
          "from": 54,
          "to": 70
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "DimensionConstrain.createAbsolutionDimension",
      "declaration": "public static DimensionConstrain createAbsolutionDimension(final int width, final int height)",
      "from": {
        "file": "src/main/java/com/mortennobel/imagescaling/ResampleOp.java",
        "lines": {
          "from": 74,
          "to": 74
        },
        "columns": {
          "from": 34,
          "to": 58
        },
        "callMethodLines": {
          "from": 73,
          "to": 75
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/DimensionConstrain.java",
        "lines": {
          "from": 37,
          "to": 40
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "super",
      "declaration": "public AdvancedResizeOp(DimensionConstrain dimensionConstrain)",
      "from": {
        "file": "src/main/java/com/mortennobel/imagescaling/ResampleOp.java",
        "lines": {
          "from": 74,
          "to": 74
        },
        "columns": {
          "from": 9,
          "to": 13
        },
        "callMethodLines": {
          "from": 73,
          "to": 75
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/AdvancedResizeOp.java",
        "lines": {
          "from": 28,
          "to": 30
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "dimensionConstrain.getDimension",
      "declaration": "public Dimension getDimension()",
      "from": {
        "file": "src/main/java/com/mortennobel/imagescaling/AdvancedResizeOp.java",
        "lines": {
          "from": 56,
          "to": 56
        },
        "columns": {
          "from": 41,
          "to": 52
        },
        "callMethodLines": {
          "from": 54,
          "to": 70
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/DimensionConstrain.java",
        "lines": {
          "from": 26,
          "to": 28
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "doFilter",
      "declaration": "public BufferedImage doFilter(BufferedImage srcImg, BufferedImage dest, int dstWidth, int dstHeight)",
      "from": {
        "file": "src/main/java/com/mortennobel/imagescaling/AdvancedResizeOp.java",
        "lines": {
          "from": 59,
          "to": 59
        },
        "columns": {
          "from": 39,
          "to": 46
        },
        "callMethodLines": {
          "from": 54,
          "to": 70
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/ResampleOp.java",
        "lines": {
          "from": 94,
          "to": 194
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "DimensionConstrain",
      "declaration": "protected DimensionConstrain(Dimension dimension)",
      "from": {
        "file": "src/main/java/com/mortennobel/imagescaling/DimensionConstrain.java",
        "lines": {
          "from": 39,
          "to": 39
        },
        "columns": {
          "from": 20,
          "to": 37
        },
        "callMethodLines": {
          "from": 37,
          "to": 40
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/DimensionConstrain.java",
        "lines": {
          "from": 17,
          "to": 19
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    },
    {
      "type": "external method call",
      "label": "verticalFromWorkToDst",
      "declaration": "private void verticalFromWorkToDst(byte[][] workPixels, byte[] outPixels, int start, int delta)",
      "from": {
        "file": "src/main/java/com/mortennobel/imagescaling/ResampleOp.java",
        "lines": {
          "from": 168,
          "to": 168
        },
        "columns": {
          "from": 9,
          "to": 29
        },
        "callMethodLines": {
          "from": 94,
          "to": 194
        }
      },
      "to": {
        "file": "src/main/java/com/mortennobel/imagescaling/ResampleOp.java",
        "lines": {
          "from": 312,
          "to": 355
        },
        "columns": {
          "from": 5,
          "to": 5
        }
      },
      "value": 1
    }
  ]
}