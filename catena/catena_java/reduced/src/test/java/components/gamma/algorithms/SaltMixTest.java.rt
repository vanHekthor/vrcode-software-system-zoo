<color=#7401DF>package</color> <color=#045FB4>test.java.components.gamma.algorithms</color>;

<color=#7401DF>import static</color> <color=#045FB4>org.junit.Assert.*</color>;

<color=#7401DF>import</color> <color=#045FB4>java.io.File</color>;

<color=#7401DF>import</color> <color=#045FB4>org.json.JSONArray</color>;
<color=#7401DF>import</color> <color=#045FB4>org.json.JSONObject</color>;
<color=#7401DF>import</color> <color=#045FB4>org.junit.Test</color>;

<color=#7401DF>import</color> <color=#045FB4>main.java.Helper</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.gamma.GammaInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.gamma.algorithms.SaltMix</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.hash.HashInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.hash.algorithms.Blake2b</color>;

<color=#7e101a>public</color> <color=#7e101a>class</color> <color=#355c08>SaltMixTest</color> {
	
	<color=#7e101a>private</color> String path = "src/test/resources/saltmixAnyFull.json";
	<color=#7e101a>private</color> File testFileSaltMix = <color=#7e101a>new</color> File(path);
	
	Helper helper = <color=#7e101a>new</color> Helper();

	@Test
	<color=#7e101a>public</color> <color=#8000FF>void</color> testSaltMix() {
		HashInterface h = <color=#7e101a>new</color> Blake2b();
		HashInterface hPrime = <color=#7e101a>new</color> Blake2b();
		GammaInterface gamma = <color=#7e101a>new</color> SaltMix();
		gamma.<color=#045FB4>setH</color>(h);
		gamma.<color=#045FB4>setHPrime</color>(hPrime);
		
		
		JSONArray jsonObj = helper.<color=#045FB4>jsonParserArr</color>(testFileSaltMix);
		
		<color=#7e101a>for</color> (<color=#8000FF>int</color> i = 0; i<jsonObj.<color=#045FB4>length</color>(); ++i ){
			JSONObject o = (JSONObject) jsonObj.<color=#045FB4>get</color>(i);
			
			JSONObject inputs  = o.<color=#045FB4>getJSONObject</color>("inputs");
			JSONObject outputs = o.<color=#045FB4>getJSONObject</color>("outputs");
			
			String hashIn = inputs.<color=#045FB4>getString</color>("hash");
			<color=#8000FF>byte</color>[][] in = helper.<color=#045FB4>oneDimByteArrToTwoDim</color>(helper.<color=#045FB4>hex2bytes</color>(hashIn), 64);
			<color=#8000FF>int</color> garlic = inputs.<color=#045FB4>getInt</color>("garlic");
			String salt = inputs.<color=#045FB4>getString</color>("salt");
			
			String exp = outputs.<color=#045FB4>getString</color>("output_hash");
			
			<color=#8000FF>byte</color>[] s = helper.<color=#045FB4>hex2bytes</color>(salt);			
			
			<color=#8000FF>byte</color>[][] output = gamma.<color=#045FB4>gamma</color>(garlic, in, s);
			
			assertTrue(exp.<color=#045FB4>equals</color>(helper.<color=#045FB4>bytes2hex</color>(helper.<color=#045FB4>twoDimByteArrayToOne</color>(output)).<color=#045FB4>toLowerCase</color>()));
		}
	}
}