<color=#7401DF>package</color> <color=#045FB4>test.java.performance</color>;

<color=#7401DF>import static</color> <color=#045FB4>org.junit.Assert.*</color>;

<color=#7401DF>import</color> <color=#045FB4>org.junit.Test</color>;

<color=#7401DF>import</color> <color=#045FB4>main.java.Catena</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.DefaultInstances</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.Helper</color>;

<color=#7e101a>public</color> <color=#7e101a>class</color> <color=#355c08>ButterflyTest</color> {

	
	@Test
	<color=#7e101a>public</color> <color=#8000FF>void</color> testButterfly10x() {
		
		DefaultInstances instance = <color=#7e101a>new</color> DefaultInstances();
		Catena c = instance.<color=#045FB4>initButterfly</color>();
		
		Helper helper = <color=#7e101a>new</color> Helper();
		
		<color=#8000FF>byte</color>[] pwd = helper.<color=#045FB4>hex2bytes</color>("012345");
		<color=#8000FF>byte</color>[] salt = helper.<color=#045FB4>hex2bytes</color>("6789ab");
		<color=#8000FF>byte</color>[] gamma = helper.<color=#045FB4>hex2bytes</color>("6789ab");
		<color=#8000FF>byte</color>[] aData = helper.<color=#045FB4>hex2bytes</color>("000000");
	    <color=#8000FF>int</color> outputLength = 64;
	    
	    <color=#8000FF>long</color> start = System.<color=#045FB4>currentTimeMillis</color>();
	    <color=#8000FF>long</color> current=0;
	    <color=#7e101a>for</color> (<color=#8000FF>int</color> i = 0; i<10; ++i){
	    	c.<color=#045FB4>catena</color>(pwd, salt, aData, gamma, outputLength);
	    	current = System.<color=#045FB4>currentTimeMillis</color>();
	    	System.<color=#045FB4>out</color>.<color=#045FB4>println</color>("Time used for Butterfly " + i + " times: " + (current-start));
	    	start=current;
	    }	    
	    
	    assertTrue(true);
	}
}