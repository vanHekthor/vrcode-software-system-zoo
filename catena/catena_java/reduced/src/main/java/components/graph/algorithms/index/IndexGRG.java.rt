<color=#7401DF>package</color> <color=#045FB4>main.java.components.graph.algorithms.index</color>;

<color=#7401DF>import</color> <color=#045FB4>main.java.Helper</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.graph.algorithms.IdxInterface</color>;

<color=#7e101a>public</color> <color=#7e101a>class</color> <color=#355c08>IndexGRG</color> <color=#7e101a>implements</color> IdxInterface {
    
    <color=#8000FF>int</color> _l;
    Helper h = <color=#7e101a>new</color> Helper();
    
    <color=#7e101a>public</color> IndexGRG (<color=#8000FF>int</color> l){
        _l = l;
    }
    
    
    <color=#7e101a>public</color> <color=#8000FF>int</color> getIndex(<color=#8000FF>int</color> i, <color=#8000FF>int</color> g) {
        IndexBRG brg = <color=#7e101a>new</color> IndexBRG();
        <color=#7e101a>return</color> (brg.<color=#045FB4>getIndex</color>(i, g))^
                (brg.<color=#045FB4>getIndex</color>((1 << g) - 1 - i, g)
                >>(<color=#8000FF>int</color>)Math.<color=#045FB4>ceil</color>((<color=#8000FF>float</color>)g/(<color=#8000FF>float</color>)_l));
    }

    <color=#7e101a>public</color> <color=#8000FF>long</color> getIndex(<color=#8000FF>long</color> i, <color=#8000FF>int</color> g) {
        IndexBRG brg = <color=#7e101a>new</color> IndexBRG();
        <color=#7e101a>return</color> (brg.<color=#045FB4>getIndex</color>(i, g))^
                (brg.<color=#045FB4>getIndex</color>((1 << g) - 1 - i, g)
                >>(<color=#8000FF>int</color>)Math.<color=#045FB4>ceil</color>((<color=#8000FF>float</color>)g/(<color=#8000FF>float</color>)_l));
    }

    <color=#7e101a>public</color> <color=#8000FF>int</color> getIndex(<color=#8000FF>int</color> i, <color=#8000FF>int</color> j, <color=#8000FF>int</color> g) {
        <color=#7e101a>return</color> -1;
    }

    <color=#7e101a>public</color> <color=#8000FF>long</color> getIndex(<color=#8000FF>long</color> i, <color=#8000FF>long</color> j, <color=#8000FF>int</color> g) {
        <color=#7e101a>return</color> -1;
    }

}