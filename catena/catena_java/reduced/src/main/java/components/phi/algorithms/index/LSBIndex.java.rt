<color=#7401DF>package</color> <color=#045FB4>main.java.components.phi.algorithms.index</color>;

<color=#7401DF>import</color> <color=#045FB4>main.java.Helper</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.phi.algorithms.IdxStateInterface</color>;

<color=#7e101a>public</color> <color=#7e101a>class</color> <color=#355c08>LSBIndex</color> <color=#7e101a>implements</color> IdxStateInterface {

        Helper h = <color=#7e101a>new</color> Helper();
        
        <color=#7e101a>public</color> <color=#8000FF>int</color> getLsbIndex(<color=#8000FF>byte</color>[] state, <color=#8000FF>int</color> garlic){
                
                <color=#8000FF>int</color> bytes = garlic + 7 >>>3;
                <color=#8000FF>int</color> shiftBits = (8 - (garlic % 8)) % 8;
        <color=#8000FF>int</color> mask = 0xff >>> shiftBits;
        <color=#8000FF>int</color> len = state.<color=#045FB4>length</color>;
        <color=#8000FF>int</color> first = len - bytes;
        <color=#8000FF>int</color> val = 0;
        
        val = state[first] & mask;
        <color=#7e101a>for</color>(<color=#8000FF>int</color> i = first + 1; i < len; ++i){
                val = (val << 8) | state[i] & 0xff;
        }
        <color=#7e101a>return</color> val;
        }
}