<color=#7401DF>package</color> <color=#045FB4>main.java.components.phi.algorithms</color>;

<color=#7401DF>import</color> <color=#045FB4>main.java.Helper</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.hash.HashInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.phi.PhiInterface</color>;

<color=#7e101a>public</color> <color=#7e101a>class</color> <color=#355c08>CatenaPhi</color> <color=#7e101a>implements</color> PhiInterface {

    Helper helper = <color=#7e101a>new</color> Helper();
    
    IdxStateInterface _idx;
    HashInterface _h;
    HashInterface _hPrime;
    
    <color=#7e101a>public</color> CatenaPhi(IdxStateInterface idx){
        _idx = idx; 
    }
    
    <color=#7e101a>public</color> <color=#8000FF>byte</color>[][] phi(<color=#8000FF>int</color> garlic, <color=#8000FF>byte</color>[][] b, <color=#8000FF>byte</color>[] m) {
        <color=#8000FF>int</color> j = _idx.<color=#045FB4>getLsbIndex</color>(m, garlic);
        <color=#8000FF>byte</color>[][] tmp = <color=#7e101a>new</color> <color=#8000FF>byte</color>[b.<color=#045FB4>length</color>][_h.<color=#045FB4>getOutputSize</color>()];
        
        System.<color=#045FB4>arraycopy</color>(b, 0, tmp, 0, b.<color=#045FB4>length</color>);
        
        
        
        _hPrime.<color=#045FB4>update</color>(helper.<color=#045FB4>concateByteArrays</color>(b[b.<color=#045FB4>length</color>-1], b[j]));
        tmp[0] = _hPrime.<color=#045FB4>doFinal</color>();
        _hPrime.<color=#045FB4>reset</color>();
        
        <color=#7e101a>for</color> (<color=#8000FF>int</color> i = 1; i < b.<color=#045FB4>length</color>; ++i){
            j = _idx.<color=#045FB4>getLsbIndex</color>(tmp[i-1], garlic);
            
            _hPrime.<color=#045FB4>update</color>(helper.<color=#045FB4>concateByteArrays</color>(tmp[i-1], tmp[j]));
            tmp[i] = _hPrime.<color=#045FB4>doFinal</color>();
            _hPrime.<color=#045FB4>reset</color>(); 
        }
        
        <color=#7e101a>return</color> tmp;
    }

    <color=#7e101a>public</color> <color=#8000FF>void</color> setH(HashInterface h) {
        _h = h;
    }

    <color=#7e101a>public</color> <color=#8000FF>void</color> setHPrime(HashInterface hPrime) {
        _hPrime = hPrime;
    }

}