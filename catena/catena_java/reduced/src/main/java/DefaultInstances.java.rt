<color=#7401DF>package</color> <color=#045FB4>main.java</color>;

<color=#7401DF>import</color> <color=#045FB4>main.java.components.gamma.GammaInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.gamma.algorithms.SaltMix</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.graph.GraphInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.graph.algorithms.GenericGraph</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.graph.algorithms.IdxInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.graph.algorithms.index.IndexBRG</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.hash.HashInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.hash.algorithms.Blake2b</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.hash.algorithms.Blake2b_1</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.phi.PhiInterface</color>;
<color=#7401DF>import</color> <color=#045FB4>main.java.components.phi.algorithms.IdentityPhi</color>;

<color=#7e101a>public</color> <color=#7e101a>class</color> <color=#355c08>DefaultInstances</color> <color=#7e101a>extends</color> Catena {

    <color=#434343>/**</color>
<color=#434343>     * initalizes Dragonfly default instance of catena</color>
<color=#434343>     * </color>
<color=#434343>     * @return  Catena Dragonfly instance</color>
<color=#434343>     */</color>
    <color=#7e101a>public</color> Catena initDragonfly(){
        Catena c = <color=#7e101a>new</color> Catena();
        
        HashInterface h = <color=#7e101a>new</color> Blake2b();
        HashInterface hPrime = <color=#7e101a>new</color> Blake2b_1();
        
        GammaInterface gamma = <color=#7e101a>new</color> SaltMix();
        
        GraphInterface f = <color=#7e101a>new</color> GenericGraph();

        IdxInterface idx = <color=#7e101a>new</color> IndexBRG();
        PhiInterface phi = <color=#7e101a>new</color> IdentityPhi();       
        
        <color=#8000FF>int</color> gLow = 21;
        <color=#8000FF>int</color> gHigh = 21;
        <color=#8000FF>int</color> lambda = 2;
        
        String vID = "Dragonfly";
        
        c.<color=#045FB4>init</color>(h, hPrime, gamma, f, idx, phi, gLow, gHigh, lambda, vID);
        
        <color=#7e101a>return</color> c;
    }
    
    <color=#434343>/**</color>
<color=#434343>     * initalizes Dragonfly Full default instance of catena</color>
<color=#434343>     * </color>
<color=#434343>     * @return  Catena Dragonfly Full instance</color>
<color=#434343>     */</color>
    <color=#7e101a>public</color> Catena initDragonflyFull(){
        Catena c = <color=#7e101a>new</color> Catena();
        
        HashInterface h = <color=#7e101a>new</color> Blake2b();
        HashInterface hPrime = <color=#7e101a>new</color> Blake2b();
        
        GammaInterface gamma = <color=#7e101a>new</color> SaltMix();
        
        GraphInterface f = <color=#7e101a>new</color> GenericGraph();

        IdxInterface idx = <color=#7e101a>new</color> IndexBRG();
        PhiInterface phi = <color=#7e101a>new</color> IdentityPhi();
        
        <color=#8000FF>int</color> gLow = 22;
        <color=#8000FF>int</color> gHigh = 22;
        
        <color=#8000FF>int</color> lambda = 2;
        
        String vID = "Dragonfly-Full";
        
        c.<color=#045FB4>init</color>(h, hPrime, gamma, f, idx, phi, gLow, gHigh, lambda, vID);
        
        <color=#7e101a>return</color> c;
    }

}