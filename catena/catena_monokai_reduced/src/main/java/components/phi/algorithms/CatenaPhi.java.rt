<color=#f92672>package</color> <color=#f8f8f2>main.java.components.phi.algorithms</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.hash.HashInterface</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.phi.PhiInterface</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>CatenaPhi</color> <color=#66d9ef>implements</color> <color=#f8f8f2>PhiInterface</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>Helper</color> <color=#f8f8f2>helper</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>
    
    <color=#f8f8f2>IdxStateInterface</color> <color=#f8f8f2>_idx</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>HashInterface</color> <color=#f8f8f2>_h</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>HashInterface</color> <color=#f8f8f2>_hPrime</color><color=#f8f8f2>;</color>
    
    <color=#66d9ef>public</color> <color=#a6e22e>CatenaPhi</color><color=#f8f8f2>(</color><color=#f8f8f2>IdxStateInterface</color> <color=#f8f8f2>idx</color><color=#f8f8f2>){</color>
        <color=#f8f8f2>_idx</color> <color=#f92672>=</color> <color=#f8f8f2>idx</color><color=#f8f8f2>;</color> 
    <color=#f8f8f2>}</color>
    
    <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#a6e22e>phi</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>garlic</color><color=#f8f8f2>,</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>m</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>_idx</color><color=#f8f8f2>.</color><color=#a6e22e>getLsbIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>m</color><color=#f8f8f2>,</color> <color=#f8f8f2>garlic</color><color=#f8f8f2>);</color>
        <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>tmp</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>b</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f92672>][</color><color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>getOutputSize</color><color=#f8f8f2>()</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        
        <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>arraycopy</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>tmp</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
        
        
        
        <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>concateByteArrays</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color><color=#f92672>[</color><color=#f8f8f2>b</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>));</color>
        <color=#f8f8f2>tmp</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>doFinal</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>reset</color><color=#f8f8f2>();</color>
        
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>b</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f92672>++</color><color=#f8f8f2>i</color><color=#f8f8f2>){</color>
            <color=#f8f8f2>j</color> <color=#f92672>=</color> <color=#f8f8f2>_idx</color><color=#f8f8f2>.</color><color=#a6e22e>getLsbIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>tmp</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>garlic</color><color=#f8f8f2>);</color>
            
            <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>concateByteArrays</color><color=#f8f8f2>(</color><color=#f8f8f2>tmp</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>tmp</color><color=#f92672>[</color><color=#f8f8f2>j</color><color=#f92672>]</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>tmp</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>doFinal</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>reset</color><color=#f8f8f2>();</color> 
        <color=#f8f8f2>}</color>
        
        <color=#66d9ef>return</color> <color=#f8f8f2>tmp</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setH</color><color=#f8f8f2>(</color><color=#f8f8f2>HashInterface</color> <color=#f8f8f2>h</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>_h</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setHPrime</color><color=#f8f8f2>(</color><color=#f8f8f2>HashInterface</color> <color=#f8f8f2>hPrime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>_hPrime</color> <color=#f92672>=</color> <color=#f8f8f2>hPrime</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

<color=#f8f8f2>}</color>