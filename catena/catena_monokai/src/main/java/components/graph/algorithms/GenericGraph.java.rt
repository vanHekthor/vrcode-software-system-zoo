<color=#f92672>package</color> <color=#f8f8f2>main.java.components.graph.algorithms</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.graph.GraphInterface</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.hash.HashInterface</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>GenericGraph</color> <color=#66d9ef>implements</color> <color=#f8f8f2>GraphInterface</color> <color=#f8f8f2>{</color>

    <color=#f8f8f2>HashInterface</color> <color=#f8f8f2>_h</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>HashInterface</color> <color=#f8f8f2>_hPrime</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>Helper</color> <color=#f8f8f2>helper</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>
    <color=#f8f8f2>IdxInterface</color> <color=#f8f8f2>indexing</color><color=#f8f8f2>;</color>
    
    <color=#66d9ef>public</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#a6e22e>graph</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>g</color><color=#f8f8f2>,</color> <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>v</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>lambda</color><color=#f8f8f2>){</color>
        
        <color=#66d9ef>int</color> <color=#f8f8f2>dim1</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>,</color> <color=#f8f8f2>g</color><color=#f8f8f2>);</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>dim2</color> <color=#f92672>=</color> <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>getOutputSize</color><color=#f8f8f2>();</color>
        <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>r</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>dim1</color><color=#f92672>][</color><color=#f8f8f2>dim2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>k</color> <color=#f92672><</color> <color=#f8f8f2>lambda</color><color=#f8f8f2>;</color> <color=#f92672>++</color><color=#f8f8f2>k</color><color=#f8f8f2>){</color>
            <color=#f8f8f2>r</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>hFirst</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>concateByteArrays</color><color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>dim1</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color>
                    <color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>indexing</color><color=#f8f8f2>.</color><color=#a6e22e>getIndex</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>g</color><color=#f8f8f2>)</color><color=#f92672>]</color><color=#f8f8f2>));</color>
            
            <color=#66d9ef>int</color> <color=#f8f8f2>loop</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color><color=#f8f8f2>)</color><color=#f8f8f2>Math</color><color=#f8f8f2>.</color><color=#a6e22e>pow</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>,</color><color=#f8f8f2>g</color><color=#f8f8f2>);</color>
            
            <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>loop</color><color=#f8f8f2>;</color> <color=#f92672>++</color><color=#f8f8f2>i</color><color=#f8f8f2>){</color>
                <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>concateByteArrays</color><color=#f8f8f2>(</color><color=#f8f8f2>r</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>-</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>,</color><color=#f8f8f2>v</color><color=#f92672>[</color><color=#f8f8f2>indexing</color><color=#f8f8f2>.</color><color=#a6e22e>getIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>,</color> <color=#f8f8f2>g</color><color=#f8f8f2>)</color><color=#f92672>]</color><color=#f8f8f2>));</color>
                <color=#f8f8f2>r</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>doFinal</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>}</color>
            
            <color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>arraycopy</color><color=#f8f8f2>(</color><color=#f8f8f2>r</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>v</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#f8f8f2>r</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>v</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    
    <color=#66d9ef>private</color> <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#a6e22e>hFirst</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>in</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>n</color> <color=#f92672>=</color> <color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>getOutputSize</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>k</color> <color=#f92672>=</color> <color=#f8f8f2>_hPrime</color><color=#f8f8f2>.</color><color=#a6e22e>getOutputSize</color><color=#f8f8f2>();</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>l</color> <color=#f92672>=</color> <color=#f8f8f2>k</color><color=#f92672>/</color><color=#f8f8f2>n</color><color=#f8f8f2>;</color>
        
        <color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>w</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#f8f8f2>l</color><color=#f92672>][</color><color=#f8f8f2>n</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        <color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>iByte</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
        
        <color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>in</color><color=#f8f8f2>);</color>
        <color=#f8f8f2>w</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>doFinal</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>reset</color><color=#f8f8f2>();</color>
        
        <color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>l</color><color=#f8f8f2>;</color> <color=#f92672>++</color><color=#f8f8f2>i</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
            <color=#f8f8f2>iByte</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f8f8f2>)</color> <color=#f8f8f2>i</color><color=#f8f8f2>;</color>
            <color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>concateByteArrays</color><color=#f8f8f2>(</color><color=#f8f8f2>iByte</color><color=#f8f8f2>,</color><color=#f8f8f2>w</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>));</color>
            <color=#f8f8f2>w</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>doFinal</color><color=#f8f8f2>();</color>
            <color=#f8f8f2>_h</color><color=#f8f8f2>.</color><color=#a6e22e>reset</color><color=#f8f8f2>();</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>twoDimByteArrayToOne</color><color=#f8f8f2>(</color><color=#f8f8f2>w</color><color=#f8f8f2>);</color>
    <color=#f8f8f2>}</color>
    
    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setH</color><color=#f8f8f2>(</color><color=#f8f8f2>HashInterface</color> <color=#f8f8f2>h</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>_h</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>

    <color=#a6e22e>@Override</color>
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setHPrime</color><color=#f8f8f2>(</color><color=#f8f8f2>HashInterface</color> <color=#f8f8f2>hPrime</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
        <color=#f8f8f2>_hPrime</color> <color=#f92672>=</color> <color=#f8f8f2>hPrime</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
    
    <color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>setIndexing</color><color=#f8f8f2>(</color><color=#f8f8f2>IdxInterface</color> <color=#f8f8f2>idx</color><color=#f8f8f2>){</color>
        <color=#f8f8f2>indexing</color> <color=#f92672>=</color> <color=#f8f8f2>idx</color><color=#f8f8f2>;</color>
    <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>