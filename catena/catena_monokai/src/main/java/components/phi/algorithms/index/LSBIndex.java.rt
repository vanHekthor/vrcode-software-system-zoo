<color=#f92672>package</color> <color=#f8f8f2>main.java.components.phi.algorithms.index</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.phi.algorithms.IdxStateInterface</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>LSBIndex</color> <color=#66d9ef>implements</color> <color=#f8f8f2>IdxStateInterface</color> <color=#f8f8f2>{</color>

        <color=#f8f8f2>Helper</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>
        
        <color=#66d9ef>public</color> <color=#66d9ef>int</color> <color=#a6e22e>getLsbIndex</color><color=#f8f8f2>(</color><color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>state</color><color=#f8f8f2>,</color> <color=#66d9ef>int</color> <color=#f8f8f2>garlic</color><color=#f8f8f2>){</color>
                
                <color=#66d9ef>int</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#f8f8f2>garlic</color> <color=#f92672>+</color> <color=#ae81ff>7</color> <color=#f92672>>>></color><color=#ae81ff>3</color><color=#f8f8f2>;</color>
                <color=#66d9ef>int</color> <color=#f8f8f2>shiftBits</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#ae81ff>8</color> <color=#f92672>-</color> <color=#f8f8f2>(</color><color=#f8f8f2>garlic</color> <color=#f92672>%</color> <color=#ae81ff>8</color><color=#f8f8f2>))</color> <color=#f92672>%</color> <color=#ae81ff>8</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>mask</color> <color=#f92672>=</color> <color=#ae81ff>0xff</color> <color=#f92672>>>></color> <color=#f8f8f2>shiftBits</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>len</color> <color=#f92672>=</color> <color=#f8f8f2>state</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>first</color> <color=#f92672>=</color> <color=#f8f8f2>len</color> <color=#f92672>-</color> <color=#f8f8f2>bytes</color><color=#f8f8f2>;</color>
        <color=#66d9ef>int</color> <color=#f8f8f2>val</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
        
        <color=#f8f8f2>val</color> <color=#f92672>=</color> <color=#f8f8f2>state</color><color=#f92672>[</color><color=#f8f8f2>first</color><color=#f92672>]</color> <color=#f92672>&</color> <color=#f8f8f2>mask</color><color=#f8f8f2>;</color>
        <color=#66d9ef>for</color><color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#f8f8f2>first</color> <color=#f92672>+</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>len</color><color=#f8f8f2>;</color> <color=#f92672>++</color><color=#f8f8f2>i</color><color=#f8f8f2>){</color>
                <color=#f8f8f2>val</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>val</color> <color=#f92672><<</color> <color=#ae81ff>8</color><color=#f8f8f2>)</color> <color=#f92672>|</color> <color=#f8f8f2>state</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color> <color=#f92672>&</color> <color=#ae81ff>0xff</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
        <color=#66d9ef>return</color> <color=#f8f8f2>val</color><color=#f8f8f2>;</color>
        <color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>