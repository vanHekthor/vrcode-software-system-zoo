<color=#f92672>package</color> <color=#f8f8f2>test.java.components.hash.algorithms</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>org.junit.Assert.assertTrue</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONArray</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONObject</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.junit.Test</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.hash.HashInterface</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.hash.algorithms.Argon2CF</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>Argon2CFTest</color> <color=#f8f8f2>{</color>

	<color=#f8f8f2>Helper</color> <color=#f8f8f2>helper</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>
	
	<color=#f8f8f2>String</color> <color=#f8f8f2>pathGL</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/cfArgon2Gl.json"</color><color=#f8f8f2>;</color>
	<color=#f8f8f2>File</color> <color=#f8f8f2>fileGL</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathGL</color><color=#f8f8f2>);</color>
	
	<color=#f8f8f2>String</color> <color=#f8f8f2>pathGB</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/cfArgon2Gb.json"</color><color=#f8f8f2>;</color>
	<color=#f8f8f2>File</color> <color=#f8f8f2>fileGB</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathGB</color><color=#f8f8f2>);</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testGL</color><color=#f8f8f2>(){</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileGL</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>func</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"mixFunc"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>dataString</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"data"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>boolean</color> <color=#f8f8f2>useGL</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
			
			<color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>func</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"G_{L}"</color><color=#f8f8f2>)){</color>
				<color=#f8f8f2>useGL</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
				<color=#f8f8f2>useGL</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>}</color>
			
			<color=#f8f8f2>HashInterface</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Argon2CF</color><color=#f8f8f2>(</color><color=#f8f8f2>useGL</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>dataString</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>doFinal</color><color=#f8f8f2>();</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testGB</color><color=#f8f8f2>(){</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileGB</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>func</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"mixFunc"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>dataString</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"data"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>boolean</color> <color=#f8f8f2>useGL</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
			
			<color=#66d9ef>if</color> <color=#f8f8f2>(</color><color=#f8f8f2>func</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#e6db74>"G_{B}"</color><color=#f8f8f2>)){</color>
				<color=#f8f8f2>useGL</color> <color=#f92672>=</color> <color=#66d9ef>false</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>}</color> <color=#66d9ef>else</color> <color=#f8f8f2>{</color>
				<color=#f8f8f2>useGL</color> <color=#f92672>=</color> <color=#66d9ef>true</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>}</color>
			
			<color=#f8f8f2>HashInterface</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Argon2CF</color><color=#f8f8f2>(</color><color=#f8f8f2>useGL</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>update</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>dataString</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>h</color><color=#f8f8f2>.</color><color=#a6e22e>doFinal</color><color=#f8f8f2>();</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>