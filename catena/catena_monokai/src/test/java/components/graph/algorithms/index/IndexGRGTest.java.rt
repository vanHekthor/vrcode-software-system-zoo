<color=#f92672>package</color> <color=#f8f8f2>test.java.components.graph.algorithms.index</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>org.junit.Assert.assertEquals</color><color=#f8f8f2>;</color>
<color=#f92672>import static</color> <color=#f8f8f2>org.junit.Assert.assertTrue</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONArray</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONObject</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.junit.Test</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.graph.GraphInterface</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.graph.algorithms.GenericGraph</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.graph.algorithms.IdxInterface</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.graph.algorithms.index.IndexGRG</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.hash.HashInterface</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.hash.algorithms.Blake2b</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.components.hash.algorithms.Blake2b_1</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>IndexGRGTest</color> <color=#f8f8f2>{</color>

	<color=#f8f8f2>Helper</color> <color=#f8f8f2>helper</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>

	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathGrgIndex</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/grgIndex.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileGrgIndex</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathGrgIndex</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathGrgAny</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/grgAny.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileGrgAny</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathGrgAny</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathGrgAnyFull</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/grgAnyFull.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileGrgAnyFull</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathGrgAnyFull</color><color=#f8f8f2>);</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testIndexGRG</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileGrgIndex</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>long</color> <color=#f8f8f2>index</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getLong</color><color=#f8f8f2>(</color><color=#e6db74>"index"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"g"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>l</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"l"</color><color=#f8f8f2>);</color>

			<color=#66d9ef>long</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getLong</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>IdxInterface</color> <color=#f8f8f2>idx</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IndexGRG</color><color=#f8f8f2>(</color><color=#f8f8f2>l</color><color=#f8f8f2>);</color>
			<color=#66d9ef>long</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>idx</color><color=#f8f8f2>.</color><color=#a6e22e>getIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>index</color><color=#f8f8f2>,</color> <color=#f8f8f2>g</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testGrgAny</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileGrgAny</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>garlic</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"garlic"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>state</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"state"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>lambda</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"lambda"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>l</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"l"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>GraphInterface</color> <color=#f8f8f2>graph</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GenericGraph</color><color=#f8f8f2>();</color>
			
			<color=#f8f8f2>HashInterface</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Blake2b</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>HashInterface</color> <color=#f8f8f2>hPrime</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Blake2b_1</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>IdxInterface</color> <color=#f8f8f2>idx</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IndexGRG</color><color=#f8f8f2>(</color><color=#f8f8f2>l</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>setH</color><color=#f8f8f2>(</color><color=#f8f8f2>h</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>setHPrime</color><color=#f8f8f2>(</color><color=#f8f8f2>hPrime</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>setIndexing</color><color=#f8f8f2>(</color><color=#f8f8f2>idx</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>stateArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>state</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>twoDimStateArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>oneDimByteArrToTwoDim</color><color=#f8f8f2>(</color><color=#f8f8f2>stateArr</color><color=#f8f8f2>,</color> <color=#ae81ff>64</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>graphOutput</color> <color=#f92672>=</color> <color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>graph</color><color=#f8f8f2>(</color><color=#f8f8f2>garlic</color><color=#f8f8f2>,</color> <color=#f8f8f2>twoDimStateArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>lambda</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>twoDimByteArrayToOne</color><color=#f8f8f2>(</color><color=#f8f8f2>graphOutput</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>

	<color=#f8f8f2>}</color>
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testGrgAnyFull</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileGrgAnyFull</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>garlic</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"garlic"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>state</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"state"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>lambda</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"lambda"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>l</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"l"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>GraphInterface</color> <color=#f8f8f2>graph</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>GenericGraph</color><color=#f8f8f2>();</color>
			
			<color=#f8f8f2>HashInterface</color> <color=#f8f8f2>h</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Blake2b</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>HashInterface</color> <color=#f8f8f2>hPrime</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Blake2b</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>IdxInterface</color> <color=#f8f8f2>idx</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IndexGRG</color><color=#f8f8f2>(</color><color=#f8f8f2>l</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>setH</color><color=#f8f8f2>(</color><color=#f8f8f2>h</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>setHPrime</color><color=#f8f8f2>(</color><color=#f8f8f2>hPrime</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>setIndexing</color><color=#f8f8f2>(</color><color=#f8f8f2>idx</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>stateArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>state</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>twoDimStateArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>oneDimByteArrToTwoDim</color><color=#f8f8f2>(</color><color=#f8f8f2>stateArr</color><color=#f8f8f2>,</color> <color=#ae81ff>64</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>graphOutput</color> <color=#f92672>=</color> <color=#f8f8f2>graph</color><color=#f8f8f2>.</color><color=#a6e22e>graph</color><color=#f8f8f2>(</color><color=#f8f8f2>garlic</color><color=#f8f8f2>,</color> <color=#f8f8f2>twoDimStateArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>lambda</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>twoDimByteArrayToOne</color><color=#f8f8f2>(</color><color=#f8f8f2>graphOutput</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testIndexGRG1</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input1</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input2</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input3</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>IdxInterface</color> <color=#f8f8f2>idx</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IndexGRG</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>);</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>actual</color> <color=#f92672>=</color> <color=#f8f8f2>idx</color><color=#f8f8f2>.</color><color=#a6e22e>getIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>input1</color><color=#f8f8f2>,</color> <color=#f8f8f2>input2</color><color=#f8f8f2>,</color> <color=#f8f8f2>input3</color><color=#f8f8f2>);</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>expected</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expected</color><color=#f8f8f2>,</color> <color=#f8f8f2>actual</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testIndexGRG2</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>input1</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>input2</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input3</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>IdxInterface</color> <color=#f8f8f2>idx</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>IndexGRG</color><color=#f8f8f2>(</color><color=#ae81ff>2</color><color=#f8f8f2>);</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>actual</color> <color=#f92672>=</color> <color=#f8f8f2>idx</color><color=#f8f8f2>.</color><color=#a6e22e>getIndex</color><color=#f8f8f2>(</color><color=#f8f8f2>input1</color><color=#f8f8f2>,</color> <color=#f8f8f2>input2</color><color=#f8f8f2>,</color> <color=#f8f8f2>input3</color><color=#f8f8f2>);</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>expected</color> <color=#f92672>=</color> <color=#f92672>-</color><color=#ae81ff>1</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expected</color><color=#f8f8f2>,</color> <color=#f8f8f2>actual</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>