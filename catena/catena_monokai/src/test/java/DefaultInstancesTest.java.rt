<color=#f92672>package</color> <color=#f8f8f2>test.java</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>org.junit.Assert.assertEquals</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONArray</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONObject</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.junit.Test</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Catena</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.DefaultInstances</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>DefaultInstancesTest</color> <color=#f8f8f2>{</color>
	
	<color=#f8f8f2>Helper</color> <color=#f8f8f2>helper</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>
	
<color=#75715e>//	private String pathDragonfly = "src/test/resources/catenaDragonfly.json";</color>
<color=#75715e>//	private File fileDragonfly = new File(pathDragonfly);</color>
<color=#75715e>//	</color>
<color=#75715e>//	private String pathDragonflyFull = "src/test/resources/catenaDragonflyFull.json";</color>
<color=#75715e>//	private File fileDragonflyFull = new File(pathDragonflyFull);</color>
<color=#75715e>//	</color>
<color=#75715e>//	private String pathButterfly = "src/test/resources/catenaButterfly.json";</color>
<color=#75715e>//	private File butterflyFile = new File(pathButterfly);</color>
<color=#75715e>//	</color>
<color=#75715e>//	private String pathButterflyFull = "src/test/resources/catenaButterflyFull.json";</color>
<color=#75715e>//	private File butterflyFileFull = new File(pathButterflyFull);</color>
	
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathDragonflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/catenaDragonflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileDragonflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathDragonflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathDragonflyFullReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/catenaDragonflyFullReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileDragonflyFullReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathDragonflyFullReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/catenaButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>butterflyFileReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathButterflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathButterflyFullReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/catenaButterflyFullReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>butterflyFileFullReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathButterflyFullReduced</color><color=#f8f8f2>);</color>
	
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaHorseflyFullReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaHorseflyFullReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaHorseflyFullReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaHorseflyFullReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaLanternflyFullReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaLanternflyFullReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaLanternflyFullReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaLanternflyFullReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaMydasflyFullReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaMydasflyFullReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaMydasflyFullReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaMydasflyFullReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaStoneflyFullReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaStoneflyFullReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaStoneflyFullReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaStoneflyFullReduced</color><color=#f8f8f2>);</color>
	
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaHorseflyReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaHorseflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaHorseflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaHorseflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaLanternflyReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaLanternflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaLanternflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaLanternflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaMydasflyReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaMydasflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaMydasflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaMydasflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathcatenaStoneflyReduced</color> <color=#f92672>=</color><color=#e6db74>"src/test/resources/catenaStoneflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filecatenaStoneflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathcatenaStoneflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaHorseflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initHorsefly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>13</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>13</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaHorseflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaLanternflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initLanternfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaLanternflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaMydasflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initMydasfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaMydasflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaStoneflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initStonefly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaStoneflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaHorseflyFullReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initHorseflyFull</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>13</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>13</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaHorseflyFullReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaLanternflyFullReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initLanternflyFull</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaLanternflyFullReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaMydasflyFullReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initMydasflyFull</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaMydasflyFullReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testcatenaStoneflyFullReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initStoneflyFull</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filecatenaStoneflyFullReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>

<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testButterfly(){</color>
<color=#75715e>//		DefaultInstances defaultInstance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = defaultInstance.initButterfly();</color>
<color=#75715e>//		</color>
<color=#75715e>//		byte[] pwd;</color>
<color=#75715e>//		byte[] salt;</color>
<color=#75715e>//		byte[] gamma;</color>
<color=#75715e>//		byte[] aData;</color>
<color=#75715e>//		int outputLength;</color>
<color=#75715e>//		</color>
<color=#75715e>//		String actualResult;</color>
<color=#75715e>//		String expectedResult;</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(butterflyFile);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
<color=#75715e>//			salt = helper.hex2bytes(inputs.getString("salt")); </color>
<color=#75715e>//			gamma = helper.hex2bytes(inputs.getString("gamma"));</color>
<color=#75715e>//			aData = helper.hex2bytes(inputs.getString("aData"));</color>
<color=#75715e>//			outputLength = inputs.getInt("outputLength");</color>
<color=#75715e>//</color>
<color=#75715e>//			expectedResult = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			actualResult = helper.bytes2hex(c.catena(pwd, salt, aData, gamma, outputLength));</color>
<color=#75715e>//			assertEquals(expectedResult, actualResult.toLowerCase());</color>
<color=#75715e>//		}</color>
<color=#75715e>//		</color>
<color=#75715e>//	}</color>
<color=#75715e>//</color>
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testButterflyFull(){</color>
<color=#75715e>//		DefaultInstances defaultInstance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = defaultInstance.initButterflyFull();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(butterflyFileFull);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
<color=#75715e>//			byte[] salt = helper.hex2bytes(inputs.getString("salt")); </color>
<color=#75715e>//			byte[] gamma = helper.hex2bytes(inputs.getString("gamma"));</color>
<color=#75715e>//			byte[] aData = helper.hex2bytes(inputs.getString("aData"));</color>
<color=#75715e>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#75715e>//</color>
<color=#75715e>//			String expectedResult = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String actualResult = helper.bytes2hex(c.catena(pwd, salt, aData, gamma, outputLength));</color>
<color=#75715e>//			assertEquals(expectedResult, actualResult.toLowerCase());</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>
<color=#75715e>//	</color>
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testDragonfly(){</color>
<color=#75715e>//		DefaultInstances defaultInstance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = defaultInstance.initDragonfly();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(fileDragonfly);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
<color=#75715e>//			byte[] salt = helper.hex2bytes(inputs.getString("salt")); </color>
<color=#75715e>//			byte[] gammaValue = helper.hex2bytes(inputs.getString("gamma"));</color>
<color=#75715e>//			byte[] publicInput = helper.hex2bytes(inputs.getString("aData"));</color>
<color=#75715e>//			</color>
<color=#75715e>//			int m = inputs.getInt("outputLength");</color>
<color=#75715e>//</color>
<color=#75715e>//			String expectedResult = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] actualResult = c.catena(pwd, salt, publicInput, gammaValue, m);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertEquals(expectedResult, helper.bytes2hex(actualResult).toLowerCase());</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>
<color=#75715e>//	</color>
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testDragonflyFull(){</color>
<color=#75715e>//		DefaultInstances defaultInstance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = defaultInstance.initDragonflyFull();</color>
<color=#75715e>//		</color>
<color=#75715e>//		byte[] pwd;</color>
<color=#75715e>//		byte[] salt;</color>
<color=#75715e>//		byte[] publicInput;</color>
<color=#75715e>//		byte[] gammaValue;</color>
<color=#75715e>//		int m;</color>
<color=#75715e>//		</color>
<color=#75715e>//		byte[] actualResult;</color>
<color=#75715e>//		String expectedResult;</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(fileDragonflyFull);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
<color=#75715e>//			salt = helper.hex2bytes(inputs.getString("salt")); </color>
<color=#75715e>//			gammaValue = helper.hex2bytes(inputs.getString("gamma"));</color>
<color=#75715e>//			publicInput = helper.hex2bytes(inputs.getString("aData"));</color>
<color=#75715e>//			m = inputs.getInt("outputLength");</color>
<color=#75715e>//</color>
<color=#75715e>//			expectedResult = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			actualResult = c.catena(pwd, salt, publicInput, gammaValue, m);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertEquals(expectedResult, helper.bytes2hex(actualResult).toLowerCase());</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>

	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#75715e>// reduced gHigh</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>butterflyFileReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
		
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testButterflyFullReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterflyFull</color><color=#f8f8f2>();</color>
		
		<color=#75715e>// reduced gHigh</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>butterflyFileFullReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>.</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testDragonflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#75715e>// reduced gHigh</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileDragonflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaValue</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>publicInput</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>m</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>publicInput</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaValue</color><color=#f8f8f2>,</color> <color=#f8f8f2>m</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>actualResult</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testDragonflyFullReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonflyFull</color><color=#f8f8f2>();</color>
		
		<color=#75715e>// reduced gHigh</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>publicInput</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaValue</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>m</color><color=#f8f8f2>;</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>actualResult</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>String</color> <color=#f8f8f2>expectedResult</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileDragonflyFullReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color> 
			<color=#f8f8f2>gammaValue</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>publicInput</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#f8f8f2>m</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>expectedResult</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>actualResult</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>catena</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>publicInput</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaValue</color><color=#f8f8f2>,</color> <color=#f8f8f2>m</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expectedResult</color><color=#f8f8f2>,</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>actualResult</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
<color=#f8f8f2>}</color>