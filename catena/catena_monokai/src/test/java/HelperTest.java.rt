<color=#f92672>package</color> <color=#f8f8f2>test.java</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>org.junit.Assert.*</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>org.junit.Test</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>


<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>HelperTest</color> <color=#f8f8f2>{</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>Helper</color> <color=#f8f8f2>helper</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>
	
	<color=#f8f8f2>String</color> <color=#f8f8f2>hash1XORING</color> <color=#f92672>=</color> <color=#e6db74>"1568"</color><color=#f8f8f2>;</color>
	<color=#f8f8f2>String</color> <color=#f8f8f2>hash2XORING</color> <color=#f92672>=</color> <color=#e6db74>"10ab"</color><color=#f8f8f2>;</color>

	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testConcateByteArrays</color><color=#f8f8f2>()</color> <color=#f8f8f2>{</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>3</color><color=#f92672>]</color><color=#f8f8f2>;</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>concateByteArrays</color><color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>,</color> <color=#f8f8f2>a</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f92672>+</color><color=#f8f8f2>b</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testoneDimByteArrToTwoDim</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>len</color> <color=#f92672>=</color> <color=#ae81ff>64</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#e6db74>"3d6d5d5b1b159210437827d4956b9775bfd3"</color>
				<color=#f92672>+</color> <color=#e6db74>"dab68f98e958cff9f64f62155168b432f1e248b41573918"</color>
				<color=#f92672>+</color> <color=#e6db74>"7dc7894e2c53167e0c3142dea5a8e4faac7d29fdac127b7"</color>
				<color=#f92672>+</color> <color=#e6db74>"7b4f34758083a59b44e9c22917d6ee598485f414500bbd0"</color>
				<color=#f92672>+</color> <color=#e6db74>"69c142177fba6b7815ab47fe7a6a01e7ab20f9217a5549a"</color>
				<color=#f92672>+</color> <color=#e6db74>"f3aaba255957bb979f46db5e2014cbb733e161e765fa206"</color>
				<color=#f92672>+</color> <color=#e6db74>"42ef4e1c18a8b7fee7339cd547aaf9bdbdbe5f11739118b"</color>
				<color=#f92672>+</color> <color=#e6db74>"b3f6c9abce48337e6cfaff168d7910fbcb0aa3c265ba426"</color>
				<color=#f92672>+</color> <color=#e6db74>"ff71ff5d2c2d74c5f769716a0ee29b7bf4ad1f1f9eab0a4"</color>
				<color=#f92672>+</color> <color=#e6db74>"58cf222a89f0a1822c5d21b3d7db9092aacabaee9cd97b6"</color>
				<color=#f92672>+</color> <color=#e6db74>"870987b9fddf97180cbd496c2e459eca027eae9f9798acc"</color>
				<color=#f92672>+</color> <color=#e6db74>"255835"</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>expected</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>4</color><color=#f92672>][</color><color=#ae81ff>64</color><color=#f92672>]</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>expected</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#e6db74>"3d6d5d5b1b159210437827d4956"</color>
				<color=#f92672>+</color> <color=#e6db74>"b9775bfd3dab68f98e958cff9f64f62155168b432f1e248b"</color>
				<color=#f92672>+</color> <color=#e6db74>"415739187dc7894e2c53167e0c3142dea5a8e4faac7d29fd"</color>
				<color=#f92672>+</color> <color=#e6db74>"ac127"</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>expected</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#e6db74>"b77b4f34758083a59b44e9c2291"</color>
				<color=#f92672>+</color> <color=#e6db74>"7d6ee598485f414500bbd069c142177fba6b7815ab47fe7a"</color>
				<color=#f92672>+</color> <color=#e6db74>"6a01e7ab20f9217a5549af3aaba255957bb979f46db5e201"</color>
				<color=#f92672>+</color> <color=#e6db74>"4cbb7"</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>expected</color><color=#f92672>[</color><color=#ae81ff>2</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#e6db74>"33e161e765fa20642ef4e1c18a8"</color>
				<color=#f92672>+</color> <color=#e6db74>"b7fee7339cd547aaf9bdbdbe5f11739118bb3f6c9abce483"</color>
				<color=#f92672>+</color> <color=#e6db74>"37e6cfaff168d7910fbcb0aa3c265ba426ff71ff5d2c2d74"</color>
				<color=#f92672>+</color> <color=#e6db74>"c5f76"</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>expected</color><color=#f92672>[</color><color=#ae81ff>3</color><color=#f92672>]</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#e6db74>"9716a0ee29b7bf4ad1f1f9eab0a"</color>
				<color=#f92672>+</color> <color=#e6db74>"458cf222a89f0a1822c5d21b3d7db9092aacabaee9cd97b6"</color>
				<color=#f92672>+</color> <color=#e6db74>"870987b9fddf97180cbd496c2e459eca027eae9f9798acc2"</color>
				<color=#f92672>+</color> <color=#e6db74>"55835"</color><color=#f8f8f2>);</color>

		<color=#66d9ef>byte</color><color=#f92672>[][]</color> <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>oneDimByteArrToTwoDim</color><color=#f8f8f2>(</color><color=#f8f8f2>b</color><color=#f8f8f2>,</color> <color=#f8f8f2>len</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color> <color=#f92672><</color> <color=#f8f8f2>expected</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f92672>++</color><color=#f8f8f2>i</color><color=#f8f8f2>){</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expected</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>out</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testXor</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>1</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>1</color><color=#f8f8f2>};</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#ae81ff>1</color><color=#f8f8f2>,</color><color=#ae81ff>1</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>1</color><color=#f8f8f2>};</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[]</color><color=#f8f8f2>{</color><color=#ae81ff>1</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>};</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>xor</color><color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color><color=#f92672>=</color><color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>;</color> <color=#f92672>++</color><color=#f8f8f2>i</color><color=#f8f8f2>){</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f92672>[</color><color=#f8f8f2>i</color><color=#f92672>]</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testXorHash</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>a</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>hash1XORING</color><color=#f8f8f2>);</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>b</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>hash1XORING</color><color=#f8f8f2>);</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>hash2XORING</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>x</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>xor</color><color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>b</color><color=#f8f8f2>);</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>y</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>xor</color><color=#f8f8f2>(</color><color=#f8f8f2>a</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>resAB</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#e6db74>"0000"</color><color=#f8f8f2>);</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>resAC</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#e6db74>"05c3"</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>resAB</color><color=#f8f8f2>,</color> <color=#f8f8f2>x</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>resAC</color><color=#f8f8f2>,</color> <color=#f8f8f2>y</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testIntToByteArray2</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>12</color><color=#f8f8f2>};</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>intToByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#ae81ff>2</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testIntToByteArray4</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>,</color> <color=#ae81ff>12</color><color=#f8f8f2>};</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>intToByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#ae81ff>4</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testIntToByteArray0</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
		
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>intToByteArray</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#ae81ff>0</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testBytesToInt</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>12</color><color=#f8f8f2>};</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytesToInt</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testIntToBytes</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>12</color><color=#f8f8f2>};</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>intToBytes</color><color=#f8f8f2>(</color><color=#ae81ff>12</color><color=#f8f8f2>);</color>

		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testBytesToLong</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>12</color><color=#f8f8f2>};</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytesToLong</color><color=#f8f8f2>(</color><color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
		<color=#66d9ef>long</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testLongToBytes</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>12</color><color=#f8f8f2>};</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>longToBytes</color><color=#f8f8f2>(</color><color=#ae81ff>12</color><color=#f8f8f2>);</color>

		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testPaddWithZero</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>inp</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>12</color><color=#f8f8f2>,</color><color=#ae81ff>13</color><color=#f8f8f2>,</color><color=#ae81ff>14</color><color=#f8f8f2>};</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>l</color> <color=#f92672>=</color> <color=#ae81ff>10</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>act</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>paddWithZero</color><color=#f8f8f2>(</color><color=#f8f8f2>inp</color><color=#f8f8f2>,</color> <color=#f8f8f2>l</color><color=#f8f8f2>);</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>exp</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>12</color><color=#f8f8f2>,</color><color=#ae81ff>13</color><color=#f8f8f2>,</color><color=#ae81ff>14</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>};</color>
		
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>exp</color><color=#f8f8f2>,</color> <color=#f8f8f2>act</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testintToByteArrayLittleEndian</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#ae81ff>4</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>actual</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>intToByteArrayLittleEndian</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>expected</color> <color=#f92672>=</color> <color=#f8f8f2>{</color><color=#ae81ff>12</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>,</color><color=#ae81ff>0</color><color=#f8f8f2>};</color>
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expected</color><color=#f8f8f2>,</color> <color=#f8f8f2>actual</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testintToByteArrayLittleEndian0</color><color=#f8f8f2>(){</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>input</color> <color=#f92672>=</color> <color=#ae81ff>12</color><color=#f8f8f2>;</color>
		<color=#66d9ef>int</color> <color=#f8f8f2>bytes</color> <color=#f92672>=</color> <color=#ae81ff>1</color><color=#f8f8f2>;</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>actual</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>intToByteArrayLittleEndian</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>,</color> <color=#f8f8f2>bytes</color><color=#f8f8f2>);</color>
		<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>expected</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>1</color><color=#f92672>]</color><color=#f8f8f2>;</color>
		<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>expected</color><color=#f8f8f2>,</color> <color=#f8f8f2>actual</color><color=#f8f8f2>);</color>
	<color=#f8f8f2>}</color>
	
<color=#f8f8f2>}</color>