<color=#f92672>package</color> <color=#f8f8f2>test.java</color><color=#f8f8f2>;</color>

<color=#f92672>import static</color> <color=#f8f8f2>org.junit.Assert.*</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>java.io.File</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONArray</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.json.JSONObject</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>org.junit.Test</color><color=#f8f8f2>;</color>

<color=#f92672>import</color> <color=#f8f8f2>main.java.Catena</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.Catena.POWstruct</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.DefaultInstances</color><color=#f8f8f2>;</color>
<color=#f92672>import</color> <color=#f8f8f2>main.java.Helper</color><color=#f8f8f2>;</color>

<color=#66d9ef>public</color> <color=#66d9ef>class</color> <color=#a6e22e>CatenaTest</color> <color=#f8f8f2>{</color>
	
	<color=#f8f8f2>Helper</color> <color=#f8f8f2>helper</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>Helper</color><color=#f8f8f2>();</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathHInit</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/hInitAnyFull.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileHInit</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathHInit</color><color=#f8f8f2>);</color>
	
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathtweakButterfly</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/tweakButterfly.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filetweakButterfly</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathtweakButterfly</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathtweakButterflyFull</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/tweakButterflyFull.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filetweakButterflyFull</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathtweakButterflyFull</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathtweakDragonfly</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/tweakDragonfly.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filetweakDragonfly</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathtweakDragonfly</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathtweakDragonflyFull</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/tweakDragonflyFull.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filetweakDragonflyFull</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathtweakDragonflyFull</color><color=#f8f8f2>);</color>
	
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathFlapDragonfly</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/flapDragonfly.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileFlapDragonfly</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathFlapDragonfly</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathFlapDragonflyFull</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/flapDragonflyFull.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileFlapDragonflyFull</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathFlapDragonflyFull</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathFlapButterfly</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/flapButterfly.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileFlapButterfly</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathFlapButterfly</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathFlapButterflyFull</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/flapButterflyFull.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileFlapButterflyFull</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathFlapButterflyFull</color><color=#f8f8f2>);</color>
	
	
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathciUpdateDragonflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/ciUpdateDragonflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileciUpdateDragonflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathciUpdateDragonflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathciUpdateKeyedDragonflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/ciUpdateKeyedDragonflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileciUpdateKeyedDragonflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathciUpdateKeyedDragonflyReduced</color><color=#f8f8f2>);</color>
	
<color=#75715e>//	private String pathkeyDerivationButterfly = "src/test/resources/keyDerivationButterfly.json";</color>
<color=#75715e>//	private File filekeyDerivationButterfly = new File(pathkeyDerivationButterfly);</color>
<color=#75715e>//</color>
<color=#75715e>//	private String pathkeyDerivationButterflyFull = "src/test/resources/keyDerivationButterflyFull.json";</color>
<color=#75715e>//	private File filekeyDerivationButterflyFull = new File(pathkeyDerivationButterflyFull);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathkeyDerivationButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/keyDerivationButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filekeyDerivationButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathkeyDerivationButterflyReduced</color><color=#f8f8f2>);</color>
	
<color=#75715e>//	private String pathkeyDerivationDragonfly = "src/test/resources/keyDerivationDragonfly.json";</color>
<color=#75715e>//	private File filekeyDerivationDragonfly = new File(pathkeyDerivationDragonfly);</color>
<color=#75715e>//	</color>
<color=#75715e>//	private String pathkeyDerivationDragonflyFull = "src/test/resources/keyDerivationDragonflyFull.json";</color>
<color=#75715e>//	private File filekeyDerivationDragonflyFull = new File(pathkeyDerivationDragonflyFull);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathkeyDerivationDragonflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/keyDerivationDragonflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filekeyDerivationDragonflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathkeyDerivationDragonflyReduced</color><color=#f8f8f2>);</color>
	
<color=#75715e>//	private String pathkeyedHashButterfly = "src/test/resources/keyedHashButterfly.json";</color>
<color=#75715e>//	private File filekeyedHashButterfly = new File(pathkeyedHashButterfly);</color>
<color=#75715e>//	</color>
<color=#75715e>//	private String pathkeyedHashButterflyFull = "src/test/resources/keyedHashButterflyFull.json";</color>
<color=#75715e>//	private File filekeyedHashButterflyFull = new File(pathkeyedHashButterflyFull);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathkeyedHashButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/keyedHashButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filekeyedHashButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathkeyedHashButterflyReduced</color><color=#f8f8f2>);</color>
	
<color=#75715e>//	private String pathkeyedHashDragonfly = "src/test/resources/keyedHashDragonfly.json";</color>
<color=#75715e>//	private File filekeyedHashDragonfly = new File(pathkeyedHashDragonfly);</color>
<color=#75715e>//	</color>
<color=#75715e>//	private String pathkeyedHashDragonflyFull = "src/test/resources/keyedHashDragonflyFull.json";</color>
<color=#75715e>//	private File filekeyedHashDragonflyFull = new File(pathkeyedHashDragonflyFull);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathkeyedHashDragonflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/keyedHashDragonflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>filekeyedHashDragonflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathkeyedHashDragonflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathserverReliefClientButterflyReducedDifferentG</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/serverReliefClientButterflyReducedDifferentG.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileserverReliefClientButterflyReducedDifferentG</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathserverReliefClientButterflyReducedDifferentG</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathserverReliefClientButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/serverReliefClientButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileserverReliefClientButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathserverReliefClientButterflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathserverReliefClientDragonflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/serverReliefClientDragonflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileserverReliefClientDragonflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathserverReliefClientDragonflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathserverReliefServerButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/serverReliefServerButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileserverReliefServerButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathserverReliefServerButterflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathserverReliefServerDragonflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/serverReliefServerDragonflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileserverReliefServerDragonflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathserverReliefServerDragonflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathproofOfWorkServerSaltButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/proofOfWorkServerSaltButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileproofOfWorkServerSaltButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathproofOfWorkServerSaltButterflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathproofOfWorkServerPwdButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/proofOfWorkServerPwdButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileproofOfWorkServerPwdButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathproofOfWorkServerPwdButterflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathproofOfWorkClientPwdButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/proofOfWorkClientPwdButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileproofOfWorkClientPwdButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathproofOfWorkClientPwdButterflyReduced</color><color=#f8f8f2>);</color>
	
	<color=#66d9ef>private</color> <color=#f8f8f2>String</color> <color=#f8f8f2>pathproofOfWorkClientSaltButterflyReduced</color> <color=#f92672>=</color> <color=#e6db74>"src/test/resources/proofOfWorkClientSaltButterflyReduced.json"</color><color=#f8f8f2>;</color>
	<color=#66d9ef>private</color> <color=#f8f8f2>File</color> <color=#f8f8f2>fileproofOfWorkClientSaltButterflyReduced</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>File</color><color=#f8f8f2>(</color><color=#f8f8f2>pathproofOfWorkClientSaltButterflyReduced</color><color=#f8f8f2>);</color>
	
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testServerReliefServerButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileserverReliefServerButterflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>hash</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"hash"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>hashArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>hash</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>serverReliefServer</color><color=#f8f8f2>(</color><color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>hashArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>,</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>());</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testServerReliefServerDragonflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileserverReliefServerDragonflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>hash</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"hash"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>hashArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>hash</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>serverReliefServer</color><color=#f8f8f2>(</color><color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>hashArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testServerReliefClientButterflyReduceddifferentG</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileserverReliefClientButterflyReducedDifferentG</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>ad</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>gLow</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"gLow"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>gHigh</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"gHigh"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>salt</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>adArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>ad</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#f8f8f2>gLow</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#f8f8f2>gHigh</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>serverReliefClient</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>saltArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>adArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testServerReliefClientButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileserverReliefClientButterflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>ad</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>salt</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>adArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>ad</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>serverReliefClient</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>saltArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>adArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testServerReliefClientDragonflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileserverReliefClientDragonflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>ad</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>salt</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>adArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>ad</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>serverReliefClient</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>saltArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>adArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	

<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyedHashButterfly(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initButterfly();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashButterfly);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String key = inputs.getString("key");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String ad = inputs.getString("aData");</color>
<color=#75715e>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#75715e>//			String userID = inputs.getString("userID");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#75715e>//			</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>

	
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyedHashButterflyFull(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initButterflyFull();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashButterflyFull);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String key = inputs.getString("key");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String ad = inputs.getString("aData");</color>
<color=#75715e>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#75715e>//			String userID = inputs.getString("userID");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#75715e>//			</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testKeyedHashButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filekeyedHashButterflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"key"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>ad</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>userID</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"userID"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>salt</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>adArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>ad</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>userIDArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>userID</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>keyedPasswordHashing</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>saltArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>adArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>userIDArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyedHashDragonfly(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initDragonfly();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashDragonfly);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String key = inputs.getString("key");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String ad = inputs.getString("aData");</color>
<color=#75715e>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#75715e>//			String userID = inputs.getString("userID");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#75715e>//			</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>
	
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyedHashDragonflyFull(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initDragonflyFull();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashDragonflyFull);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String key = inputs.getString("key");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String ad = inputs.getString("aData");</color>
<color=#75715e>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#75715e>//			String userID = inputs.getString("userID");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#75715e>//			</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>

	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testKeyedHashDragonflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filekeyedHashDragonflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"key"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>ad</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outputLength"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>userID</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"userID"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>salt</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>adArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>ad</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>userIDArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>userID</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>keyedPasswordHashing</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>saltArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>adArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>userIDArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	

<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyDerivationButterfly(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initButterfly();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationButterfly);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String ad = inputs.getString("ad");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#75715e>//			int outputLength = inputs.getInt("output_length");</color>
<color=#75715e>//			int keySize = inputs.getInt("key_size");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#75715e>//</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>
<color=#75715e>//	</color>


<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyDerivationButterflyFull(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initButterflyFull();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationButterflyFull);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String ad = inputs.getString("ad");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#75715e>//			int outputLength = inputs.getInt("output_length");</color>
<color=#75715e>//			int keySize = inputs.getInt("key_size");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#75715e>//</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testKeyDerivationButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filekeyDerivationButterflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>ad</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"ad"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>keyIdentifier</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"key_identifier"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"output_length"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>keySize</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"key_size"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>adArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>ad</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>salt</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyIdentifierArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>keyIdentifier</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>keyDerivation</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>saltArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>adArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>keySize</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyIdentifierArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyDerivationDragonfly(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initDragonfly();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationDragonfly);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String ad = inputs.getString("ad");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#75715e>//			int outputLength = inputs.getInt("output_length");</color>
<color=#75715e>//			int keySize = inputs.getInt("key_size");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#75715e>//</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>
<color=#75715e>//	</color>
<color=#75715e>//	@Test</color>
<color=#75715e>//	public void testKeyDerivationDragonflyFull(){</color>
<color=#75715e>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#75715e>//		Catena c = instance.initDragonflyFull();</color>
<color=#75715e>//		</color>
<color=#75715e>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationDragonflyFull);</color>
<color=#75715e>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#75715e>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#75715e>//			</color>
<color=#75715e>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#75715e>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#75715e>//			</color>
<color=#75715e>//			String pwd = inputs.getString("pwd");</color>
<color=#75715e>//			String ad = inputs.getString("ad");</color>
<color=#75715e>//			String salt = inputs.getString("salt");</color>
<color=#75715e>//			String gamma = inputs.getString("gamma");</color>
<color=#75715e>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#75715e>//			int outputLength = inputs.getInt("output_length");</color>
<color=#75715e>//			int keySize = inputs.getInt("key_size");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#75715e>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#75715e>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#75715e>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#75715e>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#75715e>//</color>
<color=#75715e>//			String res = outputs.getString("res");</color>
<color=#75715e>//			</color>
<color=#75715e>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#75715e>//			</color>
<color=#75715e>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#75715e>//		}</color>
<color=#75715e>//	}</color>

	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testKeyDerivationDragonflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>14</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filekeyDerivationDragonflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>ad</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"ad"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>keyIdentifier</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"key_identifier"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outputLength</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"output_length"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>keySize</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"key_size"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>adArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>ad</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>salt</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyIdentifierArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>keyIdentifier</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>keyDerivation</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>saltArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>adArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outputLength</color><color=#f8f8f2>,</color> <color=#f8f8f2>keySize</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyIdentifierArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testCIUpdateDragonflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#66d9ef>int</color> <color=#f8f8f2>gOld</color> <color=#f92672>=</color> <color=#ae81ff>14</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#f8f8f2>gOld</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#f8f8f2>gOld</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileciUpdateDragonflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>oldHash</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"oldHash"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>gNew</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"gNew"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>oldHashArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>oldHash</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
			<color=#66d9ef>try</color> <color=#f8f8f2>{</color>
				<color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>clientIndependentUpdate</color><color=#f8f8f2>(</color><color=#f8f8f2>oldHashArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>gNew</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
				<color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Could not update Hash."</color><color=#f8f8f2>);</color>
				<color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>}</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testCIUpdateKeyedDragonflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#66d9ef>int</color> <color=#f8f8f2>gOld</color> <color=#f92672>=</color> <color=#ae81ff>14</color><color=#f8f8f2>;</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#f8f8f2>gOld</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#f8f8f2>gOld</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileciUpdateKeyedDragonflyReduced</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>oldHash</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"oldHash"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>gNew</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"gNew"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>key</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"key"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>userID</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"userID"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>oldHashArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>oldHash</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>keyArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>key</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>userIDArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>userID</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#66d9ef>byte</color><color=#f92672>[</color><color=#ae81ff>0</color><color=#f92672>]</color><color=#f8f8f2>;</color>
			<color=#66d9ef>try</color> <color=#f8f8f2>{</color>
				<color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>keyedClientIndependentUpdate</color><color=#f8f8f2>(</color><color=#f8f8f2>oldHashArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gOld</color><color=#f8f8f2>,</color> <color=#f8f8f2>gNew</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>keyArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>userIDArr</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>}</color> <color=#66d9ef>catch</color> <color=#f8f8f2>(</color><color=#f8f8f2>Exception</color> <color=#f8f8f2>e</color><color=#f8f8f2>)</color> <color=#f8f8f2>{</color>
				<color=#f8f8f2>System</color><color=#f8f8f2>.</color><color=#a6e22e>out</color><color=#f8f8f2>.</color><color=#a6e22e>println</color><color=#f8f8f2>(</color><color=#e6db74>"Could not update Hash."</color><color=#f8f8f2>);</color>
				<color=#f8f8f2>e</color><color=#f8f8f2>.</color><color=#a6e22e>printStackTrace</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>}</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testFlapButterfly</color><color=#f8f8f2>(){</color>
		
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
	
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileFlapButterfly</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"g"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>flapPub</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color><color=#f8f8f2>,</color> <color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testFlapButterflyFull</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterflyFull</color><color=#f8f8f2>();</color>
	
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileFlapButterflyFull</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"g"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>flapPub</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color><color=#f8f8f2>,</color> <color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testFlapDragonfly</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileFlapDragonfly</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"g"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>flapPub</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color><color=#f8f8f2>,</color> <color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testFlapDragonflyFull</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonflyFull</color><color=#f8f8f2>();</color>
	
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileFlapDragonflyFull</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>g</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"g"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaArr</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>gamma</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>flapPub</color><color=#f8f8f2>(</color><color=#f8f8f2>g</color><color=#f8f8f2>,</color> <color=#f8f8f2>pwdArr</color><color=#f8f8f2>,</color> <color=#f8f8f2>gammaArr</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testTweakButterfly</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
	
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filetweakButterfly</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>domain</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"d"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>sLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"sLen"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>aD</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>string2Bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>aD</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>testCompTweak</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getVID</color><color=#f8f8f2>(),</color> <color=#f8f8f2>domain</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getLambda</color><color=#f8f8f2>(),</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>sLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testTweakButterflyFull</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterflyFull</color><color=#f8f8f2>();</color>
	
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filetweakButterflyFull</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>domain</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"d"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>sLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"sLen"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>aD</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>string2Bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>aD</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>testCompTweak</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getVID</color><color=#f8f8f2>(),</color> <color=#f8f8f2>domain</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getLambda</color><color=#f8f8f2>(),</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>sLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testTweakDragonfly</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonfly</color><color=#f8f8f2>();</color>
	
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filetweakDragonfly</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>domain</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"d"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>sLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"sLen"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>aD</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>string2Bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>aD</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>testCompTweak</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getVID</color><color=#f8f8f2>(),</color> <color=#f8f8f2>domain</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getLambda</color><color=#f8f8f2>(),</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>sLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testTweakDragonflyFull</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonflyFull</color><color=#f8f8f2>();</color>
	
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>filetweakDragonflyFull</color><color=#f8f8f2>);</color>
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>int</color> <color=#f8f8f2>domain</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"d"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>sLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"sLen"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>aD</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>string2Bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>aD</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>res</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>testCompTweak</color><color=#f8f8f2>(</color><color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getVID</color><color=#f8f8f2>(),</color> <color=#f8f8f2>domain</color><color=#f8f8f2>,</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>getLambda</color><color=#f8f8f2>(),</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>sLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>res</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>output</color><color=#f8f8f2>).</color><color=#a6e22e>toLowerCase</color><color=#f8f8f2>()));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testHInit</color><color=#f8f8f2>(){</color>
		
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>defaultInstance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>defaultInstance</color><color=#f8f8f2>.</color><color=#a6e22e>initDragonflyFull</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileHInit</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color>  <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>

			<color=#f8f8f2>String</color> <color=#f8f8f2>x</color> 	  <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"x"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>xArray</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>x</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>out</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONArray</color><color=#f8f8f2>(</color><color=#e6db74>"v"</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>v0</color> <color=#f92672>=</color> <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#ae81ff>0</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>String</color> <color=#f8f8f2>v1</color> <color=#f92672>=</color> <color=#f8f8f2>out</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#ae81ff>1</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>result</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>testHInit</color><color=#f8f8f2>(</color><color=#f8f8f2>xArray</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>String</color> <color=#f8f8f2>v</color> <color=#f92672>=</color> <color=#f8f8f2>v0</color><color=#f92672>+</color><color=#f8f8f2>v1</color><color=#f8f8f2>;</color>
			
			
			<color=#f8f8f2>assertTrue</color><color=#f8f8f2>(</color><color=#f8f8f2>v</color><color=#f8f8f2>.</color><color=#a6e22e>equals</color><color=#f8f8f2>(</color><color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>bytes2hex</color><color=#f8f8f2>(</color><color=#f8f8f2>result</color><color=#f8f8f2>)));</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testProofOfWorkServerSaltButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileproofOfWorkServerSaltButterflyReduced</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color>  <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>

			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"p"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>mode</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"mode"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aDataExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLenExp</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>outHashExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"outHash"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>pExp</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"p"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>modeExp</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"mode"</color><color=#f8f8f2>);</color>
			
			
			<color=#f8f8f2>POWstruct</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>proofOfWorkServer</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>p</color><color=#f8f8f2>,</color> <color=#f8f8f2>mode</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>pwd</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>saltExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>salt</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>aDataExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>aData</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>gammaExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>gamma</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>outHashExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>rHash</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>outLenExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>outLen</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>pExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>p</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>modeExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>mode</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>

	
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testProofOfWorkServerPwdButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileproofOfWorkServerPwdButterflyReduced</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color>  <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>

			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"p"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>mode</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"mode"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwdExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>saltExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aDataExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gammaExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLenExp</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>outHashExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"outHash"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>pExp</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"p"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>modeExp</color> <color=#f92672>=</color> <color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"mode"</color><color=#f8f8f2>);</color>
			
			
			<color=#f8f8f2>POWstruct</color> <color=#f8f8f2>output</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>proofOfWorkServer</color><color=#f8f8f2>(</color><color=#f8f8f2>pwd</color><color=#f8f8f2>,</color> <color=#f8f8f2>salt</color><color=#f8f8f2>,</color> <color=#f8f8f2>aData</color><color=#f8f8f2>,</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>,</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>,</color> <color=#f8f8f2>p</color><color=#f8f8f2>,</color> <color=#f8f8f2>mode</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>pwdExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>pwd</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>saltExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>salt</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>aDataExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>aData</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>gammaExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>gamma</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>outHashExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>rHash</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>outLenExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>outLen</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>pExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>p</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>assertEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>modeExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>output</color><color=#f8f8f2>.</color><color=#a6e22e>mode</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testProofOfWorkClientPwdButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileproofOfWorkClientPwdButterflyReduced</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color>  <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>

			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>hash</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"hash"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"p"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>mode</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"mode"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>resExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>));</color>
			
			<color=#f8f8f2>POWstruct</color> <color=#f8f8f2>input</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>POWstruct</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>salt</color> <color=#f92672>=</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>aData</color> <color=#f92672>=</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>p</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>mode</color> <color=#f92672>=</color> <color=#f8f8f2>mode</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>rHash</color> <color=#f92672>=</color> <color=#f8f8f2>hash</color><color=#f8f8f2>;</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>actuals</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>proofOfWorkClient</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>resExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>actuals</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
	<color=#a6e22e>@Test</color>
	<color=#66d9ef>public</color> <color=#66d9ef>void</color> <color=#a6e22e>testProofOfWorkClientSaltButterflyReduced</color><color=#f8f8f2>(){</color>
		<color=#f8f8f2>DefaultInstances</color> <color=#f8f8f2>instance</color> <color=#f92672>=</color> <color=#66d9ef>new</color> <color=#f8f8f2>DefaultInstances</color><color=#f8f8f2>();</color>
		<color=#f8f8f2>Catena</color> <color=#f8f8f2>c</color> <color=#f92672>=</color> <color=#f8f8f2>instance</color><color=#f8f8f2>.</color><color=#a6e22e>initButterfly</color><color=#f8f8f2>();</color>
		
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGHigh</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>setGLow</color><color=#f8f8f2>(</color><color=#ae81ff>9</color><color=#f8f8f2>);</color>
		
		<color=#f8f8f2>JSONArray</color> <color=#f8f8f2>jsonObj</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>jsonParserArr</color><color=#f8f8f2>(</color><color=#f8f8f2>fileproofOfWorkClientSaltButterflyReduced</color><color=#f8f8f2>);</color>
		
		<color=#66d9ef>for</color> <color=#f8f8f2>(</color><color=#66d9ef>int</color> <color=#f8f8f2>i</color> <color=#f92672>=</color> <color=#ae81ff>0</color><color=#f8f8f2>;</color> <color=#f8f8f2>i</color><color=#f92672><</color><color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>length</color><color=#f8f8f2>();</color> <color=#f92672>++</color><color=#f8f8f2>i</color> <color=#f8f8f2>){</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>o</color> <color=#f92672>=</color> <color=#f8f8f2>(</color><color=#f8f8f2>JSONObject</color><color=#f8f8f2>)</color> <color=#f8f8f2>jsonObj</color><color=#f8f8f2>.</color><color=#a6e22e>get</color><color=#f8f8f2>(</color><color=#f8f8f2>i</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>inputs</color>  <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"inputs"</color><color=#f8f8f2>);</color>
			<color=#f8f8f2>JSONObject</color> <color=#f8f8f2>outputs</color> <color=#f92672>=</color> <color=#f8f8f2>o</color><color=#f8f8f2>.</color><color=#a6e22e>getJSONObject</color><color=#f8f8f2>(</color><color=#e6db74>"outputs"</color><color=#f8f8f2>);</color>

			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"pwd"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>salt</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"salt"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>aData</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"aData"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"gamma"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>hash</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"hash"</color><color=#f8f8f2>));</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"outLen"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>p</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"p"</color><color=#f8f8f2>);</color>
			<color=#66d9ef>int</color> <color=#f8f8f2>mode</color> <color=#f92672>=</color> <color=#f8f8f2>inputs</color><color=#f8f8f2>.</color><color=#a6e22e>getInt</color><color=#f8f8f2>(</color><color=#e6db74>"mode"</color><color=#f8f8f2>);</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>resExp</color> <color=#f92672>=</color> <color=#f8f8f2>helper</color><color=#f8f8f2>.</color><color=#a6e22e>hex2bytes</color><color=#f8f8f2>(</color><color=#f8f8f2>outputs</color><color=#f8f8f2>.</color><color=#a6e22e>getString</color><color=#f8f8f2>(</color><color=#e6db74>"res"</color><color=#f8f8f2>));</color>
			
			<color=#f8f8f2>POWstruct</color> <color=#f8f8f2>input</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>new</color> <color=#a6e22e>POWstruct</color><color=#f8f8f2>();</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>pwd</color> <color=#f92672>=</color> <color=#f8f8f2>pwd</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>salt</color> <color=#f92672>=</color> <color=#f8f8f2>salt</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>aData</color> <color=#f92672>=</color> <color=#f8f8f2>aData</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>gamma</color> <color=#f92672>=</color> <color=#f8f8f2>gamma</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>outLen</color> <color=#f92672>=</color> <color=#f8f8f2>outLen</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>p</color> <color=#f92672>=</color> <color=#f8f8f2>p</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>mode</color> <color=#f92672>=</color> <color=#f8f8f2>mode</color><color=#f8f8f2>;</color>
			<color=#f8f8f2>input</color><color=#f8f8f2>.</color><color=#a6e22e>rHash</color> <color=#f92672>=</color> <color=#f8f8f2>hash</color><color=#f8f8f2>;</color>
			
			<color=#66d9ef>byte</color><color=#f92672>[]</color> <color=#f8f8f2>actuals</color> <color=#f92672>=</color> <color=#f8f8f2>c</color><color=#f8f8f2>.</color><color=#a6e22e>proofOfWorkClient</color><color=#f8f8f2>(</color><color=#f8f8f2>input</color><color=#f8f8f2>);</color>
			
			<color=#f8f8f2>assertArrayEquals</color><color=#f8f8f2>(</color><color=#f8f8f2>resExp</color><color=#f8f8f2>,</color> <color=#f8f8f2>actuals</color><color=#f8f8f2>);</color>
		<color=#f8f8f2>}</color>
	<color=#f8f8f2>}</color>
	
<color=#f8f8f2>}</color>